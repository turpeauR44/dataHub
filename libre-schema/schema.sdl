"""
ISA88.00.04 Event

An event object shall be represented by the model in Figure 11. An event is a discrete occurrence in 
time. Event objects document occurrences and can be stored in a batch production record. This is usually 
done when an event has meaning or significance to the manufacture of a product.

There are different types of event objects. Each event is identified by an event type. Within an event 
type there are different sub-types. Each event type and subtype may use a different subset of the event 
attributes.

Any event may contain zero or more user-defined attributes. Attributes not included in the event object 
may be defined in user-defined attribute objects. This may be required when specific systems generate 
event content not covered by the standard event object.

Event objects may be associated with other events. For example, a process signal may generate a high 
alarm, and then a high-high alarm before the high alarm is acknowledged. Then the high-high alarm may 
be acknowledged. All of the event objects in this scenario could be associated with each other to make 
the information more meaningful than a set of three unassociated event objects with some common data 
would be.
"""
type Event @withSubscription @key(fields: "iid") {
    #### IDENTIFIERS ####
    """ Unique internal database identifier. """
    iid: ID!
    """ Associated OperationsRecordEntries from Operations Events """
    recordEntries: [InformationObject] @hasInverse(field: event)

    #### METADATA ####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default(
    add: { value: "$now" }
    )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
    )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    #### ATTRIBUTES ####
    """ Value associated with the event. """
    value: String

    """ The value prior to the change documented by the event. """
    previousValue: String

    """ Text describing the event. """
    messageText: String @search(by: [hash])

    """ Identification of the person associated with the event. """
    personID: String @search(by: [hash])

    """ Unique identification of the computer where the event originated. """
    computerID: String @search(by: [hash])

    """ 
    Reference to a procedural element. This maps to an element of the procedural hierarchy, such as a 
    phase in a control recipe, or an operation in a control recipe.
    """
    proceduralElementReference: String @search(by: [hash])

    """ The use category of the event. """
    category: String @search(by: [hash])

    

    """ The date and time an Event is effective from """
    effectiveDateTime: DateTime @search

    """ The date and time an Event was last triggered """
    recordedDateTime: DateTime @search

    """ Attribute """
    attribute: String @search(by: [hash])

    #### RELATIONSHIPS ####
    """ The event property(s) of the event. """
    eventProperties: [EventProperty] @hasInverse(field: event)
    """ Defines the type of the event. """
    eventType: EventType @hasInverse(field: events)

    """ Identification of the equipment associated with the event. """
    equipment: Equipment @hasInverse(field: events)
    """ The Person associated with this Event """
    person: Person @hasInverse(field: events)
    """ The Material Lot associated with this Event """
    materialLot: MaterialLot @hasInverse(field: events)
    """ The Material Sub Lot associated with this Event """
    materialSubLot: MaterialSubLot @hasInverse(field: events)
    """ The Physical Asset associated with this Event """
    physicalAsset: PhysicalAsset @hasInverse(field: events)
    """ The Work Response associated with this Event """
    workResponse: WorkResponse @hasInverse(field:events)
    """ The Job Response associated with this Event """
    jobResponse: JobResponse @hasInverse(field: events)
    """ The Job Response Data associated with this Event """
    jobResponseData: JobResponseData @hasInverse(field: events)
    
    """ The Alarm Events to be triggered """
    alarmEvents: [AlarmEvent] @hasInverse(field: event)

    """ The event associations originating from this event. """
    eventAssociationsFrom: [EventAssociation] @hasInverse(field:from)
    """ The event associations related to this event. """
    eventAssociationsTo: [EventAssociation] @hasInverse(field:to)
    #### 21 CFR 11 Compliance ####
    """ Can have electronic Signature. """
    signatures: [Signature] @hasInverse(field: event)

    ### ISA 88 Compliance ###
    """ Defines a comment on the event. """
    comments: [Comment] @hasInverse(field: event)
}


"""
ISA88.00.04 Alarm Event
"""
type AlarmEvent @withSubscription @key(fields: "iid") {
    """ Unique internal database identifier. """
    iid: ID!

    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })

    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default(
    add: { value: "$now" }
    )

    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
    )

    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])

    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    
    """ Record of different events during an alarm lifecycle. """
    alarmEvent: String! @search(by: [hash])

    """ Value a measurement exceeded that caused the alarm. """
    alarmLimit: String @search(by: [hash])

    """ The type of alarm from a process perspective. """
    alarmType: String @search(by: [hash])
    
    """ Indication of the importance of an event. """
    priority: String @search(by: [hash])
    
    """ The event that triggers this alarm """
    event: Event @hasInverse(field: alarmEvents)

    """ The date and time an Alarm Event is effective from """
    effectiveDateTime: DateTime @search

    """ The date and time an Alarm Event was last triggered """
    recordedDateTime: DateTime @search

    #### 21 CFR 11 Compliance ####
    """ Can have electronic Signature. """
    signatures: [Signature] @hasInverse(field: alarmEvent)

    ### ISA 88 Compliance ###
    """ Defines a comment on the alarm event. """
    comments: [Comment] @hasInverse(field: alarmEvent)
}

"""
ISA88.00.04 Event Type
There are different types of event objects. Each event is identified by an event type. Within an event
type there are different sub-types. Each event type and subtype may use a different subset of the event
attributes. 
"""
type EventType @withSubscription @key(fields: "iid") {
    #### IDENTIFIERS ####
    """ Unique internal database identifier. """
    iid: ID!
    """ A unique identification of a specific event type. """
    id: String! @id @search(by:[fulltext, exact, regexp])

    #### METADATA ####
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    #### ATTRIBUTES ####
    """ An identification of the version of the event type. """
    version: String @search(by: [fulltext, exact])
    """ Human friendly alternative identifier """
    label: String! @search(by: [fulltext, exact, regexp])

    #### RELATIONSHIPS ####
    """ The event associated with the event type. """
    events: [Event] @hasInverse(field: eventType)
    """ This nested event type makes up part of the event type as the whole. """
    parent: EventType @hasInverse(field: children)
    """ The nested event types(s) makes up part of this event type as the whole. """
    children: [EventType] @hasInverse(field: parent)
    """ The event subtype associated with the event type. """
    eventSubtypes: [EventSubtype] @hasInverse(field: eventTypes)

}   

"""
ISA88.00.04 Event Subtype
Within an event type there are different sub-types. Each event type and subtype may use a different subset of the event
attributes. 
"""
type EventSubtype @withSubscription @key(fields: "iid") {
    #### IDENTIFIERS ####
    """ Unique internal database identifier. """
    iid: ID!
    """ A unique identification of a specific event type. """
    id: String! @id @search(by:[fulltext, exact, regexp])

    #### METADATA ####
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    #### ATTRIBUTES ####
    """ An identification of the version of the event subtype. """
    version: String @search(by: [fulltext, exact])
    """ Human friendly alternative identifier """
    label: String! @search(by: [fulltext, exact, regexp])

    #### RELATIONSHIPS ####
    """ The event type associated with the event subtype. """
    eventTypes: [EventType!] @hasInverse(field: eventSubtypes)
    """ This nested event subtype makes up part of the event subtype as the whole. """
    parent: EventSubtype @hasInverse(field: children)
    """ The nested event subtypes(s) makes up part of this event subtype as the whole. """
    children: [EventSubtype] @hasInverse(field: parent)
}


"""
ISA88.00.04 Event Property
Referred to as User-defined attribute in the ISA88.00.04 Standard
The user-defined attribute element is used to include addition information about an event, when the event
information cannot be represented in the event object. 
"""
type EventProperty @withSubscription @key(fields: "iid") {
    #### IDENTIFIERS ####
    """ Unique internal database identifier. """
    iid: ID!
    """ A unique identification of a specific event type. """
    id: String! @id @search(by:[fulltext, exact, regexp])

    #### METADATA ####
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    #### ATTRIBUTES ####
    """ An identification of the version of the event property. """
    version: String @search(by: [fulltext, exact])
    """ A description of the event type. """
    description: String @search(by:[fulltext, exact, regexp])
    """ Human friendly alternative identifier """
    label: String @search(by: [fulltext, exact, regexp])
    """ The value, set of values, or range of the property. """
    value: String @search(by: [fulltext, exact])
    """ The unit of measure of the associated property value. """
    valueUnitOfMeasure: UnitOfMeasure

    #### RELATIONSHIPS ####
     """ This nested event property makes up part of the event property as the whole. """
    parent: EventProperty @hasInverse(field: children)
    """ The nested event properties makes up part of this event property as the whole. """
    children: [EventProperty] @hasInverse(field: parent)
    """ The event assocated with the event property. """
    event: Event @hasInverse(field: eventProperties)
}

"""
ISA88.00.04 Event Association
Event objects may be associated to other event objects, such as through a time-based or equipmentbased relationship. Event association objects contain the associations. 
"""
type EventAssociation @withSubscription @key(fields: "iid") {
    #### IDENTIFIERS ####
    """ Unique internal database identifier. """
    iid: ID!
    """ A unique identification of a specific event type. """
    id: String! @id @search(by:[fulltext, exact, regexp])

    #### METADATA ####
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    #### ATTRIBUTES ####
    """ An identification of the version of the event association. """
    version: String @search(by: [fulltext, exact])
    """ A description of the event type. """
    description: String @search(by:[fulltext, exact, regexp])

    #### RELATIONSHIPS ####
    """ The event from which the event association is formed. """
    from: Event! @hasInverse(field: eventAssociationsFrom)
    """ The event to which the event association is formed. """
    to: Event! @hasInverse(field: eventAssociationsTo)
}
"""
The Hierarchy Scope defines where the exchanged information fits within the 
role based equipment hierarchy. It defines the scope of the exchanged 
information, such as a site or area for which the information is relevant. The 
Hierarchy scope identifies the associated instance in the role-based equipment 
hierarchy.
"""
type HierarchyScope @withSubscription @key(fields: "iid") {
    """ Unique internal database identifier. """
    iid: ID!
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: hierarchyScope)

    """ An identification of the specific property. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search

    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default(
        add: { value: "$now" }
    )

    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default(
        add: { value: "$now" }
        update: { value: "$now" }
    )

    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])

    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    """ Identification of the equipment level if the equipment element is defined. """
    equipmentLevel: EquipmentElementLevel

    """ The child hierarchy scope(s) contained within this hierarchy scope. """
    children: [HierarchyScope] @hasInverse(field: parent)

    """ The parent hierarchy scope(s) for this hierarchy scope. """
    parent: HierarchyScope @hasInverse(field: children)

    """ The equipment(s) associated with this hierarchy scope. """
    equipmentVersions: [EquipmentVersion] @hasInverse(field: hierarchyScope)

    """ The material class(s) associated with this hierarchy scope. """
    materialClassVersions: [MaterialClassVersion] @hasInverse(field: hierarchyScope)

    """ The material class(s) associated with this hierarchy scope. """
    materialDefinitionVersions: [MaterialDefinitionVersion] @hasInverse(field: hierarchyScope)

    """ The material class(s) associated with this hierarchy scope. """
    materialLots: [MaterialLot] @hasInverse(field: hierarchyScope)

    """ The material class(s) associated with this hierarchy scope. """
    materialSubLots: [MaterialSubLot] @hasInverse(field: hierarchyScope)
}
"""
The spatial definition provides a means of communicating zero-dimensional point, one-dimensional line 
or two-dimensional shape or three-dimensional solid geo-spatial location data for planning/scheduling, 
actuals, resources, and analytics. Spatial definition identifies a value and the predefined coordinate 
reference system using following attributes.

    a) value;
    b) format;
    c) spatial reference identifier (SRID); and
    d) SRID sridAuthority

A fully qualified spatial definition exchange has all four attributes as a minimum. In some information 
exchanges, sending and receiving applications may have a specified agreement on format, SRID, and SRID 
authority. 

Spatial definition is distinct from and separate to storage location and physical location. Storage 
location attribute is defined for material lots and material sublots as a nonspatial definition of 
location. The physical location attribute logically identifies a 'place' which is actual physical 
location of the physical asset.
"""
type SpatialDefinition @withSubscription @key(fields: "iid") {
    """ Unique internal database identifier. """
    iid: ID!
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: spatialDefinition)

    """ A string to uniquely identify a spatial definition. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search

    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default(
        add: { value: "$now" }
    )

    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default(
        add: { value: "$now" }
        update: { value: "$now" }
    )

    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])

    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    """ Holds values for Latitude and Longitude. """
    pointValue: Point

    # There is a know issue with PointList type in libreBaas. https://github.com/libremfg/libreBaas/issues/5
    # pointListValue: PointList

    """ Holds multiple Point values to make a polygon. """
    polygonValue: Polygon

    """ Holds multiple Polygon values. """
    multiPolygonValue: MultiPolygon

    """
    SRID is the Spatial Reference Identifier which identifies the coordinate reference system to identify 
    a predefined coordinate reference system (pre-configured into communication systems).
    """
    srid: String @search(by: [fulltext, exact])

    """
    The SRID authority identifies the authority that defines the coordinate reference system identified 
    by the SRID.
    """
    sridAuthority: String @search(by: [fulltext, exact])
}

# ################################################################################
# Operational Location Information Model
# ################################################################################
#
# Operational location define the logical or physical places in which resources 
# are located or are expected to be located within a plant. Operational locations
# may be made up of smaller operational locations. An operational location may 
# belong to one or more operational location classes. An operational location 
# class may be a derived class specialization of one or more base operational 
# location classes.

"""
A representation of a grouping of operational locations with similar characteristics for a definite 
purpose such as manufacturing operations definition, scheduling, capability and performance shall be 
presented as an operational location class. Any operational location may be a member of zero ormore 
operational location classes.

An operational class may be defined as a derived class specialization of zero or more base operational classes.

An operational location class may be made up of zero or more operational location classes.
"""
type OperationalLocationClass @withSubscription @key(fields: "iid") {
  
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ Associated OperationsRecordEntries from Operations Events """
  recordEntries: [InformationObject] @hasInverse(field: operationalLocationClass)

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### VERSIONING #####
  """ Link to all available versions for this entity. """
  versions: [OperationalLocationClassVersion] @hasInverse(field: operationalLocationClass)
  """ The currently active version. To find a version that was active at a point in time, use versions with a filter. """
  activeVersion: OperationalLocationClassVersion @hasInverse(field: isActiveVersionOf)
  """ The next version number, or the largest version number + 1. """
  nextVersion: String

  ##### ATTRIBUTES #####
  """ A unique identification of a specific operational location class. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ The label is last node in the fully qualified name. """
  label: String! @search(by: [fulltext, exact, regexp]) 

  ##### RELATIONSHIPS #####
  """ The operational location class(s) being derived from this base operational location class(s). """
  includedIn: [OperationalLocationClassVersion] @hasInverse(field: includesPropertiesOf)

  """ This parent operational location class is whole of the child operational location class(s) as the part. """
  isPartOf: [OperationalLocationClass] @hasInverse(field: isMadeUpOf)

  """ The parent operational location class that this child operational location class makes up a part. """
  isMadeUpOf: OperationalLocationClass @hasInverse(field: isPartOf)
  
  """ The operational location version(s) defined by this operational location class. """
  operationalLocationVersions: [OperationalLocationVersion] @hasInverse(field: operationalLocationClasses)
}

"""
A representation of a grouping of operational locations with similar characteristics for a definite 
purpose such as manufacturing operations definition, scheduling, capability and performance shall be 
presented as an operational location class. Any operational location may be a member of zero ormore 
operational location classes.

An operational class may be defined as a derived class specialization of zero or more base operational classes.

An operational location class may be made up of zero or more operational location classes.
"""
type OperationalLocationClassVersion @withSubscription @primaryKey(fields: ["id", "version"]) @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ The list of OperationsEventRecordEntries that have been recorded """
  recordEntries: [InformationObject] @hasInverse(field: operationalLocationClassVersion)

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  ##### VERSIONING #####
  """ The specific version of the entity. Purposely free to allow use with a specific revision scheme. """
  version: String!  @search(by: [fulltext, exact])
  """ The current state of the version for this entity. """
  versionStatus: VersionState! @search
  """ The operational location class that uses this operational location class version as it's active version. """
  isActiveVersionOf: OperationalLocationClass @hasInverse(field: activeVersion)
  """ The time at which the version became active. """
  effectiveStart: DateTime @search
  """ the time at which the version stopped being active. """
  effectiveEnd: DateTime @search
  
  ##### ATTRIBUTES #####
  """ A unique identification of a specific operational location class version. """
  id: String! @search(by: [fulltext, exact, regexp])
  """ The label is last node in the fully qualified name. """
  label: String! @search(by: [fulltext, exact, regexp])
  """ A short description of the material definition. """
  name: String @search(by: [fulltext])
  """ Contains additional information and descriptions of the operational location. """
  description: String @search(by: [fulltext, exact])
  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope

  ##### RELATIONSHIPS #####

  """ The parent operational location class is the whole of the versions. """
  operationalLocationClass: OperationalLocationClass! @hasInverse(field: versions)
  
  """ The derived operational location class includes properties of this base operational location class(s). """
  includesPropertiesOf: [OperationalLocationClass] @hasInverse(field: includedIn)

  """ This parent operational location class version is whole of the child operational location class(s) as the part. """
  isPartOf: [OperationalLocationClassVersion] @hasInverse(field: isMadeUpOf)

  """ The parent operational location class version that this child operational location class makes up a part. """
  isMadeUpOf: OperationalLocationClassVersion @hasInverse(field: isPartOf)

  """ The operational location class property(s) of this operational location class. """
  properties: [OperationalLocationClassProperty] @hasInverse(field: operationalLocationClassVersion)


}
"""
Properties of an operational location class shall be defined as operational location class property(s). 
An operational location class property may contain nested operational location class property(s). An 
operational location class property may have zero or more operational location property(s) mapping to it.
"""
type OperationalLocationClassProperty @withSubscription @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!

  """ A unique identification of a specific operational location class property within the operational location class. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ The label is last node in the fully qualified name. """
  label: String! @search(by: [fulltext, exact, regexp])

  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search

  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])

  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  """ Additional information about the operational location class property. """
  description: String @search(by: [fulltext, exact]) 

  """ The value, set of values, or range of the property. """
  value: String @search(by: [fulltext, exact])

  """ The unit of measure of the associated property value. """
  valueUnitOfMeasure: UnitOfMeasure

  """ Defines the type of the property. """
  propertyType: Isa95PropertyType!

  """ The child operational location class property(s) of this operational location class property. """
  isPartOf: [OperationalLocationClassProperty] @hasInverse(field: isMadeUpOf)

  """ The parent operational location class property of this operational location class property. """
  isMadeUpOf: OperationalLocationClassProperty @hasInverse(field: isPartOf)

  """ The operational location class property(s) of this operational location class """
  operationalLocationClassVersion: OperationalLocationClassVersion! @hasInverse(field: properties)

  """ The operational location property(s) is mapping to this operational location class property. """
  mapsTo: [OperationalLocationProperty] @hasInverse(field: mapsTo)
}

"""
A logical or physical location where a material lot, material sublot, equipment, physical asset or person 
is located or expected to be located shallbe presented as an operational location. Operational locations 
may be made up of other operational locations.
"""
type OperationalLocation @withSubscription @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ The list of OperationsEventRecordEntries that have been recorded """
  recordEntries: [InformationObject] @hasInverse(field: operationalLocation)
  """
  A unique identification of a specific operational location, within the hierarchy scope of the
  operational location.
  """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ The label is last node in the fully qualified name. """
  label: String! @search(by: [fulltext, exact, regexp])
  
  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### VERSIONING #####
  """ Link to all available versions for this entity. """
  versions: [OperationalLocationVersion] @hasInverse(field: operationalLocation)
  """ The currently active version. To find a version that was active at a point in time, use versions with a filter. """
  activeVersion: OperationalLocationVersion @hasInverse(field: isActiveVersionOf)
  """ The next version number, or the largest version number + 1. """
  nextVersion: String

  ##### ATTRIBUTES #####


  ##### RELATIONSHIPS #####
  """ The child operational location(s) contained within this operational location. """
  isPartOf: [OperationalLocation] @hasInverse(field: isMadeUpOf)

  """ The parent operational location of child this operational location. """
  isMadeUpOf: OperationalLocation @hasInverse(field: isPartOf)
}

"""
A logical or physical location where a material lot, material sublot, equipment, physical asset or person 
is located or expected to be located shallbe presented as an operational location. Operational locations 
may be made up of other operational locations.
"""
type OperationalLocationVersion @primaryKey(fields:["id","version"]) @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ The list of OperationsEventRecordEntries that have been recorded """
  recordEntries: [InformationObject] @hasInverse(field: operationalLocationVersion)
  
  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  ##### VERSIONING #####
  """ The specific version of the entity. Purposely free to allow use with a specific revision scheme. """
  version: String! @search(by: [fulltext, exact])
  """ The current state of the version for this entity. """
  versionStatus: VersionState! @search
  """ The operational location that uses this operational location version as it's active version. """
  isActiveVersionOf: OperationalLocation @hasInverse(field: activeVersion)
  """ The time at which the version became active. """
  effectiveStart: DateTime @search
  """ the time at which the version stopped being active. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ A short description of the material definition. """
  name: String @search(by: [fulltext])
  """ A unique identification of a specific operational location, within the scope of the information exchanged. """
  id: String! @search(by: [fulltext, exact, regexp])
  """ Contains additional information and descriptions of the operational location. """
  description: String @search(by: [fulltext, exact])
  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope

  ##### RELATIONSHIPS #####
  """ The parent operational location is the whole of the versions. """
  operationalLocation: OperationalLocation! @hasInverse(field: versions)
  """ 
  Spatially defines the operational location as a zero-dimensional point, one-dimensional line, or 
  two-dimensional shape or three dimensional solid. 
  """
  spatialDefinition: SpatialDefinition

  """ The operational location class(s) to which this operational location belong. """
  operationalLocationClasses: [OperationalLocationClass] @hasInverse(field: operationalLocationVersions)

  """ The operational location property(s) of this operational location. """
  properties: [OperationalLocationProperty] @hasInverse(field: operationalLocationVersion)

  """ The child operational location(s) contained within this operational location version. """
  isPartOf: [OperationalLocationVersion] @hasInverse(field: isMadeUpOf)

  """ The parent operational location version of child this operational location version. """
  isMadeUpOf: OperationalLocationVersion @hasInverse(field: isPartOf)
}
"""
Properties of operational locations shall be presented as operational location properties. An operational 
location shall have zero or more operational location properties. These specify the current property 
values of the operational location for the associated operational location class property. Operational 
location properties may include a unit of measure.

Operational location properties may contain nested operational location properties.
"""
type OperationalLocationProperty @withSubscription @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!

  """ A unique identification of a specific operational location class property within the operational location class. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ The label is last node in the fully qualified name. """
  label: String! @search(by: [fulltext, exact, regexp])

  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search

  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])

  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  """ Additional information about the operational location property. """
  description: String @search(by: [fulltext, exact]) 

  """ The value, set of values, or range of the property. """
  value: String @search(by: [fulltext, exact])

  """ The unit of measure of the associated property value. """
  valueUnitOfMeasure: UnitOfMeasure

  """ The child operational location property(s) of this operational location property. """
  isPartOf: [OperationalLocationProperty] @hasInverse(field: isMadeUpOf)

  """ The parent operational location property of this operational location property. """
  isMadeUpOf: OperationalLocationProperty @hasInverse(field: isPartOf)

  """ This operational location property(s) of the operational location. """
  operationalLocationVersion: OperationalLocationVersion! @hasInverse(field: properties)

  """ The operational location class property to which this operational location class property maps. """
  mapsTo: OperationalLocationClassProperty @hasInverse(field: mapsTo)
}
# ################################################################################
# Personnel Information Model
# ################################################################################
#
# The personnel model contains the information about specific personnel,
# classes of personnel, and qualifications of personnel.
# 
###################################################################################


"""
A representation of a grouping of persons with similar characteristics for a definite 
purpose such as manufacturing operations definition, scheduling, capability and performance 
shall be presented as a personnel class. Any person may be a member of zero or 
more personnel classes. 

A personnel class may be defined as a specialization of zero or more personnel class. 
A personnel class may be made up of zero or more personnel class(s).

A personnel class may be tested by the evaluation of the test specification criteria 
in the test specification that references the evaluated property and may be recorded 
in an evaluated criterion result attribute in the test result.

EXAMPLE: Personnel classes are cook machine mechanics, slicing machine operators, 
          cat-cracker operator, and zipper line inspectors.
"""
type PersonnelClass @withSubscription @key(fields: "iid")
@auth(
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  query: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryPersonnelClass @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
    {rule: """ query{ queryPersonnelClass (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  add: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryPersonnelClass @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
    {rule: """ query{ queryPersonnelClass (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  delete: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryPersonnelClass @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
    {rule: """ query{ queryPersonnelClass (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
){
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ The list of OperationsEventRecordEntries that have been recorded """
  recordEntries: [InformationObject] @hasInverse(field: personnelClass)

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### VERSIONING #####
  """ Link to all available versions for this entity. """
  versions: [PersonnelClassVersion] @hasInverse(field: personnelClass)
  """ The currently active version. To find a version that was active at a point in time, use versions with a filter. """
  activeVersion: PersonnelClassVersion @hasInverse(field: isActiveVersionOf)
  """ The next version number, or the largest version number + 1. """
  nextVersion: String

  ##### ATTRIBUTES #####
  """ A unique identification of a specific personnel class. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ Human friendly alternative identifier """
  label: String! @search(by: [fulltext, exact, regexp])

  ##### RELATIONSHIPS #####
  """ The child personnel class(s) include properties of this personnel class. """
  isIncludedIn: [PersonnelClassVersion] @hasInverse(field: includesPropertiesOf)
  """ The person supports this personnel class. """
  personVersions: [PersonVersion] @hasInverse(field: personnelClasses)

  """ Personnel specification(s) corresponding with this personnel class. """
  personnelSpecifications: [PersonnelSpecification] @hasInverse(field: personnelClass)
  """ Personnel requirement(s) corresponding with this personnel class. """
  personnelRequirements: [PersonnelRequirement] @hasInverse(field: personnelClass)
  """ The equipment actual this equipment class is associated with. """
  personnelActual: [PersonnelActual] @hasInverse(field: personnelClass)

  """ The ID of this testable object ID(s) evaluated by the test specification. """
  testedBy: [TestSpecification] @hasInverse(field: requiredByPersonnelClass)
  """ The test specification(s) used to evaluate this testable object. """
  specifiesTests: [TestSpecification] @hasInverse(field: testsPersonnelClass)
  """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
  testResults: [TestResult] @hasInverse(field: personnelClass)
}


"""
A representation of a grouping of persons with similar characteristics for a definite
purpose such as manufacturing operations definition, scheduling, capability and performance
shall be presented as a personnel class. Any person may be a member of zero or
more personnel classes.

A personnel class may be defined as a specialization of zero or more personnel class.
A personnel class may be made up of zero or more personnel class(s).

A personnel class may be tested by the evaluation of the test specification criteria
in the test specification that references the evaluated property and may be recorded
in an evaluated criterion result attribute in the test result.

EXAMPLE: Personnel classes are cook machine mechanics, slicing machine operators,
cat-cracker operator, and zipper line inspectors.
"""
type PersonnelClassVersion @withSubscription @primaryKey(fields:["id","version"]) @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ The personnel class that this personnel class version relates to. """
  personnelClass: PersonnelClass! @hasInverse(field: versions)
  """ The list of OperationsEventRecordEntries that have been recorded """
  recordEntries: [InformationObject] @hasInverse(field: personnelClassVersion)

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  ##### VERSIONING #####
  """ The specific version of the entity. Purposely free to allow use with a specific revision scheme. """
  version: String!  @search(by: [fulltext, exact])
  """ The current state of the version for this entity. """
  versionStatus: VersionState! @search
  """ The personnel class that uses this personnel class version as it's active version. """
  isActiveVersionOf: PersonnelClass @hasInverse(field: activeVersion)
  """ The time at which the version became active. """
  effectiveStart: DateTime @search
  """ the time at which the version stopped being active. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ A unique identification of a specific personnel class. """
  id: String! @search(by:[fulltext, exact, regexp])
  """ Additional information and description about the personnel class. """
  description: String @search(by: [fulltext, exact])
  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope

  ##### RELATIONSHIPS #####
  """ The personnel class property(s) of this personnel class. """
  properties: [PersonnelClassProperty] @hasInverse(field: personnelClassVersion)
  """ This personnel class(s) includes properties of the parent personnel class. """
  includesPropertiesOf: [PersonnelClass] @hasInverse(field: isIncludedIn)
  """ State Model Definitions define the allowed states and transitions between states """
  stateModels: [StateModelDefinition] @hasInverse (field: personnelClassVersion)
}


"""
Properties of a personnel class shall be presented as personnel class properties. 
Each personnel class shall have zero or more recognized properties.

EXAMPLE 1 Personnel class properties for the personnel class operators can be a class 1 certified, 
class 2 certified, night shift, and exposure hours.

Operations requests may specify required personnel class property requirements for an operations 
segment.

A personnel class property may be tested to the evaluated property in a test specification where 
the measured results may be recorded in a property measurement attribute in a test result. 
The measured results may also be evaluated to the test specification criteria in the test specification 
that references the evaluated property where they may be recorded in an evaluated criterion result attribute 
in the test result.

Personnel class property(s) may contain nested personnel class property(s). 
"""
type PersonnelClassProperty @withSubscription @key(fields: "iid")
@auth(
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  query: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryPersonnelClassProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
    {rule: """ query{ queryPersonnelClassProperty (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  add: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryPersonnelClassProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
    {rule: """ query{ queryPersonnelClassProperty (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  delete: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryPersonnelClassProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
    {rule: """ query{ queryPersonnelClassProperty (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
){
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ An identification of the specific property, unique fully qualified id"""
  id: String! @id @search(by:[fulltext,exact])
  """ The label is last node in the fully qualified name. """
  label: String! @search(by: [fulltext, exact, regexp])
  """ Additional information and description about the personnel class property. """
  description: String @search(by:[fulltext,exact])
  """ Defines the type of the property. """
  propertyType: Isa95PropertyType!
  """ The value, set of values, or range of the property. """
  value: String @search(by: [fulltext, exact])
  """ The unit of measure of the associated property value. """
  valueUnitOfMeasure: UnitOfMeasure
 
  ##### RELATIONSHIPS #####
  """ The personnel class defined in part by this personnel class property. """
  personnelClassVersion: PersonnelClassVersion! @hasInverse(field: properties)
  """ The nested personnel class property(s) makes up part of this personnel class property as the whole. """
  children: [PersonnelClassProperty] @hasInverse(field: parent)
  """ This nested personnel class property makes up part of the parent personnel class property as the whole. """
  parent: PersonnelClassProperty @hasInverse(field: children)
  """ If the person supports a personnel class, this personnel class property(s) is applied in the person property(s). """
  personProperty: PersonProperty @hasInverse(field: personnelClassProperty)
  
  """ This testable object property is measured to the test specification containing the evaluated property. """
  correspondsTo: EvaluatedProperty @hasInverse(field: personnelClassProperty)
  """ This PersonnelClassProperty records the measurement result for these PropertyMeasurement(s). """
  recordsMeasurementOf: [PropertyMeasurement] @hasInverse(field: personnelClassProperty) 

  """ Personnel requirement property(s) mapped to this personnel class property. """
  personnelRequirementProperties: [PersonnelRequirementProperty] @hasInverse(field: personnelClassProperty)
  """ Personnel specification property(s) mapped to this personnel class property. """
  personnelSpecificationProperties: [PersonnelSpecificationProperty] @hasInverse(field: personnelClassProperty)
  """ Equipment actual property(s) mapped to this personnel Class Property. """
  personnelActualProperties: [PersonnelActualProperty] @hasInverse(field: personnelClassProperty)

}



"""
A representation of a specifically identified individual shall be presented as a person. A person
may be a member of zero or more personnel classes.

A person may be tested by the evaluation of the test specification criteria in the test specification
that references the evaluated property and may be recorded in an evaluated criterion result attribute
in the test result.

Person shall include a unique identification of the individual. 
"""
type Person @withSubscription @key(fields: "iid")
@auth(
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  query: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryPerson @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
    {rule: """ query{ queryPerson (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  add: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryPerson @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
    {rule: """ query{ queryPerson (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  delete: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryPerson @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
    {rule: """ query{ queryPerson (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
){
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ The list of OperationsEventRecordEntries that have been recorded """
  recordEntries: [InformationObject] @hasInverse(field: person)

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### VERSIONING #####
  """ Link to all available versions for this entity. """
  versions: [PersonVersion] @hasInverse(field: person)
  """ The currently active version. To find a version that was active at a point in time, use versions with a filter. """
  activeVersion: PersonVersion @hasInverse(field: isActiveVersionOf)
  """ The next version number, or the largest version number + 1. """
  nextVersion: String

  ##### ATTRIBUTES #####
  """ A unique identification of a specific person, within the scope of the information exchanged. """
  id: String! @id @search(by:[fulltext,exact,regexp])
  """ Human friendly alternative identifier """
  label: String! @search(by:[fulltext,exact,regexp])

  ##### RELATIONSHIPS #####
  """ Personnel specification(s) corresponding with this person. """
  personnelSpecifications: [PersonnelSpecification] @hasInverse(field: person)
  """ Personnel requirement(s) corresponding with this person. """
  personnelRequirements: [PersonnelRequirement] @hasInverse(field: person)
  """ The personel actual(s) associated with this person. """
  personnelActual: [PersonnelActual] @hasInverse(field: person)

  """ The ID of this testable object ID(s) evaluated by the test specification. """
  testedBy: [TestSpecification] @hasInverse(field: requiredByPerson)
  """ The test specification(s) used to evaluate this testable object. """
  specifiesTests: [TestSpecification] @hasInverse(field: testsPerson)
  """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
  testResults: [TestResult] @hasInverse(field: person)
  """ The events associated with this person. """
  events: [Event] @hasInverse(field: person)
  """ State Model Instances record the current state and history of state transitions """
  stateModelInstances: [StateModelInstance] @hasInverse(field: person)

}

 
"""
A representation of a specifically identified individual shall be presented as a person. A person
may be a member of zero or more personnel classes.

A person may be tested by the evaluation of the test specification criteria in the test specification
that references the evaluated property and may be recorded in an evaluated criterion result attribute
in the test result.

Person shall include a unique identification of the individual.
"""
type PersonVersion @withSubscription @primaryKey(fields:["id","version"]) @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ The person that this person version relates to. """
  person: Person! @hasInverse(field: versions)
  """ The list of OperationsEventRecordEntries that have been recorded """
  recordEntries: [InformationObject] @hasInverse(field: personVersion)

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  ##### VERSIONING #####
  """ The specific version of the entity. Purposely free to allow use with a specific revision scheme. """
  version: String!  @search(by: [fulltext, exact])
  """ The current state of the version for this entity. """
  versionStatus: VersionState! @search
  """ The person that uses this person version as it's active version. """
  isActiveVersionOf: Person @hasInverse(field: activeVersion)
  """ The time at which the version became active. """
  effectiveStart: DateTime @search
  """ the time at which the version stopped being active. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ A unique identification of a specific person, within the scope of the information exchanged. """
  id: String! @search(by:[fulltext,exact,regexp])
  """ Additional information about the resource. """
  description: String @search(by:[fulltext,exact])
  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope
  """ Spatially defines the person. """
  spatialDefinition: SpatialDefinition
  """ Identifies the operational location of the person. """
  operationalLocation: OperationalLocation

  """ The name of the individual. """
  name: String! @search(by:[fulltext,exact])

  ##### RELATIONSHIPS #####
  """ This person supports the personnel class property(s) associated with the personnel class. """
  personnelClasses: [PersonnelClass] @hasInverse(field: personVersions)
  """ The person property values of this person. """
  properties: [PersonProperty] @hasInverse(field: personVersion)
  """ The equipment actual this equipment class is associated with. """
  personnelActual: [PersonnelActual] @hasInverse(field: personVersion)

  """ State Model Definitions define the allowed states and transitions between states """
  stateModels: [StateModelDefinition] @hasInverse (field: personVersion)

  #### 21 CFR 11 Compliance ####
  """ Electronic signatures made by this person. """
  signaturesMade: [Signature] @hasInverse(field: personVersion)

  ### ISA 88 Compliance ###
  """ Defines the person who made a comment. """
  comments: [Comment] @hasInverse(field: personVersion)
}


"""
Properties of a person shall be presented as person properties. Each person shall have zero or more person properties. 
These specify the current property values of the person for the associated personnel class property.

EXAMPLE: A person property can be night shift and its value would be available, and a person property can be 
exposure hours available and its value would be 4.

Person properties may include the current availability of a person and other current information, 
such as location and assigned activity, and the unit of measure of the current information.

A person property may be tested to the evaluated property in a test specification where the measured 
results may be recorded in a property measurement attribute in a test result. The measured results may also be 
evaluated to the test specification criteria in the test specification that references the evaluated property 
where they may be recorded in an evaluated criterion result attribute in the test result. 

Person properties may contain nested person properties.
"""
type PersonProperty @withSubscription @key(fields: "iid")
@auth(
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  query: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryPersonProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
    {rule: """ query{ queryPersonProperty (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  add: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryPersonProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
    {rule: """ query{ queryPersonProperty (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  delete: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryPersonProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
    {rule: """ query{ queryPersonProperty (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
){
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ An identification of the specific property. """
  id: String! @id @search(by:[fulltext,exact])
  """ The label is last node in the fully qualified name. """
  label: String! @search(by: [fulltext, exact, regexp])
  """ Additional information about the person property. """
  description: String @search(by:[fulltext,exact])
  """ The value, set of values, or range of the property. """
  value: String
  """ The unit of measure of the associated property value. """
  valueUnitOfMeasure: UnitOfMeasure

  """ Target value. """
  valueSetPoint: String
  """ The upper limit that impacts the quality of the product. """
  valueUpperSpecLimit: Float
  """ The lower limit that impacts the quality of the product. """
  valueLowerSpecLimit: Float
  """ The upper limit that would trigger an alert. """
  valueUpperControlLimit: Float
  """ The lower limit that would trigger an alert. """
  valueLowerControlLimit: Float

  ##### RELATIONSHIPS #####
  """ This person property values in part for the person. """
  personVersion: PersonVersion! @hasInverse(field: properties)
  """ This nested person property(s) is part of the person property as the whole. """
  children: [PersonProperty] @hasInverse(field: parent)
  """ This nested person property makes up part of the parent person property as the whole. """
  parent: PersonProperty @hasInverse(field: children)
  """ If the person supports the parent personnel class, the personnel class property(s) is applied in this person property(s). """
  personnelClassProperty: PersonnelClassProperty @hasInverse(field: personProperty)
  """ This testable object property is measured to the test specification containing the evaluated property. """
  correspondsTo: EvaluatedProperty @hasInverse(field: personProperty)
  """ This PersonnelClassProperty records the measurement result for these PropertyMeasurement(s) """
  recordsMeasurementOf: [PropertyMeasurement] @hasInverse(field: personProperty)
  """ Personnel specification property(s) mapped to this person property. """
  personnelSpecificationProperties: [PersonnelSpecificationProperty] @hasInverse(field: personProperty)
  """ Personnel requirement property(s) mapped to this person property. """
  personnelRequirementProperties: [PersonnelRequirementProperty] @hasInverse(field: personProperty)
  """ Personnel actual property(s) mapped to this person property. """
  personnelActualProperties: [PersonnelActualProperty] @hasInverse(field: personProperty)
}
# ################################################################################
# Role-based Equipment Model
# ################################################################################
#
# The role-based equipment model shown in Figure 9 contains the information
# about specific equipment, and the classes of equipment.

"""
A representation of a grouping of equipment with similar characteristics for a definite purpose such 
as manufacturing operations definition, scheduling, capability and performance shall be presented as 
an equipment class. Any piece of equipment may be a member of zero or more equipment classes. An 
equipment class may be defined as a derived class specialization of zero or more base equipment classes. 
An equipment class may be made up of zero or more equipment classes.

An equipment class may be tested by the evaluation of the test specification criteria in the test 
specification that references the evaluated property and may be recorded in an evaluated criterion 
result attribute in the test result.
"""
type EquipmentClass @withSubscription @key(fields: "iid")
@auth(
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  query: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryEquipmentClass @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
    {rule: """ query{ queryEquipmentClass (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  add: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryEquipmentClass @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
    {rule: """ query{ queryEquipmentClass (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  delete: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryEquipmentClass @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
    {rule: """ query{ queryEquipmentClass (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
){
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ The list of OperationsEventRecordEntries that have been recorded """
  recordEntries: [InformationObject] @hasInverse(field: equipmentClass)


  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### VERSIONING #####
  """ Link to all available versions for this entity. """
  versions: [EquipmentClassVersion] @hasInverse(field: equipmentClass)
  """ The currently active version. To find a version that was active at a point in time, use versions with a filter. """
  activeVersion: EquipmentClassVersion @hasInverse(field: isActiveVersionOf)
  """ The next version number, or the largest version number + 1. """
  nextVersion: String

  ##### ATTRIBUTES #####
  """ A unique identification of a specific equipment class, within the scope of the information exchanged. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ The label is last node in the fully qualified name. """
  label: String! @search(by: [fulltext, exact, regexp])


  ##### RELATIONSHIPS #####

  """Association relationship (Is A):"""
  isIncludedIn: [EquipmentClassVersion] @hasInverse(field: includesPropertiesOf)


  """ Aggregation hierarchy (Has A):
  - This object can include the properties of zero or many objects of the same type
  - this object's properties can be included in zero or many objects of the same type
  - This relationship intent is to create subordinate classes can be contained within various superordinate classes
    in the same way that a component may be made up of subcomponents

  Example:

  MixerMechanism properties: HeadShape, Type
  InsulationSleeve properties:  Density, Colour
  HeatingElement properties:  Power, Length
  Boiler isMadeUpOf  [MixerMechanism, Heating Element] (and extends this with property TargetTemperature)
  InsulatedBoiler isMadeUpOf  [MixerMechanism, Heating Element, InsulationSleeve] (and extends this with property TargetTemperature)
  """
  isMadeUpOf: [EquipmentClass] @hasInverse(field: isPartOf)
  """ Aggregation hierarchy (Has A) """
  isPartOf: [EquipmentClass] @hasInverse(field: isMadeUpOf)



  """ The equipment objects support the equipment class property(s) associated with this equipment class. """
  equipmentVersions: [EquipmentVersion] @hasInverse(field: equipmentClasses)

  """ The equipment specifications this equipment class is associated with. """
  equipmentSpecifications: [EquipmentSpecification] @hasInverse(field: equipmentClass)
  """ The equipment requirements this equipment class is associated with. """
  equipmentRequirements: [EquipmentRequirement] @hasInverse(field: equipmentClass)
  """ The equipment actual this equipment class is associated with. """
  equipmentActual: [EquipmentActual] @hasInverse(field: equipmentClass)

  """ The ID of this testable object ID(s) evaluated by the test specification. """
  testedBy: [TestSpecification]
  """ The test specification(s) used to evaluate this testable object. """
  specifiesTests: [TestSpecification]
  """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
  testResults: [TestResult]

  ##### USER INTERFACE HELPERS #####
  """ The icon for the menu in the libre admin UI menu. """
  uiSortIndex: Int

}


"""
A representation of a grouping of equipment with similar characteristics for a definite purpose such
as manufacturing operations definition, scheduling, capability and performance shall be presented as
an equipment class. Any piece of equipment may be a member of zero or more equipment classes. An
equipment class may be defined as a derived class specialization of zero or more base equipment classes.
An equipment class may be made up of zero or more equipment classes.

An equipment class may be tested by the evaluation of the test specification criteria in the test
specification that references the evaluated property and may be recorded in an evaluated criterion
result attribute in the test result.
"""
type EquipmentClassVersion @withSubscription @primaryKey(fields:["id","version"]) @key(fields: "iid"){
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ The equipment class that this equipment class version relates to. """
  equipmentClass: EquipmentClass! @hasInverse(field: versions)
  """ The list of OperationsEventRecordEntries that have been recorded """
  recordEntries: [InformationObject] @hasInverse(field: equipmentClassVersion)

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])


  ##### VERSIONING #####
  """ The specific version of the entity. Purposely free to allow use with a specific revision scheme. """
  version: String!  @search(by: [fulltext, exact])
  """ The current state of the version for this entity. """
  versionStatus: VersionState! @search
  """ The equipment class that uses this equipment class version as it's active version. """
  isActiveVersionOf: EquipmentClass @hasInverse(field: activeVersion)
  """ The time at which the version became active. """
  effectiveStart: DateTime @search
  """ the time at which the version stopped being active. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ A unique identification of a specific equipment class version. """
  id: String! @search(by: [fulltext, exact, regexp])
  """ Additional information about the equipment class. """
  description: String @search(by: [fulltext, exact])
  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope
  """ An identification of the level in the role-based equipment hierarchy. """
  equipmentLevel: EquipmentElementLevel

  ##### RELATIONSHIPS #####
  """ The equipment class property(s) of this equipment class. """
  properties: [EquipmentClassProperty] @hasInverse(field: equipmentClassVersion)
  """ A set of expressions that if evaluate to true trigger or create an instance of a workflow. """
  rules: [Rule] @hasInverse(field: equipmentClassVersion)
  """ Association relationship (Is A):this class inherits the definition of the classes in the list"""
  includesPropertiesOf: [EquipmentClass] @hasInverse(field: isIncludedIn)
  """ EquipmentVersions that are inheriting definition from this EquipmentClassVersion """
  equipmentVersions: [EquipmentVersion] @hasInverse(field: equipmentClassVersions)
  """ Finite State Models allow logic to be defined based on equipment state """
  stateModels: [StateModelDefinition] @hasInverse(field: equipmentClassVersion)
  ##### USER INTERFACE HELPERS #####
  """ The icon for the menu in the libre admin UI menu. """
  image: String
  """ The display name in the libre admin UI menu. """
  displayName: String @search(by: [hash])
  """ Monochrome icon for use in UI """
  uiMonochromeIcon: String
  """ Colour setting for the monochrome icon. """
  uiMonochromeIconColour: String
}


"""
Properties of an equipment class shall be presented as equipment class properties. Each may have zero 
or more recognized properties.

An equipment class property may be tested to the evaluated property in a test specification where the 
measured results may be recorded in a property measurement attribute in a test result. The measured 
results may also be evaluated to the test specification criteria in the test specification that references 
the evaluated property where they may be recorded in an evaluated criterion result attribute in the 
test result. Equipment class properties may contain nested equipment class properties.
"""
type EquipmentClassProperty @withSubscription @key(fields: "iid")
@auth(
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  query: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryEquipmentClassProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
    {rule: """ query{ queryEquipmentClassProperty(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  add: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryEquipmentClassProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
    {rule: """ query{ queryEquipmentClassProperty(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  delete: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryEquipmentClassProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
    {rule: """ query{ queryEquipmentClassProperty (filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
){
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ An identification of the specific property. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ The label is last node in the fully qualified name. """
  label: String! @search(by: [fulltext, exact, regexp])
  """ Additional information about the equipment class property. """
  description: String @search(by: [fulltext, exact])
  """ Defines the type of the property. """
  propertyType: Isa95PropertyType!
  """ The value, set of values, or range of the property. """
  value: String @search(by: [fulltext, exact])
  """ The unit of measure of the associated property value. """
  valueUnitOfMeasure: UnitOfMeasure
  """ Defined how the Libre application treats the property binding logic. """
  bindingType: PropertyBindingType @search

  ##### RELATIONSHIPS #####
  """ The equipment class defined in part by this equipment class property. """
  equipmentClassVersion: EquipmentClassVersion! @hasInverse(field: properties)
  """ The nested equipment class property(s) makes up part of this equipment class property as the whole. """
  children: [EquipmentClassProperty] @hasInverse(field: parent)
  """ The equipment class property that this nested equipment class property makes up part of as the whole. """
  parent: EquipmentClassProperty @hasInverse(field: children)
  """ If the parent equipment supports a equipment class, this equipment class property(s) is applied in the 
  equipment property(s). The equipment property maps to this corresponding equipment class property."""
  equipmentProperty: EquipmentProperty @hasInverse(field: equipmentClassProperty)
  """ This testable object property is measured to the test specification containing the evaluated property. """
  correspondsTo: EvaluatedProperty @hasInverse(field: equipmentClassProperty)
  """ This EquipmentClassProperty records the measurement result for these PropertyMeasurement(s) """
  recordsMeasurementOf: [PropertyMeasurement] @hasInverse(field: equipmentClassProperty)


  """ Equipment requirement property(s) mapped to this equipment class property. """
  equipmentRequirementProperties: [EquipmentRequirementProperty] @hasInverse(field: equipmentClassProperty)
  """ Equipment specification property(s) mapped to this equipment class property. """
  equipmentSpecificationProperties: [EquipmentSpecificationProperty] @hasInverse(field: equipmentClassProperty)
  """ Equipment actual property(s) mapped to this equipment class property. """
  equipmentActualProperties: [EquipmentActualProperty] @hasInverse(field: equipmentClassProperty)

  """ The rule(s) potentially triggered by values in this property. """
  triggersRules: [Rule] @hasInverse(field: triggerProperties)

}


"""
A representation of the elements of the equipment hierarchy model shown in ISA 95.00.01 shall be presented
as equipment. Equipment may be a listing of any of the following: enterprise, site, area, work center, work
unit, process cell, unit, production line, production unit, work cell, storage zone, and storage unit.

Equipment may be tested by the execution of the test specification criteria in the test specification
that references the evaluated property and may be recorded in an evaluated criterion result attribute
in the test result.

Equipment may be made up of other equipment, as presented in the equipment hierarchy model.
"""
type Equipment @withSubscription @key(fields: "iid")
@auth(
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  query: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryEquipment @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
    {rule: """ query{ queryEquipment(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  add: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryEquipment @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
    {rule: """ query{ queryEquipment(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  delete: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryEquipment @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
    {rule: """ query{ queryEquipment(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
){
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ The list of OperationsEventRecordEntries that have been recorded """
  recordEntries: [InformationObject] @hasInverse(field: equipment)

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### VERSIONING #####
  """ Link to all available versions for this entity. """
  versions: [EquipmentVersion] @hasInverse(field: equipment)
  """ The currently active version. To find a version that was active at a point in time, use versions with a filter. """
  activeVersion: EquipmentVersion @hasInverse(field: isActiveVersionOf)
  """ The next version number, or the largest version number + 1. """
  nextVersion: String

  ##### ATTRIBUTES #####
  """ A unique identification of a specific piece of equipment, within the scope of the information exchanged. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ The label is last node in the fully qualified name. """
  label: String! @search(by: [fulltext, exact, regexp])

  ##### RELATIONSHIPS #####
  """ Aggregation hierarchy (Has A):
  - This object can include the properties of zero or many objects of the same type
  - This object's properties can be included in zero or many objects of the same type
  - This relationship intent is to create subordinate classes can be contained within various superordinate classes
  in the same way that a component may be made up of subcomponents

  Example:

  MixerMechanism properties: HeadShape, Type
  InsulationSleeve properties:  Density, Colour
  HeatingElement properties:  Power, Length
  Boiler isMadeUpOf  [MixerMechanism, Heating Element] (and extends this with property TargetTemperature)
  InsulatedBoiler isMadeUpOf  [MixerMechanism, Heating Element, InsulationSleeve] (and extends this with property TargetTemperature)
  """
  isMadeUpOf: [Equipment] @hasInverse(field: isPartOf)
  """ Aggregation hierarchy (Has A) """
  isPartOf: [Equipment] @hasInverse(field: isMadeUpOf)



  """ The equipment asset mapping records the uses of the equipment that is associated with the physical
  asset if the equipment associated with a manufacturing function. """
  equipmentAssetMapping: [EquipmentAssetMapping] @hasInverse(field: equipment)
  """ This equipment as role in a process segment is implemented by the physical asset. """
  physicalAsset: PhysicalAsset @hasInverse(field: equipment)

  """ The equipment specification(s) this equipment is associated with. """
  equipmentSpecifications: [EquipmentSpecification] @hasInverse(field: equipment)
  """ The equipment requirement(s) this equipment is associated with. """
  equipmentRequirements: [EquipmentRequirement] @hasInverse(field: equipment)
  """ The equipment actual(s) this equipment is associated with. """
  equipmentActual: [EquipmentActual] @hasInverse(field: equipment)

  """ The ID of this testable object ID(s) evaluated by the test specification. """
  testedBy: [TestSpecification]
  """ The test specification(s) used to evaluate this testable object. """
  specifiesTests: [TestSpecification]
  """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
  testResults: [TestResult]
  """ State Model Instances record the current state and history of state transitions """
  stateModelInstances: [StateModelInstance] @hasInverse(field: equipment)

  """ Identifies any material sublot(s) stored at this Equipment. """
  materialSubLots: [MaterialSubLot] @hasInverse(field: storageLocationEquipment)
  """ Identifies any material lot(s) stored at this Equipment. """
  materialLots: [MaterialLot] @hasInverse(field: storageLocationEquipment)


  ##### USER INTERFACE HELPERS #####
  """ The icon for the menu in the libre admin UI menu. """
  uiSortIndex: Int

  """ Reference to ISA88.00.04 Event. An event is a discrete occurrence in time. Event objects document occurrences
  and can be stored in a batch production record. This is usually done when an event has meaning or significance to
  the manufacture of a product. """
  events: [Event] @hasInverse(field: equipment)
}


"""
A representation of a version of the elements of the equipment hierarchy model shown in ISA 95.00.01 shall be presented
as equipment. Equipment may be a listing of any of the following: enterprise, site, area, work center, work
unit, process cell, unit, production line, production unit, work cell, storage zone, and storage unit.

Equipment may be tested by the execution of the test specification criteria in the test specification
that references the evaluated property and may be recorded in an evaluated criterion result attribute
in the test result.

Equipment may be made up of other equipment, as presented in the equipment hierarchy model.
"""
type EquipmentVersion @withSubscription @primaryKey(fields:["id","version"]) @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ The equipment that this equipment version relates to. """
  equipment: Equipment! @hasInverse(field: versions)
  """ The list of OperationsEventRecordEntries that have been recorded """
  recordEntries: [InformationObject] @hasInverse(field: equipmentVersion)

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  ##### VERSIONING #####
  """ The specific version of the entity. Purposely free to allow use with a specific revision scheme. """
  version: String! @search(by: [fulltext, exact])
  """ The current state of the version for this entity. """
  versionStatus: VersionState! @search
  """ The equipment that uses this equipment version as it's active version. """
  isActiveVersionOf: Equipment @hasInverse(field: activeVersion)
  """ The time at which the version became active. """
  effectiveStart: DateTime @search
  """ the time at which the version stopped being active. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ A unique identification of a specific piece of equipment, within the scope of the information exchanged. """
  id: String! @search(by: [fulltext, exact, regexp])
  """ Additional information about the equipment. """
  description: String @search(by: [fulltext, exact])
  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope @hasInverse(field: equipmentVersions)
  """ Spatially defines the equipment as a zero-dimensional point. """
  spatialDefinition: SpatialDefinition
  """ Identifies the operational location of the equipment. """
  operationalLocation: OperationalLocation

  """ An identification of the level in the role-based equipment hierarchy. """
  equipmentLevel: EquipmentElementLevel
  """ The display name in the libre admin UI menu. """
  displayName: String @search(by: [hash])
  """ The time zone this equipment is located in. """
  timeZoneName: String

  ##### RELATIONSHIPS #####
  """ This equipment supports the equipment class property(s) associated with the equipment class. """
  equipmentClasses: [EquipmentClass] @hasInverse(field: equipmentVersions)
  """ This equipment supports the equipment class property(s) associated with the equipment class. """
  equipmentClassVersions: [EquipmentClassVersion] @hasInverse(field: equipmentVersions)
  """ The equipment property values of this equipment. """
  properties: [EquipmentProperty] @hasInverse(field: equipmentVersion)
  """ The equipment actual(s) this equipment is associated with. """
  equipmentActual: [EquipmentActual] @hasInverse(field: equipmentVersion)

  """ Overrides of inherited properties on this equipment instance. """
  propertyOverrides: [EquipmentPropertyOverride] @hasInverse(field: equipmentVersions)
  """ binding configuration for data source topic """
  propertyNameAliases:[PropertyNameAlias] @hasInverse(field: equipmentVersion)

  """ The definition of working time for this equipment. """
  workCalendar: WorkCalendar @hasInverse(field: equipmentVersions)
  """ list of external servers that can provide property values """
  dataSources: [EquipmentDataSource] @hasInverse(field: equipmentVersion)
  """ state models allow logic to be defined based on equipment state """
  stateModels: [StateModelDefinition] @hasInverse(field: equipmentVersion)
}

type EquipmentDataSource @withSubscription @key(fields: "iid"){
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  equipmentVersion: EquipmentVersion! @hasInverse(field: dataSources)

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ This JSONata transform resolves the data source topic id for the properties of the equipment"""
  topicTemplate: String

  ##### RELATIONSHIPS #####
  """ The external data provider details """
  dataSourceVersion: DataSourceVersion @hasInverse(field: equipmentDataSources) @deprecated(reason:"EquipmentDataSource should link to a DataSource rather tha")
  dataSource: DataSource @hasInverse(field: equipmentDataSources)
}

"""
Properties of equipment shall be presented as equipment properties. An equipment shall have zero or 
more equipment properties. These specify the current property values of the equipment for the associated 
equipment class property.

Equipment properties may include a unit of measure.

An equipment property may be tested to the evaluated property in a test specification where the measured 
results may be recorded in a property measurement attribute in a test result. The measured results may 
also be evaluated to the test specification criteria in the test specification that references the 
evaluated property where they may be recorded in an evaluated criterion result attribute in the test 
result. Equipment property(s) may contain nested equipment properties.
"""
type EquipmentProperty @withSubscription @key(fields: "iid")
@auth(
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  query: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryEquipmentProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
    {rule: """ query{ queryEquipmentProperty(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  add: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryEquipmentProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
    {rule: """ query{ queryEquipmentProperty(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  delete: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryEquipmentProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
    {rule: """ query{ queryEquipmentProperty(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
) {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ An identification of the specific property. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ The label is last node in the fully qualified name. """
  label: String! @search(by: [fulltext, exact, regexp])
  """ Additional information about the equipment property. """
  description: String @search(by: [fulltext, exact])
  """ The value, set of values, or range of the property. """
  value: String @search(by: [fulltext, exact])
  """ The unit of measure of the associated property value. """
  valueUnitOfMeasure: UnitOfMeasure

  """ Defined how the MES application treats the property. """
  bindingType: PropertyBindingType @search
  """ Target value. """
  valueSetPoint: String
  """ The upper limit that impacts the quality of the product. """
  valueUpperSpecLimit: Float
  """ The lower limit that impacts the quality of the product. """
  valueLowerSpecLimit: Float
  """ The upper limit that would trigger an alert. """
  valueUpperControlLimit: Float
  """ The lower limit that would trigger an alert. """
  valueLowerControlLimit: Float

  ##### RELATIONSHIPS #####
  """ These equipment property values in part for the equipment. """
  equipmentVersion: EquipmentVersion! @hasInverse(field: properties)
  """ The nested equipment property(s) makes up part of this equipment property as the whole. """
  children: [EquipmentProperty] @hasInverse(field: parent)
  """ The equipment property that this nested equipment property makes up part of as the whole. """
  parent: EquipmentProperty @hasInverse(field: children)
  """ If the parent equipment supports an equipment class, the equipment class property(s) is applied in this equipment property(s). This equipment property maps to the corresponding equipment class property. """
  equipmentClassProperty: EquipmentClassProperty @hasInverse(field: equipmentProperty)
  """ This testable object property is measured to the test specification containing the evaluated property. """
  correspondsTo: EvaluatedProperty @hasInverse(field: equipmentProperty)
  """ This EquipmentProperty records the measurement result for these PropertyMeasurement(s) """
  recordsMeasurementOf: [PropertyMeasurement] @hasInverse(field: equipmentProperty)
  """ Equipment specification property(s) mapped to this equipment class property. """
  equipmentSpecificationProperties: [EquipmentSpecificationProperty] @hasInverse(field: equipmentProperty)
  """ Equipment requirement property(s) mapped to this equipment class property. """
  equipmentRequirementProperties: [EquipmentRequirementProperty] @hasInverse(field: equipmentProperty)
  """ Equipment actual property(s) mapped to this equipment class property. """
  equipmentActualProperties: [EquipmentActualProperty] @hasInverse(field: equipmentProperty)
}



enum EquipmentElementLevel {
  Enterprise
  Site
  Area
  ProcessCell
  Unit
  ProductionLine
  WorkCell
  ProductionUnit
  Warehouse
  StorageZone
  StorageUnit
  WorkCenter
  WorkUnit
  EquipmentModule
  ControlModule
  Other
}

# ################################################################################
# Physical Asset domain Entities
# ################################################################################
# The physical asset model contains information about the physical piece of equipment,
# usually managed as a physical asset within the enterprise often utilizing a
# specific serial number.
# An object in the equipment model defines a role for the equipment, and object
# in the physical asset model defines the physical asset ID and properties of a
# piece of equipment.

"""
A representation of a grouping of physical assets with similar characteristics for purposes of repair
and replacement shall be presented as a physical asset class. Any physical asset shall be a member of
one physical asset class. A physical asset class may be defined as a derived class specialization of
zero or more base physical asset classes. A physical asset class may be made up of zero or more physical
asset classes.

A physical asset class may be tested by evaluating the test specification criteria in the test specification
that references the evaluated property and may be recorded in an evaluated criterion result attribute in
the test result.
"""
type PhysicalAssetClass @withSubscription @key(fields: "iid")
@auth(
    # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
    query: { or:[
        {rule: """ query($realm_access_roles:[String!]){ queryPhysicalAssetClass @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
        {rule: """ query{ queryPhysicalAssetClass (filter:{not:{has:acl}}){ iid }}"""},
        {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
    ]}
    # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
    add: { or:[
        {rule: """ query($realm_access_roles:[String!]){ queryPhysicalAssetClass @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
        {rule: """ query{ queryPhysicalAssetClass (filter:{not:{has:acl}}){ iid }}"""},
        {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
    ]}
    # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
    delete: { or:[
        {rule: """ query($realm_access_roles:[String!]){ queryPhysicalAssetClass @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
        {rule: """ query{ queryPhysicalAssetClass (filter:{not:{has:acl}}){ iid }}"""},
        {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
    ]}
){
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: physicalAssetClass)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### VERSIONING #####
    """ Link to all available versions for this entity. """
    versions: [PhysicalAssetClassVersion] @hasInverse(field: physicalAssetClass)
    """ The currently active version. To find a version that was active at a point in time, use versions with a filter. """
    activeVersion: PhysicalAssetClassVersion @hasInverse(field: isActiveVersionOf)
    """ The next version number, or the largest version number + 1. """
    nextVersion: String

    ##### ATTRIBUTES #####
    """ The manufacture's identification of the specific physical asset class. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The last node in the fully qualified id """
    label: String! @search(by: [fulltext, exact, regexp])

    ##### RELATIONSHIPS #####

    """Association relationship (Is A):"""
    isIncludedIn: [PhysicalAssetClassVersion] @hasInverse(field: includesPropertiesOf)


    """ Aggregation hierarchy (Has A):
    - This object can include the properties of zero or many objects of the same type
    - this object's properties can be included in zero or many objects of the same type
    - This relationship intent is to create subordinate classes can be contained within various superordinate classes
    in the same way that a component may be made up of subcomponents

    Example:

    MixerMechanism properties: HeadShape, Type
    InsulationSleeve properties:  Density, Colour
    HeatingElement properties:  Power, Length
    Boiler isMadeUpOf  [MixerMechanism, Heating Element] (and extends this with property TargetTemperature)
    InsulatedBoiler isMadeUpOf  [MixerMechanism, Heating Element, InsulationSleeve] (and extends this with property TargetTemperature)
    """
    isMadeUpOf: [PhysicalAssetClass] @hasInverse(field: isPartOf)
    """ Aggregation hierarchy (Has A) """
    isPartOf: [PhysicalAssetClass] @hasInverse(field: isMadeUpOf)





    """ The physical asset objects support this physical asset class. The physical asset objects support the physical asset class property(s) associated with this physical asset class. """
    physicalAssetVersions: [PhysicalAssetVersion] @hasInverse(field: physicalAssetClasses)

    """ The physical asset specification(s) that map to this physical asset class. """
    physicalAssetSpecifications: [PhysicalAssetSpecification] @hasInverse(field: physicalAssetClass)
    """ The physical asset requirement(s) that map to this physical asset class. """
    physicalAssetRequirements: [PhysicalAssetRequirement] @hasInverse(field: physicalAssetClass)
    """ The physical asset actual(s) that map to this physical asset class. """
    physicalAssetActual: [PhysicalAssetActual] @hasInverse(field: physicalAssetClass)

    """ The ID of this testable object ID(s) evaluated by the test specification. """
    testedBy: [TestSpecification] @hasInverse(field: requiredByPhysicalAssetClass)
    """ The test specification(s) used to evaluate this testable object. """
    specifiesTests: [TestSpecification] @hasInverse(field: testsPhysicalAssetClass)
    """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
    testResults: [TestResult] @hasInverse(field: physicalAssetClass)

    ##### USER INTERFACE HELPERS #####
    """ The icon for the menu in the libre admin UI menu. """
    uiSortIndex: Int
}


"""
A representation of a grouping of physical assets with similar characteristics for purposes of repair
and replacement shall be presented as a physical asset class. Any physical asset shall be a member of
one physical asset class. A physical asset class may be defined as a derived class specialization of
zero or more base physical asset classes. A physical asset class may be made up of zero or more physical
asset classes.

A physical asset class may be tested by evaluating the test specification criteria in the test specification
that references the evaluated property and may be recorded in an evaluated criterion result attribute in
the test result.
"""
type PhysicalAssetClassVersion @withSubscription @primaryKey(fields:["id","version"]) @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: physicalAssetClassVersion)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    ##### VERSIONING #####
    """ The specific version of the entity. Purposely free to allow use with a specific revision scheme. """
    version: String!  @search(by: [fulltext, exact])
    """ The current state of the version for this entity. """
    versionStatus: VersionState! @search
    """ The physical asset class that this physical asset class version relates to. """
    physicalAssetClass: PhysicalAssetClass! @hasInverse(field: versions)
    """ The physical asset class that uses this physical asset class version as it's active version. """
    isActiveVersionOf: PhysicalAssetClass @hasInverse(field:activeVersion)
    """ The time at which the version became active. """
    effectiveStart: DateTime @search
    """ the time at which the version stopped being active. """
    effectiveEnd: DateTime @search


    ##### ATTRIBUTES #####
    """ The manufacture's identification of the specific physical asset class. """
    id: String! @search(by: [fulltext, exact, regexp])
    """ Additional information about the physical asset class. """
    description: String @search(by: [fulltext, exact])
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope

    """ An identification of the manufacturer. """
    manufacturer: String @search(by: [fulltext, exact])

    ##### RELATIONSHIPS #####
    """ The physical asset class property(s) of this physical asset class. """
    properties: [PhysicalAssetClassProperty] @hasInverse(field: physicalAssetClassVersion) """ Association relationship (Is A):
    - This object can include the properties of zero or many objects of the same type
    - This object's properties can be included in zero or many objects of the same type
    - This relationship intent is to create subordinate classes which are a specialisation of the superordinate class

    Example:
    FluidTank properties: Capacity, Temperature
    MixerTank includesPropertiesOf FluidTank (and extends this with property MixerSpeed)
    Boiler includesPropertiesOf FluidTank (and extends this with property TargetTemperature)
    InsulatedBoiler includesPropertiesOf Boiler (and extends this with property InsulationRating)

    MixerTank properties:  Capacity, Temperature, MixerSpeed
    Boiler properties:  Capacity, Temperature, TargetTemperature
    InsulatedBoiler properties:  Capacity, Temperature, TargetTemperature, InsulationRating

    FluidTank isIncludedIn [MixerTank, Boiler, InsulatedBoiler]
    Boiler isIncludedIn [InsulatedBoiler]
    """
    includesPropertiesOf: [PhysicalAssetClass] @hasInverse(field: isIncludedIn)

    """ State Model Definitions define the allowed states and transitions between states """
    stateModels: [StateModelDefinition] @hasInverse (field: physicalAssetClassVersion)
}


"""
Properties of a physical asset class shall be presented as physical asset class properties. Each may 
have zero or more recognized properties.

A physical asset class property may be tested to the evaluated property in a test specification where 
the measured results may be recorded in a property measurement attribute in a test result. The measured 
results may also be evaluated to the test specification criteria in the test specification that references 
the evaluated property where they may be recorded in an evaluated criterion result attribute in the test result.

Physical asset class property(s) may contain nested physical asset class property(s).
"""
type PhysicalAssetClassProperty @withSubscription @key(fields: "iid")
@auth(
    # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
    query: { or:[
        {rule: """ query($realm_access_roles:[String!]){ queryPhysicalAssetClassProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
        {rule: """ query{ queryPhysicalAssetClassProperty (filter:{not:{has:acl}}){ iid }}"""},
        {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
    ]}
    # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
    add: { or:[
        {rule: """ query($realm_access_roles:[String!]){ queryPhysicalAssetClassProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
        {rule: """ query{ queryPhysicalAssetClassProperty (filter:{not:{has:acl}}){ iid }}"""},
        {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
    ]}
    # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
    delete: { or:[
        {rule: """ query($realm_access_roles:[String!]){ queryPhysicalAssetClassProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
        {rule: """ query{ queryPhysicalAssetClassProperty (filter:{not:{has:acl}}){ iid }}"""},
        {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
    ]}
){
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ An identification of the specific property. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ Additional information about the property. """
    description: String @search(by: [fulltext, exact])
    """ Defines the type of the property. """
    propertyType: Isa95PropertyType! 
    """ The value, set of values, or range of the property. """
    value: String @search(by: [fulltext, exact]) 
    """ The unit of measure of the associated property value. """
    valueUnitOfMeasure: UnitOfMeasure

    ##### RELATIONSHIPS #####
    """ These physical asset class property values in part define the physical asset class. """
    physicalAssetClassVersion: PhysicalAssetClassVersion! @hasInverse(field: properties)
    """ The nested physical asset class property(s) makes up part of this physical asset class property as the whole. """
    children: [PhysicalAssetClassProperty] @hasInverse(field: parent)
    """ The physical asset class property that this nested physical asset class property makes up part of as the whole. """
    parent: PhysicalAssetClassProperty @hasInverse(field: children)
    """ If the parent physical asset supports a physical asset class, this physical asset class property(s) is applied to the physical asset property(s). """
    physicalAssetProperty: PhysicalAssetProperty @hasInverse(field: physicalAssetClassProperty)
    """ This testable object property is measured to the test specification containing the evaluated property. """
    correspondsTo: EvaluatedProperty @hasInverse(field: physicalAssetClassProperty)
    """ The property measurement records the measurement result for this testable object property. """
    recordsMeasurementOf: [PropertyMeasurement] @hasInverse(field: physicalAssetClassProperty)

    """ Physical asset requirement property(s) mapped to this physical asset class property. """
    physicalAssetRequirementProperties: [PhysicalAssetRequirementProperty] @hasInverse(field: physicalAssetClassProperty)
    """ Physical asset specification property(s) mapped to this physical asset class property. """
    physicalAssetSpecificationProperties: [PhysicalAssetSpecificationProperty] @hasInverse(field: physicalAssetClassProperty)
    """ Physical asset actual property(s) mapped to this physical asset class property. """
    physicalAssetActualProperties: [PhysicalAssetActualProperty] @hasInverse(field: physicalAssetClassProperty)
}


"""
A physical piece of equipment shall be presented as a physical asset.

A physical asset may be tested by the evaluation of the test specification criteria in the test specification
that references the evaluated property and may be recorded in an evaluated criterion result attribute
in the test result.

Physical assets may be made up of other physical assets.

Example: A packaging line can be made up of conveyor sections, motors and sensors.
"""
type PhysicalAsset @withSubscription @key(fields: "iid")
@auth(
    # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
    query: { or:[
        {rule: """ query($realm_access_roles:[String!]){ queryPhysicalAsset @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
        {rule: """ query{ queryPhysicalAsset (filter:{not:{has:acl}}){ iid }}"""},
        {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
    ]}
    # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
    add: { or:[
        {rule: """ query($realm_access_roles:[String!]){ queryPhysicalAsset @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
        {rule: """ query{ queryPhysicalAsset (filter:{not:{has:acl}}){ iid }}"""},
        {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
    ]}
    # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
    delete: { or:[
        {rule: """ query($realm_access_roles:[String!]){ queryPhysicalAsset @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
        {rule: """ query{ queryPhysicalAsset (filter:{not:{has:acl}}){ iid }}"""},
        {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
    ]}
){
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: physicalAsset)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### VERSIONING #####
    """ Link to all available versions for this entity. """
    versions: [PhysicalAssetVersion] @hasInverse(field: physicalAsset)
    """ The currently active version. To find a version that was active at a point in time, use versions with a filter. """
    activeVersion: PhysicalAssetVersion @hasInverse(field: isActiveVersionOf)
    """ The next version number, or the largest version number + 1. """
    nextVersion: String

    ##### ATTRIBUTES #####
    """ Defines a unique identification of a physical asset. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ Defines a unique identification of a physical asset. """
    label: String! @search(by: [fulltext, exact, regexp])

    ##### RELATIONSHIPS #####
    """ Aggregation hierarchy (Has A):
    - This object can include the properties of zero or many objects of the same type
    - This object's properties can be included in zero or many objects of the same type
    - This relationship intent is to create subordinate classes can be contained within various superordinate classes
    in the same way that a component may be made up of subcomponents

    Example:

    MixerMechanism properties: HeadShape, Type
    InsulationSleeve properties:  Density, Colour
    HeatingElement properties:  Power, Length
    Boiler isMadeUpOf  [MixerMechanism, Heating Element] (and extends this with property TargetTemperature)
    InsulatedBoiler isMadeUpOf  [MixerMechanism, Heating Element, InsulationSleeve] (and extends this with property TargetTemperature)
    """
    isMadeUpOf: [PhysicalAsset] @hasInverse(field: isPartOf)
    """ Aggregation hierarchy (Has A) """
    isPartOf: [PhysicalAsset] @hasInverse(field: isMadeUpOf)

    """ The equipment asset mapping records the uses of the physical asset that is associated with the 
    equipment if the physical asset associated with a manufacturing function. """
    equipmentAssetMapping: [EquipmentAssetMapping] @hasInverse(field: physicalAsset)
    """ This equipment as role in a process segment is implemented by the physical asset. """
    equipment: Equipment @hasInverse(field: physicalAsset)

    """ The physical asset specification(s) that map to this physical asset. """
    physicalAssetSpecifications: [PhysicalAssetSpecification] @hasInverse(field: physicalAsset)
    """ The physical asset requirements(s) that map to this physical asset. """
    physicalAssetRequirements: [PhysicalAssetRequirement] @hasInverse(field: physicalAsset)
    """ The physical asset actual(s) that map to this physical asset class. """
    physicalAssetActual: [PhysicalAssetActual] @hasInverse(field: physicalAsset)

    """ The ID of this testable object ID(s) evaluated by the test specification. """
    testedBy: [TestSpecification] @hasInverse(field: requiredByPhysicalAsset)
    """ The test specification(s) used to evaluate this testable object. """
    specifiesTests: [TestSpecification] @hasInverse(field: testsPhysicalAsset)
    """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
    testResults: [TestResult] @hasInverse(field: physicalAsset)

    """ Identifies any material lot(s) stored at this physical asset. """
    materialLots: [MaterialLot] @hasInverse(field: storageLocationPhysicalAsset)
    """ Identifies any material sublot(s) stored at this physical asset. """
    materialSubLots: [MaterialSubLot] @hasInverse(field: storageLocationPhysicalAsset)

    """ The events associated with this physical asset. """
    events: [Event] @hasInverse(field: physicalAsset)
    """ State Model Instances record the current state and history of state transitions """
    stateModelInstances: [StateModelInstance] @hasInverse(field: physicalAsset)
    
    ##### USER INTERFACE HELPERS #####
    """ The icon for the menu in the libre admin UI menu. """
    uiSortIndex: Int
}


"""
A physical piece of equipment shall be presented as a physical asset.

A physical asset may be tested by the evaluation of the test specification criteria in the test specification
that references the evaluated property and may be recorded in an evaluated criterion result attribute
in the test result.

Physical assets may be made up of other physical assets.

Example: A packaging line can be made up of conveyor sections, motors and sensors.
"""
type PhysicalAssetVersion @withSubscription @primaryKey(fields:["id","version"]) @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: physicalAssetVersion)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    ##### VERSIONING #####
    """ The specific version of the entity. Purposely free to allow use with a specific revision scheme. """
    version: String!  @search(by: [fulltext, exact])
    """ The current state of the version for this entity. """
    versionStatus: VersionState! @search
    """ The physical asset that this physical asset version relates to. """
    physicalAsset: PhysicalAsset! @hasInverse(field: versions)
    """ The physical asset that uses this physical asset version as it's active version. """
    isActiveVersionOf: PhysicalAsset @hasInverse(field: activeVersion)
    """ The time at which the version became active. """
    effectiveStart: DateTime @search
    """ the time at which the version stopped being active. """
    effectiveEnd: DateTime @search


    ##### ATTRIBUTES #####
    """ Defines a unique identification of a physical asset. """
    id: String! @search(by: [fulltext, exact, regexp])
    """ Contains additional information and descriptions of the physical asset. """
    description: String @search(by: [fulltext, exact])
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ Spatially defines the physical asset. """
    spatialDefinition: SpatialDefinition

    """ Contains a unique identification for financial tracking as required by laws or regulations. """
    fixedAssetID: String @search(by: [fulltext, exact])
    """ Contains a vendor's serial number. """
    vendorID: String @search(by: [fulltext, exact])
    """ Identifies the physical location of the physical asset. """
    physicalLocation: OperationalLocation
    """ Identifies the physical location of the physical asset. """
    physicalLocationDescription: String @search(by: [fulltext, exact])

    ##### RELATIONSHIPS #####
    """ This physical asset supports the physical asset class property(s) associated with the physical asset class. """
    physicalAssetClasses: [PhysicalAssetClass] @hasInverse(field: physicalAssetVersions)
    """ The physical asset properties values of this physical asset. """
    properties: [PhysicalAssetProperty] @hasInverse(field: physicalAssetVersion)
    """ The data source for properties of this physical asset. """
    dataSources:  [PhysicalAssetDataSource] @hasInverse(field: physicalAssetVersion)
    """ The physical asset actual(s) that map to this physical asset class. """
    physicalAssetActual: [PhysicalAssetActual] @hasInverse(field: physicalAssetVersion)
    """ State Model Definitions define the allowed states and transitions between states """
    stateModels: [StateModelDefinition] @hasInverse (field: physicalAssetVersion)
}


"""
Properties of physical assets shall be presented as physical asset properties. A physical asset shall 
have zero or more physical asset properties. These specify the current property values of the physical 
asset for the associated physical asset class property. Physical asset properties may include a unit of measure.

A physical asset property may be tested to the evaluated property in a test specification where the 
measured results may be recorded in a property measurement attribute in a test result. The measured 
results may also be evaluated to the test specification criteria in the test specification that references 
the evaluated property where they may be recorded in an evaluated criterion result attribute in the test result.

Physical asset property(s) may contain nested physical asset property(s).
"""
type PhysicalAssetProperty @withSubscription @key(fields: "iid")
@auth(
    # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
    query: { or:[
        {rule: """ query($realm_access_roles:[String!]){ queryPhysicalAssetProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
        {rule: """ query{ queryPhysicalAssetProperty (filter:{not:{has:acl}}){ iid }}"""},
        {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
    ]}
    # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
    add: { or:[
        {rule: """ query($realm_access_roles:[String!]){ queryPhysicalAssetProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
        {rule: """ query{ queryPhysicalAssetProperty (filter:{not:{has:acl}}){ iid }}"""},
        {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
    ]}
    # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
    delete: { or:[
        {rule: """ query($realm_access_roles:[String!]){ queryPhysicalAssetProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
        {rule: """ query{ queryPhysicalAssetProperty (filter:{not:{has:acl}}){ iid }}"""},
        {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
    ]}
){
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ An identification of the specific property. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ Additional information about the asset property. """
    description: String @search(by: [fulltext, exact]) 
    """ The value, set of values, or range of the property. """
    value: String @search(by: [fulltext, exact]) 
    """ The unit of measure of the associated property value. """
    valueUnitOfMeasure: UnitOfMeasure

    """ Target value. """
    valueSetPoint: String
    """ The upper limit that impacts the quality of the product. """
    valueUpperSpecLimit: Float
    """ The lower limit that impacts the quality of the product. """
    valueLowerSpecLimit: Float
    """ The upper limit that would trigger an alert. """
    valueUpperControlLimit: Float
    """ The lower limit that would trigger an alert. """
    valueLowerControlLimit: Float

    ##### RELATIONSHIPS #####
    """ These physical asset property values in part for the physical asset. """
    physicalAssetVersion: PhysicalAssetVersion! @hasInverse(field: properties)
    """ The nested physical asset property(s) makes up part of this physical asset property as the whole. """
    children: [PhysicalAssetProperty] @hasInverse(field: parent)
    """ The nested physical asset property(s) makes up part of this physical asset property as the whole. """
    parent: PhysicalAssetProperty @hasInverse(field: children)
    """ If the parent physical asset supports a physical asset class, the physical asset class property(s) is applied in this physical asset property(s). """
    physicalAssetClassProperty: PhysicalAssetClassProperty @hasInverse(field: physicalAssetProperty)
    """ This testable object property is measured to the test specification containing the evaluated property. """
    correspondsTo: EvaluatedProperty @hasInverse(field: physicalAssetProperty)
    """ The property measurement records the measurement result for this testable object property. """
    recordsMeasurementOf: [PropertyMeasurement] @hasInverse(field: physicalAssetProperty)
    """ Physical asset specification property(s) mapped to this physical asset property. """
    physicalAssetSpecificationProperties: [PhysicalAssetSpecificationProperty] @hasInverse(field: physicalAssetProperty)
    """ Physical asset requirement property(s) mapped to this physical asset property. """
    physicalAssetRequirementProperties: [PhysicalAssetRequirementProperty] @hasInverse(field: physicalAssetProperty)
    """ Physical asset actual property(s) mapped to this physical asset property. """
    physicalAssetActualProperties: [PhysicalAssetActualProperty] @hasInverse(field: physicalAssetProperty)
}


"""
The relationship between a physical asset and an equipment shall be presented as an equipment asset 
mapping. The equipment asset mapping records the time period when one equipment object and one physical 
asset object were associated.
"""
type EquipmentAssetMapping @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ An identification of the specific equipment asset mapping. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ Additional information about the mapping element. """
    description: String @search(by: [fulltext, exact]) 
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ The starting time of the association. """
    startTime: DateTime
    """ The ending time of the association. """
    endTime: DateTime

    ##### RELATIONSHIPS #####
    """ The equipment performing the manufacturing function. """
    equipment: Equipment! @hasInverse(field: equipmentAssetMapping)
    """ The physical asset that is associated with the equipment if the physical asset associated with a manufacturing function. """
    physicalAsset: PhysicalAsset! @hasInverse(field: equipmentAssetMapping)
}


type PhysicalAssetDataSource @withSubscription @key(fields: "iid"){
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    physicalAssetVersion: PhysicalAssetVersion! @hasInverse(field: dataSources)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ This JSONata transform resolves the data source topic id for the properties of the equipment"""
    topicTemplate: String

    ##### RELATIONSHIPS #####
    """ The external data provider details """
    dataSourceVersion: DataSourceVersion @hasInverse(field: physicalAssetDataSources)
}
# ################################################################################
# Material Information Model
# ################################################################################
#
# The material model shown in Figure 12 defines the actual materials,
# material definitions , and information about classes of material definitions.
# Material information includes the inventory of raw, finished, intermediate materials,
# and consumables.
# The information about planned or actual material is contained in the
# material lot and material sublot information.
# Material classes are defined to organize materials.

"""
A representation of groupings of material definitions for a definite purpose such as
manufacturing operations definition, scheduling, capability, and performance shall be
presented as a material class. A material definition shall belong to zero or more material classes.

A material class may be defined as a derived class specialization of zero or more base material
classes. A material class may be made up of zero or more material classes. A material class may
be defined as follows by containing an assembly of material classes and as part of an assembly
of material classes.
  a) A material class may define an assembly of zero or more material classes.
  b) A material class may be an assembly element of zero or more material classes.
  c) An assembly may be defined as a permanent or transient assembly of material classes.
  d) An assembly may be defined as physical or a logical assembly of material classes.

A material class may be tested by the evaluation of the test specification criteria in the test
specification that references the evaluated property and may be recorded in an evaluated criterion
result attribute in the test result.
"""
type MaterialClass @withSubscription @key(fields: "iid") @auth(
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  query: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMaterialClass @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
    {rule: """ query{ queryMaterialClass(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  add: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMaterialClass @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
    {rule: """ query{ queryMaterialClass(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  delete: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMaterialClass @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
    {rule: """ query{ queryMaterialClass(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
){
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ The list of OperationsEventRecordEntries that have been recorded """
  recordEntries: [InformationObject] @hasInverse(field: materialClass)

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### VERSIONING #####
  """ Link to all available versions for this entity. """
  versions: [MaterialClassVersion] @hasInverse(field: materialClass)
  """ The currently active version. To find a version that was active at a point in time, use versions with a filter. """
  activeVersion: MaterialClassVersion @hasInverse(field: isActiveVersionOf)
  """ The next version number, or the largest version number + 1. """
  nextVersion: String

  ##### ATTRIBUTES #####
  """ A unique identification of a specific material class, within the scope of the information exchanged. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ A user-friendly identifier for this entity """
  label: String! @search(by: [fulltext, exact, regexp])

  ##### RELATIONSHIPS #####

  """Association relationship (Is A):"""
  isIncludedIn: [MaterialClassVersion] @hasInverse(field: includesPropertiesOf)


  """ Aggregation hierarchy (Has A):
  - This object can include the properties of zero or many objects of the same type
  - this object's properties can be included in zero or many objects of the same type
  - This relationship intent is to create subordinate classes can be contained within various superordinate classes
  """
  isAssembledFrom: [MaterialClass] @hasInverse(field: isComponentOf)
  """ Aggregation hierarchy (Has A) """
  isComponentOf: MaterialClass @hasInverse(field: isAssembledFrom)


  """ The material definition objects support the material class property(s) associated with this material class. """
  materialDefinitionVersions: [MaterialDefinitionVersion] @hasInverse(field: materialClasses)

  """ The material specifications this material definition is associated with. """
  materialSpecifications: [MaterialSpecification] @hasInverse(field: materialClass)
  """ The set of material requirements that are linked to this material class. """
  materialRequirements: [MaterialRequirement] @hasInverse(field: materialClass)
  """ The material actuals this material class is associated with. """
  materialActual: [MaterialActual] @hasInverse(field: materialClass)

  """ The ID of this testable object ID(s) evaluated by the test specification. """
  testedBy: [TestSpecification]
  """ The test specification(s) used to evaluate this testable object. """
  specifiesTests: [TestSpecification]
  """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
  testResults: [TestResult]
}


"""
A representation of groupings of material definitions for a definite purpose such as
manufacturing operations definition, scheduling, capability, and performance shall be
presented as a material class. A material definition shall belong to zero or more material classes.

A material class may be defined as a derived class specialization of zero or more base material
classes. A material class may be made up of zero or more material classes. A material class may
be defined as follows by containing an assembly of material classes and as part of an assembly
of material classes.
a) A material class may define an assembly of zero or more material classes.
b) A material class may be an assembly element of zero or more material classes.
c) An assembly may be defined as a permanent or transient assembly of material classes.
d) An assembly may be defined as physical or a logical assembly of material classes.

A material class may be tested by the evaluation of the test specification criteria in the test
specification that references the evaluated property and may be recorded in an evaluated criterion
result attribute in the test result.
"""
type MaterialClassVersion @withSubscription @primaryKey(fields:["id","version"])  @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ The list of OperationsEventRecordEntries that have been recorded """
  recordEntries: [InformationObject] @hasInverse(field: materialClassVersion)

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  ##### VERSIONING #####
  """ The specific version of the entity. Purposely free to allow use with a specific revision scheme. """
  version: String!  @search(by: [fulltext, exact])
  """ The current state of the version for this entity. """
  versionStatus: VersionState! @search
  """ The material class that this material class version relates to. """
  materialClass: MaterialClass! @hasInverse(field: versions)
  """ The material class that uses this material class version as it's active version. """
  isActiveVersionOf: MaterialClass @hasInverse(field: activeVersion)
  """ The time at which the version became active. """
  effectiveStart: DateTime @search
  """ the time at which the version stopped being active. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ A unique identification of a specific material class, within the scope of the information exchanged. """
  id: String! @search(by: [fulltext, exact, regexp])
  """ Additional information about the material class. """
  description: String @search(by: [fulltext, exact])
  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope @hasInverse(field: materialClassVersions)

  """ Defines the type of the assembly. """
  assemblyType: AssemblyType @search(by: [exact])
  """ Defines the type of the relationships. """
  assemblyRelationship: AssemblyRelationship @search(by: [exact])

  ##### RELATIONSHIPS #####
  """ The material class property(s) of this material class. """
  properties: [MaterialClassProperty] @hasInverse(field: materialClassVersion)
  """ Association relationship (Is A):
  - This object can include the properties of zero or many objects of the same type
  - This object's properties can be included in zero or many objects of the same type
  - This relationship intent is to create subordinate classes which are a specialisation of the superordinate class
  """
  includesPropertiesOf: [MaterialClass] @hasInverse(field: isIncludedIn)
  """ state models allow logic to be defined based on the material state """
  stateModels: [StateModelDefinition] @hasInverse(field: materialClassVersion)
}


"""
Properties of a material class shall be presented as material class properties. A material 
class may define zero or more material class properties.

A material class property may be tested to the evaluated property in a test specification where 
the measured results may be recorded in a property measurement attribute in a test result. The 
measured results may also be evaluated to the test specification criteria in the test specification 
that references the evaluated property where they may be recorded in an evaluated criterion result 
attribute in the test result. 

Material class property(s) may contain nested material class property(s).

The material class properties often list the nominal or standard values for the material. A material 
property value does not have to match the value of the corresponding material class property.
"""
type MaterialClassProperty @withSubscription @key(fields: "iid") @auth(
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  query: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMaterialClassProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
    {rule: """ query{ queryMaterialClassProperty(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  add: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMaterialClassProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
    {rule: """ query{ queryMaterialClassProperty(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  delete: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMaterialClassProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
    {rule: """ query{ queryMaterialClassProperty(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
){
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ An identification of a specific material class property. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ The label is last node in the fully qualified name. """
  label: String! @search(by: [fulltext, exact, regexp])
  """ Additional information about the material class property. """
  description: String @search(by: [fulltext, exact]) 
  """ Defines the type of the property. """
  propertyType: Isa95PropertyType!
  """ The value, set of values, or range of the property. """
  value: String @search(by: [fulltext, exact])
  """ The unit of measure of the associated property value. """
  valueUnitOfMeasure: UnitOfMeasure

  ##### RELATIONSHIPS #####
  """ The material class defined in part by this material class property. """
  materialClassVersion: MaterialClassVersion! @hasInverse(field: properties)
  """ The nested material class property(s) makes up part of this material class property as the whole. """
  children: [MaterialClassProperty] @hasInverse(field: parent)
  """ The material class property that this nested material class property makes up part of as the whole. """
  parent: MaterialClassProperty @hasInverse(field: children)
  """ If the parent material definition supports a material class, this material class property(s) is applied in the 
  material definition property(s). The material definition property maps to this corresponding material class property. """
  materialDefinitionProperty: MaterialDefinitionProperty @hasInverse(field: materialClassProperty)
  """ This testable object property is measured to the test specification containing the evaluated property. """
  correspondsTo: EvaluatedProperty @hasInverse(field: materialClassProperty)
  """ The property measurement records the measurement result for this testable object property. """
  recordsMeasurementOf: [PropertyMeasurement] @hasInverse(field: materialClassProperty)

  """ Material specification property(s) mapped to this material class property. """
  materialSpecificationProperties: [MaterialSpecificationProperty] @hasInverse(field: materialClassProperty)
  """ Material requirement property(s) mapped to this material class property. """
  materialRequirementProperties: [MaterialRequirementProperty] @hasInverse(field: materialClassProperty)
  """ Material actual property(s) mapped to this material class property. """
  materialActualProperties: [MaterialActualProperty] @hasInverse(field: materialClassProperty)
}


"""
A representation of a material with similar characteristics for the purpose of manufacturing operations 
definition, scheduling, capability and performance shall be presented as a material definition.

A material definition may be tested by the evaluation of the test specification criteria in the test 
specification that references the evaluated property and may be recorded in an evaluated criterion 
result attribute in the test result.

Any material lot shall be associated with one material definition.
"""
type MaterialDefinition @withSubscription @key(fields: "iid") @auth(
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  query: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMaterialDefinition @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
    {rule: """ query{ queryMaterialDefinition(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  add: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMaterialDefinition @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
    {rule: """ query{ queryMaterialDefinition(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  delete: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMaterialDefinition @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
    {rule: """ query{ queryMaterialDefinition(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
){
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ The list of OperationsEventRecordEntries that have been recorded """
  recordEntries: [InformationObject] @hasInverse(field: materialDefinition)

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### VERSIONING #####
  """ Link to all available versions for this entity. """
  versions: [MaterialDefinitionVersion] @hasInverse(field: materialDefinition)
  """ The currently active version. To find a version that was active at a point in time, use versions with a filter. """
  activeVersion: MaterialDefinitionVersion @hasInverse(field: isActiveVersionOf)
  """ The next version number, or the largest version number + 1. """
  nextVersion: String

  ##### ATTRIBUTES #####
  """ A unique identification of a specific material definition, within the scope of the information exchanged. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ A user-friendly identifier for this entity """
  label: String! @search(by: [fulltext, exact, regexp])

  ##### RELATIONSHIPS #####
  """ The material specifications this material definition is associated with. """
  materialSpecifications: [MaterialSpecification] @hasInverse(field: material)
  """ The material requirements this material definition is associated with. """
  materialRequirements: [MaterialRequirement] @hasInverse(field: material)
  """ The material actuals this material definition is associated with. """
  materialActual: [MaterialActual] @hasInverse(field: materialDefinition)

  """ The ID of this testable object ID(s) evaluated by the test specification. """
  testedBy: [TestSpecification]
  """ The test specification(s) used to evaluate this testable object. """
  specifiesTests: [TestSpecification]
  """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
  testResults: [TestResult]
  """ State Model Instances record the current state and history of state transitions """
  stateModelInstances: [StateModelInstance] @hasInverse(field: materialDefinition)

  """ Material(s) this material definition can be used as an alternate for. """
  isAlternateFor: [MaterialAlternate] @hasInverse(field: alternateMaterial)
  """ The material lot occurrences that are constructed based on this material definition. """
  materialLots: [MaterialLot] @hasInverse(field: materialDefinition)
}


"""
A representation of a material with similar characteristics for the purpose of manufacturing operations
definition, scheduling, capability and performance shall be presented as a material definition.

A material definition may be tested by the evaluation of the test specification criteria in the test
specification that references the evaluated property and may be recorded in an evaluated criterion
result attribute in the test result.

Any material lot shall be associated with one material definition.
"""
type MaterialDefinitionVersion @withSubscription @primaryKey(fields:["id","version"]) @key(fields: "iid"){
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ The list of OperationsEventRecordEntries that have been recorded """
  recordEntries: [InformationObject] @hasInverse(field: materialDefinitionVersion)

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ The time at which the version became active. """
  effectiveStart: DateTime @search
  """ the time at which the version stopped being active. """
  effectiveEnd: DateTime @search

  ##### VERSIONING #####
  """ The specific version of the entity. Purposely free to allow use with a specific revision scheme. """
  version: String! @search(by: [fulltext, exact])
  """ The current state of the version for this entity. """
  versionStatus: VersionState! @search
  """ The material definition that this material definition version relates to. """
  materialDefinition: MaterialDefinition! @hasInverse(field: versions)
  """ The material definition that uses this material definition version as it's active version. """
  isActiveVersionOf: MaterialDefinition @hasInverse(field: activeVersion)

  ##### ATTRIBUTES #####
  """ A unique identification of a specific material definition, within the scope of the information exchanged. """
  id: String! @search(by: [fulltext, exact, regexp])
  """ Additional information about the material definition. """
  description: String @search(by: [fulltext, exact])
  """ Identifies where the exchanged information fits within the role-based equipment hierarchy.  """
  hierarchyScope: HierarchyScope @hasInverse(field: materialDefinitionVersions)
  """ Spatially defines the material definition. """
  spatialDefinition: SpatialDefinition

  """ Defines the type of the assembly. """
  assemblyType: AssemblyType @search(by: [exact])
  """ Defines the type of the relationships. """
  assemblyRelationship: AssemblyRelationship @search(by: [exact])
  """ Default unit of measure for this material definition. """
  baseUnitOfMeasure: UnitOfMeasure

  ##### RELATIONSHIPS #####
  """ This material definition objects support the material class property(s) associated with the material class. """
  materialClasses: [MaterialClass] @hasInverse(field: materialDefinitionVersions)
  """ The material definition property(s) of this material definition. """
  properties: [MaterialDefinitionProperty] @hasInverse(field: materialDefinitionVersion)
  """ The material actuals this material definition is associated with. """
  materialActual: [MaterialActual] @hasInverse(field: materialDefinitionVersion)

  """ Material(s) that can be used as an alternate to this material definition. """
  alternates: [MaterialAlternate] @hasInverse(field: materialDefinitionVersion)
  """ This material definition is part of the related object as the whole. """
  isAssembledFrom: [MaterialDefinitionVersion] @hasInverse(field: isComponentOf)
  """ The material definition is part of the related object(s) as the whole. """
  isComponentOf: MaterialDefinitionVersion @hasInverse(field: isAssembledFrom)
  """ List of conversion factors between other units of measure and the base unit of measure. """
  uomConversions: [UnitOfMeasureConversion] @hasInverse(field: materialDefinitionVersion)
  """ The material lot occurrences that are constructed based on this material definition version. """
  materialLots: [MaterialLot] @hasInverse(field: materialDefinitionVersion)
  """ state models allow logic to be defined for material states """
  stateModels: [StateModelDefinition] @hasInverse(field:materialDefinitionVersion)
}


"""
Properties of a material definition shall be presented as material definition properties. A material 
definition may define zero or more material definition properties.

A material definition property may be tested to the evaluated property in a test specification where 
the measured results may be recorded in a property measurement attribute in a test result. The 
measured results may also be evaluated to the test specification criteria in the test specification 
that references the evaluated property where they may be recorded in an evaluated criterion result 
attribute in the test result.

Material definition property(s) may contain nested material definition property(s).

Properties may present the nominal or standard values for the material.
"""
type MaterialDefinitionProperty @withSubscription @key(fields: "iid") @auth(
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  query: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMaterialDefinitionProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
    {rule: """ query{ queryMaterialDefinitionProperty(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  add: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMaterialDefinitionProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
    {rule: """ query{ queryMaterialDefinitionProperty(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  delete: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMaterialDefinitionProperty @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
    {rule: """ query{ queryMaterialDefinitionProperty(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
) {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ An identification of the specific material definition property. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ The label is last node in the fully qualified name. """
  label: String! @search(by: [fulltext, exact, regexp])
  """ Additional information about the material definition property. """
  description: String @search(by: [fulltext, exact])
  """ The value, set of values, or range of the property. """
  value: String @search(by: [fulltext, exact])
  """ The unit of measure of the associated property value. """
  valueUnitOfMeasure: UnitOfMeasure

  """ Target value. """
  valueSetPoint: String
  """ The upper limit that impacts the quality of the product. """
  valueUpperSpecLimit: Float
  """ The lower limit that impacts the quality of the product. """
  valueLowerSpecLimit: Float
  """ The upper limit that would trigger an alert. """
  valueUpperControlLimit: Float
  """ The lower limit that would trigger an alert. """
  valueLowerControlLimit: Float

  ##### RELATIONSHIPS #####
  """ The material definition defined in part by this material definition property. """
  materialDefinitionVersion: MaterialDefinitionVersion! @hasInverse(field: properties)
  """ The nested material definition property(s) makes up part of this material definition property as the whole. """
  children: [MaterialDefinitionProperty] @hasInverse(field: parent)
  """ The material definition property that this nested material definition property makes up part of as the whole. """
  parent: MaterialDefinitionProperty @hasInverse(field: children)
  """ If the parent material definition supports a material class, the material class property(s) is applied in the
  material definition property(s). This material definition property maps to the corresponding material class property. """
  materialClassProperty: MaterialClassProperty @hasInverse(field: materialDefinitionProperty)
  """ If the parent material lot supports a material definition, this material definition property(s) is applied in the material lot property(s). The material lot property maps to this corresponding material definition property. """
  materialLotProperty: MaterialLotProperty @hasInverse(field: materialDefinitionProperty)
  """ This testable object property is measured to the test specification containing the evaluated property. """
  correspondsTo: EvaluatedProperty @hasInverse(field: materialDefinitionProperty)
  """ The property measurement records the measurement result for this testable object property. """
  recordsMeasurementOf: [PropertyMeasurement] @hasInverse(field: materialDefinitionProperty)
  """ Material specification property(s) mapped to this material definition property. """
  materialSpecificationProperties: [MaterialSpecificationProperty] @hasInverse(field: materialDefinitionProperty)
  """ Material requirement property(s) mapped to this material definition property. """
  materialRequirementProperties: [MaterialRequirementProperty] @hasInverse(field: materialDefinitionProperty)
  """ Material actual property(s) mapped to this material definition property. """
  materialActualProperties: [MaterialActualProperty] @hasInverse(field: materialDefinitionProperty)
}


"""
A uniquely identified specific amount of material, either countable or weighable shall be presented 
as a material lot. A material lot describes the planned or actual total quantity or amount of 
material available, its current state, and its specific property values.

A material lot may be tested by the evaluation of a test specification.

A material lot shall include
  a) the unique identification of the lot;
  b) the amount of material; 
  c) the unit of measure of the material; 
  d) the storage location for the material; and
  e) any status of the lot.

A material lot may be made up of material sublots. Material lots and material sublots may be used 
for traceability when they contain unique identifications.
"""
type MaterialLot @withSubscription @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ The list of OperationsEventRecordEntries that have been recorded """
  recordEntries: [InformationObject] @hasInverse(field: materialLot)

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search


  ##### ATTRIBUTES #####
  """ A unique identification of a specific material lot, within the scope of the information exchanged. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ Additional information about the material lot. """
  description: String @search(by: [fulltext, exact, regexp])
  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope @hasInverse(field: materialLots)
  """ Spatially defines the material lot. """
  spatialDefinition: SpatialDefinition
  """ Identifies the operational location storage location of the material lot. """
  storageLocationOperationalLocation: OperationalLocation
  """ Identifies the equipment storage location of the material lot. """
  storageLocationEquipment: Equipment @hasInverse(field: materialLots)
  """ Identifies the physical asset storage location of the material lot. """
  storageLocationPhysicalAsset: PhysicalAsset @hasInverse(field: materialLots)
  """ Identifies the storage location description of the material lot. """
  storageLocationDescription: String @search(by: [fulltext, exact])
  """ Defines the type of the assembly. """
  assemblyType: AssemblyType @search(by: [exact])
  """ Defines the type of the relationships. """
  assemblyRelationship: AssemblyRelationship @search(by: [exact])
  """ Status of the material lot in manufacturing operations. Values defined by implementation. """
  status: String @search(by: [fulltext, exact])
  """ Planning and logistics disposition of a material lot or assembly of material lots. """
  disposition: Disposition @search(by: [exact])
  """ The quantity of the material lot. """
  quantity: Float
  """ The unit of measure of the associated quantity. """
  quantityUnitOfMeasure: UnitOfMeasure

  ##### RELATIONSHIPS #####
  """ This child material lot is part of the material lot as the whole. """
  isAssembledFromMaterialLot: [MaterialLot] @hasInverse(field: isComponentOfMaterialLot)
  """ The material lot is part of the related object(s) as the whole. """
  isComponentOfMaterialLot: MaterialLot @hasInverse(field: isAssembledFromMaterialLot)
  """ The material lot property(s) of this material lot. """
  properties: [MaterialLotProperty] @hasInverse(field: materialLot)
  """ The material definition that defines this material lot. """
  materialDefinition: MaterialDefinition! @hasInverse(field: materialLots)
  """ The material definition that defines this material lot. """
  materialDefinitionVersion: MaterialDefinitionVersion! @hasInverse(field: materialLots)
  """ The material lot are constructed based on the material sublot. """
  childSubLot: [MaterialSubLot] @hasInverse(field: parentMaterialLot)
  """ The material sublot is part of the material lot as the whole. """
  isAssembledFromMaterialSubLot: [MaterialSubLot] @hasInverse(field: isComponentOfMaterialLot)
  """ The material lot makes up part of this material sublot as the whole. """
  isComponentOfMaterialSubLot: MaterialSubLot @hasInverse(field: isAssembledFromMaterialLot)

  """ The material specifications this material lot is associated with. """
  materialSpecifications: [MaterialSpecification] @hasInverse(field: materialLot)
  """ The material requirements this material lot is associated with. """
  materialRequirements: [MaterialRequirement] @hasInverse(field: materialLots)
  """ The material actuals this material lot is associated with. """
  materialActual: [MaterialActual] @hasInverse(field: materialLot)

  """ The events associated with this material lot. """
  events: [Event] @hasInverse(field: materialLot)

  """ The ID of this testable object ID(s) evaluated by the test specification. """
  testedBy: [TestSpecification]
  """ The test specification(s) used to evaluate this testable object. """
  specifiesTests: [TestSpecification]
  """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
  testResults: [TestResult]
  """ State Model Instances record the current state and history of state transitions """
  stateModelInstances: [StateModelInstance] @hasInverse(field: materialLot)
}


"""
Properties of a material lot shall be presented as material lot properties. Each material can have 
unique values for zero or more material lot properties, such as a specific pH value for the specific 
material lot, or a specific density for the material lot.

A material lot property may be tested to the evaluated property in a test specification where the 
measured results may be recorded in a property measurement attribute in a test result. The measured 
results may be evaluated to the test specification criteria in the test specification that references 
the evaluated property where they may be recorded in an evaluated criterion result attribute in the test result.

Material lot property(s) may contain nested material lot property(s).

A material lot property is associated with either a material lot or a material sublot. When associated 
with a material lot it specifies a property value for all material sublots, when associated with a 
material sublot it specifies a property value for a single material sublot.
"""
type MaterialLotProperty @withSubscription @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ An identification of the specific material lot property. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ The label is last node in the fully qualified name. """
  label: String! @search(by: [fulltext, exact, regexp])
  """ Additional information about the material lot property. """
  description: String @search(by: [fulltext, exact])
  """ The value, set of values, or range of the property. """
  value: String @search(by: [fulltext, exact])
  """ The unit of measure of the associated property value. """
  valueUnitOfMeasure: UnitOfMeasure

  ##### RELATIONSHIPS #####
  """ The material lot defined in part by this material lot property. """
  materialLot: MaterialLot @hasInverse(field: properties)
  """ The material sublot defined in part by this material lot property. """
  materialSubLot: MaterialSubLot @hasInverse(field: properties)
  """ The nested material lot property(s) makes up part of this material lot property as the whole. """
  children: [MaterialLotProperty] @hasInverse(field: parent)
  """ The material lot property that this nested material lot property makes up part of as the whole. """
  parent: MaterialLotProperty @hasInverse(field: children)
  """ If the parent material lot supports a material definition, the material definition property(s) is applied in t
  he material lot property(s). This material lot property maps to the corresponding material definition property. """
  materialDefinitionProperty: MaterialDefinitionProperty @hasInverse(field: materialLotProperty)
  """ This testable object property is measured to the test specification containing the evaluated property. """
  correspondsTo: EvaluatedProperty @hasInverse(field: materialLotProperty)
  """ The property measurement records the measurement result for this testable object property. """
  recordsMeasurementOf: [PropertyMeasurement] @hasInverse(field: materialLotProperty)

  """ Material specification property(s) mapped to this material lot property. """
  materialSpecificationProperties: [MaterialSpecificationProperty] @hasInverse(field: materialLotProperty)
  """ Material requirement property(s) mapped to this material lot property. """
  materialRequirementProperties: [MaterialRequirementProperty] @hasInverse(field: materialLotProperty)
  """ Material actual property(s) mapped to this material lot property. """
  materialActualProperties: [MaterialActualProperty] @hasInverse(field: materialLotProperty)
}


"""
Each separately identifiable quantity of the same material lot shall be presented as a material sublot. 
A material lot may be stored in separately identifiable quantities. All material sublots are part of 
the same material lot, so they have the material lot's property values. A material sublot may be just 
a single item.

Material sublots may have sublot specific properties. 

A material sublot property may be tested to the evaluated property in a test specification where the 
measured results may be recorded in a property measurement attribute in a test result. The measured 
results may be evaluated to the test specification criteria in the test specification that references 
the evaluated property where they may be recorded in an evaluated criterion result attribute in the 
test result.

Material sublot property(s) may contain nested material sublot property(s).

Each material sublot shall contain the location of the material sublot and the quantity or amount of 
material available in the material sublot.

Material sublots may contain other material sublots.

A material sublot shall include
    a) a unique identification of the material sublot, 
    b) the storage location of the material sublot,
    c) the unit of measure of the material, and
    d) any status of the material sublot.
"""
type MaterialSubLot @withSubscription @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ The list of OperationsEventRecordEntries that have been recorded """
  recordEntries: [InformationObject] @hasInverse(field: materialSubLot)

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search


  ##### ATTRIBUTES #####
  """ A unique identification of a specific material sublot, within the scope of the information exchanged. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ Additional information about the material sublot property. """
  description: String @search(by: [fulltext, exact, regexp])
  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope @hasInverse(field: materialSubLots)
  """ Spatially defines the material sublot. """
  spatialDefinition: SpatialDefinition
  """ Identifies the operational location storage location of the material sublot. """
  storageLocationOperationalLocation: OperationalLocation
  """ Identifies the equipment storage location of the material sublot. """
  storageLocationEquipment: Equipment @hasInverse(field: materialSubLots)
  """ Identifies the physical asset storage location of the material sublot. """
  storageLocationPhysicalAsset: PhysicalAsset @hasInverse(field: materialSubLots)
  """ Identifies the storage location description of the material sublot. """
  storageLocationDescription: String @search(by: [fulltext, exact])
  """ Defines the type of the assembly. """
  assemblyType: AssemblyType @search(by: [exact])
  """ Defines the type of the relationships. """
  assemblyRelationship: AssemblyRelationship @search(by: [exact])
  """ Status of the material sublot in manufacturing operations. Values defined by implementation. """
  status: String @search(by: [fulltext, exact])
  """ Planning and logistics disposition of a material sublot or assembly of material lots. """
  disposition: Disposition @search(by: [exact])
  """ The quantity of the material sublot. """
  quantity: Float
  """ The unit of measure of the associated quantity. """
  quantityUnitOfMeasure: UnitOfMeasure

  ##### RELATIONSHIPS #####
  """ This material sublot is part of the related object as the whole. """
  children: [MaterialSubLot] @hasInverse(field: parent)
  """ The material sublot is part of the related object(s) as the whole. """
  parent: MaterialSubLot @hasInverse(field: children)
  """ The material lot property(s) of this material sublot. """
  properties: [MaterialLotProperty] @hasInverse(field: materialSubLot)
  """ The material sublot is constructed based on this material sublot. """
  isAssembledFromMaterialSubLot: [MaterialSubLot] @hasInverse(field: isComponentOfMaterialSubLot)
  """ This material sublot is constructed based on the material sublot. """ 
  isComponentOfMaterialSubLot: MaterialSubLot @hasInverse(field: isAssembledFromMaterialSubLot)
  """ This material lot is part of the material sublot as the whole. """
  isComponentOfMaterialLot: MaterialLot @hasInverse(field: isAssembledFromMaterialSubLot)
  """ The material lot(s) makes up part of this material sublot as the whole. """
  isAssembledFromMaterialLot: [MaterialLot] @hasInverse(field: isComponentOfMaterialSubLot)
  """ The material lot that is being constructed based on this material sublot. """
  parentMaterialLot: MaterialLot @hasInverse(field: childSubLot)

  """ The material specifications this material sublot is associated with. """
  materialSpecifications: [MaterialSpecification] @hasInverse(field: materialSubLot)
  """ The material requirements this material sublot is associated with for. """
  materialRequirements: [MaterialRequirement] @hasInverse(field: materialSubLots)
  """ The material actuals this material sublot is associated with. """
  materialActual: [MaterialActual] @hasInverse(field: materialSubLot)

  """ The events associated with this material sub lot. """
  events: [Event] @hasInverse(field: materialSubLot)
  """ State Model Instances record the current state and history of state transitions """
  stateModelInstances: [StateModelInstance] @hasInverse(field: materialSubLot)


  """ The ID of this testable object ID(s) evaluated by the test specification. """
  testedBy: [TestSpecification]
  """ The test specification(s) used to evaluate this testable object. """
  specifiesTests: [TestSpecification]
  """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
  testResults: [TestResult]
}


""" Libre specific extension to ISA95 schema. """
type MaterialAlternate @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ Moment after which this Material alternative will be available as an alternative """
  effectiveDateTime: DateTime!
  """ Priority order is used to prioritise which Material Alternative is used (if more than one is available)"""
  priorityOrder: Int!

  ##### RELATIONSHIPS #####
  """ The material identified as having an alternate. """
  materialDefinitionVersion: MaterialDefinitionVersion! @hasInverse(field: alternates)
  """ The material that can be used as an alternate. """
  alternateMaterial: MaterialDefinition! @hasInverse(field: isAlternateFor)
}

""" The ISA 95 standard defines attributes for value, quantity, and duration where each has corresponding unit of measure attribute.  """
type UnitOfMeasure @withSubscription @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ The list of OperationsEventRecordEntries that have been recorded """
  recordEntries: [InformationObject] @hasInverse(field: unitOfMeasure)

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ The actual unit associated with the values measured. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ Enumeration: The data type of the stored values associated with this Unit of Measure: BOOL; INT; INT32; FLOAT64; FLOAT; STRING """
  dataType: DataType
}

""" Unit Of Measure Conversion Type holds data required to convert values between two units of measure fpr a given material.  """
type UnitOfMeasureConversion @withSubscription @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ The unit of measure being converted from. """
  fromUnitOfMeasure: UnitOfMeasure!
  """ The unit of measure to convert to. """
  toUnitOfMeasure: UnitOfMeasure!
  """ Numberator and Denominator are used to convert the UoM value:  toUnitOfMeasure Value = fromUnitOfMeasure Value * (numerator/denominator)"""
  numerator: Float!
  """ Numberator and Denominator are used to convert the UoM value:  toUnitOfMeasure Value = fromUnitOfMeasure Value * (numerator/denominator)"""
  denominator: Float!

  ##### RELATIONSHIPS #####
  """ Material definition version to which this unit of measure conversion applies"""
  materialDefinitionVersion: MaterialDefinitionVersion! @hasInverse(field: uomConversions)
}


""" 
Defines the expected use of the material class, material definition, material lot, or material 
sublot in the context of the process segment. 
"""
enum MaterialUse {
  Initial
  Produced
  ByProduct
  CoProduct
  Consumable
  Consumed
  Transferred
  Scrap
  Rework
  Received
  Packed
  Shipped
  Adjustment
}

""" 
Planning and logistics disposition of a material lot or assembly of material lots, material sublots, 
or assmembly of material lots or sublots. 
"""
enum Disposition {
  """ A material lot or sublot that does not yet physically exist, is assigned to an operations request 
  (segment requirement) or work request (Part 4 object) or job order (Part 4 object). """
  Planned
  """ The material lot or sublot is in the process of being worked on. """
  InProcess
  """ A material lot or sublot is not permitted for normal use due to a restriction condition. """
  Restricted
  """ Material lot or sublot is permitted for normal use without restriction. """
  Unrestricted
  """ Material lot or sublot has been reconciled as completely consumed, sold or disposed of. """
  Closed
}


""" Defines the type of the assembly. """
enum AssemblyType {
  """ The components of the assembly are physically connected or in the same area. """
  Physical
  """ The components of the assembly are not necessarily physically connected or in the same area. """
  Logical
}


""" Defines the type of the relationships. """
enum AssemblyRelationship {
  """ An assembly that is not intended to be split during the production process. """
  Permanent
  """ A temporary assembly using during production, such as a pallet of different materials or a batch kit. """
  Transient
}
"""
A process segment lists the classes of personnel, equipment, physical assets, and material needed, 
and/or it may present specific resources, such as specific equipment needed for the process segment. 
A process segment may list the quantity of the resource needed. These values are stored in process 
segment versions.

Process segments may contain specifications of specific resources required by the process segment. 
Process segments may contain parameters that can be listed in specific operations requests.

A process segment may be a exclusive specialization of another process segment. A process segment 
shall be defined as a 'pattern' or an 'instance'. A pattern process segment defines a 'template', 
upon which other pattern or instance process segments may be based. In the specialization association 
relationship, 'defined by', on the process segment object, a process segment instance or child pattern 
may be defined by a parent pattern. Unlike instance process segments, pattern process segments shall 
not be directly scheduled or tracked. Therefore, segment requirements, segment responses and process 
segment capabilities shall not reference pattern process segments.

Where a process segment references a work master, the definition type (pattern or instance) of the 
referenced work master shall have the same value as that of the process segment.

The parameter, personnel, equipment, physical asset and material specifications of a process segment 
may map to those of any pattern process segment upon which the process segment is based.
"""
type ProcessSegment @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: processSegment)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### VERSIONING #####
    """ Link to all available versions for this entity. """
    versions: [ProcessSegmentVersion] @hasInverse(field: processSegment)
    """ The currently active version. To find a version that was active at a point in time, use versions with a filter. """
    activeVersion: ProcessSegmentVersion @hasInverse(field: isActiveVersionOf)
    """ The next version number, or the largest version number + 1. """
    nextVersion: String

    ##### ATTRIBUTES #####
    """ A unique identification of a process segment, within the scope of the information exchanged. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ A user-friendly identifier for this entity """
    label: String! @search(by: [fulltext, exact, regexp])

    ##### RELATIONSHIPS #####
    """ This parent process segment is whole of the child process segment(s) as the part. """
    isMadeUpOf: [ProcessSegment] @hasInverse(field: isPartOf)
    """ This child process segment makes up part of the parent process segment of the whole. """
    isPartOf: ProcessSegment @hasInverse(field: isMadeUpOf)
    """ This process segment is applied in zero to many work master(s). """
    workMasters: [WorkMaster] @hasInverse(field: processSegment)
    """ This process segment node(s) to the process segment dependency(s). """
    inflows: [ProcessSegmentDependency] @hasInverse(field: to)
    """ The process segment dependency(s) from this process segment node. """
    outflows: [ProcessSegmentDependency] @hasInverse(field: from)
    """ The operations segment(s) applying this process segment(s) in the segment requirement for an operations request. """
    operationsSegments: [OperationsSegment] @hasInverse(field: processSegment)
    """ The segment requirement(s) applying this process segment in the operations segment for an operations request. """
    segmentRequirements: [SegmentRequirement] @hasInverse(field: processSegment)

    """ The segment response(s) corresponding to this process segment. """
    segmentResponses: [SegmentResponse] @hasInverse(field: processSegment)
}


"""
A specific version of a process segment that contains certain values.

A process segment version lists the classes of personnel, equipment, physical assets, and material 
needed, and/or it may present specific resources, such as specific equipment needed for the process 
segment. A process segment version may list the quantity of the resource needed.

The parameter, personnel, equipment, physical asset and material specifications of a process segment 
version may map to those of any pattern process segment upon which the process segment is based.
"""
type ProcessSegmentVersion @withSubscription @primaryKey(fields: ["id","version"]) @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: processSegmentVersion)
    """ The process segment that this process segment version relates to. """
    processSegment: ProcessSegment! @hasInverse(field: versions)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ The time at which the version became active. """
    effectiveStart: DateTime @search
    """ the time at which the version stopped being active. """
    effectiveEnd: DateTime @search

    ##### VERSIONING #####
    """ The specific version of the entity. Purposely free to allow use with a specific revision scheme. """
    version: String! @search(by: [fulltext, exact])
    """ The current state of the version for this entity. """
    versionStatus: VersionState! @search
    """ The process segment that uses this process segment version as it's active version. """
    isActiveVersionOf: ProcessSegment @hasInverse(field: activeVersion)

    ##### ATTRIBUTES #####
    """ A unique identification of a process segment version, within the scope of the information exchanged. """
    id: String! @search(by: [fulltext, exact, regexp])
    """ Description of the process segment"""
    description: String @search(by: [fulltext, exact, regexp])
    """ Describes the category of the activity. """
    operationsType: WorkType! @search
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ Defines the type of the process segment. """
    definitionType: DefinitionType
    """ Duration of process segment. """
    duration: Float
    """ The units of measure of the duration. """
    durationUoM: UnitOfMeasure

    ##### RELATIONSHIPS #####
    """ The process parameter specifications related to this process segment version. """
    processSegmentParameters: [ProcessSegmentParameter] @hasInverse(field: processSegmentVersion)
    """ The personnel specification(s) defining part of this process segment version. """
    personnelSpecifications: [PersonnelSpecification] @hasInverse(field: processSegmentVersion)
    """ The equipment specification(s) defining part of this process segment version. """
    equipmentSpecifications: [EquipmentSpecification] @hasInverse(field: processSegmentVersion)
    """ The physical asset specification(s) defining part of this process segment version. """
    physicalAssetSpecifications: [PhysicalAssetSpecification] @hasInverse(field: processSegmentVersion)
    """ The material specification(s) defining part of this process segment. """
    materialSpecifications: [MaterialSpecification] @hasInverse(field: processSegmentVersion)
}


"""
Process dependencies that are independent of any particular product or operations task shall be 
presented as segment dependencies.
"""
type ProcessSegmentDependency @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ The identification of the unique instance of the process segment dependency. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ Contains additional information and descriptions of the segment dependency definition. """
    description: String @search(by: [fulltext, exact])
    """ Defines the execution dependency constraints of one segment to another segment. """
    dependencyType: DependencyType
    """ Factor used by dependency. """
    dependencyFactor: Float
    """ The units of measure of the dependency factor. """
    factorUoM: UnitOfMeasure
    """ A condition required to transition between process segments. Expressed as JSONata expression. """
    condition: String

    ##### RELATIONSHIPS #####
    """ The process segment connected from this process segment dependency. """
    from: ProcessSegment! @hasInverse(field: outflows)
    """ The process segment connected to this segment dependency. """
    to: ProcessSegment! @hasInverse(field: inflows)
    """ A set of expressions that if evaluate to true trigger or create an instance of a workflow. """
    rules: [Rule] @hasInverse(field: processSegmentDependency)
}


"""
Specific parameters required for a process segment shall be presented as process segment parameters. 
Process segment parameters may contain nested process segment parameters.
"""
type ProcessSegmentParameter @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ Identification of the process segment parameter. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ Contains additional information. """
    description: String @search(by: [fulltext, exact])
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ The value, set of values, or range of acceptable values. """
    value: String
    """ Unit of measure of the values. """
    valueUnitOfMeasure: UnitOfMeasure

    ##### RELATIONSHIPS #####
    """ The process segment defined in part by this physical asset segment specification. """
    processSegmentVersion: ProcessSegmentVersion! @hasInverse(field: processSegmentParameters)
    """ This parent process segment parameter is whole of the child process segment parameter(s) as the part. """
    children: [ProcessSegmentParameter] @hasInverse(field: parent)
    """ This child process segment parameter makes up part of the parent process segment parameter of the whole. """
    parent: ProcessSegmentParameter @hasInverse(field: children)

    """ The segment parameter(s) related to this process segment parameter. """
    segmentParameters: [SegmentParameter] @hasInverse(field: processSegmentParameter)
    """ The job order parameter(s) corresponding with this process segment parameter. """
    jobOrderParameter: JobOrderParameter @hasInverse(field: processSegmentParameter)
}
# ################################################################################
# Operations Test Model
# ################################################################################
#
#
# Operations test information is exchanged to communicate criteria that are to be
# applied to perform tests of personnel, equipment, physical assets and/or materials
# and to communicate the results of those tests.
#
# The operations test model defines test specification and test result information
#  and how those two sets of exchanged information are related to
#
#  •    testable object and testable object property as an interface object to be or
#        has been tested ;
#  •	operations test requirement as an interface object (listed in Table 98);
#  •	resource actual as an interface object
#  •	work definition (defined in Part 4 of this standard) as the test method to
#        be or has been used to perform the test(s) to the test specification.

"""
The test specification details the test specification criteria and the tested evaluated property(s) required 
for a testable object to match the quality or performance requirements of the business or particular customers.

A test specification may contain other test specifications to form a hierarchy of test specifications. When 
a hierarchy of test specifications are used, the result of the parent object in the hierarchy shall be the 
worst-case result of all the respective child object results.
"""
type TestSpecification @withSubscription @key(fields: "iid") {
    """ Unique internal database identifier. """
    iid: ID!

    """ An identification of a test for certifying one or more values. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ An identification of the version of the test specification. """
    version: String! @search(by: [fulltext, exact])
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: testSpecification)

    """
    A named unique instance of the entity. Note that this attribute is subject to change, based on 
    the implementation timeline of composite keys within dgraph.
    """
    key: String! @id @search(by: [fulltext, exact])

    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime @search

    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default(
        add: { value: "$now" }
    )

    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default(
        add: { value: "$now" }
        update: { value: "$now" }
    )

    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])

    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    """ A description of the test specification. """
    description: String @search(by: [fulltext, exact])

    """ The date and time on which the test specification was published or generated. """
    publishedDate: DateTime

    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope

    """ Sample size required to perform the test. """
    testSampleSize: String

    """ Defines whether physical sampling is required to perform the test. """
    physicalSample: Boolean

    """ The amount of operations activity required between samples. """
    recurrenceQuantity: String

    """ The duration of operational activity required between samples. """
    recurrenceTimeInterval: String

    """ The parent test specification of this test specification. """
    parent: TestSpecification @hasInverse(field: "children")

    """ The child test specification(s) of this test specification. """
    children: [TestSpecification] @hasInverse(field: "parent")
    
    """ The test specification property values of this test specification. """
    properties: [TestSpecificationProperty] @hasInverse(field: "testSpecification")
    
    """ 
    The test specification criteria which is to be applied to determine the test outcome upon evaluation 
    of the test specification. 
    """
    criteria: [TestSpecificationCriteria] @hasInverse(field: "testSpecification")
    
    """ The evaluated property(s) measured and evaluated by this test specification. """
    evaluatedProperties: [EvaluatedProperty] @hasInverse(field: "testSpecification")
    

    ### Operatons test requirement 0..1
    ### This test specification(s) is used to evaluate these operations test requirement(s).
    """ This test specification(s) is used to evaluate the PersonnelRequirement. """
    requiredByPersonnelRequirement: PersonnelRequirement @hasInverse(field: testedBy)
    """ This test specification(s) is used to evaluate the EquipmentRequirement. """
    requiredByEquipmentRequirement: EquipmentRequirement @hasInverse(field: testedBy)
    """ This test specification(s) is used to evaluate the PhysicalAssetRequirement. """
    requiredByPhysicalAssetRequirement: PhysicalAssetRequirement @hasInverse(field: testedBy)
    """ This test specification(s) is used to evaluate the MaterialRequirement. """
    requiredByMaterialRequirement: MaterialRequirement @hasInverse(field: testedBy)
    """ This test specification(s) is used to evaluate the PersonnelSpecification. """
    requiredByPersonnelSpecification: PersonnelSpecification @hasInverse(field: testedBy)
    """ This test specification(s) is used to evaluate the EquipmentSpecification. """
    requiredByEquipmentSpecification: EquipmentSpecification @hasInverse(field: testedBy)
    # """ This test specification(s) is used to evaluate the PhysicalAssetSpecification. """
    # requiredByPhysicalAssetSpecification: PhysicalAssetSpecification @hasInverse(field: testedBy)
    """ This test specification(s) is used to evaluate the MaterialSpecification. """
    requiredByMaterialSpecification: MaterialSpecification @hasInverse(field: testedBy)
    
    
    ### Operatons test requirement 0..*
    ### The operations test requirement ID(s) evaluated by this test specification.
    """ The PersonnelRequirement ID(s) evaluated by this test specification. """
    testsPersonnelRequirements: [PersonnelRequirement] @hasInverse(field: specifiesTests)
    """ The EquipmentRequirement ID(s) evaluated by this test specification. """
    testsEquipmentRequirements: [EquipmentRequirement] @hasInverse(field: specifiesTests)
    """ The PhysicalAssetRequirement ID(s) evaluated by this test specification. """
    testsPhysicalAssetRequirements: [PhysicalAssetRequirement] @hasInverse(field: specifiesTests)
    """ The MaterialRequirement ID(s) evaluated by this test specification. """
    testsMaterialRequirements: [MaterialRequirement] @hasInverse(field: specifiesTests)
    """ The PersonnelSpecification ID(s) evaluated by this test specification. """
    testsPersonnelSpecifications: [PersonnelSpecification] @hasInverse(field: specifiesTests)
    """ The EquipmentSpecification ID(s) evaluated by this test specification. """
    testsEquipmentSpecifications: [EquipmentSpecification] @hasInverse(field: specifiesTests)
    # """ The PhysicalAssetSpecification ID(s) evaluated by this test specification. """
    # testsPhysicalAssetSpecifications: [PhysicalAssetSpecification] @hasInverse(field: specifiesTests)
    """ The MaterialSpecification ID(s) evaluated by this test specification. """
    testsMaterialSpecifications: [MaterialSpecification] @hasInverse(field: specifiesTests)


    ### Testable objects interface 0..1 
    ### This test specification(s) is used to evaluate these testable object(s).
    """ This test specification(s) is used to evaluate the PersonnelClass object. """
    requiredByPersonnelClass: PersonnelClass @hasInverse(field: testedBy)
    """ This test specification(s) is used to evaluate the Person object. """
    requiredByPerson: Person @hasInverse(field: testedBy)
    """ This test specification(s) is used to evaluate the EquipmentClass object. """
    requiredByEquipmentClass: EquipmentClass @hasInverse(field: testedBy)
    """ This test specification(s) is used to evaluate the Equipment object. """
    requiredByEquipment: Equipment @hasInverse(field: testedBy)
    """ This test specification(s) is used to evaluate the PhysicalAssetClass object. """
    requiredByPhysicalAssetClass: PhysicalAssetClass @hasInverse(field: testedBy)
    """ This test specification(s) is used to evaluate the PhysicalAsset object. """
    requiredByPhysicalAsset: PhysicalAsset @hasInverse(field: testedBy) 
    """ This test specification(s) is used to evaluate the MaterialClass object. """
    requiredByMaterialClass: MaterialClass @hasInverse(field: testedBy)
    """ This test specification(s) is used to evaluate the MaterialDefinition object. """
    requiredByMaterialDefinition: MaterialDefinition @hasInverse(field: testedBy)
    """ This test specification(s) is used to evaluate the MaterialLot object. """
    requiredByMaterialLot: MaterialLot @hasInverse(field: testedBy)
    """ This test specification(s) is used to evaluate the MaterialSubLot object. """
    requiredByMaterialSubLot: MaterialSubLot @hasInverse(field: testedBy)


    ### Testable objects interface 0..*
    ### The ID(s) of the testable object(s) tested by this test specification.
    """ The ID of the PersonnelClass object tested by this test specification. """
    testsPersonnelClass: [PersonnelClass] @hasInverse(field: specifiesTests)
    """ The ID of the Person object tested by this test specification. """
    testsPerson: [Person] @hasInverse(field: specifiesTests)
    """ The ID of the EquipmentClass object tested by this test specification. """
    testsEquipmentClass: [EquipmentClass] @hasInverse(field: specifiesTests)
    """ The ID of the Equipment object tested by this test specification. """
    testsEquipment: [Equipment] @hasInverse(field: specifiesTests)
    """ The ID of the PhysicalAssetClass object tested by this test specification. """
    testsPhysicalAssetClass: [PhysicalAssetClass] @hasInverse(field: specifiesTests)
    """ The ID of the PhysicalAsset object tested by this test specification. """
    testsPhysicalAsset: [PhysicalAsset] @hasInverse(field: specifiesTests) 
    """ The ID of the MaterialClass object tested by this test specification. """
    testsMaterialClass: [MaterialClass] @hasInverse(field: specifiesTests)
    """ The ID of the MaterialDefinition object tested by this test specification. """
    testsMaterialDefinition: [MaterialDefinition] @hasInverse(field: specifiesTests)
    """ The ID of the MaterialLot object tested by this test specification. """
    testsMaterialLot: [MaterialLot] @hasInverse(field: specifiesTests)
    """ The ID of the MaterialSubLot object tested by this test specification. """
    testsMaterialSubLot: [MaterialSubLot] @hasInverse(field: specifiesTests)
}


"""
The test specification property object defines properties of the test specification. These properties 
are not the characteristics to be tested.
"""
type TestSpecificationProperty @key(fields: "iid") {
    """ Unique internal database identifier. """
    iid: ID!

    """ Identification of the test specification property. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search

    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default(
        add: { value: "$now" }
    )

    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default(
        add: { value: "$now" }
        update: { value: "$now" }
    )

    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])

    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    """ Description of the test specification property """
    description: String @search(by: [fulltext, exact]) 

    """ The value, set of values, or range of the property. """
    value: String @search(by:[fulltext,exact])

    """ The unit of measure of the associated property values, if applicable. """
    valueUnitOfMeasure: UnitOfMeasure

    """ The parent test specification property(s) of this test specification property. """
    parent: TestSpecificationProperty @hasInverse(field: "children")

    """ The child test specification property(s) of this test specification property. """
    children: [TestSpecificationProperty] @hasInverse(field: "parent")

    """ These test specification property values are for the test specification. """
    testSpecification: TestSpecification! @hasInverse(field: "properties")
}


"""
The test specification criteria object defines the set of criterion to evaluate and the test result 
to be reported when a testable object satisfies those criteria.
"""
type TestSpecificationCriteria @key(fields: "iid") {
    """ Unique internal database identifier. """
    iid: ID!

    """ Identification of the test specification criteria. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search

    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default(
        add: { value: "$now" }
    )

    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default(
        add: { value: "$now" }
        update: { value: "$now" }
    )

    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])

    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    """ Description of the test specification criteria. """
    description: String @search(by: [fulltext, exact]) 

    """ 
    Specifies the sequence of evaluation of test specification criteria. The sequence shall be executed 
    lowest first. Duplicate sequence values shall be executed in parallel with worst case result 
    reported if both criteria are evaluated as true. 
    """
    sequence: Int

    """ 
    An expression of the test specification criteria to be evaluated. If the expression is empty, 
    then the test specification criteria represents the else criterion. 
    """
    expression: String @search(by:[fulltext,exact])
    
    """
    The value to be given to the result of the test if the test specification criteria expression is 
    evaluated as true.
    """
    result: String @search(by:[fulltext,exact])

    """ This test specification criteria determine the test outcome upon evaluation of the test specification. """
    testSpecification: TestSpecification! @hasInverse(field: "criteria")
    
    """ This test specification criteria used to evaluate the evaluated property of a testable object property. """
    evaluatedProperties: [EvaluatedProperty] @hasInverse(field: "criteria")
}


"""
The evaluated property object identifies the set of testable object / testable object property pairs 
to be measured and the applicable test method to obtain a property measurement.
"""
type EvaluatedProperty @key(fields: "iid") {
    """ Unique internal database identifier. """
    iid: ID!

    """ Identification of the evaluated property. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search

    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default(
        add: { value: "$now" }
    )

    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default(
        add: { value: "$now" }
        update: { value: "$now" }
    )

    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])

    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    """ Description of the test specification criteria. """
    description: String @search(by: [fulltext, exact]) 
    
    # """ 
    # The work master ID or work directive ID which is applied test method to obtain the measurement of 
    # this evaluated property for test specification of the testable object property ID. 
    # """
    # workDefinition: WorkDefinition
    """ The work master this evaluated property is measured with method of. """
    workMaster: WorkMaster @hasInverse(field: evaluatedProperties)
    """ The work directive this evaluated property is measured with method of. """
    workDirective: WorkDirective @hasInverse(field: evaluatedProperties)

    """ This evaluated property(s) is measured and evaluated by the test specification. """
    testSpecification: TestSpecification! @hasInverse(field: "evaluatedProperties")

    """ This test specification criteria used to evaluate the evaluated property of a testable object property. """
    criteria: [TestSpecificationCriteria] @hasInverse(field: "evaluatedProperties")


    ### Testable object property 0..*
    ### The testable object property ID(s) which are to be measured by this test specification.
    """ The PersonnelClassProperty ID which is to be measured by this test specification. """
    personnelClassProperty: [PersonnelClassProperty] @hasInverse(field: correspondsTo)
    """ The PersonProperty ID which is to be measured by this test specification. """
    personProperty: [PersonProperty] @hasInverse(field: correspondsTo)
    """ The EquipmentClassProperty ID which is to be measured by this test specification. """
    equipmentClassProperty: [EquipmentClassProperty] @hasInverse(field: correspondsTo)
    """ The EquipmentProperty ID which is to be measured by this test specification. """
    equipmentProperty: [EquipmentProperty] @hasInverse(field: correspondsTo)
    """ The PhysicalAssetClassProperty ID which is to be measured by this test specification. """
    physicalAssetClassProperty: [PhysicalAssetClassProperty] @hasInverse(field: correspondsTo)
    """ The PhysicalAssetProperty ID which is to be measured by this test specification. """
    physicalAssetProperty: [PhysicalAssetProperty] @hasInverse(field: correspondsTo)
    """ The MaterialClassProperty ID which is to be measured by this test specification. """
    materialClassProperty: [MaterialClassProperty] @hasInverse(field: correspondsTo)
    """ The MaterialDefinitionProperty ID which is to be measured by this test specification. """
    materialDefinitionProperty: [MaterialDefinitionProperty] @hasInverse(field: correspondsTo)
    """ The MaterialLotProperty ID which is to be measured by this test specification. """
    materialLotProperty: [MaterialLotProperty] @hasInverse(field: correspondsTo)
}


"""
The results from the test evaluation of property measurement of the testable object property of the 
testable object per the test specifications shall be presented as test results. A test result reports 
the measured results and evaluation of test specification criteria from a test for a specific person, 
piece of equipment, physical asset, material lot or material sublot.
"""
type TestResult @key(fields: "iid") {
    """ Unique internal database identifier. """
    iid: ID!

    """ An identification of the specific test result. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: testResult)

    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search

    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default(
        add: { value: "$now" }
    )

    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default(
        add: { value: "$now" }
        update: { value: "$now" }
    )

    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])

    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    """ Additional information about the test result. """
    description: String @search(by: [fulltext, exact]) 

    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    
    """ Date and time of evaluation of the test result. """
    evaluationDate: DateTime

    """ Result obtained from evaluation of the associated test specification criteria. """
    evaluationCriterionResult: String

    """ Date of the expiration of the test result criteria. """
    expiration: DateTime
    
    """ The parent test result of this test result. """
    parent: TestResult @hasInverse(field: "children")

    """ The child test result(s) of this test result. """
    children: [TestResult] @hasInverse(field: "parent")
    
    """ The measurement obtained for each testable object property. """
    propertyMeasurements: [PropertyMeasurement] @hasInverse(field: "testResult")
    

    ### Operation test requirement 0..1
    ### The operations test requirement object(s) applied to execute the test and generate the test result(s).
    """ The PersonnelRequirement object applied to execute the test and generate the test result. """
    personnelRequirement: PersonnelRequirement @hasInverse(field: testResults)
    """ The EquipmentRequirement object applied to execute the test and generate the test result. """
    equipmentRequirement: EquipmentRequirement @hasInverse(field: testResults)
    """ The PhysicalAssetRequirement object applied to execute the test and generate the test result. """
    physicalAssetRequirement: PhysicalAssetRequirement @hasInverse(field: testResults)
    """ The MaterialRequirement object applied to execute the test and generate the test result. """
    materialRequirement: MaterialRequirement @hasInverse(field: testResults)
    """ The PersonnelSpecification object applied to execute the test and generate the test result. """
    personnelSpecification: PersonnelSpecification @hasInverse(field: testResults)
    """ The EquipmentSpecification object applied to execute the test and generate the test result. """
    equipmentSpecification: EquipmentSpecification @hasInverse(field: testResults)
    # """ The PhysicalAssetSpecification object applied to execute the test and generate the test result. """
    # physicalAssetSpecification: PhysicalAssetSpecification @hasInverse(field: testResults)
    """ The MaterialSpecification object applied to execute the test and generate the test result. """
    materialSpecification: MaterialSpecification @hasInverse(field: testResults)


    ### Testable object 0..1
    ### The tested object(s) recorded by this test result.
    """ The PersonnelClass object recorded by this test result. """
    personnelClass: PersonnelClass @hasInverse(field: testResults)
    """ The Person object recorded by this test result. """
    person: Person @hasInverse(field: testResults)
    """ The EquipmentClass object recorded by this test result. """
    equipmentClass: EquipmentClass @hasInverse(field: testResults)
    """ The Equipment object recorded by this test result. """
    equipment: Equipment @hasInverse(field: testResults)
    """ The PhysicalAssetClass object recorded by this test result. """
    physicalAssetClass: PhysicalAssetClass @hasInverse(field: testResults)
    """ The PhysicalAsset object recorded by this test result. """
    physicalAsset: PhysicalAsset @hasInverse(field: testResults)
    """ The MaterialClass object recorded by this test result. """
    materialClass: MaterialClass @hasInverse(field: testResults)
    """ The MaterialDefinition object recorded by this test result. """
    materialDefinition: MaterialDefinition @hasInverse(field: testResults)
    """ The MaterialLot object recorded by this test result. """
    materialLot: MaterialLot @hasInverse(field: testResults)
    """ The MaterialSubLot object recorded by this test result. """
    materialSubLot: MaterialSubLot @hasInverse(field: testResults)


    ### Resource actual 0..1
    ### The resource actual reports this test result in a segment response or job response.
    """ The PersonnelActual reports this test result in a segment response or job response. """
    personnelActual: PersonnelActual @hasInverse(field: testResults)
    """ The EquipmentActual reports this test result in a segment response or job response. """
    equipmentActual: EquipmentActual @hasInverse(field: testResults)
    """ The PhysicalAssetActual reports this test result in a segment response or job response. """
    physicalAssetActual: PhysicalAssetActual @hasInverse(field: testResults)
    """ The MaterialActual reports this test result in a segment response or job response. """
    materialActual: MaterialActual @hasInverse(field: testResults)
}


"""
The measurement obtained during execution of work master (defined in Part 4 of this standard) shall be 
presented as a property measurement. A property measurement reports the measurement obtained for a single 
testable object property corresponding to an evaluated property of a test specification for a specific 
person, equipment, physical asset, material lot or material sublot.
"""
type PropertyMeasurement @key(fields: "iid") {
    """ Unique internal database identifier. """
    iid: ID!

    """ An identification of the specific property measurement. """
    id: String! @id @search(by: [fulltext, exact, regexp])

    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: propertyMeasurement)

    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search

    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default(
        add: { value: "$now" }
    )

    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default(
        add: { value: "$now" }
        update: { value: "$now" }
    )

    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])

    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    """ Additional information about the property measurement. """
    description: String @search(by: [fulltext, exact]) 

    """ The date and time when the measurement was obtained. """
    measurementDate: DateTime  

    """ The measured value for the testable object property. """
    value: String @search(by:[fulltext,exact])

    """ The unit of measure of the measured value, if applicable. """
    valueUnitOfMeasure: UnitOfMeasure

    """ The date of the expiration of the property measurement. """
    expiration: DateTime

    """ This property measurement obtained for each testable object property in the test result. """
    testResult: TestResult! @hasInverse(field: "propertyMeasurements")

    # """ 
    # The work master ID or work directive ID which is applied test method to obtain the measurement of this 
    # property measurement for test specification of the testable object property ID.
    # """
    # workDefinition: WorkDefinition
    """ The work master this property measurement is measured with method of. """
    workMaster: WorkMaster @hasInverse(field: propertyMeasurements)
    """ The work directive this property measurement is measured with method of. """
    workDirective: WorkDirective @hasInverse(field: propertyMeasurements)

    ### Testable object property 0..1
    ### The testable object property ID for which this property measurement is records the measurement result.
    """ The PersonnelClassProperty ID for which this property measurement is records the measurement result. """
    personnelClassProperty: PersonnelClassProperty @hasInverse(field: recordsMeasurementOf)
    """ The PersonProperty ID for which this property measurement is records the measurement result. """
    personProperty: PersonProperty @hasInverse(field: recordsMeasurementOf)
    """ The EquipmentClassProperty ID for which this property measurement is records the measurement result. """
    equipmentClassProperty: EquipmentClassProperty @hasInverse(field: recordsMeasurementOf)
    """ The EquipmentProperty ID for which this property measurement is records the measurement result. """
    equipmentProperty: EquipmentProperty @hasInverse(field: recordsMeasurementOf)
    """ The PhysicalAssetClassProperty ID for which this property measurement is records the measurement result. """
    physicalAssetClassProperty: PhysicalAssetClassProperty @hasInverse(field: recordsMeasurementOf)
    """ The PhysicalAssetProperty ID for which this property measurement is records the measurement result. """
    physicalAssetProperty: PhysicalAssetProperty @hasInverse(field: recordsMeasurementOf)
    """ The MaterialClassProperty ID for which this property measurement is records the measurement result. """
    materialClassProperty: MaterialClassProperty @hasInverse(field: recordsMeasurementOf)
    """ The MaterialDefinitionProperty ID for which this property measurement is records the measurement result. """
    materialDefinitionProperty: MaterialDefinitionProperty @hasInverse(field: recordsMeasurementOf)
    """ The MaterialLotProperty ID for which this property measurement is records the measurement result. """
    materialLotProperty: MaterialLotProperty @hasInverse(field: recordsMeasurementOf)
}
# ################################################################################
# Operations Record Information Model
# ################################################################################
#
#
# The operations record template,
# operations record entry template, and operations record specification template are
# abstract types meaning they are not standalone exchange objects.
# These abstract objects are realized in specialized implementations as occurrences
# of the operations
# event record template in this Part 2 and the work record in Part 4 of this standard.
# The operations record model represents a common structure for representing bundled
# information reported in data exchanges.
# The operations record template bundles operations record entry template objects
# by the type of action specifying the attribute, action, with defined values of created,
# changed, deleted and observed.
# The operations record entry template embeds objects defined in this standard and
# manufacturing operations profiles or references to external objects.
# The operations record specification template specifies the content and form of
# objects in an operations record template within the associated operations record
# entry template(s).
# ################################################################################
# Operations Event Information Model
# ################################################################################
#
#
# The operations event model specializes the operations record object to represent
# required information per the scope requirements of the operations event model.
# The attributes and relationships for the operations event record shall include
# the attributes of the abstract object, operations record.

#  The operations record model specializes the supporting objects, operations event
# class record specification and the operations event definition record specification.
# The operations event class record specification and operations event definition
# record specification shall include the attributes of the abstract operations record
# specification.

type OperationsEventClass @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: operationsEventClass)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### VERSIONING ######
    versions: [OperationsEventClassVersion] @hasInverse(field: operationsEventClass)
    activeVersion: OperationsEventClassVersion @hasInverse(field: isActiveVersionOf)
    nextVersion: String


    ##### ATTRIBUTES #####
    """ A unique identification of a specific equipment class, within the scope of the information exchanged. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])

    ##### RELATIONSHIPS #####
    """Aggregation relationship (Has A):"""
    isAssembledFrom: [OperationsEventClass] @hasInverse(field: isComponentOf)
    isComponentOf: OperationsEventClass @hasInverse(field: isAssembledFrom)
    """Composition relationship (Is A):"""
    includesPropertiesOf: [OperationsEventClass] @hasInverse(field: isIncludedIn)
    isIncludedIn: OperationsEventClass @hasInverse(field: includesPropertiesOf)
    operationsEventDefinitionVersions: [OperationsEventDefinitionVersion] @hasInverse(field:operationsEventClasses)


}
type OperationsEventClassVersion @withSubscription @primaryKey(fields:["id","version"])  @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: operationsEventClassVersion)
    """ A unique identification of a specific record. """
    id: String! @search(by: [fulltext, exact, regexp])
    """ The specific version of the entity. Purposely free to allow use with a specific revision scheme. """
    version: String!  @search(by: [fulltext, exact])

    operationsEventClass: OperationsEventClass! @hasInverse(field: versions)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    ##### VERSIONING #####

    """ The current state of the version for this entity. """
    versionStatus: VersionState! @search
    """ The equipment class that uses this equipment class version as it's active version. """
    isActiveVersionOf: OperationsEventClass @hasInverse(field: activeVersion)
    """ The time at which the version became active. """
    effectiveStart: DateTime @search
    """ the time at which the version stopped being active. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    properties: [OperationsEventClassProperty] @hasInverse(field: operationsEventClassVersion)
    recordSpecifications: [OperationsEventClassRecordSpecification] @hasInverse(field: operationsEventClassVersion)
    description: String

}


type OperationsEventClassRecordSpecification @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    id: String! @search(by: [fulltext, exact, regexp])

    operationsEventClassVersion: OperationsEventClassVersion! @hasInverse(field: recordSpecifications)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    description: String @search(by: [fulltext, exact, regexp])
    hierarchyScope: HierarchyScope
    definitionType: DefinitionType
    informationObjectType: [InformationObjectTypeEnum]
    multiplicity: Multiplicity
    action: [Action]
    actionMultiplicity: Multiplicity

}
type Multiplicity {
    Min: Int
    Max: Int
}
enum Action {
    Added
    Deleted
    Changed
    Observed
}
type OperationsEventClassProperty @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    id: String! @id @search(by: [fulltext, exact, regexp])

    operationsEventClassVersion: OperationsEventClassVersion! @hasInverse(field: properties)
    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    parent: OperationsEventClassProperty @hasInverse(field: children)
    children: [OperationsEventClassProperty] @hasInverse(field: parent)
    propertyType: Isa95PropertyType
    value: String @search(by: [fulltext, exact, regexp])
    valueUnitOfMeasure: UnitOfMeasure
}
type OperationsEventDefinition @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: operationsEventDefinition)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### VERSIONING ######
    versions: [OperationsEventDefinitionVersion] @hasInverse(field: operationsEventDefinition)
    activeVersion: OperationsEventDefinitionVersion @hasInverse(field: isActiveVersionOf)
    nextVersion: String


    ##### ATTRIBUTES #####
    """ A unique identification of a specific equipment class, within the scope of the information exchanged. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])

    hierarchyScope: HierarchyScope

    ##### RELATIONSHIPS #####

    """Aggregation relationship (Has A):"""
    isAssembledFrom: [OperationsEventDefinition] @hasInverse(field: isComponentOf)
    isComponentOf: OperationsEventDefinition @hasInverse(field: isAssembledFrom)
    """Composition relationship (Is A):"""
    includesPropertiesOf: [OperationsEventDefinition] @hasInverse(field: isIncludedIn)
    isIncludedIn: OperationsEventDefinition @hasInverse(field: includesPropertiesOf)
    operationsEvents: [OperationsEvent] @hasInverse(field: operationsEventDefinition)
}
type OperationsEventDefinitionVersion @withSubscription @primaryKey(fields:["id","version"])  @key(fields: "iid") {
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: operationsEventDefinitionVersion)

    operationsEventDefinition: OperationsEventDefinition! @hasInverse(field: versions)

    id: String! @search(by: [fulltext, exact, regexp])
    """ The specific version of the entity. Purposely free to allow use with a specific revision scheme. """
    version: String!  @search(by: [fulltext, exact])

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    ##### VERSIONING #####

    """ The current state of the version for this entity. """
    versionStatus: VersionState! @search
    """ The equipment class that uses this equipment class version as it's active version. """
    isActiveVersionOf: OperationsEventDefinition @hasInverse(field: activeVersion)
    """ The time at which the version became active. """
    effectiveStart: DateTime @search
    """ the time at which the version stopped being active. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ A unique identification of a specific equipment class version. """
    description: String @search(by: [fulltext, exact, regexp])
    operationsEventClasses: [OperationsEventClass] @hasInverse(field: operationsEventDefinitionVersions)
    hierarchyScope: HierarchyScope
    priority: [String]
    operationsEventType: OperationsEventTypeEnum
    operationsEventLevel: OperationsEventLevelEnum
    operationsType: WorkType
    momFunction: MOMFunctionEnum
    enterpriseFunction: EnterpriseFunctionEnum
    category: String
    source: String
    properties: [OperationsEventDefinitionProperty] @hasInverse(field: operationsEventDefinitionVersion)
    recordSpecifications: [OperationsEventDefinitionRecordSpecification] @hasInverse(field: operationsEventDefinitionVersion)

}
enum OperationsEventTypeEnum {
    Alarm
    Alert
    Event
}
enum OperationsEventLevelEnum {
    Level_2
    Level_3
    Level_4
    Other
}
enum MOMFunctionEnum {
    Resource_Management
    Definition_Management
    Detailed_Scheduling
    Dispatching
    Execution_Management
    Data_Collection
    Performance_Analysis
    Tracking
}
enum EnterpriseFunctionEnum {
    Order_Processing
    Operations_Scheduling
    Production_Control
    Material_And_Energy_Control
    Product_Cost_Accounting
    Product_Shipping_Administration
    Maintenance_Management
    Marketing_And_Sales
    Research_And_Development
    Engineering
}
type OperationsEventDefinitionRecordSpecification @withSubscription @key(fields: "iid") {

    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    id: String! @search(by: [fulltext, exact, regexp])

    operationsEventDefinitionVersion: OperationsEventDefinitionVersion! @hasInverse(field: recordSpecifications)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    description: String @search(by: [fulltext, exact, regexp])
    hierarchyScope: HierarchyScope
    definitionType: DefinitionType
    informationObjectType: [InformationObjectTypeEnum]
    multiplicity: Multiplicity
    action: [Action]
    actionMultiplicity: Multiplicity

    ##### RELATIONSHIPS #####
    operationsEventRecords:[OperationsEventRecord] @hasInverse(field: operationsEventDefinitionRecordSpecification)
}
type OperationsEventDefinitionProperty @withSubscription @key(fields: "iid") {

    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    id: String! @search(by: [fulltext, exact, regexp])

    operationsEventDefinitionVersion: OperationsEventDefinitionVersion! @hasInverse(field: properties)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####

    description: String @search(by: [fulltext, exact, regexp])
    value: String @search(by: [fulltext, exact, regexp])
    valueUnitOfMeasure: UnitOfMeasure

    ##### RELATIONSHIPS #####
    operationsEventClassProperty: OperationsEventClassProperty
    parent: OperationsEventDefinitionProperty @hasInverse(field: children)
    children: [OperationsEventDefinitionProperty] @hasInverse(field: parent)
}

type OperationsEvent @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: operationsEvent)

    id: String! @id @search(by: [fulltext, exact, regexp])
    operationsEventDefinition: OperationsEventDefinition! @hasInverse(field: operationsEvents)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search


    ##### ATTRIBUTES #####
    description: String @search(by: [fulltext, exact, regexp])
    recordTimestamp: DateTime! @search
    hierarchyScope: HierarchyScope
    priority: String
    operationsEventType: OperationsEventTypeEnum
    operationsEventLevel: OperationsEventLevelEnum
    operationsType: WorkType
    momFunction: MOMFunctionEnum
    enterpriseFunction: EnterpriseFunctionEnum
    category: String
    source: String
    properties:[OperationsEventProperty] @hasInverse(field: operationsEvent)
    records:[OperationsEventRecord] @hasInverse(field: operationsEvent)

    ##### RELATIONSHIPS #####
    parent: OperationsEvent @hasInverse(field: children)
    children: [OperationsEvent] @hasInverse(field: parent)
}


type OperationsEventProperty @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    id: String! @id @search(by: [fulltext, exact, regexp])
    operationsEvent: OperationsEvent! @hasInverse(field: properties)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search


    ##### ATTRIBUTES #####

    description: String @search(by: [fulltext, exact, regexp])
    value: String @search(by: [fulltext, exact, regexp])
    valueUnitOfMeasure: UnitOfMeasure

    ##### RELATIONSHIPS #####
    operationsEventDefinitionProperty: OperationsEventDefinitionProperty
    parent: OperationsEventProperty @hasInverse(field: children)
    children: [OperationsEventProperty] @hasInverse(field: parent)

}
type OperationsEventRecord @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    id: String! @id @search(by: [fulltext, exact, regexp])
    operationsEvent: OperationsEvent! @hasInverse(field:records)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search


    ##### ATTRIBUTES #####
    description: String @search(by: [fulltext, exact, regexp])
    action: Action
    """ The date and time the publisher recorded/transacted the action. Record timestamp explicitly states the time that the publisher took the action  """
    recordTimestamp: DateTime @search
    hierarchyScope: HierarchyScope
    operationsEventDefinitionRecordSpecification: OperationsEventDefinitionRecordSpecification @hasInverse(field: operationsEventRecords)
    recordEntries: [OperationsEventRecordEntry] @hasInverse(field: operationsEventRecord)

    ##### RELATIONSHIPS #####
    parent: OperationsEventRecord @hasInverse(field: children)
    children: [OperationsEventRecord] @hasInverse(field: parent)
}
type OperationsEventRecordEntry @withSubscription @primaryKey(fields:["id","recordId"]) @key(fields: "iid") {


    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ Unique external identifier is a composite of the id and the parent record id. """
    id: String! @search(by: [fulltext, exact, regexp])
    recordId: String! @search(by: [fulltext, exact, regexp])
    operationsEventRecord: OperationsEventRecord! @hasInverse(field: recordEntries)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    description: String @search(by: [fulltext, exact, regexp])
    recordTimestamp: DateTime! @search
    hierarchyScope: HierarchyScope
    data: String

    ##### RELATIONSHIPS #####
    informationObject: InformationObject @hasInverse(field: operationsEventRecordEntry)
    parent: OperationsEventRecordEntry @hasInverse(field: children)
    children: [OperationsEventRecordEntry] @hasInverse(field: parent)
}# ################################################################################
# Operations Definition Information Model
# ################################################################################
#
#
# An operations definition defines the resources required to perform a specified operation.
# The operations definition may apply to defining production, maintenance, quality test
# and inventory operations.
# The actual definition of how to perform the operation is not included in the
# object model and are defined in a work definition.
#
# Work definitions are defined as the information used to instruct a manufacturing operation
# how to perform the operation.
#
# Based on the production strategy used, production operations specific instructions can be called a
#
# -	general recipe (IEC 61512 series),
# -	site recipe (IEC 61512 series),
# -	master recipe (IEC 61512 series),
# -	standard operating procedure (SOP),
# -	standard operating conditions (SOC),
# -	master or product routing
# -	assembly steps.
#
# An operations definition may be a specialization of another operations definition.
# An operations definition shall be defined as pattern or instance.
# A pattern operations definition defines a "template," upon which other or instance
# operations definitions may be based. Unlike instance operations definitions,
# pattern operations definitions shall not be directly scheduled or tracked.
# Therefore, operations requests and operations responses shall not reference pattern
# operations definitions.
#
# Pattern operations definitions shall provide a basis for standardization and reuse of
# pattern operations definitions across many instance operations definitions across and
# between plants.
# Where an operations definition references a work master defined in Part 4 of this standard,
# the definition type (pattern or instance) attribute of the referenced work master shall have
# the same value as that of the operations definition.

"""
An operations definition defines the resources required to perform a specified operation. The 
operations definition may apply to defining production, maintenance, quality test and inventory 
operations. The actual definition of how to perform the operation is not included in the object 
model and are defined in a work definition.
"""
type OperationsDefinition @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: operationsDefinition)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### VERSIONING #####
    """ Link to all available versions for this entity. """
    versions: [OperationsDefinitionVersion] @hasInverse(field: operationsDefinition)
    """ The currently active version. To find a version that was active at a point in time, use versions with a filter. """
    activeVersion: OperationsDefinitionVersion @hasInverse(field: isActiveVersionOf)
    """ The next version number, or the largest version number + 1. """
    nextVersion: String

    ##### ATTRIBUTES #####
    """ Uniquely identifies the operations definition. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])

    ##### RELATIONSHIPS #####
    """ In support of the definition type attribute, this instance or child pattern operations definition 
    includes objects, relationships, and properties of the operations definition. """
    parent: OperationsDefinition @hasInverse(field: children)
    """ The child operations definition(s) in support of this parent operations definition. """
    children: [OperationsDefinition] @hasInverse(field: parent)
    """ This operations definition(s) applies zero to many work masters. """
    workMasters: [WorkMaster] @hasInverse(field: operationsDefinition)
    
    """ The operations request(s) associated with this operations definition. """
    operationsRequests: [OperationsRequest] @hasInverse(field: operationsDefinition)
    """ The operations response(s) associated with this operations definition. """
    operationsResponses: [OperationsResponse] @hasInverse(field: operationsDefinition)
    """ The segment requirement(s) associated with this operations definition. """
    segmentRequirements: [SegmentRequirement] @hasInverse(field: operationsDefinition)
    """ The segment response(s) associated with this operations definition. """
    segmentResponses: [SegmentResponse] @hasInverse(field: operationsDefinitions)
}


"""
A specific version of an operations definition. An operations definition defines the resources 
required to perform a specified operation. The operations definition may apply to defining production, 
maintenance, quality test and inventory operations. The actual definition of how to perform the 
operation is not included in the object model and are defined in a work definition.
"""
type OperationsDefinitionVersion @withSubscription @primaryKey(fields: ["id","version"]) @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: operationsDefinitionVersion)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### VERSIONING #####
    """ The specific version of the entity. Purposely free to allow use with a specific revision scheme. """
    version: String!  @search(by: [fulltext, exact])
    """ The current state of the version for this entity. """
    versionStatus: VersionState! @search
    """ The operations definition that this operations definition version relates to. """
    operationsDefinition: OperationsDefinition! @hasInverse(field: versions)
    """ The operations definition that uses this operations definition version as it's active version. """
    isActiveVersionOf: OperationsDefinition @hasInverse(field: activeVersion)

    ##### ATTRIBUTES #####
    """ Uniquely identifies the operations definition version. """
    id: String! @search(by: [fulltext, exact, regexp])
    """ Identification of the external bill of material associated with this operation definition. """
    billOfMaterial: String @search(by: [fulltext, exact])
    """ Identification of the external bill of resource associated with this operation definition. """
    billOfResources: String @search(by: [fulltext, exact])
    """ Contains additional information and descriptions of the operations definition. """
    description: String @search(by: [fulltext, exact])
    """ Describes the category of the activity. """
    operationsType: WorkType! @search
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ Defines the type of the process segment. """
    definitionType: DefinitionType

    ##### RELATIONSHIPS #####
    """ The detailed information needed to quantify a specific operation definition. """
    segments: [OperationsSegment] @hasInverse(field: operationsDefinitionVersion)
    """ The operation material bills associated with this operations definition version. """
    materialsBill: [OperationsMaterialBill] @hasInverse(field: operationsDefinitionVersion)
}


""" 
The collection of all material used in the operation, independent of the process segment the material 
is used in, shall be presented as operations material bills. There may be multiple operations material 
bills with different uses.
"""
type OperationsMaterialBill @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ A unique identification of a manufacturing bill. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ Contains additional information of the manufacturing bill. """
    description: String @search(by: [fulltext, exact])
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ Defines the use of the material. """
    useType: MaterialUse @search
    """ Identification of the bill of material associated with this operations material bill. """
    billOfMaterial: String @search(by: [fulltext, exact])

    ##### RELATIONSHIPS #####
    """ Identification of the operations definition associated with this operations material bill. """
    operationsDefinitionVersion: OperationsDefinitionVersion @hasInverse(field: materialsBill)
    """ Identification of the operations segment associated with this operations material bill. """
    operationsSegments: [OperationsSegment] @hasInverse(field: materialsBill)
    """ The material bill items that are part of this operations material bill. """
    materialBillItems: [MaterialSpecification] @hasInverse(field: materialsBill)
}


"""
The information needed to quantify a segment for a specific operation shall be presented as an 
operations segment. An operations segment identifies, references, or corresponds to a process segment.

An operations segment within an operations definition that is specialization of another operations 
definition may be a specialization of an operations segment within that other operations definition.

A pattern operations segment defines a 'template', upon which other pattern or instance operations 
segments may be based. Unlike instance operations segments, pattern operations segments shall not be 
directly scheduled or tracked. Therefore, segment requirements, segment responses and operations 
segment capabilities shall not reference pattern operations segments. In the specialization association 
relationship, 'defined by' on the operation segment object, an instance or child pattern operations 
segment may be defined by a parent pattern.

Operations segments shall assume the definition type (pattern or instance) attribute of the operations 
definition to which they belong. Therefore, all operations segments contained within a pattern operations 
definition shall be assumed to be a pattern, while all operations segments contained within an instance 
operations definition shall be assumed to be an instance.

Where an operations segment references a work master, the definition type attribute of the referenced 
work master shall have the same value as that of the operations segment.  Where an operations segment 
references a process segment, the definition type attribute of the referenced process segment shall 
have the same value as that of the operations segment.

The parameter, personnel, equipment, physical asset and material specifications of an operations segment 
may map to those of any pattern operations segment upon which the operations segment is based.
"""
type OperationsSegment @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: operationsSegment)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ The last part of the fully qualified id. Used as the display name """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ Contains additional information of the segment. """
    description: String @search(by: [fulltext, exact])
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ Duration of segment, if known. """
    duration: Float
    """ The units of measure of the duration, if defined. """
    durationUoM: UnitOfMeasure
    """ Describes the category of operation. """
    operationsType: WorkType @search
    """ Defines the type of the operations segment. """
    definitionType: DefinitionType @search
    """ Identification of the external bill of material associated with this operation segment. """
    billOfMaterial: String @search(by: [fulltext, exact])
    """ Identification of the external bill of material associated with this operation segment. """
    billOfResources: String @search(by: [fulltext, exact])
    """ Used by Libre UI for chart drawing. """
    positionX: Int
    """ Used by Libre UI for chart drawing. """
    positionY: Int

    ##### RELATIONSHIPS #####
    """ A collection information required to perform the specified operation. """
    operationsDefinitionVersion: OperationsDefinitionVersion! @hasInverse(field: segments)
    """ In support of the definition type attribute, this instance or child pattern operations segment) 
    includes objects, relationships, and properties of the parent pattern operations segment. """
    parent: OperationsSegment @hasInverse(field: children)
    """ The child operations segment(s) in support of this parent operations segment. """
    children: [OperationsSegment] @hasInverse(field: parent)
    """ The process segments correspond to this operations segment. Identifies the associated process segments. """
    processSegment: ProcessSegment @hasInverse(field: operationsSegments)
    """ Work masters related to this operations segment. """
    workMasters: [WorkMaster] @hasInverse(field: operationsSegment)
    """ Operations segment made up in part by this operations segment as the whole. """
    makesUp: OperationsSegment @hasInverse(field: isMadeUpOf)
    """ Operations segment(s) makes up part of this operations segment as the whole. """
    isMadeUpOf: [OperationsSegment] @hasInverse(field: makesUp)
    """ This segment node(s) to the segment dependency(s). """
    inflows: [OperationsSegmentDependency] @hasInverse(field: to)
    """ The segment dependency(s) from this segment node. """
    outflows: [OperationsSegmentDependency] @hasInverse(field: from)
    """ Identification of the operations material bill associated with this operations segment. """
    materialsBill: [OperationsMaterialBill] @hasInverse(field: operationsSegments)

    """ The parameter specification(s) related to this operations segment. """
    parameterSpecifications: [ParameterSpecification] @hasInverse(field: operationsSegment)
    """ The personnel specification(s) related to this operations segment. """
    personnelSpecifications: [PersonnelSpecification] @hasInverse(field: operationsSegment)
    """ The equipment specification(s) related to this operations segment. """
    equipmentSpecifications: [EquipmentSpecification] @hasInverse(field: operationsSegment)
    """ The physical asset specification(s) related to this operations segment. """
    physicalAssetSpecifications: [PhysicalAssetSpecification] @hasInverse(field: operationsSegment)
    """ The material specification(s) related to this operations segment. """
    materialSpecifications: [MaterialSpecification] @hasInverse(field: operationsSegment)
    """ A set of expressions that if evaluate to true trigger or create an instance of a workflow. """
    rules: [Rule] @hasInverse(field: operationsSegment)

    """ Segment requirement(s) associated with this operations segment. """
    segmentRequirements: [SegmentRequirement] @hasInverse(field: operationsSegment)
    """ Operations request(s) associated with this operations segment. """
    operationsRequests: [OperationsRequest] @hasInverse(field: operationsSegment)
    """ Operations response(s) associated with this operations segment. """
    operationsResponses: [OperationsResponse] @hasInverse(field: operationsSegment)
    """ Segment response(s) associated with this operations segment. """
    segmentResponses: [SegmentResponse] @hasInverse(field: operationsSegments)
}


"""
Operations dependencies that are operation or product specific shall be presented as segment dependencies.
"""
type OperationsSegmentDependency @withSubscription @key(fields: "iid"){
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ The identification of the unique instance of the operations segment dependency. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ Contains additional information and descriptions of the operations dependency definition. """
    description: String @search(by: [fulltext, exact])
    """ Defines the execution dependency constraints of one operations to another operations. """
    dependencyType: DependencyType
    """ Factor used by dependency. """
    dependencyFactor: Float
    """ The units of measure of the dependency factor. """
    factorUoM: UnitOfMeasure
    """ A condition required to transition between operations segments. Expressed as JSONata expression. """
    condition: String

    ##### RELATIONSHIPS #####
    """ The operations segment connected from this operations segment dependency. """
    from: OperationsSegment! @hasInverse(field: outflows)
    """ The operations segment connected to this segment dependency. """
    to: OperationsSegment! @hasInverse(field: inflows)
    """ A set of expressions that if evaluate to true trigger or create an instance of a workflow. """
    rules: [Rule] @hasInverse(field: operationsSegmentDependency)
}


"""
Specific parameters required for an operations segment shall be presented as parameter specifications. 
An operations segment may have an associated set of zero or more parameter specifications. The parameter 
specification contains the names and types of the values that may be sent to the Level 3 systems to 
parameterize the operation. Parameter specifications may contain nested parameter specifications.
"""
type ParameterSpecification @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ Identification of the parameter for a specific segment. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ Contains additional information of the parameter. """
    description: String @search(by: [fulltext, exact])
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ The value, set of values, or range of acceptable values. """
    value: String @search(by: [fulltext, exact]) 
    """ Unit of measure of the values. """
    valueUnitOfMeasure: UnitOfMeasure

    """ Target value. """
    valueSetPoint: String
    """ The upper limit that impacts the quality of the product. """
    valueUpperSpecLimit: Float
    """ The lower limit that impacts the quality of the product. """
    valueLowerSpecLimit: Float
    """ The upper limit that would trigger an alert. """
    valueUpperControlLimit: Float
    """ The lower limit that would trigger an alert. """
    valueLowerControlLimit: Float

    ##### RELATIONSHIPS #####
    """ The operations segment(s) is defined in part by this parameter specification. """
    operationsSegment: OperationsSegment @hasInverse(field: parameterSpecifications)
    """ The child parameter specification(s) that are part of this parameter specification as whole. """
    children: [ParameterSpecification] @hasInverse(field: parent)
    """ The parameter specification that this parameter specification is a part of as whole. """
    parent: ParameterSpecification @hasInverse(field: children)

    """ The segment parameter(s) corresponding with this parameter specification. """
    segmentParameters: [SegmentParameter] @hasInverse(field: parameterSpecification)
    """ The job order parameter(s) corresponding with this parameter specification. """
    jobOrderParameter: [JobOrderParameter] @hasInverse(field: parameterSpecification)

    """ The resources and instructions required to perform a unit of work without reference to a specific job order. """
    workMaster: WorkMaster @hasInverse(field: parameterSpecifications)
    """ The resources and instructions required to perform a unit of work for a specific job order. """
    workDirective: WorkDirective @hasInverse(field: parameterSpecifications)
}


"""
An identification, reference, or correspondence to a personnel capability shall be presented as a 
personnel specification. A personnel specification usually specifies a personnel class but may specify 
a person. A personnel specification identifies the specific personnel capability that is associated 
with the identified operations segment or operations segment.

A personnel specification shall include an identification of the personnel capability needed, the 
quantity of the personnel capability needed, and the unit of measure of the quantity.

Specific elements associated with a personnel specification may be included in one or more personnel 
specification properties.
"""
type PersonnelSpecification @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ A unique identification of a specific personnel segment specification. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ Contains additional information of the personnel specification. """
    description: String @search(by: [fulltext, exact])
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ Spatially defines the personnel resource(s) specified by this personnel specification. """
    spatialDefinition: SpatialDefinition
    """ Identifies the operational location of the personnel resource(s) specified by this personnel specification. """
    operationalLocation: OperationalLocation
    """ Defines the expected use of the personnel class or person in the context of the operations segment. """
    personnelUse: String @search(by: [exact, fulltext])
    """ Specifies the amount of personnel resources required for the parent segment. """
    quantity: Float
    """ The unit of measure of the associated quantity. """
    quantityUoM: UnitOfMeasure

    ##### RELATIONSHIPS #####
    """ The operations segment that is in part defined by this personnel specification. """
    operationsSegment: OperationsSegment @hasInverse(field: personnelSpecifications)
    """ The process segment version that is in part defined by this personnel specification. """
    processSegmentVersion: ProcessSegmentVersion @hasInverse(field: personnelSpecifications)
    """ The related object(s) makes up part of this personnel specification as the whole. """
    children: [PersonnelSpecification] @hasInverse(field: parent)
    """ The related object that this this personnel specification makes up part of as the whole. """
    parent: PersonnelSpecification @hasInverse(field: children)
    """ The personnel specification property(s) of this personnel specification. """
    properties: [PersonnelSpecificationProperty] @hasInverse(field: personnelSpecification)
    """ Identifies the associated personnel class(es) of the specification for a specific operations segment. """
    personnelClass: PersonnelClass @hasInverse(field: personnelSpecifications)
    """ Identifies the associated person(s) of the specification for a specific operations segment. """
    person: Person @hasInverse(field: personnelSpecifications)

    """ The resources and instructions required to perform a unit of work without reference to a specific job order. """
    workMaster: WorkMaster @hasInverse(field: personnelSpecifications)
    """ The resources and instructions required to perform a unit of work for a specific job order. """
    workDirective: WorkDirective @hasInverse(field: personnelSpecifications)

    """ The ID of this testable object ID(s) evaluated by the test specification. """
    testedBy: [TestSpecification] @hasInverse(field: requiredByPersonnelSpecification)
    """ The test specification(s) used to evaluate this testable object. """
    specifiesTests: [TestSpecification] @hasInverse(field: testsPersonnelSpecifications)
    """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
    testResults: TestResult @hasInverse(field: personnelSpecification)
}

"""
Specific properties that are required for personnel specifications shall be presented as personnel 
specification properties. Personnel specification properties may contain nested personnel specification 
properties.
"""
type PersonnelSpecificationProperty @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ An identification of a property of the associated person property or personnel class property for a specific segment. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ Contains additional information and descriptions of the personnel specification property definition. """
    description: String @search(by: [fulltext, exact])
    """ The value, set of values, or range of the property. """
    value: String @search(by: [fulltext, exact])
    """ The unit of measure of the associated property value. """
    valueUnitOfMeasure: UnitOfMeasure
    """ Specifies the amount of personnel resources required for the parent segment. """
    quantity: Float
    """ The unit of measure of the associated quantity. """
    quantityUoM: UnitOfMeasure

    ##### RELATIONSHIPS #####
    """ This child personnel specification property(s) of the parent personnel specification property. """
    children: [PersonnelSpecificationProperty] @hasInverse(field: parent)
    """ This parent personnel specification property of this parent personnel specification property. """
    parent: PersonnelSpecificationProperty @hasInverse(field: children)
    """ The personnel specification property(s) of this personnel specification property. """
    personnelSpecification: PersonnelSpecification! @hasInverse(field: properties)
    """ A cross-model dependency to element in the personnel model. """
    personnelClassProperty: PersonnelClassProperty @hasInverse(field: personnelSpecificationProperties)
    """ A cross-model dependency to element in the personnel model. """
    personProperty: PersonProperty @hasInverse(field: personnelSpecificationProperties)
}


"""
An identification, reference, or correspondence to an equipment capability shall be presented as an 
equipment specification. An equipment specification may specify either an equipment class or a piece 
of equipment. An equipment specification identifies the specific equipment capability that is associated 
with the segment. Specific elements associated with an equipment specification may be included in one 
or more equipment specification properties.
"""
type EquipmentSpecification @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ A unique identification of a specific equipment segment specification. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ Contains additional information of the equipment specification. """
    description: String @search(by: [fulltext, exact])
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ Spatially defines the equipment specified by this equipment specification. """
    spatialDefinition: SpatialDefinition
    """ Identifies the operational location of the equipment resource(s) specified by this equipment specification. """
    operationalLocation: OperationalLocation
    """ Defines the expected use of the equipment class or equipment in the context of the operations segment. """
    equipmentUse: String @search(by: [exact, fulltext])
    """ Specifies the amount of equipment resources required for the parent segment. """
    quantity: Float
    """ The unit of measure of the associated quantity. """
    quantityUoM: UnitOfMeasure

    ##### RELATIONSHIPS #####
    """ The operations segment that is in part defined by this equipment specification. """
    operationsSegment: OperationsSegment @hasInverse(field: equipmentSpecifications)
    """ The process segment version that is in part defined by this equipment specification. """
    processSegmentVersion: ProcessSegmentVersion @hasInverse(field: equipmentSpecifications)
    """ The related object(s) makes up part of this equipment specification as the whole. """
    children: [EquipmentSpecification] @hasInverse(field: parent)
    """ The related object that this this equipment specification makes up part of as the whole. """
    parent: EquipmentSpecification @hasInverse(field: children)
    """ The equipment specification property(s) of this equipment specification. """
    properties: [EquipmentSpecificationProperty] @hasInverse(field: equipmentSpecification)
    """ A cross-model association to element in the equipment model. """
    equipmentClass: EquipmentClass @hasInverse(field: equipmentSpecifications)
    """ A cross-model association to element in the equipment model. """
    equipment: Equipment @hasInverse(field: equipmentSpecifications)

    """ The resources and instructions required to perform a unit of work without reference to a specific job order. """
    workMaster: WorkMaster @hasInverse(field: equipmentSpecifications)
    """ The resources and instructions required to perform a unit of work for a specific job order. """
    workDirective: WorkDirective @hasInverse(field: equipmentSpecifications)

    """ The ID of this testable object ID(s) evaluated by the test specification. """
    testedBy: [TestSpecification] @hasInverse(field: requiredByEquipmentSpecification)
    """ The test specification(s) used to evaluate this testable object. """
    specifiesTests: [TestSpecification] @hasInverse(field: testsEquipmentSpecifications)
    """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
    testResults: [TestResult] @hasInverse(field: equipmentSpecification)
}


"""
Specific properties that are required for equipment specifications shall be presented as equipment 
specification properties. Equipment specification properties may contain nested equipment specification 
properties.
"""
type EquipmentSpecificationProperty @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ An identification of a property of the associated equipment property or equipment class property for a specific segment. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ Contains additional information and descriptions of the equipment specification property definition. """
    description: String @search(by: [fulltext, exact])
    """ The value, set of values, or range of the property. """
    value: String @search(by: [fulltext, exact])
    """ The unit of measure of the associated property value. """
    valueUnitOfMeasure: UnitOfMeasure
    """ Specifies the amount of equipment resources required for the parent segment. """
    quantity: Float
    """ The unit of measure of the associated quantity. """
    quantityUoM: UnitOfMeasure

    ##### RELATIONSHIPS #####
    """ This child equipment specification property(s) of the parent equipment specification property. """
    children: [EquipmentSpecificationProperty] @hasInverse(field: parent)
    """ This parent equipment specification property of this parent equipment specification property. """
    parent: EquipmentSpecificationProperty @hasInverse(field: children)
    """ The equipment specification property(s) of this equipment specification property. """
    equipmentSpecification: EquipmentSpecification! @hasInverse(field: properties)
    """ A cross-model dependency to element in the equipment model. """
    equipmentClassProperty: EquipmentClassProperty @hasInverse(field: equipmentSpecificationProperties)
    """ A cross-model dependency to element in the equipment model. """
    equipmentProperty: EquipmentProperty @hasInverse(field: equipmentSpecificationProperties)
}


"""
An identification, reference, or correspondence to a physical asset capability shall be presented as 
a physical asset specification. A physical asset specification may specify either a physical asset or 
a physical asset class. A physical asset specification identifies the specific physical asset capability 
that is associated with the segment.

Specific elements associated with a physical asset specification may be included in one or more physical 
asset specification properties.
"""
type PhysicalAssetSpecification @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ A unique identification of a specific physical asset segment specification. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ Contains additional information of the physical asset specification. """
    description: String @search(by: [fulltext, exact])
    """ Identifies where the exchanged information fits within the role-based physical asset hierarchy. """
    hierarchyScope: HierarchyScope
    """ Spatially defines the physical asset(s) specified by this physical asset specification. """
    spatialDefinition: SpatialDefinition
    """ Identifies the physical location of the physical asset(s) specified by this physical asset specification. """
    physicalLocation: OperationalLocation
    """ Defines the expected use of the physical asset class or physical asset in the context of the operations segment. """
    physicalAssetUse: String @search(by: [exact, fulltext])
    """ Specifies the amount of physical asset resources required for the parent segment. """
    quantity: Float
    """ The unit of measure of the associated quantity. """
    quantityUoM: UnitOfMeasure

    ##### RELATIONSHIPS #####
    """ The operations segment that is in part defined by this physical asset specification. """
    operationsSegment: OperationsSegment @hasInverse(field: physicalAssetSpecifications)
    """ The process segment version that is in part defined by this physical asset specification. """
    processSegmentVersion: ProcessSegmentVersion @hasInverse(field: physicalAssetSpecifications)
    """ The related object(s) makes up part of this physicalAsset specification as the whole. """
    children: [PhysicalAssetSpecification] @hasInverse(field: parent)
    """ The related object that this this physicalAsset specification makes up part of as the whole. """
    parent: PhysicalAssetSpecification @hasInverse(field: children)
    """ The physicalAsset specification property(s) of this physicalAsset specification. """
    properties: [PhysicalAssetSpecificationProperty] @hasInverse(field: physicalAssetSpecification)
    """ A cross-model association to element in the physical asset model. """
    physicalAssetClass: PhysicalAssetClass @hasInverse(field: physicalAssetSpecifications)
    """ A cross-model association to element in the physical asset model. """
    physicalAsset: PhysicalAsset @hasInverse(field: physicalAssetSpecifications)

    """ The resources and instructions required to perform a unit of work without reference to a specific job order. """
    workMaster: WorkMaster @hasInverse(field: physicalAssetSpecifications)
    """ The resources and instructions required to perform a unit of work for a specific job order. """
    workDirective: WorkDirective @hasInverse(field: physicalAssetSpecifications)
}


"""
Specific properties that are required for physical asset specifications shall be presented as physical 
asset specification properties. Physical asset specification properties may contain nested physical 
asset specification properties.
"""
type PhysicalAssetSpecificationProperty @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ An identification of a property of the associated physical asset property or physical asset class property for a specific segment. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ Contains additional information and descriptions of the physical asset specification property definition. """
    description: String @search(by: [fulltext, exact])
    """ The value, set of values, or range of the property. """
    value: String @search(by: [fulltext, exact])
    """ The unit of measure of the associated property value. """
    valueUnitOfMeasure: UnitOfMeasure
    """ Specifies the amount of physical asset resources required for the parent segment. """
    quantity: Float
    """ The unit of measure of the associated quantity. """
    quantityUoM: UnitOfMeasure

    ##### RELATIONSHIPS #####
    """ This child physical asset specification property(s) of the parent physical asset specification property. """
    children: [PhysicalAssetSpecificationProperty] @hasInverse(field: parent)
    """ This parent physical asset specification property of this parent physical asset specification property. """
    parent: PhysicalAssetSpecificationProperty @hasInverse(field: children)
    """ The physical asset specification property(s) of this physical asset specification property. """
    physicalAssetSpecification: PhysicalAssetSpecification! @hasInverse(field: properties)
    """ A cross-model dependency to element in the physical asset model. """
    physicalAssetClassProperty: PhysicalAssetClassProperty @hasInverse(field: physicalAssetSpecificationProperties)
    """ A cross-model dependency to element in the physical asset model. """
    physicalAssetProperty: PhysicalAssetProperty @hasInverse(field: physicalAssetSpecificationProperties)
}


"""
An identification or correspondence to a material capability shall be presented as a material 
specification. A material specification specifies a material, material definition or material class. 
A material specification identifies the specific material specification that is associated with the 
identified operations segment.

Specific elements associated with a material specification may be included in one or more material 
specification properties.
"""
type MaterialSpecification @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ A unique identification of a specific material specification. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ Contains additional information and descriptions of the material specification. """
    description: String @search(by: [fulltext, exact])
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ Spatially defines the material resource(s) specified by this material specification. """
    spatialDefinition: SpatialDefinition
    """ Identifies the storage location of the material resource(s) specified by this material specification. """
    storageLocation: OperationalLocation
    """ Defines the expected use of the material class or material in the context of the operations segment. """
    materialUse: MaterialUse! @search(by: [hash])
    """ Specifies the amount of material resources required for the parent segment. """
    quantity: Float
    """ The unit of measure of the associated quantity. """
    quantityUoM: UnitOfMeasure
    """ Defines the type of the assembly. """
    assemblyType: AssemblyType
    """ Defines the type of the relationships. """
    assemblyRelationship: AssemblyRelationship

    ##### RELATIONSHIPS #####
    """ The operations segment that is in part defined by this material specification. """
    operationsSegment: OperationsSegment @hasInverse(field: materialSpecifications)
    """ The process segment version that is in part defined by this material specification. """
    processSegmentVersion: ProcessSegmentVersion @hasInverse(field: materialSpecifications)
    """ The related object(s) makes up part of this material specification as the whole. """
    children: [MaterialSpecification] @hasInverse(field: parent)
    """ The related object that this this material specification makes up part of as the whole. """
    parent: MaterialSpecification @hasInverse(field: children)
    """ The material specification property(s) of this material specification. """
    properties: [MaterialSpecificationProperty] @hasInverse(field: materialSpecification)
    """ This material specification(s) defines the specified operation material bill item. """
    materialsBill: OperationsMaterialBill @hasInverse(field: materialBillItems)
    
    """ The associated material class or set of material classes of the specification for a specific operations segment. """
    materialClass: MaterialClass @hasInverse(field: materialSpecifications)
    """ The associated material definition or set of material definition of the specification for a specific operations segment. """
    material: MaterialDefinition @hasInverse(field: materialSpecifications)
    """ The associated material lot or set of material lot of the specification for a specific operations segment. """
    materialLot: MaterialLot @hasInverse(field: materialSpecifications)
    """ The associated material sublot or set of material sublot of the specification for a specific operations segment. """
    materialSubLot: MaterialSubLot @hasInverse(field: materialSpecifications)

    """ The resources and instructions required to perform a unit of work without reference to a specific job order. """
    workMaster: WorkMaster @hasInverse(field: materialSpecifications)
    """ The resources and instructions required to perform a unit of work for a specific job order. """
    workDirective: WorkDirective @hasInverse(field: materialSpecifications)

    """ The ID of this testable object ID(s) evaluated by the test specification. """
    testedBy: [TestSpecification] @hasInverse(field: requiredByMaterialSpecification)
    """ The test specification(s) used to evaluate this testable object. """
    specifiesTests: [TestSpecification] @hasInverse(field: testsMaterialSpecifications)
    """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
    testResults: [TestResult] @hasInverse(field: materialSpecification)
}


"""
Specific properties that are required for material specifications shall be presented as material 
specification properties. Material specification properties may contain nested material specification 
properties.
"""
type MaterialSpecificationProperty @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ An identification of the associated material property for a specific segment. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ Contains additional information and descriptions of the material specification property. """
    description: String @search(by: [fulltext, exact])
    """ The value, set of values, or range for the associated property. """
    value: String @search(by: [fulltext, exact])
    """ The unit of measure of the associated property value. """
    valueUnitOfMeasure: UnitOfMeasure
    """ Specifies the amount of material resources required for the parent segment. """
    quantity: Float
    """ The unit of measure of the associated property value. """
    quantityUoM: UnitOfMeasure

    ##### RELATIONSHIPS #####
    """ This child material specification property(s) of the parent material specification property. """
    children: [MaterialSpecificationProperty] @hasInverse(field: parent)
    """ This parent material specification property of this parent material specification property. """
    parent: MaterialSpecificationProperty @hasInverse(field: children)
    """ The material specification property(s) of this material specification property. """
    materialSpecification: MaterialSpecification! @hasInverse(field: properties)
    """ A cross-model dependency to element in the material model. """
    materialClassProperty: MaterialClassProperty @hasInverse(field: materialSpecificationProperties)
    """ A cross-model dependency to element in the material model. """
    materialDefinitionProperty: MaterialDefinitionProperty @hasInverse(field: materialSpecificationProperties)
    """ A cross-model dependency to element in the material model. """
    materialLotProperty: MaterialLotProperty @hasInverse(field: materialSpecificationProperties)
}


"""
An identification of the resources and workflow required to perform a specified unit of work
shall be defined as a work definition. The work definition may apply to production, maintenance, 
quality and inventory activities.
"""
enum WorkType {
    PRODUCTION
    MAINTENANCE
    QUALITY
    INVENTORY
    MIXED
}


"""
Defines the execution dependency constraints of one segment to another segment as the type of the 
execution or dependency factor between the segments. Defined values are explained using dependency 
type between segment A and segment B.
"""
enum DependencyType {
    """ Start B at A start. """
    AT_START
    """ Start B after A start. """
    AFTER_START
    """ Start B after A end. """
    AFTER_END
    """ B cannot follow A. """
    NOT_FOLLOW
    """ B may run in parallel to A. """
    POSSIBLE_PARALLEL
    """ B may not run in parallel to A. """
    NOT_IN_PARALLEL
    """ Start B no later than dependency factor after A start. """
    NO_LATER_AFTER_START
    """ Start B no earlier than dependency factor after A start. """
    NO_EARLIER_AFTER_START
    """ Start B no later than dependency factor after A end. """
    NO_LATER_AFTER_END
    """ B no earlier than dependency factor after A end. """
    NO_EARLIER_AFTER_END
}
# ################################################################################
# Operations Schedule Information Model
# ################################################################################
#
#
# A request for operations to be performed is an operations schedule.
# The operations schedule may apply to scheduling of production, maintenance,
# quality test, and inventory operations.


"""
A request for operations to be performed shall be presented as an operations schedule. An operations 
schedule shall be made up of one or more operations requests. An operations schedule may be defined 
for any specific category of operations; production, maintenance, quality, or inventory, or it may be 
defined for a combination of categories. When a combination is selected, then the operations requests 
or segment requirements specify the category of the operation.
"""
type OperationsSchedule @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: operationsSchedule)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    ##### ATTRIBUTES #####
    """ A unique identification of the operations schedule and could include version and revision identification. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ Contains additional information and descriptions of the operations schedule. """
    description: String @search(by: [fulltext, exact])
    """ Describes the category of operation. """
    operationsType: WorkType! @search
    """ The starting time for the associated operations schedule. """
    scheduledStartDate: DateTime @search
    """ The ending time for the associated operations schedule. """
    scheduledEndDate: DateTime @search
    """ The date and time on which the operations schedule was published or generated. """
    publishedDate: DateTime @search
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ Indicates the state of the operations schedule. """
    scheduleState: ScheduleState @search

    ##### RELATIONSHIPS #####
    """ The operations requests that make up the operations schedule. """
    operationsRequests: [OperationsRequest!]! @hasInverse(field: operationsSchedule)
    """ The operations performance(s) reporting the actuals and states references this operations schedule(s). """
    operationsPerformance: [OperationsPerformance] @hasInverse(field: operationsSchedule)
}


"""
A request for an element of an operation schedule shall be presented as an operations request. An 
operations request contains the information required by manufacturing to fulfill the scheduled operation. 
An operations request may be a subset of the business information, or it may contain additional information 
not normally used by the business system.

An operations request may identify or reference the associated operations instructions. An operations 
request shall contain at least one segment requirement, even if the segment requirement spans all of 
the operation.

An operations request may include when to start the operation, typically used if a scheduling system 
controls the schedule; when the operation is to be finished, typically used if the manufacturing operations 
system controls its internal schedule to meet deadlines; and the priority of the request, typically used 
if exact ordering of production is not externally scheduled.

An operations request may be reported on by one or more operations responses. Additional information may 
be described in the parameters, personnel requirements, equipment requirements, physical asset requirements 
and material requirements.
"""
type OperationsRequest @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: operationsRequest)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    ##### ATTRIBUTES #####
    """ A unique identification of the operations request. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ Contains additional information and descriptions of the operations request. """
    description: String @search(by: [fulltext, exact])
    """ Describes the category of operations. """
    operationsType: WorkType! @search
    """ When operation is to be started. """
    scheduledStartDate: DateTime @search
    """ When operation is to be completed. """
    scheduledEndDate: DateTime @search
    """ The priority of the request. """
    priority: String
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ Indicates the state of the operations request. """
    requestState: ScheduleState!
    """ Notes about this operations request. """
    notes: String


    ##### RELATIONSHIPS #####
    """ The operations schedule object defined in part by this operations request. """
    operationsSchedule: OperationsSchedule! @hasInverse(field: operationsRequests)
    """ The operations definition reference that corresponds to this operations request. """
    operationsDefinition: OperationsDefinition @hasInverse(field: operationsRequests)
    """ The associated operations segments reference that corresponds to this operations request. """
    operationsSegment: OperationsSegment @hasInverse(field: operationsRequests)
    """ The segment requirements related to this operations request. """
    segmentRequirements: [SegmentRequirement!]! @hasInverse(field: operationsRequest)
    """ The work request(s) related to this operations request(s). """
    workRequests: [WorkRequest] @hasInverse(field: operationsRequest)
    """ The operations response(s) related to this operations request(s). """
    operationsResponses: [OperationsResponse] @hasInverse(field: operationsRequest)
    """ The segment response(s) related to this operations request(s). """
    segmentResponses: [SegmentResponse] @hasInverse(field: operationsRequests)
}


"""
An operations request shall be made up of one or more segment requirements. Each segment requirement 
shall correspond to, or reference, an identified operations definition, operations segment or process 
segment. The segment requirement identifies or references the segment capability to which the associated 
personnel, equipment, physical assets, materials, and segment parameters correspond.

The segment requirement properties and segment parameters shall align with the parameters sent as part 
of an operations request.
"""
type SegmentRequirement @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    ##### ATTRIBUTES #####
    """ A unique identification of the segment requirement within the scope of an operations request. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ Contains additional information and descriptions of the segment requirement. """
    description: String @search(by: [fulltext, exact])
    """ Describes the category of operation. """
    operationsType: WorkType! @search
    """ The expected earliest start time of this segment requirement. """
    earliestStartDate: DateTime @search
    """ The expected latest ending time of this segment requirement. """
    latestEndDate: DateTime @search
    """ The expected duration of this segment requirement. """
    duration: Float
    """ The unit of measure of the duration. """
    durationUoM: UnitOfMeasure
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ Indicates the state of the segment requirement. """
    segmentState: ScheduleState!
    """ Notes about this segment requirement. """
    notes: String


    ##### RELATIONSHIPS #####
    """ The operations request is defined in part by this segment requirement. """
    operationsRequest: OperationsRequest! @hasInverse(field: segmentRequirements)
    """ The operations definition reference that corresponds to this segment requirement. """
    operationsDefinition: OperationsDefinition @hasInverse(field: segmentRequirements)
    """ The associated operations segments that corresponds to this segment requirement. """
    operationsSegment: OperationsSegment @hasInverse(field: segmentRequirements)
    """ An identification of the process segment associated with this segment requirement. """
    processSegment: ProcessSegment @hasInverse(field: segmentRequirements)
    """ The related object(s) makes up part of this segment requirement as the whole. """
    children: [SegmentRequirement] @hasInverse(field: parent)
    """ The related object(s) that this segment requirement makes up part of as the whole. """
    parent: SegmentRequirement @hasInverse(field: children)
    """ The work request(s) related to this segment requirement(s). """
    workRequests: [WorkRequest] @hasInverse(field: segmentRequirement)
    """ The job order(s) related to this segment requirement(s). """
    jobOrders: [JobOrder] @hasInverse(field: segmentRequirement)
    """ The operations response(s) related to this segment requirement(s). """
    operationsResponses: [OperationsResponse] @hasInverse(field: segmentRequirements)
    """ The segment response(s) related to this segment requirement(s). """
    segmentResponses: [SegmentResponse] @hasInverse(field: segmentRequirements)
    """ The segment parameters related to this segment requirement. """
    parameters: [SegmentParameter] @hasInverse(field: segmentRequirement)
    """ The personnel requirements related to this segment requirement. """
    personnelRequirements: [PersonnelRequirement] @hasInverse(field: segmentRequirement)
    """ The equipment requirements related to this segment requirement. """
    equipmentRequirements: [EquipmentRequirement] @hasInverse(field: segmentRequirement)
    """ The physical asset requirements related to this segment requirement. """
    physicalAssetRequirements: [PhysicalAssetRequirement] @hasInverse(field: segmentRequirement)
    """ The material requirements related to this segment requirement. """
    materialRequirements: [MaterialRequirement] @hasInverse(field: segmentRequirement)
}


"""
Specific parameters required for a segment requirement shall be presented as segment parameters.

A segment parameter shall include an identification of the parameter that matches parameter 
specification of the operations definition, such as target acidity; a value for the parameter, 
such as 3,4; and the unit of measure of the parameter, such as pH.

A segment parameter should include a set of limits that apply to any change to the value, such as 
quality limits and safety limits. 

Segment parameters may contain nested segment parameters.
"""
type SegmentParameter @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    ##### ATTRIBUTES #####
    """ The identification of the segment parameter. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ Contains additional information and descriptions of the segment parameter. """
    description: String @search(by: [fulltext, exact])
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ The value, set of values, or range of the value to be used for this parameter. """
    value: String
    """ The engineering units in which the value is defined. """
    valueUnitOfMeasure: UnitOfMeasure

    ##### RELATIONSHIPS #####
    """ The segment requirement containing this segment parameter. """
    segmentRequirement: SegmentRequirement! @hasInverse(field: parameters)
    """ The segment parameter(s) that are part of this segment parameter. """
    children: [SegmentParameter] @hasInverse(field: parent)
    """ The segment parameter that this segment parameter is part of. """
    parent: SegmentParameter @hasInverse(field: children)
    """ This segment parameter(s) corresponds to the parameter specification(s) in the operations definition. """
    parameterSpecification: ParameterSpecification @hasInverse(field: segmentParameters)
    """ This segment parameter(s) corresponds to the process segment parameter(s) in the process segment. """
    processSegmentParameter: ProcessSegmentParameter @hasInverse(field: segmentParameters)

    ### ISA 88 Compliance ###
    """ Defines a comment on the segment parameter. """
    comments: [Comment] @hasInverse(field: segmentParameter)
}


"""
The identification of the number, type, duration, and scheduling of specific certifications and job 
classifications needed to support the current operations request shall be presented as personnel 
requirements.

A personnel requirement shall include the identification of the personnel needed, such as milling 
machine operator; and the quantity of personnel needed.

Specific elements associated with each personnel requirement may be included in one or more personnel 
requirement properties.
"""
type PersonnelRequirement @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    ##### ATTRIBUTES #####
    """ A unique identification of a specific personnel requirement. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ Contains additional information and descriptions of the personnel requirement. """
    description: String @search(by: [fulltext, exact])
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ Identifies the operational location of the personnel resource(s) specified by this personnel requirement. """
    operationalLocation: OperationalLocation
    """ Defines the expected use of the personnel class or person in the context of the segment requirement. """
    use: String @search(by: [fulltext, exact])
    """ Specifies the amount of personnel resources required for the parent segment. """
    quantity: Float!
    """ Identifies the unit of measure of the quantity. """
    quantityUoM: UnitOfMeasure

    ##### RELATIONSHIPS #####
    """ This personnel requirement is a part of the segment requirement as the whole. """
    segmentRequirement: SegmentRequirement @hasInverse(field: personnelRequirements)
    """ The related object(s) makes up part of this personnel requirement as the whole. """
    children: [PersonnelRequirement] @hasInverse(field: parent)
    """ The related object makes this personnel requirement up part of as the whole. """
    parent: PersonnelRequirement @hasInverse(field: children)
    """ The values in the personnel requirement property are for this personnel requirement. """
    properties: [PersonnelRequirementProperty] @hasInverse(field: personnelRequirement)
    """ Identifies the associated personnel class(s) of the personnel requirement for a specific segment requirement. """
    personnelClass: PersonnelClass @hasInverse(field: personnelRequirements)
    """ Identifies the associated person(s) of the personnel requirement for a specific segment requirement.  """
    person: Person @hasInverse(field: personnelRequirements)

    """ Job order associated with this personnel requirement. """
    jobOrder: JobOrder @hasInverse(field: personnelRequirements)

    """ The ID of this testable object ID(s) evaluated by the test specification. """
    testedBy: [TestSpecification] @hasInverse(field: requiredByPersonnelRequirement)
    """ The test specification(s) used to evaluate this testable object. """
    specifiesTests: [TestSpecification] @hasInverse(field: testsPersonnelRequirements)
    """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
    testResults: [TestResult] @hasInverse(field: personnelRequirement)

    #### 21 CFR 11 Compliance ####
    """ Can have electronic Signature. """
    signatures: [Signature] @hasInverse(field: personnelRequirement)

    ### ISA 88 Compliance ###
    """ Defines a comment on the personnel requirement. """
    comments: [Comment] @hasInverse(field: personnelRequirement)
}


"""
Specific properties that are required for personnel requirements shall be presented as personnel 
requirement properties. Personnel requirement properties may contain nested personnel requirement 
properties.
"""
type PersonnelRequirementProperty @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    ##### ATTRIBUTES #####
    """ An identification of the associated person property or personnel class property for a specific segment requirement. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ Contains additional information and descriptions of the personnel requirement property definition. """
    description: String @search(by: [fulltext, exact])
    """ The value, set of values, or range of the property. """
    value: String @search(by: [fulltext, exact])
    """ The unit of measure of the associated property value. """
    valueUnitOfMeasure: UnitOfMeasure
    """ Specifies the amount of the property required for the parent personnel requirement. """
    quantity: Float
    """ Identifies the unit of measure of the quantity. """
    quantityUoM: UnitOfMeasure

    ##### RELATIONSHIPS #####
    """ The values for this personnel requirement property in part are for the personnel requirement. """
    personnelRequirement: PersonnelRequirement! @hasInverse(field: properties)
    """ The values in the child personnel requirement property for this personnel requirement. """
    children: [PersonnelRequirementProperty] @hasInverse(field: parent)
    """ The values in the child personnel requirement property for this personnel requirement. """
    parent: PersonnelRequirementProperty @hasInverse(field: children)
    """ A cross-model dependency to element in the personnel model. """
    personnelClassProperty: PersonnelClassProperty @hasInverse(field: personnelRequirementProperties)
    """ A cross-model dependency to element in the personnel model. """
    personProperty: PersonProperty @hasInverse(field: personnelRequirementProperties)
}


"""
The identification of the number, type, duration, and scheduling of specific equipment and equipment 
classifications or equipment constraints needed to support the current operations request shall be 
presented as an equipment requirement. The operations request may include one or more equipment 
requirements. Requirements can be as generic as materials of construction, or as specific as a particular 
piece of equipment. Each of these requirements shall be an instance of an equipment requirement.

Properties of the equipment requirement shall be presented as equipment requirement properties. 

Each equipment requirement identifies a general class of equipment (such as reactor vessels), a specific 
class of equipment (such as isothermal reactors), or a specific piece or set of equipment (such as 
isothermal reactor #7). The specific requirements on the equipment, or equipment class are listed as 
equipment requirement property objects. 

An equipment requirement shall include the identification of the equipment needed, such as milling 
machine; and the quantity of equipment needed. Specific elements associated with each equipment 
requirement may be included in one or more equipment requirement properties.
"""
type EquipmentRequirement @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    ##### ATTRIBUTES #####
    """ Defines a unique identification of a specific equipment requirement. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ Contains additional information and descriptions of the equipment requirement. """
    description: String @search(by: [fulltext, exact])
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ Identifies the operational location of the equipment specified by this equipment requirement. """
    operationalLocation: OperationalLocation
    """ Defines the expected use of the equipment class or equipment. """
    use: String @search(by: [fulltext, exact])
    """ Specifies the amount of equipment resources required for the parent segment. """
    quantity: Float
    """ The unit of measure of the associated quantity. """
    quantityUoM: UnitOfMeasure
    """ A definition of the level of the associated element of the equipment model. """
    equipmentLevel: EquipmentElementLevel

    ##### RELATIONSHIPS #####
    """ The segment requirement defined in part by this equipment requirement. """
    segmentRequirement: SegmentRequirement @hasInverse(field: equipmentRequirements)
    """ The related object(s) makes up part of this equipment requirement as the whole. """
    children: [EquipmentRequirement] @hasInverse(field: parent)
    """ The related object makes this equipment requirement up part of as the whole. """
    parent: EquipmentRequirement @hasInverse(field: children)
    """ The values in the equipment requirement property are for this equipment requirement. """
    properties: [EquipmentRequirementProperty] @hasInverse(field: equipmentRequirement)
    """ Identifies the associated equipment class(s) of the equipment requirement for a specific segment requirement. """
    equipmentClass: EquipmentClass @hasInverse(field: equipmentRequirements)
    """ Identifies the associated equipment of the equipment requirement for a specific segment requirement. """
    equipment: Equipment @hasInverse(field: equipmentRequirements)

    """ Job order associated with this equipment requirement """
    jobOrder: JobOrder @hasInverse(field: equipmentRequirements)

    """ The ID of this testable object ID(s) evaluated by the test specification. """
    testedBy: [TestSpecification] @hasInverse(field: requiredByEquipmentRequirement)
    """ The test specification(s) used to evaluate this testable object. """
    specifiesTests: [TestSpecification] @hasInverse(field: testsEquipmentRequirements)
    """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
    testResults: [TestResult] @hasInverse(field: equipmentRequirement)

    #### 21 CFR 11 Compliance ####
    """ Can have electronic Signature. """
    signatures: [Signature] @hasInverse(field: equipmentRequirement)

    ### ISA 88 Compliance ###
    """ Defines a comment on the equipment requirement. """
    comments: [Comment] @hasInverse(field: equipmentRequirement)
}


"""
Specific properties that are required for equipment requirements shall be presented as equipment 
requirement properties. Equipment requirement properties may contain nested equipment requirement 
properties.
"""
type EquipmentRequirementProperty @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    ##### ATTRIBUTES #####
    """ An identification of the associated equipment property or equipment class property for a specific segment requirement. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ Contains additional information and descriptions of the equipment requirement property definition. """
    description: String @search(by: [fulltext, exact])
    """ The value, set of values, or range of the associated property. """
    value: String @search(by: [fulltext, exact])
    """ The unit of measure of the associated property value. """
    valueUnitOfMeasure: UnitOfMeasure
    """ Specifies the amount of equipment requirement property required for the parent equipment requirement. """
    quantity: Float
    """ The unit of measure of the associated quantity. """
    quantityUoM: UnitOfMeasure

    ##### RELATIONSHIPS #####
    """ The values for this equipment requirement property in part are for the equipment requirement. """
    equipmentRequirement: EquipmentRequirement! @hasInverse(field: properties)
    """ The values in the child equipment requirement property for this equipment requirement. """
    children: [EquipmentRequirementProperty] @hasInverse(field: parent)
    """ The equipment requirement property this entity is part of. """
    parent: EquipmentRequirementProperty @hasInverse(field: children)
    """ A cross-model dependency to element in the equipment model. """
    equipmentClassProperty: EquipmentClassProperty @hasInverse(field: equipmentRequirementProperties)
    """ A cross-model dependency to element in the equipment model. """
    equipmentProperty: EquipmentProperty @hasInverse(field: equipmentRequirementProperties)
}


"""
The identification of the number, type, duration, and scheduling of specific physical assets and physical 
asset class constraints needed to support the current operations request shall be presented as a physical 
asset requirement. The operations request may include one or more physical asset requirements. Requirements 
can be as generic as materials of construction, or as specific as a particular piece of physical asset. 
Each of these requirements shall be an instance of a physical asset requirement.

Properties of the physical asset requirement shall be presented as physical asset requirement properties. 
A physical asset requirement shall include the identification of the physical asset needed, such as milling 
machine serial number #345334; and the quantity of physical asset needed. Specific elements associated with 
each physical asset requirement may be included in one or more physical asset requirement properties.
"""
type PhysicalAssetRequirement @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    ##### ATTRIBUTES #####
    """ Defines a unique identification of a physical asset requirement. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ Contains additional information and descriptions of the physical asset requirement. """
    description: String @search(by: [fulltext, exact])
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ Identifies the physical location of the physical asset(s) specified by this physical asset requirement. """
    physicalLocation: OperationalLocation
    """ Defines the expected use of the physical asset class or physical asset. """
    use: String @search(by: [fulltext, exact])
    """ Specifies the amount of equipment resources required for the parent segment. """
    quantity: Float
    """ The unit of measure of the associated quantity. """
    quantityUoM: UnitOfMeasure
    """ A level definition for the associated element in the hierarchy of the physical asset model """
    equipmentLevel: EquipmentElementLevel

    ##### RELATIONSHIPS #####
    """ The segment requirement defined in part by this physical asset requirement. """
    segmentRequirement: SegmentRequirement @hasInverse(field: physicalAssetRequirements)
    """ The related object(s) makes up part of this physical asset requirement as the whole. """
    children: [PhysicalAssetRequirement] @hasInverse(field: parent)
    """ The related object(s) made up in part by this physical asset requirement as the whole. """
    parent: PhysicalAssetRequirement @hasInverse(field: children)
    """ The values in the physical asset requirement property are for this physical asset requirement. """
    properties: [PhysicalAssetRequirementProperty] @hasInverse(field: physicalAssetRequirement)
    """ Identifies the associated physical asset model(s) of the physical asset requirement for a specific segment requirement. """
    physicalAssetClass: PhysicalAssetClass @hasInverse(field: physicalAssetRequirements)
    """ Identifies the associated physical asset(s) of the physical asset requirement for a specific segment requirement. """
    physicalAsset: PhysicalAsset @hasInverse(field: physicalAssetRequirements)

    """ Job order associated with this physical asset requirement. """
    jobOrder: JobOrder @hasInverse(field: physicalAssetRequirements)

    """ The ID of this testable object ID(s) evaluated by the test specification. """
    testedBy: [TestSpecification] @hasInverse(field: requiredByPhysicalAssetRequirement)
    """ The test specification(s) used to evaluate this testable object. """
    specifiesTests: [TestSpecification] @hasInverse(field: testsPhysicalAssetRequirements)
    """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
    testResults: [TestResult] @hasInverse(field: physicalAssetRequirement)

    #### 21 CFR 11 Compliance ####
    """ Can have electronic Signature. """
    signatures: [Signature] @hasInverse(field: physicalAssetRequirement)

    ### ISA 88 Compliance ###
    """ Defines a comment on the physical asset requirement. """
    comments: [Comment] @hasInverse(field: physicalAssetRequirement)
}


"""
Specific properties that are required for physical asset requirements shall be presented as physical 
asset requirement properties. Physical asset requirement properties may contain nested physical asset 
requirement properties.
"""
type PhysicalAssetRequirementProperty @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    ##### ATTRIBUTES #####
    """ An identification of the associated equipment property or equipment class property for a specific segment requirement. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ Contains additional information and descriptions of the equipment requirement property definition. """
    description: String @search(by: [fulltext, exact])
    """ The value, set of values, or range of the associated property. """
    value: String @search(by: [fulltext, exact])
    """ The unit of measure of the associated property value. """
    valueUnitOfMeasure: UnitOfMeasure
    """ Specifies the amount of physical asset requirement property required for the parent physical asset. """
    quantity: Float
    """ The unit of measure of the associated quantity. """
    quantityUoM: UnitOfMeasure

    ##### RELATIONSHIPS #####
    """ The values for this physical asset requirement property in part are for the physical asset requirement. """
    physicalAssetRequirement: PhysicalAssetRequirement! @hasInverse(field: properties)
    """ The values in the child physical asset requirement property for this physical asset requirement. """
    children: [PhysicalAssetRequirementProperty] @hasInverse(field: parent)
    """ The partent physical asset requirement property this physical asset requirement has values for. """
    parent: PhysicalAssetRequirementProperty @hasInverse(field: children)
    """ A cross-model dependency to element in the physical asset model. """
    physicalAssetClassProperty: PhysicalAssetClassProperty @hasInverse(field: physicalAssetRequirementProperties)
    """ A cross-model dependency to element in the physical asset model. """
    physicalAssetProperty: PhysicalAssetProperty @hasInverse(field: physicalAssetRequirementProperties)
}


""" 
An identification of a material that is expected to be used in the operations request shall be 
presented as a material requirement. Material requirements contain definitions of materials that may 
be consumed, produced, replaced, sampled, or otherwise used in manufacturing. 
"""
type MaterialRequirement @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    ##### ATTRIBUTES #####
    """ Defines a unique identification of a specific material requirement, """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ Contains additional information and descriptions of the material requirement definition. """
    description: String @search(by: [fulltext, exact])
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ Identifies the storage location of the material resource(s) specified by this material requirement. """
    storageLocation: OperationalLocation
    """ Defines the expected use of the material class, material definition, material lot, or material sublot 
    in the context of the segment requirement. """
    materialUse: MaterialUse! @search
    """ Specifies the amount of material to be used. """
    quantity: Float!
    """ Identifies the unit of measure of the quantity if applicable. """
    quantityUoM: UnitOfMeasure
    """ Defines the type of the assembly. """
    assemblyType: AssemblyType @search(by: [exact])
    """ Defines the type of the relationships. """
    assemblyRelationship: AssemblyRelationship @search(by: [exact])

    ##### RELATIONSHIPS #####
    """ The segment requirement defined in part by this material requirement. """
    segmentRequirement: SegmentRequirement @hasInverse(field: materialRequirements)
    """ The related object(s) makes up part of this material requirement as the whole. """
    children: [MaterialRequirement] @hasInverse(field: parent)
    """ The related object that this material requirement makes up part of as the whole. """
    parent: MaterialRequirement @hasInverse(field: children)
    """ The values in the material requirement property are for this material requirement. """
    properties: [MaterialRequirementProperty] @hasInverse(field: materialRequirement)
    """ Identifies the associated material class(s) of the material requirement for a specific segment requirement. """
    materialClass: MaterialClass @hasInverse(field: materialRequirements)
    """ Identifies the associated material definition(s) of the material requirement for a specific segment requirement. """
    material: MaterialDefinition @hasInverse(field: materialRequirements)
    """ Identifies the associated material lot(s) of the material requirement for a specific segment requirement. """
    materialLots: [MaterialLot] @hasInverse(field: materialRequirements)
    """ Identifies the associated material sublot(s) of the material requirement for a specific segment requirement. """
    materialSubLots: [MaterialSubLot] @hasInverse(field: materialRequirements)

    """ Job order associated with this material requirement. """
    jobOrder: JobOrder @hasInverse(field: materialRequirements)

    """ The ID of this testable object ID(s) evaluated by the test specification. """
    testedBy: [TestSpecification] @hasInverse(field: requiredByMaterialRequirement)
    """ The test specification(s) used to evaluate this testable object. """
    specifiesTests: [TestSpecification] @hasInverse(field: testsMaterialRequirements)
    """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
    testResults: [TestResult] @hasInverse(field: materialRequirement)

    #### 21 CFR 11 Compliance ####
    """ Can have electronic Signature. """
    signatures: [Signature] @hasInverse(field: materialRequirement)

    ### ISA 88 Compliance ###
    """ Defines a comment on the material requirement. """
    comments: [Comment] @hasInverse(field: materialRequirement)
}


"""
Properties of a material requirement shall be presented as material requirement properties. Specific 
elements associated with each material requirement may be included in one or more material requirement 
properties. Material requirement properties may contain nested material requirement properties.
"""
type MaterialRequirementProperty @withSubscription @key(fields: "iid"){
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    ##### ATTRIBUTES #####
    """ An identification of a property of the associated material property or material class property for a 
    specific segment requirement. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ Contains additional information and descriptions of the material produced requirement property definition. """
    description: String @search(by: [fulltext, exact])
    """ The value, set of values, or range of the associated property. """
    value: String @search(by: [fulltext, exact])
    """ The unit of measure of the associated property value. """
    valueUnitOfMeasure: UnitOfMeasure
    """ Specifies the amount of material to be produced. """
    quantity: Float
    """ Identifies the unit of measure of the quantity if applicable. """
    quantityUoM: UnitOfMeasure

    ##### RELATIONSHIPS #####
    """ The values for this material requirement property in part are for the material requirement. """
    materialRequirement: MaterialRequirement! @hasInverse(field: properties)
    """ The values in the child material requirement property for this material requirement. """
    children: [MaterialRequirementProperty] @hasInverse(field: parent)
    """ The partent material requirement property this material requirement has values for. """
    parent: MaterialRequirementProperty @hasInverse(field: children)
    """ A cross-model dependency to element in the material model. """
    materialClassProperty: MaterialClassProperty @hasInverse(field: materialRequirementProperties)
    """ A cross-model dependency to element in the material model. """
    materialDefinitionProperty: MaterialDefinitionProperty @hasInverse(field: materialRequirementProperties)
    """ A cross-model dependency to element in the material model. """
    materialLotProperty: MaterialLotProperty @hasInverse(field: materialRequirementProperties)
}


""" 
The defined values for the schedule state attribute of the operations schedule, request state attribute 
for the operations request, and segment state attribute for segment requirement have the following definitions.
"""
enum ScheduleState {
    """ The requirements have not been released for planning. """
    FORECAST
    """ The requirements have been released for execution. """
    RELEASED
    """ A scheduling decision has been taken to cancel the requirements prior to commencement of execution. """
    CANCELLED
    """ Necessary preconditions have not been met and the job orders or activities are not ready to run. """
    WAITING
    """ Necessary preconditions have been met and the job orders or activities are ready to run. """
    READY
    """ Job orders or activities are in execution. """
    RUNNING
    """ Job orders or activities have been completed and are no longer in execution. """
    COMPLETED
    """ An execution decision has been taken to terminate the job orders or activities that may, or may not, 
    have been previously commenced. """
    ABORTED
    """ Job orders or activities have been temporarily stopped due to a constraint of some form. """
    HELD
    """ Job orders or activities have been temporarily stopped due to a deliberate decision within execution. """
    SUSPENDED
    """ Job orders or activities have been completed and fully reconciled. No further changes, or restatement 
    of actuals is expected. """
    CLOSED
}
# ################################################################################
# Operations Performance Information Model
# ################################################################################
#
#
# Operations performance reports on requested manufacturing and is a collection of
# operations responses.
# Operations responses are responses from manufacturing that may be associated with an
# operations request.
# There may be one or more operations responses for a single operations
# request if the manufacturing facility needs to split the operations request into smaller elements.
#


"""
The performance of the requested manufacturing requests shall be presented as an operations performance. 
Operations performance shall be a collection of operations responses.
"""
type OperationsPerformance @withSubscription @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ The list of OperationsEventRecordEntries that have been recorded """
  recordEntries: [InformationObject] @hasInverse(field: operationsPerformance)

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ A unique identification of the operations performance and could include version and revision identification. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ Contains additional information and descriptions of the operations performance. """
  description: String @search(by: [fulltext, exact])
  """ Describes the category of operations. """
  operationsType: WorkType! @search
  """ The starting time of the associated operations performance. """
  startDateTime: DateTime @search
  """ The ending time of the associated operations performance. """
  endDateTime: DateTime @search
  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope
  """ Indicates the state of the operations performance. """
  performanceState: JobState
  """ The date and time on which the operations performance was published or generated. """
  publishedDate: DateTime @search

  ##### RELATIONSHIPS #####
  """ The operations responses that make up part of this operations performance as the whole. """
  operationsResponses: [OperationsResponse!]! @hasInverse(field: operationsPerformance)
  # 0..* in docs, 0..* to 0..* relationship. Probably should be singular, need to make sure.
  """ An identification of the associated operations schedule. """
  operationsSchedule: OperationsSchedule @hasInverse(field: operationsPerformance)
}


"""
The responses from manufacturing that are associated with an operations request shall be presented as 
operations responses. There may be one or more operations responses for a single operations request if 
the manufacturing facility needs to split the operations request into smaller elements. 

An operations response may include the status of the request, such as the percentage complete, a 
finished status, or an aborted status.
"""
type OperationsResponse @withSubscription @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ The list of OperationsEventRecordEntries that have been recorded """
  recordEntries: [InformationObject] @hasInverse(field: operationsResponse)

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ An identification within the associated operations response. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ Contains additional information and descriptions of the operations response. """
  description: String @search(by: [fulltext, exact])
  """ Describes the category of operations. """
  operationsType: WorkType! @search
  """ The starting time of this operations response. """
  startDateTime: DateTime! @search
  """ The ending time of this operations response. """
  endDateTime: DateTime @search
  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope
  """ Indicates the state of the operations response. """
  responseState: JobState @search

  ##### RELATIONSHIPS #####
  """ The operations performance is defined in part by this operations response. """
  operationsPerformance: OperationsPerformance! @hasInverse(field: operationsResponses)

  ## 0..* in docs. All n to n relationships
  """ The operations request that corresponds to this operations response if it exists or is relevant. """
  operationsRequest: OperationsRequest @hasInverse(field: operationsResponses)
  """ The operations definition(s) that corresponds to this operations response if it exists or is relevant. """
  operationsDefinition: OperationsDefinition @hasInverse(field: operationsResponses)
  """ The operations segment(s) that corresponds to this operations response if it exists or is relevant. """
  operationsSegment: OperationsSegment @hasInverse(field: operationsResponses)
  """ The segment requirement(s) related to this operations response. """
  segmentRequirements: [SegmentRequirement] @hasInverse(field: operationsResponses)

  """ The segment response(s) related to this operations response. """
  segmentResponses: [SegmentResponse!]! @hasInverse(field: operationsResponse)




  isActive: Boolean @search
  properties: [OperationsResponseProperty] @hasInverse(field: operationsResponse)
}


"""
Information on a segment of an operations response shall be presented as a segment response. A segment 
response shall be made up of zero or more sets of information on segment data, personnel actual, equipment 
actual, physical asset actual, and material actual. There may be one or more segment responses for a 
single segment request if the manufacturing facility needs to split the segment requirement into smaller 
elements.

An operations response shall be made up of one or more segment responses. Each segment response shall 
correspond to, or reference, an identified operations segment or process segment. The segment response 
identifies or references the segment capability to which the associated personnel, equipment, materials, 
and segment parameters correspond.

A segment response shall include an identification of the associated operations segment or process 
segment; the actual starting time; and the actual stopping time.
"""
type SegmentResponse @withSubscription @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ Uniquely identifies an instance of a segment response executed. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ Contains additional information and descriptions of the segment response. """
  description: String @search(by: [fulltext, exact])
  """ Describes the category of operations. """
  operationsType: WorkType! @search
  """ The actual start time of this segment response. """
  actualStartDateTime: DateTime @search
  """ The actual end time of this segment response. """
  actualEndDateTime: DateTime @search
  """ The date and time used for posting resource actuals to supporting applications. """
  postingDateTime: DateTime @search
  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope
  """ Indicates the state of the segment response. """
  segmentState: JobState @search

  ##### RELATIONSHIPS #####
  # Possibly change to 0..1 for some of these?
  """ The operations definition(s) corresponds to this segment response. """
  operationsDefinitions: [OperationsDefinition] @hasInverse(field: segmentResponses)
  """ The operations segment(s) corresponds to this segment response. """
  operationsSegments: [OperationsSegment] @hasInverse(field: segmentResponses)
  """ The process segment corresponds to this segment response. """
  processSegment: ProcessSegment @hasInverse(field: segmentResponses)
  """ The operations request(s) corresponds to this segment response. """
  operationsRequests: [OperationsRequest] @hasInverse(field: segmentResponses)
  """ The segment requirement(s) corresponds to this segment response. """
  segmentRequirements: [SegmentRequirement] @hasInverse(field: segmentResponses)
  """ The work response(s) corresponds to this segment response. """
  workResponses: WorkResponse @hasInverse(field: segmentResponse)
  """ The job response(s) corresponds to this segment response. """
  jobResponses: JobResponse @hasInverse(field: segmentResponse)
  """ The related object(s) makes up part of this segment response as the whole. """
  children: [SegmentResponse] @hasInverse(field: parent)
  """ The related object(s) this segment response makes up part of as the whole. """
  parent: SegmentResponse @hasInverse(field: children)
  """ This segment response is a part of the operations response as the whole. """
  operationsResponse: OperationsResponse! @hasInverse(field: segmentResponses)
  """ The segment data related to this segment response. """
  segmentData: [SegmentData] @hasInverse(field: segmentResponse)
  """ The personnel actuals related to this segment response. """
  personnelActual: [PersonnelActual] @hasInverse(field: segmentResponse)
  """ The equipment actuals related to this segment response. """
  equipmentActual: [EquipmentActual] @hasInverse(field: segmentResponse)
  """ The physical asset actuals related to this segment response. """
  physicalAssetActual: [PhysicalAssetActual] @hasInverse(field: segmentResponse)
  """ The material actuals related to this segment response. """
  materialActual: [MaterialActual] @hasInverse(field: segmentResponse)
}


"""
Other information related to the actual operations made shall be presented as segment data. 
Segment data may contain nested segment data.
"""
type SegmentData @withSubscription @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ The identification of the segment data. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ The label is last node in the fully qualified name. """
  label: String! @search(by: [fulltext, exact, regexp])
  """ Contains additional information and descriptions of the segment data. """
  description: String @search(by: [fulltext, exact])
  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope
  """ The value or set of values of the segment data. """
  value: String @search(by: [fulltext, exact])
  """ The engineering units in which the value is defined. """
  valueUnitOfMeasure: UnitOfMeasure

  ##### RELATIONSHIPS #####
  """ The segment response defined in part by this segment data. """
  segmentResponse: SegmentResponse @hasInverse(field: segmentData)
  """ The segment data(s) that is part of this segment data as the whole. """
  children: [SegmentData] @hasInverse(field: parent)
  """ The segment data(s) that this segment data is part of as the whole. """
  parent: SegmentData @hasInverse(field: children)
}


"""
An identification of a personnel capability used during a specified segment response shall be presented 
as personnel actual.

Personnel actuals shall include the identification of each resource used, usually identifying a specific 
personnel capability or personnel class, such as end-point transmission assembly operators, or personnel 
IDs such as Jean Smith or SS# 999-123-4567.

Specific information about personnel actuals shall be presented in personnel actual properties.
"""
type PersonnelActual @withSubscription @key(fields: "iid"){
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ A unique identification of a specific personnel actual. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ Contains additional information and descriptions of the personnel actual. """
  description: String @search(by: [fulltext, exact])
  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope
  """ Spatially defines the personnel resource(s) specified by this personnel actual. """
  spatialDefinition: SpatialDefinition
  """ Identifies the operational location of the personnel resource(s) specified by this personnel actual. """
  operationalLocation: OperationalLocation
  """ Defines the expected use of the personnel class or person in the context of the operations response. """
  personnelUse: String @search(by: [fulltext, exact])
  """ Specifies the amount of personnel resources used in the parent segment. """
  quantity: Float
  """ Identifies the unit of measure of the quantity. """
  quantityUoM: UnitOfMeasure

  ##### RELATIONSHIPS #####
  """ This personnel actual is a part of the segment response as the whole. """
  segmentResponse: SegmentResponse @hasInverse(field: personnelActual)
  """ The related object(s) makes up part of this personnel actual as the whole. """
  children: [PersonnelActual] @hasInverse(field: parent)
  """ The related object(s) this personnel actual makes up part of as the whole. """
  parent: PersonnelActual @hasInverse(field: children)
  """ The values in the personnel actual property are for this personnel actual. """
  properties: [PersonnelActualProperty] @hasInverse(field: personnelActual)
  """ This personnel actual reports the test result in a segment response or job response. """
  testResults: [TestResult] @hasInverse(field: personnelActual)
  """ Identifies the associated personnel class(s) actually used for a specific segment response. """
  personnelClass: [PersonnelClass] @hasInverse(field: personnelActual)
  """ Identifies the associated person(s) actually used for a specific segment response. """
  person: [Person] @hasInverse(field: personnelActual)
  """ Identifies the associated person(s) actually used for a specific segment response. """
  personVersion: [PersonVersion] @hasInverse(field: personnelActual)

  """ Job response this personnel actual relates to. """
  jobResponse: JobResponse @hasInverse(field: personnelActual)

  #### 21 CFR 11 Compliance ####
  """ Can have electronic Signature. """
  signatures: [Signature] @hasInverse(field: personnelActual)

  ### ISA 88 Compliance ###
  """ Defines a comment on personnel actual. """
  comments: [Comment] @hasInverse(field: personnelActual)
}


"""
Specific properties that are required for a personnel actual shall be presented as personnel actual 
properties. Personnel actual properties may contain nested personnel actual properties.
"""
type PersonnelActualProperty @withSubscription @key(fields: "iid"){
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ An identification of the associated person property or personnel class property for a specific segment response. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ The label is last node in the fully qualified name. """
  label: String! @search(by: [fulltext, exact, regexp])
  """ Contains additional information and descriptions of the personnel actual property definition. """
  description: String @search(by: [fulltext, exact])
  """ The value or set of values for the associated property. """
  value: String @search(by: [fulltext, exact])
  """ The unit of measure of the associated property value. """
  valueUnitOfMeasure: UnitOfMeasure
  """ Specifies the amount of personnel resources used in the parent segment. """
  quantity: Float!
  """ Identifies the unit of measure of the quantity. """
  quantityUoM: UnitOfMeasure

  ##### RELATIONSHIPS #####
  """ The values for this personnel actual property in part are for the personnel actual. """
  personnelActual: PersonnelActual! @hasInverse(field: properties)
  """ The values in the child personnel actual property for this personnel actual. """
  children: [PersonnelActualProperty] @hasInverse(field: parent)
  """ The values in this child personnel actual property make up part of the personnel actual. """
  parent: PersonnelActualProperty @hasInverse(field: children)
  """ A cross-model dependency to element in the personnel model. """
  personnelClassProperty: PersonnelClassProperty @hasInverse(field: personnelActualProperties)
  """ A cross-model dependency to element in the personnel model. """
  personProperty: PersonProperty @hasInverse(field: personnelActualProperties)

  # Not in docs, these are in base personnel actual
  hierarchyScope: HierarchyScope
  spatialDefinition: SpatialDefinition
  operationalLocation: OperationalLocation
  use: String @search(by: [fulltext, exact])
}


"""
An identification of an equipment capability used during a specified segment shall be presented as 
an equipment actual.

Equipment actual shall include the identification of the equipment used, usually identifying a 
specific piece of equipment.

Specific information about equipment actuals shall be presented in equipment actual properties.
"""
type EquipmentActual @withSubscription @key(fields: "iid"){
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ Defines a unique identification of a specific equipment actual. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ Contains additional information and descriptions of the equipment actual. """
  description: String @search(by: [fulltext, exact])
  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope
  """ Spatially defines the equipment specified by this equipment actual. """
  spatialDefinition: SpatialDefinition
  """ Identifies the operational location of the equipment specified by this equipment actual. """
  operationalLocation: OperationalLocation
  """ Defines the actual use of the equipment class or equipment. """
  equipmentUse: String @search(by: [fulltext, exact])
  """ Specifies the amount of equipment resources used in parent segment. """
  quantity: Float
  """ Identifies the unit of measure of the quantity. """
  quantityUoM: UnitOfMeasure

  ##### RELATIONSHIPS #####
  """ The segment response containing in part this equipment actual. """
  segmentResponse: SegmentResponse @hasInverse(field: equipmentActual)
  """ The related object(s) makes up part of this equipment actual as the whole. """
  children: [EquipmentActual] @hasInverse(field: parent)
  """ The related object(s) this equipment actual makes up part of as the whole. """
  parent: EquipmentActual @hasInverse(field: children)
  """ The values in the equipment actual property are for this equipment actual. """
  properties: [EquipmentActualProperty] @hasInverse(field: equipmentActual)
  """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
  testResults: [TestResult] @hasInverse(field: equipmentActual)
  """ Identifies the associated equipment class(s) actually used for a specific segment response. """
  equipmentClass: EquipmentClass @hasInverse(field: equipmentActual)
  """ Identifies the associated equipment(s) actually used for a specific segment response. """
  equipment: Equipment @hasInverse(field: equipmentActual)
  equipmentVersion: EquipmentVersion @hasInverse(field: equipmentActual)

  """ Job response this equipment actual relates to. """
  jobResponse: JobResponse @hasInverse(field: equipmentActual)

  #### 21 CFR 11 Compliance ####
  """ Can have electronic Signature. """
  signatures: [Signature] @hasInverse(field: equipmentActual)

  ### ISA 88 Compliance ###
  """ Defines a comment on equipment actual. """
  comments: [Comment] @hasInverse(field: equipmentActual)

}


"""
Specific properties that are required for an equipment actual shall be presented as equipment actual 
properties. Equipment actual properties may contain nested equipment actual properties.
"""
type EquipmentActualProperty @withSubscription @key(fields: "iid"){
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ An identification of the associated equipment property or equipment class property for a specific segment response. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ The label is last node in the fully qualified name. """
  label: String! @search(by: [fulltext, exact, regexp])
  """ Contains additional information and descriptions of the equipment actual property definition. """
  description: String @search(by: [fulltext, exact])
  """ The value or set of values for the associated property. """
  value: String @search(by: [fulltext, exact])
  """ The unit of measure of the associated property value. """
  valueUnitOfMeasure: UnitOfMeasure
  """ Specifies the amount of equipment resources used in parent segment. """
  quantity: Float!
  """ Identifies the unit of measure of the quantity. """
  quantityUoM: UnitOfMeasure

  ##### RELATIONSHIPS #####
  """ The values for this equipment actual property in part are for the equipment actual. """
  equipmentActual: EquipmentActual! @hasInverse(field: properties)
  """ The values in the child equipment actual property for this equipment actual. """
  children: [EquipmentActualProperty] @hasInverse(field: parent)
  """ The values in this child equipment actual property make up part of the equipment actual. """
  parent: EquipmentActualProperty @hasInverse(field: children)
  """ A cross-model dependency to element in the equipment model. """
  equipmentClassProperty: EquipmentClassProperty @hasInverse(field: equipmentActualProperties)
  """ A cross-model dependency to element in the equipment model. """
  equipmentProperty: EquipmentProperty @hasInverse(field: equipmentActualProperties)



  # Attributes
  hierarchyScope: HierarchyScope
  spatialDefinition: SpatialDefinition
  operationalLocation: OperationalLocation
  use: String @search(by: [fulltext, exact])
}


"""
An identification of a physical asset capability used during a specified segment shall be presented 
as a physical asset actual.

Physical asset actual shall include the identification of the physical asset used, usually identifying 
a specific piece of physical asset.

Specific information about physical asset actuals shall be presented in physical asset actual properties.
"""
type PhysicalAssetActual @withSubscription @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ Defines a unique identification of a physical asset actual. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ Contains additional information and descriptions of the physical asset actual. """
  description: String @search(by: [fulltext, exact])
  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope
  """ Spatially defines the physical asset(s) specified by this physical asset actual. """
  spatialDefinition: SpatialDefinition
  """ Identifies the physical location of the physical asset(s) specified by this physical asset actual.. """
  physicalLocation: OperationalLocation
  """ Defines the actual use of the physical asset class or physical asset.. """
  physicalAssetUse: String @search(by: [fulltext, exact])
  """ Specifies the amount of equipment resources used in parent segment. """
  quantity: Float
  """ Identifies the unit of measure of the quantity. """
  quantityUoM: UnitOfMeasure

  ##### RELATIONSHIPS #####
  """ The segment response as whole defined in part by this physical asset actual. """
  segmentResponse: SegmentResponse @hasInverse(field: physicalAssetActual)
  """ The related object(s) makes up part of this physical asset actual as the whole. """
  children: [PhysicalAssetActual] @hasInverse(field: parent)
  """ The related object(s) this physical asset actual makes up part of as the whole. """
  parent: PhysicalAssetActual @hasInverse(field: children)
  """ The values in the physical asset actual property are for this physical asset actual. """
  properties: [PhysicalAssetActualProperty] @hasInverse(field: physicalAssetActual)
  """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
  testResults: [TestResult] @hasInverse(field: physicalAssetActual)
  """ Identifies the associated physical asset class(s) actually used for a specific segment response. """
  physicalAssetClass: PhysicalAssetClass @hasInverse(field: physicalAssetActual)
  """ Identifies the associated physical asset(s) actually used for a specific segment response. """
  physicalAsset: PhysicalAsset @hasInverse(field: physicalAssetActual)
  """ Identifies the associated physical asset(s) actually used for a specific segment response. """
  physicalAssetVersion: PhysicalAssetVersion @hasInverse(field: physicalAssetActual)

  """ Job response this physical asset actual relates to. """
  jobResponse: JobResponse @hasInverse(field: physicalAssetActual)

  #### 21 CFR 11 Compliance ####
  """ Can have electronic Signature. """
  signatures: [Signature] @hasInverse(field: physicalAssetActual)

  ### ISA 88 Compliance ###
  """ Defines a comment on physical asset actual. """
  comments: [Comment] @hasInverse(field: physicalAssetActual)
}


"""
Specific properties that are required for a physical asset actual shall be presented as physical 
asset actual properties. Physical asset actual properties may contain nested physical asset actual 
properties.
"""
type PhysicalAssetActualProperty @withSubscription @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ An identification of the associated physical asset property or class property for a specific segment response. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ The label is last node in the fully qualified name. """
  label: String! @search(by: [fulltext, exact, regexp])
  """ Contains additional information and descriptions of the physical asset actual property definition. """
  description: String @search(by: [fulltext, exact])
  """ The value or set of values for the associated property. """
  value: String @search(by: [fulltext, exact])
  """ The unit of measure of the associated property value. """
  valueUnitOfMeasure: UnitOfMeasure
  """ Specifies the amount of physical asset resources used in parent segment. """
  quantity: Float!
  """ Identifies the unit of measure of the quantity. """
  quantityUoM: UnitOfMeasure

  ##### RELATIONSHIPS #####
  """ The values for this physical asset actual property in part are for the physical asset actual. """
  physicalAssetActual: PhysicalAssetActual! @hasInverse(field: properties)
  """ The values in the child physical asset actual property for this physical asset actual. """
  children: [PhysicalAssetActualProperty] @hasInverse(field: parent)
  """ The values in this child physical asset actual property make up part of the physical asset actual. """
  parent: PhysicalAssetActualProperty @hasInverse(field: children)
  """ A cross-model dependency to element in the physical asset model. """
  physicalAssetClassProperty: PhysicalAssetClassProperty @hasInverse(field: physicalAssetActualProperties)
  """ A cross-model dependency to element in the physical asset model. """
  physicalAssetProperty: PhysicalAssetProperty @hasInverse(field: physicalAssetActualProperties)
}


"""
An identification of a material that was used in the operations request shall be presented as a 
material actual. Material actuals contain definitions of materials that may have be consumed, produced, 
replaced, sampled, or otherwise used in manufacturing. 

A material actual may be defined as follows by containing an assembly of material actuals and as part 
of an assembly of material actuals. A material actual may define an assembly of zero or more material 
actuals. A material actual may be an assembly element of zero or more material actuals. An assembly 
may be defined as a permanent or transient assembly of material actuals. An assembly may be defined 
as physical or a logical assembly of material actuals.
"""
type MaterialActual @withSubscription @key(fields: "iid"){
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ Define a unique identification of a specific material actual. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ Contains additional information and descriptions of the material actual. """
  description: String @search(by: [fulltext, exact])
  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope
  """ Spatially defines the material resource(s) specified by this material actual. """
  spatialDefinition: SpatialDefinition
  """ Identifies the storage location of the material resource(s) specified by this material actual. """
  storageLocation: OperationalLocation
  """ Defines the expected use of the material class, material definition, material lot, or material sublot 
  in the context of the segment response. """
  materialUse: MaterialUse @search
  """ Specifies the amount of material produced by the parent segment. """
  quantity: Float
  """ Identifies the unit of measure of the quantity. """
  quantityUoM: UnitOfMeasure
  """ Defines the type of the assembly. """
  assemblyType: AssemblyType @search(by: [exact])
  """ Defines the type of the relationships. """
  assemblyRelationship: AssemblyRelationship @search(by: [exact])

  ##### RELATIONSHIPS #####
  """ The segment response this material actual relates to. """
  segmentResponse: SegmentResponse @hasInverse(field: materialActual)
  """ The related object(s) makes up part of this material actual as the whole. """
  children: [MaterialActual] @hasInverse(field: parent)
  """ The related object(s) this material actual makes up part of as the whole. """
  parent: MaterialActual @hasInverse(field: children)
  """ The values in the material actual property are for this material actual. """
  properties: [MaterialActualProperty] @hasInverse(field: materialActual)
  """ The test result records the evaluated criterion result attribute and property measurement for this testable object. """
  testResults: [TestResult] @hasInverse(field: materialActual)
  """ Identifies the associated material class(s) of the material actual for a specific segment response. """
  materialClass: MaterialClass @hasInverse(field: materialActual)
  """ Identifies the associated material definition of the material actual for a specific segment response. """
  materialDefinition: MaterialDefinition @hasInverse(field: materialActual)
  """ Identifies the associated material definition of the material actual for a specific segment response. """
  materialDefinitionVersion: MaterialDefinitionVersion @hasInverse(field: materialActual)
  """ Identifies the associated material lot of the material actual for a specific segment response. """
  materialLot: [MaterialLot] @hasInverse(field: materialActual)
  """ Identifies the associated material sublot of the material actual for a specific segment response. """
  materialSubLot: [MaterialSubLot] @hasInverse(field: materialActual)

  """ Job response this material actual relates to. """

  jobResponse: JobResponse @hasInverse(field: materialActual)

  #### 21 CFR 11 Compliance ####
  """ Can have electronic Signature. """
  signatures: [Signature] @hasInverse(field: materialActual)

  ### ISA 88 Compliance ###
  """ Defines a comment on material actual. """
  comments: [Comment] @hasInverse(field: materialActual)
}


"""
Specific properties that are required for a material actual shall be presented as material actual 
properties. Material actual properties may contain nested material actual properties.
"""
type MaterialActualProperty @withSubscription @key(fields: "iid"){
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ An identification of the associated material property or material class property for a specific segment response. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ The label is last node in the fully qualified name. """
  label: String! @search(by: [fulltext, exact, regexp])
  """ Contains additional information and descriptions of the material produced actual property definition. """
  description: String @search(by: [fulltext, exact])
  """ The value or set of values for the associated property. """
  value: String @search(by: [fulltext, exact])
  """ The unit of measure of the associated property value. """
  valueUnitOfMeasure: UnitOfMeasure
  """ Specifies the amount of material produced by the parent segment. """
  quantity: Float!
  """ Identifies the unit of measure of the quantity. """
  quantityUoM: UnitOfMeasure

  ##### RELATIONSHIPS #####
  """ The values for this material actual property in part are for the material actual. """
  materialActual: MaterialActual! @hasInverse(field: properties)
  """ The values in the child material actual property for this material actual property. """
  children: [MaterialActualProperty] @hasInverse(field: parent)
  """ This child material actual property gives values for the parent material actual property. """
  parent: MaterialActualProperty @hasInverse(field: children)
  """ A cross-model dependency to element in the material model. """
  materialClassProperty: MaterialClassProperty @hasInverse(field: materialActualProperties)
  """ A cross-model dependency to element in the material model. """
  materialDefinitionProperty: MaterialDefinitionProperty @hasInverse(field: materialActualProperties)
  """ A cross-model dependency to element in the material model. """
  materialLotProperty: MaterialLotProperty @hasInverse(field: materialActualProperties)


  # Attributes
  hierarchyScope: HierarchyScope
  spatialDefinition: SpatialDefinition
  operationalLocation: OperationalLocation
  use: String @search(by: [fulltext, exact])
}



### Don't think this type even exists in docs
type OperationsResponseProperty @withSubscription @key(fields: "iid"){
  # MetaData
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  # Attributes
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ The label is last node in the fully qualified name. """
  label: String! @search(by: [fulltext, exact, regexp])
  description: String @search(by: [fulltext, exact])
  hierarchyScope: HierarchyScope
  spatialDefinition: SpatialDefinition
  operationalLocation: OperationalLocation
  use: String @search(by: [fulltext, exact])
  quantity: Float!
  quantityUoM: UnitOfMeasure

  # Relationships
  operationsResponse: OperationsResponse! @hasInverse(field: properties)
  children: [OperationsResponseProperty] @hasInverse(field: parent)
  parent: OperationsResponseProperty @hasInverse(field: children)
}
# ################################################################################
# Operations Capability Information Model
# ################################################################################
#
#
# Operations capability information is the collection of information about all resources
# for operations for selected future and past times. This is made up of information
# about equipment, physical assets, material, personnel, and process segments.
# Operations capability describes the names, terms, statuses, and quantities of which
# the manufacturing control system has knowledge .
# ################################################################################
# Process Segment Capability Information Model
# ################################################################################
#
#
# A process segment capability is a representation of a logical grouping of personnel resources,
# equipment resources, physical asset resources, and material that is committed, available,
# or unavailable for a defined process segment for a specific time.
# ################################################################################
# Operations Segment Capability Information Model
# ################################################################################
#
#
# An operations segment capability is a representation of a logical grouping of
# personnel resources, equipment resources, physical asset resources and material resources
# that is committed, available, or unavailable for a defined operations segment for a specific time.
#
# ################################################################################
# Work Definition Information Model
# ################################################################################
#
#
# An identification of the resources and workflow required to perform a specified
# unit of work shall be defined as a work definition. The work definition may apply
# to production, maintenance, quality test, and inventory operations activities.


""" 
Work masters are template information not associated with any specific job order.
Work directives start as copies of work masters and are augmented with information for a specific job order.
A work master may have a reference to one or more operations definitions or operations segments.
In this situation, the work master defines the detailed steps needed to accomplish all or part of the operation.
"""
type WorkMaster @withSubscription @primaryKey(fields: ["id","version"]) @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: workMaster)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ A unique identification as the work master ID. """
    id: String! @search(by: [fulltext, exact, regexp])
    """ An identification of the version of the work master version. """
    version: String! @search(by: [fulltext, exact])
    """ Contains additional information and descriptions of the work master. """
    description: String @search(by: [fulltext, exact])
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ Describes the category of work. """
    workType: WorkType
    """ Duration, if known. """
    duration: Float
    """ The units of measure of the duration, if defined. """
    durationUnitOfMeasure: UnitOfMeasure
    """ The date and time on which the work master was published or generated. """
    publishedDate: DateTime @search
    """ Defines the type of the work master. """
    definitionType: DefinitionType! @search

    ##### RELATIONSHIPS #####
    """ The parameter specifications related to this work definition. """
    parameterSpecifications: [ParameterSpecification] @hasInverse(field: workMaster)
    """ The personnel specifications related to this work definition. """
    personnelSpecifications: [PersonnelSpecification] @hasInverse(field: workMaster)
    """ The equipment specifications related to this work definition. """
    equipmentSpecifications: [EquipmentSpecification] @hasInverse(field: workMaster)
    """ The physical asset specifications related to this work definition. """
    physicalAssetSpecifications: [PhysicalAssetSpecification] @hasInverse(field: workMaster)
    """ The material specifications related to this work definition. """
    materialSpecifications: [MaterialSpecification] @hasInverse(field: workMaster)
    """ This work master ID which is applied test method to obtain the measurement of the evaluated property 
    for test specification of the testable object property ID. """
    evaluatedProperties: [EvaluatedProperty] @hasInverse(field: workMaster)
    """ This work master ID which is applied test method to obtain the measurement of the property measurement 
    for test specification of the testable object property ID. """
    propertyMeasurements: [PropertyMeasurement] @hasInverse(field: workMaster)

    """ The related object this work master makes up part of as the whole. """
    parent: WorkMaster @hasInverse(field: children)
    """ The related object(s) makes up part of this work master as the whole. """
    children: [WorkMaster] @hasInverse(field: parent)
    """ The work directive(s) created from this work master. """
    workDirectives: [WorkDirective] @hasInverse(field: workMaster)
    """ A unique identification of the job order associated with this work master. """
    jobOrders: [JobOrder] @hasInverse(field: workMaster)
    """ This child pattern work master includes objects, relationships and properties of the parent pattern work master. """
    defines: WorkMaster @hasInverse(field: definedBy)
    """ This parent work master is defined by the child work master(s) including objects, relationships, and properties. """
    definedBy: [WorkMaster] @hasInverse(field: defines)
    """ The process segment associated to this work master. """
    processSegment: ProcessSegment @hasInverse(field: workMasters)
    """ The operations definition associated to this work master. """
    operationsDefinition: OperationsDefinition @hasInverse(field: workMasters)
    """ The operations segment associated to this work master. """
    operationsSegment: OperationsSegment @hasInverse(field: workMasters)
    """ This work master defined in part by the workflow specification(s). """
    workflowSpecification: WorkflowSpecification @hasInverse(field: workMasters)

    """ Job response(s) corresponding to this work master. """
    jobResponses: [JobResponse] @hasInverse(field: workMaster)

    #### 21 CFR 11 Compliance ####
    """ Can have electronic Signature. """
    signatures: [Signature] @hasInverse(field: workMaster)

    ### ISA 88 Compliance ###
    """ Defines a comment on the work master. """
    comments: [Comment] @hasInverse(field: workMaster)
}


"""
The resources and instructions required to perform a unit of work for a specific job order shall be defined as a work directive.
A work directive may contain zero or more work directives, defining a hierarchy of work directives with the hierarchy defined through workflow specification nodes in the workflow specification.
There is one work directive for each job order.
It contains the specific information required to perform the job order and the workflow specification associated with the job order.
"""
type WorkDirective @withSubscription @primaryKey(fields: ["id","version"]) @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: workDirective)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ A unique identification as the work directive ID. """
    id: String! @search(by: [fulltext, exact, regexp])
    """ An identification of the version of the work directive version. """
    version: String! @search(by: [fulltext, exact])
    """ Contains additional information and descriptions of the work directive. """
    description: String @search(by: [fulltext, exact])
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ Describes the category of work. """
    workType: WorkType
    """ Duration, if known. """
    duration: Float
    """ The units of measure of the duration, if defined. """
    durationUnitOfMeasure: UnitOfMeasure
    """ The date and time on which the work directive was published or generated. """
    publishedDate: DateTime @search
    """ Indicates the state of the job response. """
    state: WorkDirectiveState

    ##### RELATIONSHIPS #####
    """ The parameter specifications related to this work definition. """
    parameterSpecifications: [ParameterSpecification] @hasInverse(field: workDirective)
    """ The personnel specifications related to this work definition. """
    personnelSpecifications: [PersonnelSpecification] @hasInverse(field: workDirective)
    """ The equipment specifications related to this work definition. """
    equipmentSpecifications: [EquipmentSpecification] @hasInverse(field: workDirective)
    """ The physical asset specifications related to this work definition. """
    physicalAssetSpecifications: [PhysicalAssetSpecification] @hasInverse(field: workDirective)
    """ The material specifications related to this work definition. """
    materialSpecifications: [MaterialSpecification] @hasInverse(field: workDirective)
    """ This work directive ID which is applied test method to obtain the measurement of the evaluated property 
    for test specification of the testable object property ID. """
    evaluatedProperties: [EvaluatedProperty] @hasInverse(field: workDirective)
    """ This work directive ID which is applied test method to obtain the measurement of the property measurement 
    for test specification of the testable object property ID. """
    propertyMeasurements: [PropertyMeasurement] @hasInverse(field: workDirective)

    """ The work master used to create this work directive. """
    workMaster: WorkMaster @hasInverse(field: workDirectives)
    """ The related object(s), work directive, makes up part of this work directive as the whole. """
    children: [WorkDirective] @hasInverse(field: parent)
    """ The related object, work directive, this work directive makes up part of as the whole."""
    parent: WorkDirective @hasInverse(field: children)
    """ This work directive defined in part by the workflow specification(s). """
    workflowSpecification: WorkflowSpecification @hasInverse(field: workDirectives)
    """ A unique identification of the job order associated with this work directive. """
    jobOrders: [JobOrder] @hasInverse(field: workDirective)

    """ Job response(s) corresponding to this work directive. """
    jobResponses: [JobResponse] @hasInverse(field: workDirective)

    #### 21 CFR 11 Compliance ####
    """ Can have electronic Signature. """
    signatures: [Signature] @hasInverse(field: workDirective)

    ### ISA 88 Compliance ###
    """ Defines a comment on the work directive. """
    comments: [Comment] @hasInverse(field: workDirective)
}


"""
Indicates the state of the job response.
"""
enum WorkDirectiveState {
    WAITING
    READY
    RUNNING
    COMPLETED
    ABORTED
    HELD
    SUSPENDED
    CLOSED
}
# ################################################################################
# Workflow Specification Information Model
# ################################################################################
#
#
# A workflow specification is represented as a collection of nodes and connections.
# Each node is defined by a type definition, and each connection is defined by a
# type definition. A node may contain a reference to a work definition.

"""
A workflow specification is represented as a collection of nodes and 
connections. Each node is defined by a type definition, and each connection is
defined by a type definition. A node may contain a reference to a work 
definition. Execution of a Workflow Specification my be requested by a 
JobOrder, and be recorded as a JobResponse
"""
type WorkflowSpecification @withSubscription @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ The list of OperationsEventRecordEntries that have been recorded """
  recordEntries: [InformationObject] @hasInverse(field: workflowSpecification)
  """ link to all available versions for this EquipmentClass """
  versions: [WorkflowSpecificationVersion] @hasInverse(field: workflowSpecification)
  """ the currently active version. to find a version that was active at a point in time, use versions with a filter """
  activeVersion: WorkflowSpecificationVersion @hasInverse(field:isActiveVersionOf)
  """ The next version number, or the largest version number + 1. """
  nextVersion: String
  _createdBy: String
  _createdDateTime: DateTime @default( add: { value: "$now" }) @search
  _modifiedBy: String
  _modifiedDateTime: DateTime @default( add: { value: "$now" }, update:{value:"$now"}) @search

  # Attributes
  id: String! @id @search(by: [fulltext, exact, regexp])

  # Relationships
  includedIn: [WorkflowSpecificationVersion] @hasInverse(field:includePropertiesOf)
  jobOrders: [JobOrder] @hasInverse(field: workflowSpecification)
  jobResponses: [JobResponse] @hasInverse(field: workflowSpecification)
  workMasters: [WorkMaster] @hasInverse(field: workflowSpecification)
  workDirectives: [WorkDirective] @hasInverse(field: workflowSpecification)
  stateModelActions: [StateModelAction] @hasInverse(field: workflowSpecification)
  rules: [Rule] @hasInverse(field: workflowSpecification)
  """ this workflow specification is called by the listed workflowSpecification nodes """
  calledByNodes :[WorkflowSpecificationNode] @hasInverse(field: containsWorkflowSpecification)
}

type WorkflowSpecificationVersion @withSubscription @primaryKey(fields:["id","version"]) @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ The list of OperationsEventRecordEntries that have been recorded """
  recordEntries: [InformationObject] @hasInverse(field: workflowSpecificationVersion)
  """ In combination with the Version field, the id is a unique identification of a specific workflow specification that is consistent outside the scope of this database.
  The ID and Version are used in other parts of the model when the workflow specification needs to be identified. """
  id: String! @search(by: [fulltext, exact, regexp])
  """ Entity to define the specific version of the entity. Purposely free for to allow use with a specific
  revision scheme. For example `1`, `2` or `Rev A03`, `Rev B01`. Versions are lexicographically compared. """
  version: String!  @search(by: [fulltext, exact])
  workflowSpecification:WorkflowSpecification! @hasInverse(field: versions)
  isActiveVersionOf:WorkflowSpecification @hasInverse(field:activeVersion)
  versionStatus:VersionState! @search
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime @search
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search
  description: String
  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope
  definitionType: DefinitionType! @default( add:{value:"INSTANCE"})
  """ Contains the base64 encoded XML that this WorkflowSpecificationVersion was generated from. """
  bpmnXMLEncoded: String
  """ The Json Schema definition of inputs required to execute the workflow. """
  schemaDefinition: String
  """ Identifies whether this is an executable BPMN or a non-BPMN WorkflowSpecification """
  isExecutable: Boolean

# MetaData
  _createdBy: String
  _createdDateTime: DateTime @default( add: { value: "$now" }) @search
  _modifiedBy: String
  _modifiedDateTime: DateTime @default( add: { value: "$now" }, update:{value:"$now"}) @search

  # Relationships
  includePropertiesOf: [WorkflowSpecification] @hasInverse(field:includedIn)
  messages: [WorkflowMessage] @hasInverse(field: workflowSpecificationVersion)
  timers: [WorkflowTimer] @hasInverse(field: workflowSpecificationVersion)
  errors: [WorkflowError] @hasInverse(field: workflowSpecificationVersion)
  nodes: [WorkflowSpecificationNode] @hasInverse(field: workflowSpecificationVersion)
  connections: [WorkflowSpecificationConnection] @hasInverse(field: workflowSpecificationVersion)
  properties: [WorkflowSpecificationProperty] @hasInverse(field: workflowSpecificationVersion)
  jobOrders: [JobOrder] @hasInverse(field: workflowSpecificationVersion)
  jobResponses: [JobResponse] @hasInverse(field: workflowSpecificationVersion)
}

""" 
Resources can be defined as pattern or instance. A pattern resource defines a 
template upon which other pattern or instance resources may be based. Unlike 
instance resources, pattern resources shall not be directly executed. The 
default value is INSTANCE. Defines a “template,” upon which other pattern or 
instance workflow specifications may be based. ANSI/ISA-95.00.04-2018 – 48 –
Unlike instance workflow specifications, pattern workflow specifications shall
not be directly executed. Therefore, a work directive shall only reference an 
instance workflow specification. A pattern work master may reference either a 
pattern or instance workflow specification, while an instance work master shall
only reference an instance workflow specification. A pattern work master may 
reference an instance workflow specification where all work masters (directly 
or indirectly) specializing that pattern work master shall reference the same 
instance workflow specification. This allows a standard instance workflow 
specification to be defined for a pattern work master, which is then 
specialized to a number of pattern or instance work masters, each corresponding
to the same instance workflow specification. Workflow specification nodes shall
assume the definition type (pattern or instance) of the workflow specification 
to which they belong. Therefore, all workflow specification nodes contained 
within a pattern workflow specification shall be assumed to be pattern, while 
all workflow specification nodes contained within an instance workflow 
specification shall be assumed to be instance. Where a workflow specification 
node contains a more detailed workflow specification, the definition type of 
the contained workflow specification shall have the same value as that of the
workflow specification to which the workflow specification node belongs.
"""
enum DefinitionType {
  PATTERN
  INSTANCE
}

"""
A property of a workflow specification shall be defined as a workflow 
specification property. A workflow specification property may contain nested
workflow specification property(s).
"""
type WorkflowSpecificationProperty @withSubscription @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  workflowSpecificationVersion: WorkflowSpecificationVersion! @hasInverse(field: properties)
  """ Uniquely identifies the workflow specification property. Fully Qualified identifier that is unique in the database. Required attribute."""
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ Uniquely identifies the workflow specification property. Required attribute."""
  name: String! @search(by: [fulltext, exact])
  dataType: DataType
  definitionType: DefinitionType! @default( add:{value:"INSTANCE"})
  """ Additional information about the WorkflowSpecificationProperty. """
  description: String @search(by: [fulltext, exact])
  """ The value, set of values, or range of the property. """
  value: String @search(by: [fulltext, exact])
  """ The unit of measure of the associated property value. """
  valueUnitOfMeasure: UnitOfMeasure
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ The nested WorkflowSpecificationProperty(s) makes up part of this equipment property as the whole. """
  children: [WorkflowSpecificationProperty] @hasInverse(field: parent)
  """ The WorkflowSpecificationProperty that this nested equipment property makes up part of as the whole. """
  parent: WorkflowSpecificationProperty @hasInverse(field: children)
}

"""
WorkflowTimer: Extension of ISA95 Standard to accommodate BPMN2.0. WorkflowTimers
allow an event to be triggered on or wait until a given timer has elapsed, allowing
for repeated events or pauses during workflows.
"""
type WorkflowTimer @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!

  id: String! @id
  reference: String @search(by: [fulltext, exact])
  workflowSpecificationVersion: WorkflowSpecificationVersion @hasInverse(field: timers)
  node: WorkflowSpecificationNode @hasInverse(field: timer)
  enabled: Boolean
}

"""
WorkflowMessage: Extension of ISA95 Standard to accommodate BPMN2.0. Sooner or
later, most processes require communication, which can be represented in BPMN 
by means of the message event. You’ll recognize it as the small envelope. The 
meaning of “message” in BPMN is not restricted to letters, e-mails, or calls.
Any action that refers to a specific addressee and represents or contains
information for the addressee is a message.
"""
type WorkflowMessage @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!

  id: String! @id
  reference: String @search(by: [fulltext, exact])
  workflowSpecificationVersion: WorkflowSpecificationVersion @hasInverse(field: messages)
  node: WorkflowSpecificationNode @hasInverse(field: message)
  enabled: Boolean!
}

"""
WorkflowError: Extension of ISA95 Standard to accommodate BPMN2.0. Sooner or
later, most processes require error handling, which can be represented in BPMN 
by means of the message event. You’ll recognize it as the small lightning bolt.
"""
type WorkflowError @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!

  id: String! @id
  reference: String @search(by: [fulltext, exact])
  workflowSpecificationVersion: WorkflowSpecificationVersion @hasInverse(field: errors)
  node: WorkflowSpecificationNode @hasInverse(field: error)
  code: String
}

"""
A workflow specification node is a step in a workflow. It may have a reference
to an activity executed in Level 2, a reference to a work definition, a nested
workflow specification, or an entity used in the represented format (such as a
decision element, transition condition, or starting point).

NOTE:
Nested workflow specifications, such as the ISA-88.00.03 recipe hierarchy, can 
be represented through workflow specification nodes that contain other workflow
specifications (a unit procedure contains the operation definition).
"""
type WorkflowSpecificationNode @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ Id is a unique identification of a specific workflow specification node that is consistent outside the scope of this database.
  The ID and Version are used in other parts of the model when the workflow specification needs to be identified. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ Contains additional information and descriptions of the workflow specification node. """
  description: String
  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope
  """ The workflow specification defines in part by this workflow specification node as the whole.  """
  workflowSpecificationVersion: WorkflowSpecificationVersion! @hasInverse(field: nodes)
  """ This workflow specification node defined in part the workflow specification node property(s). """
  properties: [WorkflowSpecificationNodeProperty] @hasInverse(field: node)
  """ The workflow specification node related to this job response. """
  jobOrders: [JobOrder] @hasInverse(field: workflowSpecificationNode)
  """ The workflow specification node related to this job response. """
  jobResponses: [JobResponse] @hasInverse(field: workflowSpecificationNode)
  """  The workflow specification connection(s) from this workflow specification node. """
  outflows: [WorkflowSpecificationConnection] @hasInverse(field: from)
  """ This workflow specification node(s) to the workflow specification connection(s). """
  inflows: [WorkflowSpecificationConnection] @hasInverse(field: to)
  """ This node is a call activity, and calls the workflow specification """
  containsWorkflowSpecification: WorkflowSpecification @hasInverse(field: calledByNodes)

  _createdBy: String @search(by: [fulltext, exact])
  _createdDateTime: DateTime @default( add: { value: "$now" }) @search
  _modifiedBy: String @search(by: [fulltext, exact])
  _modifiedDateTime: DateTime @default( add: { value: "$now" }, update:{value:"$now"}) @search
  """ User Activities may have UI Forms that define how the user needs to respond to the activity."""
  form: Form @hasInverse(field: workflowSpecificationNodes)
  """ the values that are passed from the workflow instance variable context into the node for execution"""
  inputs: [WorkflowSpecificationNodeVariable]
  """ After execution of the node, the values that are passed back into the workflow instance variable context """
  outputs: [WorkflowSpecificationNodeVariable]
  """ The message definition that is linked to this node. The way that the message is used depends on the node type"""
  message: WorkflowMessage @hasInverse(field: node)
  """ The error definition that is linked to this node. """
  error: WorkflowError @hasInverse(field: node)
  timer: WorkflowTimer @hasInverse(field: node)
  nodeType: WorkflowSpecificationNodeType! @hasInverse(field: nodes)
  """ User Tasks can have a Role assignment that defines the type of users that can complete the task"""
  role: String @search(by: [fulltext, exact])
  shape: WorkflowShape @hasInverse(field: node)
  """ If the user task requires a specific UI Component to be used, it is defined here"""
  uiComponent: String @search(by: [fulltext, exact])
  """ The unit-test cases that verify the correct operation of this node"""
  testCases: [WorkflowSpecificationNodeTestCase] @hasInverse(field: node)

  """ The Boundary Event nodes that are attached to this node """
  boundaryEvents: [WorkflowSpecificationNode] @hasInverse(field: attachedTo)
  """ The Node that this node is attached to if it is a boundary event """
  attachedTo: WorkflowSpecificationNode @hasInverse(field: boundaryEvents)
}

type WorkflowSpecificationNodeTestCase @key(fields: "iid") {
  iid: ID!
  node: WorkflowSpecificationNode! @hasInverse(field: testCases)
  id: String! @id @search(by: [fulltext, exact, regexp])
  inputJson: String!
  expectedResult: String!
}

"""
WorkflowShape: Extension of ISA95 Standard to accommodate BPMN2.0. The shape 
stores the information needed to display the action in a BPMN diagram.
"""
type WorkflowShape @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """
  In combination with the Version field, the id is a unique identification of a specific workflow specification that is consistent outside the scope of this database.
  The ID and Version are used in other parts of the model when the workflow specification needs to be identified.
  """
  id: String! @id @search(by: [fulltext, exact, regexp])
  node: WorkflowSpecificationNode! @hasInverse(field: shape)
  x: String!
  y: String!
  width: String!
  height: String!
  icon: String
}

type WorkflowSpecificationNodeVariable @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!
  
  source: String!
  target: String!
}

"""
A property of a workflow specification node shall be defined as a workflow
specification node property.

A workflow specification node property may contain nested workflow 
specification node property(s).

Workflow specification node property(s) may by used to specify the defined 
properties that can be associated with the specific node type.
"""
type WorkflowSpecificationNodeProperty @withSubscription @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  node: WorkflowSpecificationNode! @hasInverse(field: properties)
  """ Uniquely identifies the workflow specification property. Fully Qualified identifier that is unique in the database. Required attribute."""
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ Uniquely identifies the workflow specification property. Required attribute."""
  name: String! @search(by: [fulltext, exact])
  dataType: DataType
  definitionType: DefinitionType! @default( add:{value:"INSTANCE"})
  """ Additional information about the WorkflowSpecificationProperty. """
  description: String @search(by: [fulltext, exact])
  """ The value, set of values, or range of the property. """
  value: String @search(by: [fulltext, exact])
  """ The unit of measure of the associated property value. """
  valueUnitOfMeasure: UnitOfMeasure
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ The nested WorkflowSpecificationProperty(s) makes up part of this equipment property as the whole. """
  children: [WorkflowSpecificationNodeProperty] @hasInverse(field: parent)
  """ The WorkflowSpecificationProperty that this nested equipment property makes up part of as the whole. """
  parent: WorkflowSpecificationNodeProperty @hasInverse(field: children)
}

"""
A workflow specification node type defines the properties that can be 
associated with a specific workflow specification node.
"""
type WorkflowSpecificationNodeType @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ The list of OperationsEventRecordEntries that have been recorded """
  recordEntries: [InformationObject] @hasInverse(field: workflowSpecificationNodeType)
  id: String! @id @search(by: [fulltext, exact, regexp])
  name: String @search(by: [fulltext, exact])
  """ Contains additional information and descriptions of the workflow specification node. """
  description: String
  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope
  """ The workflow specification node type property(s) defines in part this workflow specification node type. """
  properties: [WorkflowSpecificationNodeTypeProperty] @hasInverse(field: nodeType)
  """ The workflow specification node(s) defined in part by this workflow specification node type. """
  nodes: [WorkflowSpecificationNode] @hasInverse(field: nodeType)
  
  _createdBy: String
  _createdDateTime: DateTime @default( add: { value: "$now" }) @search
  _modifiedBy: String
  _modifiedDateTime: DateTime @default( add: { value: "$now" }, update:{value:"$now"}) @search

}

"""
A property of a workflow specification node type shall be defined as a workflow
specification node type property. A workflow specification connection type 
property may contain nested workflow specification connection type property(s).

Workflow specification node properties types specify the allowed properties 
that can be associated with a specific workflow specification node.
"""
type WorkflowSpecificationNodeTypeProperty @withSubscription @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  nodeType: WorkflowSpecificationNodeType! @hasInverse(field: properties)
  """ Uniquely identifies the workflow specification property. Fully Qualified identifier that is unique in the database. Required attribute."""
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ Uniquely identifies the workflow specification property. Required attribute."""
  name: String! @search(by: [fulltext, exact])
  dataType: DataType
  definitionType: DefinitionType! @default( add:{value:"INSTANCE"})
  """ Additional information about the WorkflowSpecificationProperty. """
  description: String @search(by: [fulltext, exact])
  """ The value, set of values, or range of the property. """
  value: String @search(by: [fulltext, exact])
  """ The unit of measure of the associated property value. """
  valueUnitOfMeasure: UnitOfMeasure
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ The nested WorkflowSpecificationProperty(s) makes up part of this equipment property as the whole. """
  children: [WorkflowSpecificationNodeTypeProperty] @hasInverse(field: parent)
  """ The WorkflowSpecificationProperty that this nested equipment property makes up part of as the whole. """
  parent: WorkflowSpecificationNodeTypeProperty @hasInverse(field: children)
}

"""
A workflow specification connection represents a many-to-many link between 
workflow specification nodes. The workflow specification connection type 
defines the allowed multiplicity of the "connects to" and "connects from"
relationships.
"""
type WorkflowSpecificationConnection @withSubscription @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  condition: String
  id: String! @id @search(by: [fulltext, exact, regexp])
  name: String @search(by: [fulltext, exact])
  waypoints: [WorkflowWaypoint] @hasInverse (field: connection)
  """
  Contains additional information and descriptions of the workflow specification connection.
  """
  description: String @search(by: [hash])

  """
  The workflow specification defined in part by this workflow specification connection.
  """
  workflowSpecificationVersion: WorkflowSpecificationVersion! @hasInverse(field: connections)

  """
  The workflow specification connection defined by this workflow specification connection type.
  """
  connectionType: WorkflowSpecificationConnectionType! @hasInverse(field: connections)

  """
  The workflow specification connection property(s) defines in part of this workflow specification connection.
  """
  properties: [WorkflowSpecificationConnectionProperty] @hasInverse(field: connection)
  
  """
  The workflow specification node connected to this workflow specification connection.
  """
  to: WorkflowSpecificationNode! @hasInverse (field: inflows)

  """
  The workflow specification node connected from this workflow specification connection.
  """
  from: WorkflowSpecificationNode! @hasInverse (field: outflows)

  _createdBy: String
  _createdDateTime: DateTime @default( add: { value: "$now" }) @search
  _modifiedBy: String
  _modifiedDateTime: DateTime @default( add: { value: "$now" }, update:{value:"$now"}) @search

}

"""
WorkflowWaypoint: Extension of ISA95 Standard to accommodate BPMN2.0. The 
waypoint stores the information needed to display lines correctly in BPMN diagrams.
"""
type WorkflowWaypoint @withSubscription @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!
  connection: WorkflowSpecificationConnection! @hasInverse (field: waypoints)
  x: String!
  y: String!
}

"""
A property of a workflow specification connection shall be defined as a 
workflow specification connection property.

A workflow specification connection property may contain nested workflow 
specification connection property(s).

Workflow specification connection property(s) may be used to specify the 
defined properties that can be associated with the specific connection.
"""
type WorkflowSpecificationConnectionProperty @withSubscription @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  connection: WorkflowSpecificationConnection! @hasInverse(field: properties)
  """ Uniquely identifies the workflow specification property. Fully Qualified identifier that is unique in the database. Required attribute."""
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ Uniquely identifies the workflow specification property. Required attribute."""
  name: String! @search(by: [fulltext, exact])
  dataType: DataType
  definitionType: DefinitionType! @default( add:{value:"INSTANCE"})
  """ Additional information about the WorkflowSpecificationProperty. """
  description: String @search(by: [fulltext, exact])
  """ The value, set of values, or range of the property. """
  value: String @search(by: [fulltext, exact])
  """ The unit of measure of the associated property value. """
  valueUnitOfMeasure: UnitOfMeasure
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ The nested WorkflowSpecificationProperty(s) makes up part of this equipment property as the whole. """
  children: [WorkflowSpecificationConnectionProperty] @hasInverse(field: parent)
  """ The WorkflowSpecificationProperty that this nested equipment property makes up part of as the whole. """
  parent: WorkflowSpecificationConnectionProperty @hasInverse(field: children)
}

"""
A workflow specification connection type specifies the permissible information
on a connection.
"""
type WorkflowSpecificationConnectionType @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!
  acl: [AccessPermission]
  """ The list of OperationsEventRecordEntries that have been recorded """
  recordEntries: [InformationObject] @hasInverse(field: workflowSpecificationConnectionType)

  id: String! @id @search(by: [hash])

  """
  Contains additional information and descriptions of the workflow specification connection.
  """
  description: String

  """
  Identifies where the exchanged information fits within the role based equipment hierarchy.
  """
  hierarchyScope: HierarchyScope

  """
  The workflow specification connection(s) defined in part by this workflow specification connection type.
  """
  connections: [WorkflowSpecificationConnection] @hasInverse(field: connectionType)

  """
  The workflow specification connection type property(s) defines in part this workflow specification connection type.
  """
  properties: [WorkflowSpecificationConnectionTypeProperty] @hasInverse(field: connectionType)

  _createdBy: String
  _createdDateTime: DateTime @default( add: { value: "$now" }) @search
  _modifiedBy: String
  _modifiedDateTime: DateTime @default( add: { value: "$now" }, update:{value:"$now"}) @search
}

"""
A property of a workflow specification connection type shall be defined as a workflow specification connection type property.

A workflow specification connection type property(s) specifies the allowed properties that can be associated with specific workflow specification connections.
"""
type WorkflowSpecificationConnectionTypeProperty @withSubscription @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  connectionType: WorkflowSpecificationConnectionType! @hasInverse(field: properties)
  """ Uniquely identifies the workflow specification property. Fully Qualified identifier that is unique in the database. Required attribute."""
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ Uniquely identifies the workflow specification property. Required attribute."""
  name: String! @search(by: [fulltext, exact])
  dataType: DataType
  definitionType: DefinitionType! @default( add:{value:"INSTANCE"})
  """ Additional information about the WorkflowSpecificationProperty. """
  description: String @search(by: [fulltext, exact])
  """ The value, set of values, or range of the property. """
  value: String @search(by: [fulltext, exact])
  """ The unit of measure of the associated property value. """
  valueUnitOfMeasure: UnitOfMeasure
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ The nested WorkflowSpecificationProperty(s) makes up part of this equipment property as the whole. """
  children: [WorkflowSpecificationConnectionTypeProperty] @hasInverse(field: parent)
  """ The WorkflowSpecificationProperty that this nested equipment property makes up part of as the whole. """
  parent: WorkflowSpecificationConnectionTypeProperty @hasInverse(field: children)
}

"""
Form: Extension of ISA95 Standard to accommodate BPMN2.0. User actions within 
BPMN require forms to allow the action to be completed. Forms are specified 
with a JsonSchema and a UI Schema.
"""
type Form @withSubscription @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!
  id: String! @id @search(by: [fulltext, exact, regexp])
  name: String @search(by: [fulltext, exact])
  workflowSpecificationNodes: [WorkflowSpecificationNode] @hasInverse(field: form)
  jsonSchema: String
  uiSchema: String
}
# ################################################################################
# Work Schedule Information Model
# ################################################################################
#
#
# A request for work shall be listed as a work schedule. A work schedule shall be
# made up of one or more work requests.

# The work schedule may apply to scheduling of production, maintenance, quality test
# and inventory operations, or to other extended categories of activities.
#
# A work schedule may be defined for any specific category of work:
# production, maintenance, quality, or inventory operations,
# or it may be defined for a combination of categories.
# When a combination is selected, then the work requests or segment requirement
# specifies the category of the work.


"""
A request for work shall be listed as a work schedule. A work schedule shall be made up of one or more work requests
"""
type WorkSchedule @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: workSchedule)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ A unique identification of the work schedule and could include version and revision identification. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ Describes the category of work. """
    workType: WorkType @search
    """ Contains additional information and descriptions of the work schedule. """
    description: String @search(by: [fulltext, exact])
    """ The starting time for the associated work schedule. """
    scheduledStartDate: DateTime @search
    """ The ending time for the associated work schedule. """
    scheduledEndDate: DateTime @search
    """ The date and time on which the work schedule was published or generated. """
    publishedDate: DateTime @search
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ Indicates the state of the work schedule. """
    scheduleState: ScheduleState @search
    
    ##### RELATIONSHIPS #####
    """ The work request(s) that make up this work schedule. """
    workRequests: [WorkRequest] @hasInverse(field: workSchedule)
    """ The related object(s), work schedule, makes up part of this work schedule as the whole. """
    children: [WorkSchedule] @hasInverse(field: parent)
    """ The related object, work schedule, this work schedule makes up part of as the whole. """
    parent: WorkSchedule @hasInverse(field: children)

    """ The work performance(s) correspinding to this work schedule. """
    workPerformances: [WorkPerformance] @hasInverse(field: workSchedule)
}


"""
A request for work defined by a set of job orders shall be defined as a work request. A work request 
contains the information required by manufacturing to fulfill scheduled work. This may be a subset of 
the business information, or it may contain additional information not normally used by the business system. 

A work request shall contain at least one job order. A work request may include when to start work, 
typically used if a scheduling system controls the schedule; when the work is to be finished, typically 
used if the manufacturing operations system controls its internal schedule to meet deadlines; the priority 
of the request, typically used if exact ordering of production is not externally scheduled.

Additional information may be described in the associated job order's parameters, personnel requirements, 
equipment requirements, and material requirements. A work request may be made up of zero or more nested 
work requests. A work request may be reported on by one or more work responses.
"""
type WorkRequest @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: workRequest)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ A unique identification of the work request. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ Describes the category of work. """
    workType: WorkType! @search
    """ Contains additional information and descriptions of the work request. """
    description: String @search(by: [fulltext, exact])
    """ When work is to be started. """
    plannedStartDateTime: DateTime @search
    """ When work is to be completed. """
    plannedEndDateTime: DateTime @search
    """ The priority of the work request. """
    priority: String
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ Indicates the state of the work request. """
    requestState: ScheduleState!

    ##### RELATIONSHIPS #####
    """ The related object(s), work request, makes up part of this work request as the whole. """
    children: [WorkRequest] @hasInverse(field: parent)
    """ The related object, work request, this work request makes up part of as the whole. """
    parent: WorkRequest @hasInverse(field: children)
    """ The work schedule defined in part by this work request. """
    workSchedule: WorkSchedule! @hasInverse(field: workRequests)
    """ The related object(s) job order makes up part of this work request as the whole. """
    jobOrders: [JobOrder!]! @hasInverse(field: workRequest)
    """ The operations request(s) related to this work request. """ 
    operationsRequest: OperationsRequest @hasInverse(field: workRequests)
    """ The segment requirement(s) related to this work request. """ 
    segmentRequirement: SegmentRequirement @hasInverse(field: workRequests)
    """ The work response(s) related to this work request. """
    workResponses: [WorkResponse] @hasInverse(field: workRequest)

    #### 21 CFR 11 Compliance ####
    """ Can have electronic Signature. """
    signatures: [Signature] @hasInverse(field: workRequest)

    ### ISA 88 Compliance ###
    """ Defines a comment on the work request. """
    comments: [Comment] @hasInverse(field: workRequest)
}


"""
A job list shall be defined as a collection of job orders for a specific period of time and selected 
work centers or other resources. A job list may be considered as a slice of work schedules.

Job list has the same attributes as work requests, because it is a slice of a work schedule.
"""
type JobList @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: jobList)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ A unique identification of the job list and could include version and revision identification. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ Describes the category of work. """
    workType: WorkType! @search
    """ Contains additional information and descriptions of the job list. """
    description: String @search(by: [fulltext, exact])
    """ The starting time for the associated job list. """
    plannedStartDateTime: DateTime @search
    """ The ending time for the associated job list. """
    plannedEndDateTime: DateTime @search
    """ The date and time on which the job list was published or generated. """
    publishedDate: DateTime @search
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope

    ##### RELATIONSHIPS #####
    """ The job orders contained by this job list. """
    jobOrders: [JobOrder!]! @hasInverse(field: jobList)
}


"""
The unit of work requested for execution in a job list and a work request shall be defined as a job 
order. A job order references an associated work master.

A job order may be reported by one or more job responses. It has attributes to contain information 
added by the dispatching activities.
"""
type JobOrder @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: jobOrder)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ISA95 ATTRIBUTES #####
    """ A unique identification of the job order. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ Contains additional information and descriptions of the job order. """
    description: String @search(by: [fulltext, exact])
    """ The date and time on which the resource relationship network was published or generated. """
    publishedDate: DateTime @search
    """ Describes the category of work. """
    workType: WorkType @search
    """ When work is to be started. """
    scheduledStartDateTime: DateTime @search
    """ When work is to be completed. """
    scheduledEndDateTime: DateTime @search
    """ The priority of the job order. """
    priority: Int
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ Identifies the action the execution management activity is to perform on the job order. """
    command: String @search(by: [fulltext, exact])
    """ Identifies the status of the entry from the perspective of the dispatch activity. """
    dispatchStatus: DispatchStatus @search
    """ Instruction to execution management activities specifying conditions to execute the command. """
    commandRule: String @search(by: [fulltext, exact])

    ##### ADDITIONAL ATTRIBUTES #####
    """ Display name. """
    label: String @search(by: [fulltext, exact, regexp])

    ##### ISA95 RELATIONSHIPS #####
    """ The work request containing this job order. """
    workRequest: WorkRequest @hasInverse(field: jobOrders)
    """ The job list(s) make up part of this job order. """
    jobList: JobList @hasInverse(field: jobOrders)
    """ The work master applied to this job order. """
    workMaster: WorkMaster @hasInverse(field: jobOrders)
    """ This job order related to the job response """
    jobResponses: [JobResponse] @hasInverse(field: jobOrder)
    """ The segment requirement(s) within the scope of an operations request that specifically relates to this job order. """
    segmentRequirement: SegmentRequirement @hasInverse(field: jobOrders)
    """ The job order parameter related to this job order. """
    parameters: [JobOrderParameter] @hasInverse(field: jobOrder)
    """ The personnel requirements related to this job order. """
    personnelRequirements: [PersonnelRequirement] @hasInverse(field: jobOrder)
    """ The equipment requirements related to this job order. """
    equipmentRequirements: [EquipmentRequirement] @hasInverse(field: jobOrder)
    """ The physical asset requirements related to this job order. """
    physicalAssetRequirements: [PhysicalAssetRequirement] @hasInverse(field: jobOrder)
    """ The material requirements related to this job order. """
    materialRequirements: [MaterialRequirement] @hasInverse(field: jobOrder)

    ##### ADDITIONAL RELATIONSHIPS #####
    """ Workflow specification that this job order corresponds with. """
    workflowSpecification: WorkflowSpecification @hasInverse(field: jobOrders)
    """ Workflow specification version that this job order corresponds with. """
    workflowSpecificationVersion: WorkflowSpecificationVersion @hasInverse(field: jobOrders)
    """ Workflow specification node that this job order corresponds with. """
    workflowSpecificationNode: WorkflowSpecificationNode @hasInverse(field: jobOrders)

    ##### INVERSE ISA95 RELATIONSHIPS #####
    """ The work directive that this job order corresponds to. """
    workDirective: WorkDirective @hasInverse(field: jobOrders)

    ##### ADDITIONAL RELATIONSHIPS - To be removed #####
    """ Leftover from Libre 2 that allows us to track the actual sequence of jobs rather than planned. To be removed in future. """
    previous: [JobOrder] @hasInverse(field: next)
    """ Leftover from Libre 2 that allows us to track the actual sequence of jobs rather than planned. To be removed in future. """
    next: [JobOrder] @hasInverse(field: previous)

    #### 21 CFR 11 Compliance ####
    """ Can have electronic Signature. """
    signatures: [Signature] @hasInverse(field: jobOrder)

    ### ISA 88 Compliance ###
    """ Defines a comment on the job order. """
    comments: [Comment] @hasInverse(field: jobOrder)
}


"""
Information to be exchanged which cannot be mapped as personnel, equipment, physical asset or material 
properties shall be defined as job order parameters.

The attributes for a job order parameter are the same as those for a segment parameter.

A job order parameter may be made up of zero or more nested job order parameters. A job order parameter 
should include a set of limits that apply to any change to the value, such as quality limits and safety 
limits.
"""
type JobOrderParameter @withSubscription @key(fields: "iid"){
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ The identification of the job order parameter. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ Contains additional information and descriptions of the job order parameter. """
    description: String @search(by: [fulltext, exact])
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ The value, set of values, or range of the value to be used for this parameter. """
    value: String @search(by: [fulltext, exact])
    """ The engineering units in which the value is defined. """
    valueUnitOfMeasure: UnitOfMeasure
    
    ##### ADDITIONAL ATTRIBUTES #####
    """ Display name. """
    label: String @search(by: [fulltext, exact])

    ##### RELATIONSHIPS #####
    """ The job order containing this job order parameter. """
    jobOrder: JobOrder! @hasInverse(field: parameters)
    """ The child job order parameter(s) that are part of this job order parameter. """
    children: [JobOrderParameter] @hasInverse(field: parent)
    """ The job order parameter that this job order parameter is a child of. """
    parent: JobOrderParameter @hasInverse(field: children)
    """ The parameter specification takes its definition from the operations segment. """
    parameterSpecification: ParameterSpecification @hasInverse(field: jobOrderParameter)
    """ If no parameter is defined on the operations segment then the definition may be taken from the process segment. """
    processSegmentParameter: ProcessSegmentParameter @hasInverse(field: jobOrderParameter)
}


enum DispatchStatus{
    CREATED
    RELEASED
    PENDING
    ACTIVE
    PARKED
    COMPLETE
    CLOSED
    CANCELED
}
# ################################################################################
# Work Performance Information Model
# ################################################################################
#
#
# Work performance shall be defined as a collection of work responses that is a
# report on requested manufacturing information. Work responses are responses
# from manufacturing that are associated with a work request. There may be one
# or more work responses for a single work request if the manufacturing facility
# needs to split the work request into smaller elements.


"""
Work performance shall be defined as a collection of work responses that is a report on requested 
manufacturing information. Work responses are responses from manufacturing that are associated with 
a work request. There may be one or more work responses for a single work request if the manufacturing 
facility needs to split the work request into smaller elements.

A work performance may be made up of zero or more nested work performances.
"""
type WorkPerformance @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: workPerformance)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ A unique identification of the work performance and could include version and revision identification. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ Contains additional information and descriptions of the work performance. """
    description: String @search(by: [fulltext, exact])
    """ Describes the category of work. """
    workType: WorkType @search
    """ The starting time of the associated work performance. """
    startDateTime: DateTime @search
    """ The ending time of the associated work performance. """
    endDateTime: DateTime @search
    """ The date and time in which the work performance was published or generated. """
    publishedDate: DateTime @search
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ Indicates the state of the work performance. """
    workState: JobState

    ##### RELATIONSHIPS #####
    """ The work response(s) related to this work performance. """
    workResponses: [WorkResponse!]! @hasInverse(field: workPerformance)
    """ The related object(s) makes up part of this work performance as the whole. """
    children: [WorkPerformance] @hasInverse(field: parent)
    """ The related object this work performance makes up part of as the whole. """
    parent: WorkPerformance @hasInverse(field: children)
    """ An identification of the associated work schedule. """
    workSchedule: WorkSchedule @hasInverse(field: workPerformances)
}


"""
The responses from manufacturing that are associated with a work request shall be defined as work 
responses. There may be one or more work responses for a single work request if the manufacturing 
facility needs to split the work request into smaller elements of work. 

A work response may include the status of the request, such as the percentage complete, a finished 
status, or an aborted status.

A work response may be made up of zero or more nested work responses.
"""
type WorkResponse @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: workResponse)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ An identification within the associated work performance. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ Contains additional information and descriptions of the work response. """
    description: String @search(by: [fulltext, exact])
    """ Describes the category of work. """
    workType: WorkType @search
    """ The starting time of this work response. """
    startDateTime: DateTime @search
    """ The ending time of this work response. """
    endDateTime: DateTime @search
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ Indicates the state of the work response. """
    responseState: JobState @search

    ##### ADDITIONAL ATTRIBUTES #####

    ##### RELATIONSHIPS #####
    """ The work performance contains in part this work response. """
    workPerformance: WorkPerformance! @hasInverse(field: workResponses)
    """ The related object(s) makes up part of this work response as the whole. """
    children: [WorkResponse] @hasInverse(field: parent)
    """ The related object this work response makes up part of as the whole. """
    parent: WorkResponse @hasInverse(field: children)
    """ An identification of the associated work request. """
    workRequest: WorkRequest @hasInverse(field: workResponses)
    """ The job responses that make up this work response. """
    jobResponses: [JobResponse!]! @hasInverse(field: workResponse)
    """ The segment response contains in part this work response. """
    segmentResponse: SegmentResponse @hasInverse(field: workResponses)

    """ The events associated with this work response. """
    events: [Event] @hasInverse(field: workResponse) 

    #### 21 CFR 11 Compliance ####
    """ Can have electronic Signature. """
    signatures: [Signature] @hasInverse(field: workResponse)

    ### ISA 88 Compliance ###
    """ Defines a comment on the work response. """
    comments: [Comment] @hasInverse(field: workResponse)
}


"""
A job response list shall be defined as a collection of job responses for a specific period of time 
and selected work centers or other resources. A job response list may be considered as a slice of 
work performances. 

A job response list may contain job responses from multiple work responses and work performances.
"""
type JobResponseList @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: jobResponseList)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ A unique identification of the job response list. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ An identification of the version of the job response list. """
    version: String! @search(by: [fulltext, exact])
    """ Contains additional information and descriptions of the job response list. """
    description: String @search(by: [fulltext, exact])
    """ Describes the category of work. """
    workType: WorkType @search
    """ The starting time of this job response list. """
    startDateTime: DateTime @search
    """ The ending time of this job response list. """
    endDateTime: DateTime @search
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope

    ##### RELATIONSHIPS #####
    """ The job response(s) that make up this job response list. """
    jobResponses: [JobResponse!]! @hasInverse(field: jobResponseList)
}


"""
The responses from manufacturing that are associated with a job order shall be defined as a job response. 
There may be one or more job responses for a single job order if the manufacturing facility needs to 
split the job order into smaller elements of work. Where smaller elements of work are reported, the job 
response may be for a specific workflow specification or a workflow specification node.

A job order may include the status of the request, such as the percentage complete, a finished status, 
or an aborted status.
"""
type JobResponse @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]
    """ The list of OperationsEventRecordEntries that have been recorded """
    recordEntries: [InformationObject] @hasInverse(field: jobResponse)

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ An identification within the associated job response. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ Contains additional information and descriptions of the job response. """
    description: String @search(by: [fulltext, exact])
    """ The date and time on which the resource relationship network was published or generated. """
    publishedDate: DateTime @search
    """ Describes the category of work. """
    workType: WorkType @search
    """ The actual starting time of information in the job response. """
    startDateTime: DateTime @search
    """ The actual ending time of information in the job response. """
    endDateTime: DateTime @search
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ Indicates the state of job work response. """
    jobState: JobState

    ##### ADDITIONAL ATTRIBUTES #####
    """ The variable context for process instance. May be moved to data field. """
    dataJSON: String @search(by: [fulltext, exact, regexp])
    """ The production day this job was finished. """
    productionDate: String @search(by: [fulltext, exact])

    ##### RELATIONSHIPS #####
    """ The work response this job response makes up part of. """
    workResponse: WorkResponse @hasInverse(field: jobResponses)
    """ The segment response contains in part this job response. """
    segmentResponse: SegmentResponse @hasInverse(field: jobResponses)
    """ The work master related to this job response. """
    workMaster: WorkMaster @hasInverse(field: jobResponses)
    """ The work directive related to this job response. """
    workDirective: WorkDirective @hasInverse(field: jobResponses)
    """ The workflow specifications related to this job response. """
    workflowSpecification: WorkflowSpecification @hasInverse(field: jobResponses)
    """ The workflow specifications version related to this job response. """
    workflowSpecificationVersion: WorkflowSpecificationVersion @hasInverse(field: jobResponses)
    """ The workflow specification node related this job response. """
    workflowSpecificationNode: WorkflowSpecificationNode @hasInverse(field: jobResponses)
    """ The job order related to this job response, """
    jobOrder: JobOrder @hasInverse(field: jobResponses)
    """ The job response list referenced in this job response. """
    jobResponseList: JobResponseList @hasInverse(field: jobResponses)
    """ The personnel actual(s) related to this job response. """
    personnelActual: [PersonnelActual] @hasInverse(field: jobResponse)
    """ The equipment actual(s) related to this job response. """
    equipmentActual: [EquipmentActual] @hasInverse(field: jobResponse)
    """ The physical asset actual(s) related to this job response. """
    physicalAssetActual: [PhysicalAssetActual] @hasInverse(field: jobResponse)
    """ The material actual(s) related to this job response. """
    materialActual: [MaterialActual] @hasInverse(field: jobResponse)
    """ Data associated with this job response. """
    data: [JobResponseData] @hasInverse(field: jobResponse)

    ##### ADDITIONAL RELATIONSHIPS #####
    """ The related object(s), job response, makes up part of this job response as the whole. """
    children: [JobResponse] @hasInverse(field: parent)
    """ The related object, job response, this job response makes up part of as the whole. """
    parent: JobResponse @hasInverse(field: children)
    """ ISA88 event. An event is a discrete occurrence in time. """
    events: [Event] @hasInverse(field: jobResponse)

    #### 21 CFR 11 Compliance ####
    """ Can have electronic Signature. """
    signatures: [Signature] @hasInverse(field: jobResponse)

    ### ISA 88 Compliance ###
    """ Defines a comment on the job response. """
    comments: [Comment] @hasInverse(field: jobResponse)
}


"""
Other information related to the actual work made shall be presented as job response data.
A job response data object may be made up of zero or more nested job response data objects.
"""
type JobResponseData @withSubscription @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])
    """ Entity is considered active from this point in time forward. """
    effectiveStart: DateTime! @search @default(add: { value: "$now" })
    """ Entity is considered active until this time, or until the end of time if empty. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ The identification of the job response data. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ Contains additional information and descriptions of the job response data. """
    description: String @search(by: [fulltext, exact])
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ The value or set of values of the job response data. """
    value: String @search(by: [fulltext, exact])
    """ The engineering units in which the value is defined. """
    valueUnitOfMeasure: UnitOfMeasure
    
    ##### ADDITIONAL ATTRIBUTES #####
    """ Display name. """
    label: String @search(by: [fulltext, exact, regexp])

    ##### RELATIONSHIPS #####
    """ The job response contains in part this job response data(s). """
    jobResponse: JobResponse! @hasInverse(field: data)
    """ The job response data(s) that is part of this job response data as the whole. """
    children: [JobResponseData] @hasInverse(field: parent)
    """ The job response data(s) that this job response is part of data as the whole. """
    parent: JobResponseData @hasInverse(field: children) 
    """ The events associated with this job response data. """
    events: [Event] @hasInverse(field: jobResponseData)
    
    ### ISA 88 Compliance ###
    """ Defines a comment on the job response data. """
    comments: [Comment] @hasInverse(field: jobResponseData)
    """ Approval Signature for this Data record """
    signatures: [Signature] @hasInverse(field: jobResponseData)
}


"""
The defined values for the work state attribute of the work performance object, the response state 
attribute for the work response object, and the job state attribute of the job response object have 
the following definitions.
"""
enum JobState {
    """ Necessary preconditions have not been met and the job orders or activities are not ready to run. """
    WAITING
    """ Necessary preconditions have been met and the job order or activities are ready to run. """
    READY
    """ Job order or activities are in execution. """
    RUNNING
    """ Job order or activities have been completed and are no longer in execution. """
    COMPLETED
    """ An execution decision has been taken to terminate the job order or activities that may, or may not, 
    have been previously commenced. """
    ABORTED
    """ Job order or activities have been temporarily stopped due to a constraint of some form. """
    HELD
    """ Job order or activities have been temporarily stopped due to a deliberate decision within execution. """
    SUSPENDED
    """ Job order or activities have been completed and fully reconciled. No further changes, or restatement 
    of actuals is expected. """
    CLOSED
    """ Job order or activity doesn't correspond to the other states or is stored else-where. """
    OTHER
}
# ################################################################################
# Work Capability Information Model
# ################################################################################
#
#
# The collection of information about the resources for work for selected future
# and past times shall be defined as work capability. This is made up of information
# about committed, available, and unattainable equipment, material, personnel,
# physical assets, and work master capabilities. Work capability describes
# the names, terms, statuses, and quantities of which the manufacturing operations
# and control system has knowledge.
# ################################################################################
# Work Master Capability Information Model
# ################################################################################
#
#
# A representation of a logical grouping of personnel resources, equipment resources,
# physical asset resources, and material that is available, unattainable, committed,
# used, unused, or total for a given work master for a specific time shall be defined
# as a work master capability
# ################################################################################
# Work Alerts Information Model
# ################################################################################
#
#
# A notification of a Level 3 event shall be defined as a work alert.
# Not all events warrant creating a work alert.
# A work alert does not require acknowledgement.
# If acknowledgement is needed, then an alarm model may be used
# (see ISA-18.00.02 (IEC 62682), for information on alarms).
# Work alerts may be generated by any Level 3 activity.
# ################################################################################
# Work Calendar Information Model
# ################################################################################
#
#
# Work calendar definitions define a set of rules that specify specific calendar entries,
# along with repeat rules, duration, starting and ending dates, and times for the entries.
# The entries can be used to generate a work calendar, which is a calendar of specific
# entries for specific dates (and times).
#
# The work calendar model defines an exchange format for exchanging the rules
# ( work calendar definition) or a calendar with specific dates ( work calendar).

"""
Work Calendar domain describes the definition of shift patterns and non-working days
The Work Calendar Definition defines the rule used to determine work calendar entries.
It contains the recurrence time for the rule, the duration of the entry, the entry type, and properties associated with the entry.
Standard Entry Types include Working Time and Non-Working Time. The entry may include property definitions.
The definition uses the rrule.js library to generate calendar events, and the fields available match
the configuration fields required by rrule.js
"""
type WorkCalendarDefinitionEntry @withSubscription @key(fields: "iid") {
  """
  A unique identification of a specific work calendar.
  """
  iid: ID!
  """ Boolean denoting whether the WorkCalendarDefinitionEntry is active. """
  isActive: Boolean @search
  """ Description of the workCalendarDefinitionEntry. """
  description: String
  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: Equipment
  """  Describes how often the work calendar Entry repeats. """
  freq: Frequency!
  """ Describes the start date/time of the work calendar entry. """
  startDateTime: DateTime!
  """ Describes the end date/time of the work calendar entry. """
  endDateTime: DateTime
  """ Describes the number of repititions of the event. """
  count: Int
  """ Describes the interval between calendar events. """
  interval: Int
  """ Describes the week start. """
  wkst: Weekday
  """ The day on which the work calendar definition entry recurs. """
  byWeekDay: [Weekday]
  """ The month in which the work calendar definition entry recurs. """
  byMonth: [Int]
  """ The set position in which the work calendar definition entry recurs. """
  bySetPos: [Int]
  """ The month day in which the work calendar definition entry recurs. """
  byMonthDay: [Int]
  """ The day of the year in which the work calendar definition entry recurs. """
  byYearDay: [Int]
  """ The week number in which the work calendar definition entry recurs. """
  byWeekNo: [Int]
  """ The hour in which the work calendar definition entry recurs. """
  byHour: [Int]
  """ The minute in which the work calendar definition entry recurs. """
  byMinute: [Int]
  """ The second in which the work calendar definition entry recurs. """
  bySecond: [Int]
  """ The duration of the work calendar definition entry. """
  duration: String
  """ Defines the type of work calendar definition entry. """
  entryType: WorkCalendarEntryType!
  """ The Work Calendar Definition Properties related to the entry. """
  properties: [WorkCalendarDefinitionEntryProperty]
  """ The Work Calendar Entries associated with the definition entry. """
  calendarEntries: [WorkCalendarEntry] @hasInverse(field: definition)
  """ The Work Calendar associated with the entry. """
  workCalendar: WorkCalendar @hasInverse(field: definition)
}

"""
The work calendar definition entry property shall be defined as property on a work calendar definition entry.
A work calendar definition entry property may contain nested work calendar definition entry property(s).
"""
type WorkCalendarDefinitionEntryProperty @withSubscription @key(fields: "iid"){
  # MetaData
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  # Attributes
  """
  A unique identification of a specific work calendar.
  """
  id: String! @id @search(by: [fulltext, exact, regexp])
    """ Description of the workCalendarDefinitionEntryProperty. """
  description: String @search(by: [fulltext, exact])
  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope
  """ The Spatial Definition associated with the property. """
  spatialDefinition: SpatialDefinition
  """ The operational location associated with the property. """
  operationalLocation: OperationalLocation
  """ The use of the property. """
  use: String @search(by: [fulltext, exact])
  """ The default value, set of values, or range of the property. """
  quantity: Float!
  """ The unit of measure of the associated property value. """
  quantityUoM: UnitOfMeasure

  # Relationships
  """ The work calendar defintion entry associated with the property. """
  workCalendarDefinitionEntry: WorkCalendarDefinitionEntry! @hasInverse(field: properties)
  """ The child properties associated with the property. """
  children: [WorkCalendarDefinitionEntryProperty] @hasInverse(field: parent)
  """ The parent property associated with the property. """
  parent: WorkCalendarDefinitionEntryProperty @hasInverse(field: children)
}


enum Frequency {
  YEARLY
  MONTHLY
  WEEKLY
  DAILY
  HOURLY
  MINUTELY
  SECONDLY
}

enum Weekday {
  MO
  TU
  WE
  TH
  FR
  SA
  SU
}

"""
The work calendar entry shall be defined as a calendar entry with a start date and time, a finish date and time, and an entry type.
A work calendar entry may be made up of zero or more nested work calendar entries.
"""
type WorkCalendarEntry @withSubscription @key(fields: "iid") {
  """
  A unique identification of a specific work calendar.
  """
  iid: ID!
  """ The boolean to define whether the entry is active. """
  isActive: Boolean @search
  """ The description of the work calendar entry. """
  description: String
  """ The work calendar definition entry associated. """
  definition: WorkCalendarDefinitionEntry @hasInverse(field: calendarEntries)
  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: Equipment
  """ The start time of the work calendar entry. """
  startDateTime: DateTime! @search
  """ The end time of the work calendar entry. """
  finishDateTime: DateTime! @search
  """ The entry type of the calendar entry. """
  entryType: WorkCalendarEntryType! @search
  """ The properties associated with the entry. """
  properties: [WorkCalendarEntryProperty]
  """ The work calendar associated with the entry. """
  workCalendar: WorkCalendar @hasInverse(field: entries)
}

"""
The work calendar entry property shall be defined as a property on a work calendar entry. 
A work calendar entry property may contain nested work calendar entry property(s).
"""
type WorkCalendarEntryProperty @withSubscription @key(fields: "iid"){
  # MetaData
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  # Attributes
  """
  A unique identification of a specific work calendar.
  """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ The description of the work calendar entry property. """
  description: String @search(by: [fulltext, exact])
  """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
  hierarchyScope: HierarchyScope
  """ The spatial definition associated with the work calendar entry property. """
  spatialDefinition: SpatialDefinition
  """ The operational location associated with the work calendar entry property. """
  operationalLocation: OperationalLocation
  """ The use associated with the work calendar entry property. """
  use: String @search(by: [fulltext, exact])
  """ The quantity associated with the work calendar entry property. """
  quantity: Float!
  """ The Unit of Measure associated with the value. """
  quantityUoM: UnitOfMeasure

  # Relationships
  """ The work calendar entry associated with the property. """
  workCalendarEntry: WorkCalendarEntry! @hasInverse(field: properties)
  """ The child properties of the associated property. """
  children: [WorkCalendarEntryProperty] @hasInverse(field: parent)
  """ The parent property of this property. """
  parent: WorkCalendarEntryProperty @hasInverse(field: children)
}

"""
The work calendar shall be defined as a collection of work calendar entries.
"""
type WorkCalendar @withSubscription @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ The list of OperationsEventRecordEntries that have been recorded """
  recordEntries: [InformationObject] @hasInverse(field: workCalendar)

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default( add: { value: "$now" } )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  """ The name of the work calendar. """
  name: String! @id
  """ The description of the work calendar. """
  description: String
  """ The associated work calendar definition entry. """
  definition: [WorkCalendarDefinitionEntry] @hasInverse(field: workCalendar)
  """ The associated work calendar entries. """
  entries: [WorkCalendarEntry] @hasInverse(field: workCalendar)
  """ The equipment version(s) associated with the work calendar. """
  equipmentVersions: [EquipmentVersion] @hasInverse(field: workCalendar)
}

enum WorkCalendarEntryType {
  PlannedBusyTime
  PlannedDowntime
  PlannedShutdown
}
# ################################################################################
# Work Record Information Model
# ################################################################################
#
#
# The operations record model is specified in ISA-95 Part 2.
# The operations record template and operations record specification template are
# abstract types that are not standalone exchange objects.
# These abstract objects are realized in specialized implementations as occurrences
# of the operations event record in Part 2 and the work record in Part 4.
# The operations record model represents a common structure for representing
# bundled information reported in data exchanges.
# The operations record template bundles operations record entry template objects
# by the type of action in the action attribute with defined values of created,
# changed, deleted and observed. The operations record entry template embeds objects
# defined in this standard and manufacturing operations profiles or references to
# external objects. The operations record specification template specifies the
# content and form of objects in an operations record within the associated operations
# record entry template(s).
enum InformationObjectTypeEnum {
    Change
    Comment
    DataSet
    DataSource
    DataSourceVersion
    Equipment
    EquipmentClass
    EquipmentClassVersion
    EquipmentVersion
    Event
    HierarchyScope
    JobList
    JobOrder
    JobResponse
    JobResponseList
    MaterialClass
    MaterialClassVersion
    MaterialDefinition
    MaterialDefinitionVersion
    MaterialLot
    MaterialSubLot
    OperationalLocation
    OperationalLocationClass
    OperationalLocationClassVersion
    OperationalLocationVersion
    OperationsCapability
    OperationsDefinition
    OperationsDefinitionVersion
    OperationsEvent
    OperationsEventClass
    OperationsEventClassVersion
    OperationsEventDefinition
    OperationsEventDefinitionVersion
    OperationsPerformance
    OperationsRequest
    OperationsResponse
    OperationsSchedule
    OperationsSegment
    Other
    Person
    PersonVersion
    PersonnelClass
    PersonnelClassVersion
    PhysicalAsset
    PhysicalAssetClass
    PhysicalAssetClassVersion
    PhysicalAssetVersion
    ProcessSegment
    ProcessSegmentVersion
    PropertyMeasurement
    ResourceNetworkConnectionType
    ResourceRelationshipNetwork
    Sample
    SpatialDefinition
    TestResult
    TestSpecification
    TestSpecificationVersion
    UnitOfMeasure
    WorkAlert
    WorkAlertDefinition
    WorkCalendar
    WorkCalendarDefinition
    WorkCapability
    WorkDirective
    WorkMaster
    WorkMasterCapability
    WorkMasterVersion
    WorkPerformance
    WorkRecord
    WorkRecordSpecification
    WorkRequest
    WorkResponse
    WorkSchedule
    WorkflowSpecification
    WorkflowSpecificationConnectionType
    WorkflowSpecificationNodeType
    WorkflowSpecificationVersion
}
type InformationObject @withSubscription @key(fields: "iid") {

    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!

    ##### RELATIONSHIPS #####
    operationsEventRecordEntry: OperationsEventRecordEntry @hasInverse(field: informationObject)

    ##### ATTRIBUTES #####
    # change:
    comment: Comment @hasInverse(field: recordEntries)
    # dataSet:
    event: Event @hasInverse(field: recordEntries)
    dataSource: DataSource @hasInverse(field: recordEntries)
    dataSourceVersion: DataSourceVersion @hasInverse(field: recordEntries)
    hierarchyScope: HierarchyScope @hasInverse(field: recordEntries)
    unitOfMeasure: UnitOfMeasure @hasInverse(field: recordEntries)
    spatialDefinition: SpatialDefinition @hasInverse(field: recordEntries)
    operationalLocation: OperationalLocation @hasInverse(field: recordEntries)
    operationalLocationVersion: OperationalLocationVersion @hasInverse(field: recordEntries)
    operationalLocationClass: OperationalLocationClass @hasInverse(field: recordEntries)
    operationalLocationClassVersion: OperationalLocationClassVersion @hasInverse(field: recordEntries)
    personnelClass: PersonnelClass @hasInverse(field: recordEntries)
    personnelClassVersion: PersonnelClassVersion @hasInverse(field: recordEntries)
    person: Person @hasInverse(field: recordEntries)
    personVersion: PersonVersion @hasInverse(field: recordEntries)
    equipmentClass: EquipmentClass @hasInverse(field: recordEntries)
    equipmentClassVersion: EquipmentClassVersion @hasInverse(field: recordEntries)
    equipment: Equipment @hasInverse(field: recordEntries)
    equipmentVersion: EquipmentVersion @hasInverse(field: recordEntries)
    physicalAssetClass: PhysicalAssetClass @hasInverse(field: recordEntries)
    physicalAssetClassVersion: PhysicalAssetClassVersion @hasInverse(field: recordEntries)
    physicalAsset: PhysicalAsset @hasInverse(field: recordEntries)
    physicalAssetVersion: PhysicalAssetVersion @hasInverse(field: recordEntries)
    materialClass: MaterialClass @hasInverse(field: recordEntries)
    materialClassVersion: MaterialClassVersion @hasInverse(field: recordEntries)
    materialDefinition: MaterialDefinition @hasInverse(field: recordEntries)
    materialDefinitionVersion: MaterialDefinitionVersion @hasInverse(field: recordEntries)
    materialLot: MaterialLot @hasInverse(field: recordEntries)
    materialSubLot: MaterialSubLot @hasInverse(field: recordEntries)
    processSegment: ProcessSegment @hasInverse(field: recordEntries)
    processSegmentVersion: ProcessSegmentVersion @hasInverse(field: recordEntries)
    testSpecification: TestSpecification @hasInverse(field: recordEntries)
    # testSpecificationVersion:
    testResult: TestResult @hasInverse(field: recordEntries)
    # sample:
    propertyMeasurement: PropertyMeasurement @hasInverse(field: recordEntries)
    operationsEventClass: OperationsEventClass @hasInverse(field: recordEntries)
    operationsEventClassVersion: OperationsEventClassVersion @hasInverse(field: recordEntries)
    operationsEventDefinition: OperationsEventDefinition @hasInverse(field: recordEntries)
    operationsEventDefinitionVersion: OperationsEventDefinitionVersion @hasInverse(field: recordEntries)
    operationsEvent: OperationsEvent @hasInverse(field: recordEntries)
    operationsDefinition: OperationsDefinition @hasInverse(field: recordEntries)
    operationsDefinitionVersion: OperationsDefinitionVersion @hasInverse(field: recordEntries)
    operationsSegment: OperationsSegment @hasInverse(field: recordEntries)
    operationsSchedule: OperationsSchedule @hasInverse(field: recordEntries)
    operationsRequest:OperationsRequest @hasInverse(field: recordEntries)
    operationsPerformance: OperationsPerformance @hasInverse(field: recordEntries)
    operationsResponse: OperationsResponse @hasInverse(field: recordEntries)
    # operationsCapability: OperationsCapability
    # resourceRelationshipNetwork: ResourceRelationshipNetwork
    # resourceNetworkConnectionType: ResourceNetworkConnectionType
    workMaster: WorkMaster @hasInverse(field: recordEntries)
    workDirective: WorkDirective @hasInverse(field: recordEntries)
    workflowSpecification: WorkflowSpecification @hasInverse(field: recordEntries)
    workflowSpecificationVersion: WorkflowSpecificationVersion @hasInverse(field: recordEntries)
    workflowSpecificationNodeType: WorkflowSpecificationNodeType @hasInverse(field: recordEntries)
    workflowSpecificationConnectionType: WorkflowSpecificationConnectionType @hasInverse(field: recordEntries)
    workSchedule: WorkSchedule @hasInverse(field: recordEntries)
    workRequest: WorkRequest @hasInverse(field: recordEntries)
    jobList: JobList @hasInverse(field: recordEntries)
    jobOrder: JobOrder @hasInverse(field: recordEntries)
    workPerformance: WorkPerformance @hasInverse(field: recordEntries)
    workResponse: WorkResponse @hasInverse(field: recordEntries)
    jobResponse: JobResponse @hasInverse(field: recordEntries)
    jobResponseList: JobResponseList @hasInverse(field: recordEntries)
    # workCapability: WorkCapability
    # workMasterCapability: WorkMasterCapability
    # workAlertDefinition: WorkAlertDefinition
    # workAlert: WorkAlert
    workCalendar: WorkCalendar @hasInverse(field: recordEntries)
    # workCalendarDefinition: WorkCalendarDefinition
    # workRecord: WorkRecord
    # workRecordSpecification: WorkRecordSpecification
    Other: String
}# ################################################################################
# State Model
# ################################################################################
#


type StateModelDefinition @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    ##### VERSIONING #####
    """ The time at which the version became active. """
    effectiveStart: DateTime @search
    """ the time at which the version stopped being active. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ A unique identification of a specific operational location class version. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ Contains additional information and descriptions of the operational location. """
    description: String @search(by: [fulltext, exact])
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    states: [StateModelState] @hasInverse (field: stateModelDefinition)
    transitions: [StateModelTransition] @hasInverse (field: stateModelDefinition)
    events: [StateModelEvent] @hasInverse (field: stateModelDefinition)
	""" Contains the base64 encoded XML that this StateModelDefinition was generated from. """
	bpmnXMLEncoded: String!


    ##### RELATIONSHIPS #####
    equipmentClassVersion: EquipmentClassVersion @hasInverse(field: stateModels)
    equipmentVersion: EquipmentVersion @hasInverse(field: stateModels)
    materialClassVersion: MaterialClassVersion @hasInverse(field: stateModels)
    materialDefinitionVersion: MaterialDefinitionVersion @hasInverse(field: stateModels)
    personnelClassVersion: PersonnelClassVersion @hasInverse(field: stateModels)
    personVersion: PersonVersion @hasInverse(field: stateModels)
    physicalAssetClassVersion: PhysicalAssetClassVersion @hasInverse(field: stateModels)
    physicalAssetVersion: PhysicalAssetVersion @hasInverse(field: stateModels)
    instances: [StateModelInstance] @hasInverse(field: stateModelDefinition)
	properties: [StateModelProperty] @hasInverse(field: StateModel)
}

type StateModelState @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    ##### VERSIONING #####
    """ The time at which the version became active. """
    effectiveStart: DateTime @search
    """ the time at which the version stopped being active. """
    effectiveEnd: DateTime @search

    parent: StateModelState @hasInverse(field:children)
    children: [StateModelState] @hasInverse(field:parent)

    ##### ATTRIBUTES #####
    """ A unique identification of a specific operational location class version. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ This state is active when the state machine is initiated """
    isInitialState: Boolean @search
    """ This state machine terminates when it reaches this state """
    isFinalState: Boolean @search
    """ The State Model Definition to which this node belongs """
    stateModelDefinition: StateModelDefinition @hasInverse(field: states)
    """ Connections to this Node """
    inflows:[StateModelTransition] @hasInverse(field:to)
    """ Connections from this node """
    outflows:[StateModelTransition] @hasInverse(field:from)
    """ Actions that are triggered on entry to this state. """
    onEntry: [StateModelAction] @hasInverse(field: isEntryActionForState)
    """ Actions that are triggered prior to exiting this state. """
    onExit: [StateModelAction] @hasInverse(field: isExitActionForState)
}

type StateModelTransition @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    ##### VERSIONING #####
    """ The time at which the version became active. """
    effectiveStart: DateTime @search
    """ the time at which the version stopped being active. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ A unique identification of a specific operational location class version. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ The State Model Definition to which this connection belongs """
    stateModelDefinition: StateModelDefinition! @hasInverse(field: transitions)
    """ The Events that trigger this transition """
    stateModelEvents: [StateModelEvent] @hasInverse(field: transitions)
    """ The State Model State at the start of this transition """
    from: StateModelState! @hasInverse(field: outflows)
    """ The State Model State at the end of this transition """
    to: StateModelState! @hasInverse(field: inflows)
    """ jsonata expression to determine if the transition should proceed or not """
    condition: String

    ##### RELATIONSHIPS #####
    stateModelActions: [StateModelAction] @hasInverse(field:transition)
}

type StateModelEvent @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    ##### VERSIONING #####
    """ The time at which the version became active. """
    effectiveStart: DateTime @search
    """ the time at which the version stopped being active. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ A unique identification of a specific operational location class version. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ The State Model Definition to which this connection belongs """
    stateModelDefinition: StateModelDefinition! @hasInverse(field: events)
    """ Transitions triggered by this event """
    transitions: [StateModelTransition] @hasInverse(field: stateModelEvents)
}

enum StateModelActionType {
    ENTRY
    EXIT
}

type StateModelAction @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    ##### VERSIONING #####
    """ The time at which the version became active. """
    effectiveStart: DateTime @search
    """ the time at which the version stopped being active. """
    effectiveEnd: DateTime @search

    ##### ATTRIBUTES #####
    """ A unique identification of a specific operational location class version. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    actionType: StateModelActionType @search
    workflowSpecification: WorkflowSpecification @hasInverse(field: stateModelActions)
    """ Variable Context to pass into the Workflow. stringified json or jsonata expression """
    variables: String

    ##### RELATIONSHIPS #####
    transition:StateModelTransition @hasInverse(field: stateModelActions)
    isEntryActionForState: StateModelState @hasInverse(field: onEntry)
    isExitActionForState: StateModelState @hasInverse(field: onExit)
}

type StateModelInstance @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    ##### ATTRIBUTES #####
    """ A unique identification of a specific operational location class version. """
    id: String! @id @search(by: [fulltext, exact, regexp])
    """ The label is last node in the fully qualified name. """
    label: String! @search(by: [fulltext, exact, regexp])
    """ State Model Definition for the instance """
    stateModelDefinition: StateModelDefinition @hasInverse(field: instances)
    """ Contains additional information and descriptions of the operational location. """
    description: String @search(by: [fulltext, exact])
    """ Identifies where the exchanged information fits within the role-based equipment hierarchy. """
    hierarchyScope: HierarchyScope
    """ The current state of the StateModelInstance """
    state: String @search(by: [fulltext, exact, regexp])
    """ History of transitions between states for this instance """
    transitions: [StateTransitionInstance] @hasInverse(field:stateModelInstance)

    ##### RELATIONSHIPS #####
    equipment: Equipment @hasInverse(field: stateModelInstances)
    materialDefinition: MaterialDefinition @hasInverse(field: stateModelInstances)
    materialLot: MaterialLot @hasInverse(field: stateModelInstances)
    materialSubLot: MaterialSubLot @hasInverse(field: stateModelInstances)
    person: Person @hasInverse(field: stateModelInstances)
    physicalAsset: PhysicalAsset @hasInverse(field: stateModelInstances)
}

type StateTransitionInstance @key(fields: "iid") {
    ##### IDENTIFICATION #####
    """ Unique internal database identifier. """
    iid: ID!
    """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
    acl: [AccessPermission]

    ##### METADATA #####
    """ The date and time in UTC that the entity was created. """
    _createdOn: DateTime! @default( add: { value: "$now" } )
    """ The date and time in UTC that the entity was last mutated. """
    _modifiedOn: DateTime @default( add: { value: "$now" }, update: { value: "$now" } )
    """ The username from the token which created the entity. """
    _createdBy: String @search(by: [fulltext, exact])
    """ The username from the token from the last mutation of this entity. """
    _modifiedBy: String @search(by: [fulltext, exact])

    ##### ATTRIBUTES #####
    """ The label is last node in the fully qualified name. """
    stateModelInstance: StateModelInstance! @hasInverse(field: transitions)
    timestamp: DateTime! @search @default( add: { value: "$now" } )
    fromState: String @search(by: [fulltext, exact, regexp])
    toState: String! @search(by: [fulltext, exact, regexp])
}

"""
A property of a state model shall be defined as a state model property
A state model property may contain nested state model property(s).
"""
type StateModelProperty @withSubscription @key(fields: "iid") {
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  StateModel: StateModelDefinition! @hasInverse(field: properties)
  """ Uniquely identifies the state model property. Fully Qualified identifier that is unique in the database. Required attribute."""
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ Uniquely identifies the state model property. Required attribute."""
  name: String! @search(by: [fulltext, exact])
  dataType: DataType
  definitionType: DefinitionType! @default( add:{value:"INSTANCE"})
  """ Additional information about the StateModelProperty. """
  description: String @search(by: [fulltext, exact])
  """ The value, set of values, or range of the property. """
  value: String @search(by: [fulltext, exact])
  """ The unit of measure of the associated property value. """
  valueUnitOfMeasure: UnitOfMeasure
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ The nested StateModelProperty(s) makes up part of this equipment property as the whole. """
  children: [StateModelProperty] @hasInverse(field: parent)
  """ The StateModelProperty that this nested equipment property makes up part of as the whole. """
  parent: StateModelProperty @hasInverse(field: children)
}
"""
Access Permissions are labels with attached permission levels that are linked to data objects through the ACL field
in each type.
@auth rules on each type are used to check if the users token has the appropriate permission to access that data
permissionLevels are as follows:
0 = No Permission
1 = Read Permission
2 = Add Permission (Add implies Read
3 = Update Permission (Update implies Add and Read)
4 = Execute Permission (This is not currently used, but may be used when we figure out how to assign permissions to BPMN processes). Execute implies Update, Add, Read
5 = Delete Permission - This means full permissions, Delete, Execute, Update, Add, Read
The @auth rule checks for the maximum permission in the AccessPermissionAggregate filtered by scope in the list of scopes in the users token
"""
type AccessPermission @key(fields: "iid") {
    iid:ID!
    label:String! @search(by: [fulltext, exact])
    permissionLevel:Int! @search
}
"""
Defines the type of the property,
"""
enum Isa95PropertyType {
    """
    The property value is defined for the class as the default instance value, but individual instances of the class may redefine specific values.
    """
    DefaultType 
    
    """
    The property value is defined for the class and there is no value associated with an instance.
    """
    ClassType
    
    """
    The property value of the class is undefined.
    """
    InstanceType
}
# ################################################################################
# Start of Libre System entities here
# ################################################################################

"""
Store the heartbeat timestamps of connected libre-services.
microservices can subscribe to this entity to check the status of their subscription
"""
type LibreService @withSubscription @key(fields: "id"){
  id: ID!
  name: String! @id
  heartbeat: DateTime
}

type DataSubscription @withSubscription @key(fields: "id"){
  id: ID!
  name: String! @id
  
  """
  The MQTT Topic to publish this subscription to.
  """
  topic: String!

  """
  The GraphQL Subscription query to use.
  """
  query: String!

  """
  If the subscription returns a list, it can be split into separate messages in sub-topics using the id field.
  """
  split: Boolean!
}

# ################################################################################
# Start of Menu data model and enumerations here
# ################################################################################

type Menu @auth(
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  query: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMenu @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{ge:1}}){ iid, label } } }"""},
    {rule: """ query{ queryMenu(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  add: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMenu @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:1}}){ iid, label } } }"""},
    {rule: """ query{ queryMenu(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
  # JWT must have claim 'realmAccess.roles' which is compared to the label in the access permission
  delete: { or:[
    {rule: """ query($realm_access_roles:[String!]){ queryMenu @cascade{iid,acl(filter:{label:{in:$realm_access_roles},permissionLevel:{gt:4}}){ iid, label } } }"""},
    {rule: """ query{ queryMenu(filter:{not:{has:acl}}){ iid }}"""},
    {rule:  "{$realm_access_roles: { in:[ \"ADMIN\" ]} }"}
  ]}
){
  iid: ID!
  label: String! @search(by: [hash])
  acl:[AccessPermission]
  parent: Menu @hasInverse(field: children)
  children: [Menu!] @hasInverse(field: parent)
  menuPage: String
  icon: String
  isSection: Boolean!
  isPage: Boolean!
  orderNumber: Int
}

################################
# Additions for mes processing
#

enum PropertyBindingType {
  BOUND
  STATIC
  CALCULATED
}

""" Allows inherited property to be overridden on the instance. """
type EquipmentPropertyOverride @withSubscription @key(fields:"iid"){
  """ Unique internal database identifier. """
  iid: ID!
  acl:[AccessPermission]
  """ An identification of the specific property. """
  id: String! @id @search(by: [fulltext, exact, regexp])

  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search

  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )

  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )

  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])

  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  """ The equipment thats property is being overriden. """
  equipmentVersions: EquipmentVersion! @hasInverse(field: propertyOverrides)

  """ The property to override the preexisting property with. """
  propertyLabel: String! @search(by: [fulltext, exact])

  """ The data source reference for a bound property type. """
  address: String

  """ Used for calculated property types. """
  expression: String

  """ Used for static property types. """
  value: String

  """ Determines if changes to values should be stored over time. """
  storeHistory: Boolean

  """ Determines if this property is not relevent on the instance. """
  ignore: Boolean @search
}


type EquipmentNameAlias @withSubscription {
  iid: ID!
  equipment: Equipment!
  alias: String! @search(by: [fulltext])
  system: String! @search(by: [fulltext])
}

type PropertyNameAlias @withSubscription {
  iid: ID!
  propertyLabel: String! @search(by: [fulltext, exact, regexp])
  expression: String
  equipmentVersion: EquipmentVersion! @hasInverse(field:propertyNameAliases)
  dataSource: DataSource @hasInverse(field:propertyNameAliases)
  dataSourceTopic: DataSourceTopic @hasInverse(field: propertyNameAliases) @deprecated(reason:"use dataSourceTopicLabel instead")
  dataSourceTopicLabel: String @search(by: [fulltext, exact, regexp])
}

type PropertyValueAlias @withSubscription {
  iid: ID!
  property: EquipmentClassProperty!
  value: String! @search(by: [fulltext])
  alias: String! @search(by: [fulltext])
  system: String! @search(by: [fulltext])
}


enum DataType {
  BOOL
  BYTE
  BYTE_STRING
  DATA_VALUE
  DATE_TIME
  FLOAT64
  EXPANDED_NODE_ID
  STRUCTURE
  FLOAT
  GUID
  INT16
  INT32
  INT64
  INT
  LOCALIZED_TEXT
  NODE_ID
  QUALIFIED_NAME
  S_BYTE
  STATUS_CODE
  STRING
  UINT16
  UINT32
  UInt64
  UINT
  XML_ELEMENT
  BOOL_ARRAY
  BYTE_ARRAY
  BYTE_STRING_ARRAY
  DATA_VALUE_ARRAY
  DATE_TIME_ARRAY
  FLOAT64_ARRAY
  EXPANDED_NODE_ID_ARRAY
  STRUCTURE_ARRAY
  FLOAT_ARRAY
  GUID_ARRAY
  INT16_ARRAY
  INT32_ARRAY
  INT64_ARRAY
  LOCALIZED_TEXT_ARRAY
  NODE_ID_ARRAY
  QUALIFIED_NAME_ARRAY
  S_BYTE_ARRAY
  STATUS_CODE_ARRAY
  STRING_ARRAY
  UINT16_ARRAY
  UINT32_ARRAY
  UInt64_ARRAY
  XML_ELEMENT_ARRAY
}

""" DataSourceProtocol are the client libraries that have been implemented in the libre agent. """
enum DataSourceProtocol {
  MQTT
  OPCUA
}


"""
Represents an external server for subscription to streams of data.
"""
type DataSource @withSubscription @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ The list of OperationsEventRecordEntries that have been recorded """
  recordEntries: [InformationObject] @hasInverse(field: dataSource)

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(add: { value: "$now" })
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(add: { value: "$now" }, update: { value: "$now" })
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### VERSIONING #####
  """ Link to all available versions for this entity. """
  versions: [DataSourceVersion] @hasInverse(field: dataSource)
  """ The currently active version. To find a version that was active at a point in time, use versions with a filter. """
  activeVersion: DataSourceVersion @hasInverse(field: isActiveVersionOf)
  """ The next version number, or the largest version number + 1. """
  nextVersion: String

  ##### ATTRIBUTES #####
  """ Uniquely identifies the data source. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ The label is last node in the fully qualified name. """
  label: String! @search(by: [fulltext, exact, regexp])
  """ The icon for the menu in the libre admin UI menu. """
  uiSortIndex: Int

  ##### RELATIONSHIPS #####
  """ The external data provider details. """
  equipmentDataSources: [EquipmentDataSource] @hasInverse(field: dataSource)
  """ binding configuration for data source """
  propertyNameAliases: [PropertyNameAlias] @hasInverse(field: dataSource)
}


"""
Represents a specific version of a link to an external server for subscription to streams of data.
"""
type DataSourceVersion @withSubscription @primaryKey(fields: ["id","version"]) @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  """ The list of OperationsEventRecordEntries that have been recorded """
  recordEntries: [InformationObject] @hasInverse(field: dataSourceVersion)

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(add: { value: "$now" })
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(add: { value: "$now" }, update: { value: "$now" })
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime @search
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### VERSIONING #####
  """ The specific version of the entity. Purposely free to allow use with a specific revision scheme. """
  version: String! @search(by: [fulltext, exact])
  """ The current state of the version for this entity. """
  versionStatus: VersionState! @search
  """ The data source that this data source version relates to. """
  dataSource: DataSource! @hasInverse(field: versions)
  """ The data source that uses this data source version as it's active version. """
  isActiveVersionOf: DataSource @hasInverse(field: activeVersion)

  ##### ATTRIBUTES #####
  """ Uniquely identifies the data source with the version. """
  id: String! @search(by: [fulltext, exact, regexp])
  """ Contains additional information and descriptions of the data source. """
  description: String @search(by: [fulltext, exact])
  """ The protocol use to connect to the external data source. """
  protocol: DataSourceProtocol! @search(by: [exact])
  """ The full connection uri for the data source. """
  connectionString: String @search(by: [fulltext, exact])
  """ Username for data sources that use simple auth. """
  username: String
  """ Password for data sources that use simple auth. """
  password: String
  """ Certificate for use with data sources that support encryption. """
  certificate: String

  ##### RELATIONSHIPS #####
  """ The list of addresses that are available in the data source. """
  topics: [DataSourceTopic] @hasInverse(field: dataSourceVersion)
  """ The external data provider details. """
  equipmentDataSources: [EquipmentDataSource] @hasInverse(field: dataSourceVersion)
  """ The external data provider details. """
  physicalAssetDataSources: [PhysicalAssetDataSource] @hasInverse(field: dataSourceVersion)
  """ The list of methods that are available on the DataSource """
  methods: [DataSourceMethod] @hasInverse(field: dataSourceVersion)
}


"""
An address within an external data server.
"""
type DataSourceTopic @withSubscription @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(add: { value: "$now" })
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(add: { value: "$now" }, update: { value: "$now" })
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ Uniquely identifies the data source topic. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ Contains additional information and descriptions of the data source topic. """
  description: String @search(by: [fulltext, exact])
  """ The label is last node in the fully qualified name. """
  label: String! @search(by: [fulltext, exact, regexp])
  """ The type of data for this topic. """
  dataType: DataType @search
  """ The messageKey for messages being published into NATS """
  messageKeyDeterminedBy: MessageKey! @search

  ##### RELATIONSHIPS #####
  """ The DatasourceVersion this topic links to. """
  dataSourceVersion: DataSourceVersion! @hasInverse(field: topics)
  """ binding configuration for data source topic """
  propertyNameAliases: [PropertyNameAlias] @hasInverse(field: dataSourceTopic) @deprecated(reason:"the dataSourceTopic Label is now maintained on the propertyNameAlias as a string rather than as a relationship")
}

"""
A method within an OpcUa datasource that can be called against an object 
with input and output arguments
"""
type DataSourceMethod @withSubscription @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(add: { value: "$now" })
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(add: { value: "$now" }, update: { value: "$now" })
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ Uniquely identifies the data source method. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ Contains additional information and descriptions of the data source method. """
  description: String @search(by: [fulltext, exact])
  """ The method is last node in the fully qualified name of the method to call. """
  method: String! @search(by: [fulltext, exact, regexp])
  """ 
  The Object that the method is called against. Note, this should be Null in 
  BaaS, used for communication between services.
  """
  object: String
  """ 
  The Error is optionally returned when the method call fails. Note, 
  this should be Null in BaaS, used for communication between services.
  """
  error: String
  """ 
  The StatusCode is returned after a method call. Note, this should be 
  Null in BaaS, used for communication between services.
  """
  statusCode: Int

  ##### RELATIONSHIPS #####
  """ The DatasourceVersion this method links to. """
  dataSourceVersion: DataSourceVersion! @hasInverse(field: methods)
  """ The Input Arguments for the method call """
  arguments: [DataSourceMethodArgument] @hasInverse(field: dataSourceMethod)
}

"""
An argument to a DataSourceMethod call
"""
type DataSourceMethodArgument @withSubscription @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(add: { value: "$now" })
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(add: { value: "$now" }, update: { value: "$now" })
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
  """ Uniquely identifies the data source method argument. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ Contains additional information and descriptions of the data source method argument. """
  description: String @search(by: [fulltext, exact])
  """ The argument's position in the method call """
  position: Int!
  """ The type of data for this method argument. """
  dataType: DataType @search
  """ The direction of the argument """
  direction: MethodArgumentDirection!
  """ The value of the argument, used for communicating with libre-agent """
  value: String

  ##### RELATIONSHIPS #####
  """ The DataSourceMethod this argument is used to call """
  dataSourceMethod: DataSourceMethod! @hasInverse(field: arguments)
}

enum MethodArgumentDirection {
  DirectionIn
  DirectionOut
}

enum MessageKey {
  MessageValue
  SourceTimestamp
  ServerTimestamp
}

 """ 
 A rule is an expression that if it evaluates to true, triggers or creates an instance of a workflow.
 """
type Rule @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
   """ Entity is considered active from this point in time forward. """
   effectiveStart: DateTime! @search
   """ Entity is considered active until this time, or until the end of time if empty. """
   effectiveEnd: DateTime @search

  ##### ATTRIBUTES #####
   """ A unique identification of a rule. """
   id: String! @id @search(by: [fulltext, exact, regexp])
   """ Label is the name of the rule the client sees on the front end. """
   label: String! @search(by: [fulltext, exact, regexp])
   """ Additional information about the rule. """
   description: String @search(by: [fulltext, exact])
   """ The process location related to this rule. """
   processLocation: ProcessLocation @search
   """ The expression if true triggers the rule. """
   triggerExpression: String!
   """ If True, delays the rule triggering. """
   delayOption: Boolean
   """ The amount of time the rule is delayed by if DelayOption true. """
   delayTime: Int
   """ The payload definition related to this rule. """
   payloadFields: [PayloadFieldDefinition]

  ##### RELATIONSHIPS #####
  """ The workflow specification related to this rule. """
  workflowSpecification: WorkflowSpecification! @hasInverse(field:rules)
  """ The properties that trigger this rule. """
  triggerProperties: [EquipmentClassProperty] @hasInverse(field:triggersRules)
  """ The operations segment related to this rule. """
  operationsSegment: OperationsSegment @hasInverse(field:rules)
  """ The operations segment dependency related to this rule. """
  operationsSegmentDependency: OperationsSegmentDependency @hasInverse(field:rules)
  """ The process segment dependency related to this rule. """
  processSegmentDependency: ProcessSegmentDependency @hasInverse(field:rules)
  """ The equipment class version related to this rule. """
  equipmentClassVersion: EquipmentClassVersion @hasInverse(field:rules)
}

#
enum ProcessLocation {
  Edge
  Core
}

""" Payload Field Definition """
type PayloadFieldDefinition @withSubscription @key(fields:"iid"){
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]
  # MetaData
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(
    add: { value: "$now" }
  )
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(
    add: { value: "$now" }
    update: { value: "$now" }
  )
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])
# Attributes
  """ A short description of the payload field definition. """
  name: String!
  """ The payload field expression"""
  expression: String!
}

"""
Represents a key/value pair that can be substuted into more generic interfaces.
An example Environmental Variable might be the domain of a server accessed in a 
BPMN REST API node
"""
type EnvironmentalVariable @withSubscription @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(add: { value: "$now" })
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(add: { value: "$now" }, update: { value: "$now" })
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  ##### VERSIONING #####
  """ Link to all available versions for this entity. """
  versions: [EnvironmentalVariableVersion] @hasInverse(field: environmentalVariable)
  """ The currently active version. To find a version that was active at a point in time, use versions with a filter. """
  activeVersion: EnvironmentalVariableVersion @hasInverse(field: isActiveVersionOf)
  """ The next version number, or the largest version number + 1. """
  nextVersion: String

  ##### ATTRIBUTES #####
  """ Uniquely identifies the environmental variable. """
  id: String! @id @search(by: [fulltext, exact, regexp])
}


"""
Represents a specific version of a key/value pair that can be substuted into more generic interfaces.
"""
type EnvironmentalVariableVersion @withSubscription @primaryKey(fields: ["id","version"]) @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  ##### METADATA #####
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(add: { value: "$now" })
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(add: { value: "$now" }, update: { value: "$now" })
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  ##### VERSIONING #####
  """ The specific version of the entity. Purposely free to allow use with a specific revision scheme. """
  version: String! @search(by: [fulltext, exact])
  """ The current state of the version for this entity. """
  versionStatus: VersionState! @search
  """ The environmental variable that this environmental variable version relates to. """
  environmentalVariable: EnvironmentalVariable! @hasInverse(field: versions)
  """ The environmental variable that uses this environmental variable version as it's active version. """
  isActiveVersionOf: EnvironmentalVariable @hasInverse(field: activeVersion)

  ##### ATTRIBUTES #####
  """ Uniquely identifies the environmental variable with the version. """
  id: String! @search(by: [fulltext, exact, regexp])
  """ The value is substuted into any templates in place of the variable's id. """
  value: String!
}

"""
Represents a protected key/value pair that can be substuted into more generic interfaces.
Secrets are like environmental variables except they are stored encrypted and cannot be
read from the UI.
An example secret might be the login password a server accessed in a BPMN REST API node
"""
type Secret @withSubscription @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. """
  acl: [AccessPermission]

  ##### METADATA #####
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(add: { value: "$now" })
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(add: { value: "$now" }, update: { value: "$now" })
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  ##### VERSIONING #####
  """ Link to all available versions for this entity. """
  versions: [SecretVersion] @hasInverse(field: secret)
  """ The currently active version. To find a version that was active at a point in time, use versions with a filter. """
  activeVersion: SecretVersion @hasInverse(field: isActiveVersionOf)
  """ The next version number, or the largest version number + 1. """
  nextVersion: String

  ##### ATTRIBUTES #####
  """ Uniquely identifies the environmental variable. """
  id: String! @id @search(by: [fulltext, exact, regexp])
}


"""
Represents a specific version of a secret that can be substuted into more generic interfaces.
"""
type SecretVersion @withSubscription @primaryKey(fields: ["id","version"]) @key(fields: "iid") {
  ##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ 
  Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. 
  Note: having access to a secret implies access to the encrypted value, not the secret content itself.
  """
  acl: [AccessPermission]

  ##### METADATA #####
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(add: { value: "$now" })
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(add: { value: "$now" }, update: { value: "$now" })
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  ##### VERSIONING #####
  """ The specific version of the entity. Purposely free to allow use with a specific revision scheme. """
  version: String! @search(by: [fulltext, exact])
  """ The current state of the version for this entity. """
  versionStatus: VersionState! @search
  """ The secret that this secret version relates to. """
  secret: Secret! @hasInverse(field: versions)
  """ The secret that uses this secret version as it's active version. """
  isActiveVersionOf: Secret @hasInverse(field: activeVersion)

  ##### ATTRIBUTES #####
  """ Uniquely identifies the environmental variable with the version. """
  id: String! @search(by: [fulltext, exact, regexp])
  """ The value is decrypted then substuted into any templates in place of the variable's id. """
  value: String!
}

"""
Represents a Signature used for Electronic Signature Generation
"""
type Signature @withSubscription @key(fields: "iid"){
##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ 
  Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. 
  Note: having access to a secret implies access to the encrypted value, not the secret content itself.
  """
  acl: [AccessPermission]

  ##### METADATA #####
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(add: { value: "$now" })
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(add: { value: "$now" }, update: { value: "$now" })
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  ##### ATTRIBUTES #####
  """ Timestamps the signature signing. """
  timestamp: DateTime! @default(add: { value: "$now" })
  """ An indication enabling detection that the signature has not been altered. The change indication enables detection that the record has been altered, although it may not identify the specific alterations. """
  changeIndication: String!

  ##### RELATIONSHIPS #####
  """ Reason for Signature i.e. (Done By, Reviewed by, Approved by) """
  signatureReason: SignatureReason! @hasInverse(field:signatures)
  """ The Person who made the signature. """
  personVersion: PersonVersion! @hasInverse(field:signaturesMade)

  ###Entities that can have electronic signatures###
  """ Defines a Comment on the signature. """
  comment: Comment @hasInverse(field:onSignature)
  """ Electronic signature for Comment. """
  signatureForAComment: Comment @hasInverse(field:signOff)
  """ The event entity the signature references. """
  event: Event @hasInverse(field:signatures)
  """ The AlarmEvent entity the signature references. """
  alarmEvent: AlarmEvent @hasInverse(field:signatures)

  """ The workResponse entity the signature references. """
  workResponse: WorkResponse @hasInverse(field:signatures)
  """ The jobResponse entity the signature references. """
  jobResponse: JobResponse @hasInverse(field:signatures)
  """ The jobResponseData entity the signature references. """
  jobResponseData: JobResponseData @hasInverse(field:signatures)
  """ The materialActual entity the signature references. """
  materialActual: MaterialActual @hasInverse(field:signatures)
  """ The equipmentActual entity the signature references. """
  equipmentActual: EquipmentActual @hasInverse(field:signatures)
  """ The physicalAssetActual entity the signature references. """
  physicalAssetActual: PhysicalAssetActual @hasInverse(field:signatures)
  """ The personnelActual entity the signature references. """
  personnelActual: PersonnelActual @hasInverse(field:signatures)

  """ The workRequest entity the signature references. """
  workRequest: WorkRequest @hasInverse(field:signatures)
  """ The jobOrder entity the signature references. """
  jobOrder: JobOrder @hasInverse(field:signatures)
  """ The materialRequirement entity the signature references. """
  materialRequirement: MaterialRequirement @hasInverse(field:signatures)
  """ The equipmentRequirement entity the signature references. """
  equipmentRequirement: EquipmentRequirement @hasInverse(field:signatures)
  """ The physicalAssetRequirement entity the signature references. """
  physicalAssetRequirement: PhysicalAssetRequirement @hasInverse(field:signatures)
  """ The personnelRequirement entity the signature references. """
  personnelRequirement: PersonnelRequirement @hasInverse(field:signatures)

  """ The workMaster entity the signature references. """
  workMaster: WorkMaster @hasInverse(field:signatures)
  """ The workDirective entity the signature references. """
  workDirective: WorkDirective @hasInverse(field:signatures)
}

"""
Represents a signature reason used for Electronic Signature Generation Required for 21 CFR 11 Compliance.
"""
type SignatureReason @withSubscription @key(fields: "iid") {
##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ 
  Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. 
  Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open.
  Note: having access to a secret implies access to the encrypted value, not the secret content itself.
  """
  acl: [AccessPermission]

  ##### METADATA #####
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(add: { value: "$now" })
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(add: { value: "$now" }, update: { value: "$now" })
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  ##### ATTRIBUTES #####
  """ Uniquely identifies the signature reason. """
  id: String! @id @search(by: [fulltext, exact, regexp])

  ##### RELATIONSHIPS #####
  """ The signature instance related to signature reason. """
  signatures: [Signature] @hasInverse(field: signatureReason)
}

"""
Represents a Comment used for ISA88 compliance
"""
type Comment @withSubscription @key(fields: "iid"){
##### IDENTIFICATION #####
  """ Unique internal database identifier. """
  iid: ID!
  """ 
  Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. 
  Note: having access to a secret implies access to the encrypted value, not the secret content itself.
  """
  acl: [AccessPermission]
  """ Associated OperationsRecordEntries from Operations Events """
  recordEntries: [InformationObject] @hasInverse(field: comment)

  ##### METADATA #####
  """ Entity is considered active from this point in time forward. """
  effectiveStart: DateTime! @search @default(add: { value: "$now" })
  """ Entity is considered active until this time, or until the end of time if empty. """
  effectiveEnd: DateTime @search
  """ The date and time in UTC that the entity was created. """
  _createdOn: DateTime! @default(add: { value: "$now" })
  """ The date and time in UTC that the entity was last mutated. """
  _modifiedOn: DateTime @default(add: { value: "$now" }, update: { value: "$now" })
  """ The username from the token which created the entity. """
  _createdBy: String @search(by: [fulltext, exact])
  """ The username from the token from the last mutation of this entity. """
  _modifiedBy: String @search(by: [fulltext, exact])

  ##### ATTRIBUTES #####
  """ Comment unique external id. """
  id: String! @id @search(by: [fulltext, exact, regexp])
  """ Comment body text. """
  text: String! @search(by: [fulltext, exact])
  """ Timestamp of the comment. """
  timestamp: DateTime! @default(add: { value: "$now" })

  ##### RELATIONSHIPS #####
  """ Person who created this Comment. """
  personVersion: PersonVersion! @hasInverse(field:comments)
  """ Defines a comment on a signature. """
  onSignature: Signature @hasInverse(field:comment)
  """ This signature is for sign off on this comment. """
  signOff: Signature @hasInverse(field:signatureForAComment)

  ### Entities that can have Comments ###
  """ The event the comment references. """
  event: Event @hasInverse(field:comments)
  """ The AlarmEvent the comment references. """
  alarmEvent: AlarmEvent @hasInverse(field:comments)

  """ The Work Response the comment references. """
  workResponse: WorkResponse @hasInverse(field:comments)
  """ The Job Response the comment references. """
  jobResponse: JobResponse @hasInverse(field:comments)
  """ The Job Response Data the comment references. """
  jobResponseData: JobResponseData @hasInverse(field:comments)
  """ The Material Actual the comment references. """
  materialActual: MaterialActual @hasInverse(field:comments)
  """ The Equipment Actual the comment references. """
  equipmentActual: EquipmentActual @hasInverse(field:comments)
  """ The Physical Asset Actual the comment references. """
  physicalAssetActual: PhysicalAssetActual @hasInverse(field:comments)
  """ The Personnel Actual the comment references. """
  personnelActual: PersonnelActual @hasInverse(field:comments)
  """ The Segment Parameter the comment references. """
  segmentParameter: SegmentParameter @hasInverse(field:comments)

  """ The work Request the comment references. """
  workRequest: WorkRequest @hasInverse(field:comments)
  """ The Job Order the comment references. """
  jobOrder: JobOrder @hasInverse(field:comments)
  """ The Material Requirement the comment references. """
  materialRequirement: MaterialRequirement @hasInverse(field:comments)
  """ The Equipment Requirement the comment references. """
  equipmentRequirement: EquipmentRequirement @hasInverse(field:comments)
  """ The Physical Asset Requirement the comment references. """
  physicalAssetRequirement: PhysicalAssetRequirement @hasInverse(field:comments)
  """ The Personnel Requirement the comment references. """
  personnelRequirement: PersonnelRequirement @hasInverse(field:comments)

  """ The Work Master the comment references. """
  workMaster: WorkMaster @hasInverse(field:comments)
  """ The Work Directive the comment references. """
  workDirective: WorkDirective @hasInverse(field:comments)

  """ Defines child comments. """
  child: [Comment] @hasInverse(field: parent)
  """ Reference to parent comment. """
  parent: Comment @hasInverse(field:child)
}
enum VersionState {
    DRAFT
    FOR_REVIEW
    APPROVED
    ACTIVE
    DEPRECATED
}