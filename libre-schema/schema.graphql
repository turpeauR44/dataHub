schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
"""
The DateTime scalar type represents date and time as a string in RFC3339 format.
For example: "1985-04-12T23:20:50.52Z" represents 20 minutes and 50.52 seconds after the 23rd hour of April 12th, 1985 in UTC.
"""
scalar DateTime
"""
The Int64 scalar type represents a signed 64‐bit numeric non‐fractional value.
Int64 can represent values in range [-(2^63),(2^63 - 1)].
"""
scalar Int64
""
scalar _Any
""
scalar _FieldSet
"""
Access Permissions are labels with attached permission levels that are linked to data objects through the ACL field
in each type.
@auth rules on each type are used to check if the users token has the appropriate permission to access that data
permissionLevels are as follows:
0 = No Permission
1 = Read Permission
2 = Add Permission (Add implies Read
3 = Update Permission (Update implies Add and Read)
4 = Execute Permission (This is not currently used, but may be used when we figure out how to assign permissions to BPMN processes). Execute implies Update, Add, Read
5 = Delete Permission - This means full permissions, Delete, Execute, Update, Add, Read
The @auth rule checks for the maximum permission in the AccessPermissionAggregate filtered by scope in the list of scopes in the users token
"""
type AccessPermission {
  ""
  iid: ID!
  ""
  label: String!
  ""
  permissionLevel: Int!
}
""
type AccessPermissionAggregateResult {
  ""
  count: Int
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  permissionLevelAvg: Float
  ""
  permissionLevelMax: Int
  ""
  permissionLevelMin: Int
  ""
  permissionLevelSum: Int
}
""
type AddAccessPermissionPayload {
  ""
  accessPermission(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  numUids: Int
}
""
type AddAlarmEventPayload {
  ""
  alarmEvent(filter: AlarmEventFilter, first: Int, offset: Int, order: AlarmEventOrder): [AlarmEvent]
  ""
  numUids: Int
}
""
type AddCommentPayload {
  ""
  comment(filter: CommentFilter, first: Int, offset: Int, order: CommentOrder): [Comment]
  ""
  numUids: Int
}
""
type AddDataSourceMethodArgumentPayload {
  ""
  dataSourceMethodArgument(filter: DataSourceMethodArgumentFilter, first: Int, offset: Int, order: DataSourceMethodArgumentOrder): [DataSourceMethodArgument]
  ""
  numUids: Int
}
""
type AddDataSourceMethodPayload {
  ""
  dataSourceMethod(filter: DataSourceMethodFilter, first: Int, offset: Int, order: DataSourceMethodOrder): [DataSourceMethod]
  ""
  numUids: Int
}
""
type AddDataSourcePayload {
  ""
  dataSource(filter: DataSourceFilter, first: Int, offset: Int, order: DataSourceOrder): [DataSource]
  ""
  numUids: Int
}
""
type AddDataSourceTopicPayload {
  ""
  dataSourceTopic(filter: DataSourceTopicFilter, first: Int, offset: Int, order: DataSourceTopicOrder): [DataSourceTopic]
  ""
  numUids: Int
}
""
type AddDataSourceVersionPayload {
  ""
  dataSourceVersion(filter: DataSourceVersionFilter, first: Int, offset: Int, order: DataSourceVersionOrder): [DataSourceVersion]
  ""
  numUids: Int
}
""
type AddDataSubscriptionPayload {
  ""
  dataSubscription(filter: DataSubscriptionFilter, first: Int, offset: Int, order: DataSubscriptionOrder): [DataSubscription]
  ""
  numUids: Int
}
""
type AddEnvironmentalVariablePayload {
  ""
  environmentalVariable(filter: EnvironmentalVariableFilter, first: Int, offset: Int, order: EnvironmentalVariableOrder): [EnvironmentalVariable]
  ""
  numUids: Int
}
""
type AddEnvironmentalVariableVersionPayload {
  ""
  environmentalVariableVersion(filter: EnvironmentalVariableVersionFilter, first: Int, offset: Int, order: EnvironmentalVariableVersionOrder): [EnvironmentalVariableVersion]
  ""
  numUids: Int
}
""
type AddEquipmentActualPayload {
  ""
  equipmentActual(filter: EquipmentActualFilter, first: Int, offset: Int, order: EquipmentActualOrder): [EquipmentActual]
  ""
  numUids: Int
}
""
type AddEquipmentActualPropertyPayload {
  ""
  equipmentActualProperty(filter: EquipmentActualPropertyFilter, first: Int, offset: Int, order: EquipmentActualPropertyOrder): [EquipmentActualProperty]
  ""
  numUids: Int
}
""
type AddEquipmentAssetMappingPayload {
  ""
  equipmentAssetMapping(filter: EquipmentAssetMappingFilter, first: Int, offset: Int, order: EquipmentAssetMappingOrder): [EquipmentAssetMapping]
  ""
  numUids: Int
}
""
type AddEquipmentClassPayload {
  ""
  equipmentClass(filter: EquipmentClassFilter, first: Int, offset: Int, order: EquipmentClassOrder): [EquipmentClass]
  ""
  numUids: Int
}
""
type AddEquipmentClassPropertyPayload {
  ""
  equipmentClassProperty(filter: EquipmentClassPropertyFilter, first: Int, offset: Int, order: EquipmentClassPropertyOrder): [EquipmentClassProperty]
  ""
  numUids: Int
}
""
type AddEquipmentClassVersionPayload {
  ""
  equipmentClassVersion(filter: EquipmentClassVersionFilter, first: Int, offset: Int, order: EquipmentClassVersionOrder): [EquipmentClassVersion]
  ""
  numUids: Int
}
""
type AddEquipmentDataSourcePayload {
  ""
  equipmentDataSource(filter: EquipmentDataSourceFilter, first: Int, offset: Int, order: EquipmentDataSourceOrder): [EquipmentDataSource]
  ""
  numUids: Int
}
""
type AddEquipmentNameAliasPayload {
  ""
  equipmentNameAlias(filter: EquipmentNameAliasFilter, first: Int, offset: Int, order: EquipmentNameAliasOrder): [EquipmentNameAlias]
  ""
  numUids: Int
}
""
type AddEquipmentPayload {
  ""
  equipment(filter: EquipmentFilter, first: Int, offset: Int, order: EquipmentOrder): [Equipment]
  ""
  numUids: Int
}
""
type AddEquipmentPropertyOverridePayload {
  ""
  equipmentPropertyOverride(filter: EquipmentPropertyOverrideFilter, first: Int, offset: Int, order: EquipmentPropertyOverrideOrder): [EquipmentPropertyOverride]
  ""
  numUids: Int
}
""
type AddEquipmentPropertyPayload {
  ""
  equipmentProperty(filter: EquipmentPropertyFilter, first: Int, offset: Int, order: EquipmentPropertyOrder): [EquipmentProperty]
  ""
  numUids: Int
}
""
type AddEquipmentRequirementPayload {
  ""
  equipmentRequirement(filter: EquipmentRequirementFilter, first: Int, offset: Int, order: EquipmentRequirementOrder): [EquipmentRequirement]
  ""
  numUids: Int
}
""
type AddEquipmentRequirementPropertyPayload {
  ""
  equipmentRequirementProperty(filter: EquipmentRequirementPropertyFilter, first: Int, offset: Int, order: EquipmentRequirementPropertyOrder): [EquipmentRequirementProperty]
  ""
  numUids: Int
}
""
type AddEquipmentSpecificationPayload {
  ""
  equipmentSpecification(filter: EquipmentSpecificationFilter, first: Int, offset: Int, order: EquipmentSpecificationOrder): [EquipmentSpecification]
  ""
  numUids: Int
}
""
type AddEquipmentSpecificationPropertyPayload {
  ""
  equipmentSpecificationProperty(filter: EquipmentSpecificationPropertyFilter, first: Int, offset: Int, order: EquipmentSpecificationPropertyOrder): [EquipmentSpecificationProperty]
  ""
  numUids: Int
}
""
type AddEquipmentVersionPayload {
  ""
  equipmentVersion(filter: EquipmentVersionFilter, first: Int, offset: Int, order: EquipmentVersionOrder): [EquipmentVersion]
  ""
  numUids: Int
}
""
type AddEvaluatedPropertyPayload {
  ""
  evaluatedProperty(filter: EvaluatedPropertyFilter, first: Int, offset: Int, order: EvaluatedPropertyOrder): [EvaluatedProperty]
  ""
  numUids: Int
}
""
type AddEventAssociationPayload {
  ""
  eventAssociation(filter: EventAssociationFilter, first: Int, offset: Int, order: EventAssociationOrder): [EventAssociation]
  ""
  numUids: Int
}
""
type AddEventPayload {
  ""
  event(filter: EventFilter, first: Int, offset: Int, order: EventOrder): [Event]
  ""
  numUids: Int
}
""
type AddEventPropertyPayload {
  ""
  eventProperty(filter: EventPropertyFilter, first: Int, offset: Int, order: EventPropertyOrder): [EventProperty]
  ""
  numUids: Int
}
""
type AddEventSubtypePayload {
  ""
  eventSubtype(filter: EventSubtypeFilter, first: Int, offset: Int, order: EventSubtypeOrder): [EventSubtype]
  ""
  numUids: Int
}
""
type AddEventTypePayload {
  ""
  eventType(filter: EventTypeFilter, first: Int, offset: Int, order: EventTypeOrder): [EventType]
  ""
  numUids: Int
}
""
type AddFormPayload {
  ""
  form(filter: FormFilter, first: Int, offset: Int, order: FormOrder): [Form]
  ""
  numUids: Int
}
""
type AddHierarchyScopePayload {
  ""
  hierarchyScope(filter: HierarchyScopeFilter, first: Int, offset: Int, order: HierarchyScopeOrder): [HierarchyScope]
  ""
  numUids: Int
}
""
type AddInformationObjectPayload {
  ""
  informationObject(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  numUids: Int
}
""
type AddJobListPayload {
  ""
  jobList(filter: JobListFilter, first: Int, offset: Int, order: JobListOrder): [JobList]
  ""
  numUids: Int
}
""
type AddJobOrderParameterPayload {
  ""
  jobOrderParameter(filter: JobOrderParameterFilter, first: Int, offset: Int, order: JobOrderParameterOrder): [JobOrderParameter]
  ""
  numUids: Int
}
""
type AddJobOrderPayload {
  ""
  jobOrder(filter: JobOrderFilter, first: Int, offset: Int, order: JobOrderOrder): [JobOrder]
  ""
  numUids: Int
}
""
type AddJobResponseDataPayload {
  ""
  jobResponseData(filter: JobResponseDataFilter, first: Int, offset: Int, order: JobResponseDataOrder): [JobResponseData]
  ""
  numUids: Int
}
""
type AddJobResponseListPayload {
  ""
  jobResponseList(filter: JobResponseListFilter, first: Int, offset: Int, order: JobResponseListOrder): [JobResponseList]
  ""
  numUids: Int
}
""
type AddJobResponsePayload {
  ""
  jobResponse(filter: JobResponseFilter, first: Int, offset: Int, order: JobResponseOrder): [JobResponse]
  ""
  numUids: Int
}
""
type AddLibreServicePayload {
  ""
  libreService(filter: LibreServiceFilter, first: Int, offset: Int, order: LibreServiceOrder): [LibreService]
  ""
  numUids: Int
}
""
type AddMaterialActualPayload {
  ""
  materialActual(filter: MaterialActualFilter, first: Int, offset: Int, order: MaterialActualOrder): [MaterialActual]
  ""
  numUids: Int
}
""
type AddMaterialActualPropertyPayload {
  ""
  materialActualProperty(filter: MaterialActualPropertyFilter, first: Int, offset: Int, order: MaterialActualPropertyOrder): [MaterialActualProperty]
  ""
  numUids: Int
}
""
type AddMaterialAlternatePayload {
  ""
  materialAlternate(filter: MaterialAlternateFilter, first: Int, offset: Int, order: MaterialAlternateOrder): [MaterialAlternate]
  ""
  numUids: Int
}
""
type AddMaterialClassPayload {
  ""
  materialClass(filter: MaterialClassFilter, first: Int, offset: Int, order: MaterialClassOrder): [MaterialClass]
  ""
  numUids: Int
}
""
type AddMaterialClassPropertyPayload {
  ""
  materialClassProperty(filter: MaterialClassPropertyFilter, first: Int, offset: Int, order: MaterialClassPropertyOrder): [MaterialClassProperty]
  ""
  numUids: Int
}
""
type AddMaterialClassVersionPayload {
  ""
  materialClassVersion(filter: MaterialClassVersionFilter, first: Int, offset: Int, order: MaterialClassVersionOrder): [MaterialClassVersion]
  ""
  numUids: Int
}
""
type AddMaterialDefinitionPayload {
  ""
  materialDefinition(filter: MaterialDefinitionFilter, first: Int, offset: Int, order: MaterialDefinitionOrder): [MaterialDefinition]
  ""
  numUids: Int
}
""
type AddMaterialDefinitionPropertyPayload {
  ""
  materialDefinitionProperty(filter: MaterialDefinitionPropertyFilter, first: Int, offset: Int, order: MaterialDefinitionPropertyOrder): [MaterialDefinitionProperty]
  ""
  numUids: Int
}
""
type AddMaterialDefinitionVersionPayload {
  ""
  materialDefinitionVersion(filter: MaterialDefinitionVersionFilter, first: Int, offset: Int, order: MaterialDefinitionVersionOrder): [MaterialDefinitionVersion]
  ""
  numUids: Int
}
""
type AddMaterialLotPayload {
  ""
  materialLot(filter: MaterialLotFilter, first: Int, offset: Int, order: MaterialLotOrder): [MaterialLot]
  ""
  numUids: Int
}
""
type AddMaterialLotPropertyPayload {
  ""
  materialLotProperty(filter: MaterialLotPropertyFilter, first: Int, offset: Int, order: MaterialLotPropertyOrder): [MaterialLotProperty]
  ""
  numUids: Int
}
""
type AddMaterialRequirementPayload {
  ""
  materialRequirement(filter: MaterialRequirementFilter, first: Int, offset: Int, order: MaterialRequirementOrder): [MaterialRequirement]
  ""
  numUids: Int
}
""
type AddMaterialRequirementPropertyPayload {
  ""
  materialRequirementProperty(filter: MaterialRequirementPropertyFilter, first: Int, offset: Int, order: MaterialRequirementPropertyOrder): [MaterialRequirementProperty]
  ""
  numUids: Int
}
""
type AddMaterialSpecificationPayload {
  ""
  materialSpecification(filter: MaterialSpecificationFilter, first: Int, offset: Int, order: MaterialSpecificationOrder): [MaterialSpecification]
  ""
  numUids: Int
}
""
type AddMaterialSpecificationPropertyPayload {
  ""
  materialSpecificationProperty(filter: MaterialSpecificationPropertyFilter, first: Int, offset: Int, order: MaterialSpecificationPropertyOrder): [MaterialSpecificationProperty]
  ""
  numUids: Int
}
""
type AddMaterialSubLotPayload {
  ""
  materialSubLot(filter: MaterialSubLotFilter, first: Int, offset: Int, order: MaterialSubLotOrder): [MaterialSubLot]
  ""
  numUids: Int
}
""
type AddMenuPayload {
  ""
  menu(filter: MenuFilter, first: Int, offset: Int, order: MenuOrder): [Menu]
  ""
  numUids: Int
}
""
type AddMultiplicityPayload {
  ""
  multiplicity(filter: MultiplicityFilter, first: Int, offset: Int, order: MultiplicityOrder): [Multiplicity]
  ""
  numUids: Int
}
""
type AddOperationalLocationClassPayload {
  ""
  numUids: Int
  ""
  operationalLocationClass(filter: OperationalLocationClassFilter, first: Int, offset: Int, order: OperationalLocationClassOrder): [OperationalLocationClass]
}
""
type AddOperationalLocationClassPropertyPayload {
  ""
  numUids: Int
  ""
  operationalLocationClassProperty(filter: OperationalLocationClassPropertyFilter, first: Int, offset: Int, order: OperationalLocationClassPropertyOrder): [OperationalLocationClassProperty]
}
""
type AddOperationalLocationClassVersionPayload {
  ""
  numUids: Int
  ""
  operationalLocationClassVersion(filter: OperationalLocationClassVersionFilter, first: Int, offset: Int, order: OperationalLocationClassVersionOrder): [OperationalLocationClassVersion]
}
""
type AddOperationalLocationPayload {
  ""
  numUids: Int
  ""
  operationalLocation(filter: OperationalLocationFilter, first: Int, offset: Int, order: OperationalLocationOrder): [OperationalLocation]
}
""
type AddOperationalLocationPropertyPayload {
  ""
  numUids: Int
  ""
  operationalLocationProperty(filter: OperationalLocationPropertyFilter, first: Int, offset: Int, order: OperationalLocationPropertyOrder): [OperationalLocationProperty]
}
""
type AddOperationalLocationVersionPayload {
  ""
  numUids: Int
  ""
  operationalLocationVersion(filter: OperationalLocationVersionFilter, first: Int, offset: Int, order: OperationalLocationVersionOrder): [OperationalLocationVersion]
}
""
type AddOperationsDefinitionPayload {
  ""
  numUids: Int
  ""
  operationsDefinition(filter: OperationsDefinitionFilter, first: Int, offset: Int, order: OperationsDefinitionOrder): [OperationsDefinition]
}
""
type AddOperationsDefinitionVersionPayload {
  ""
  numUids: Int
  ""
  operationsDefinitionVersion(filter: OperationsDefinitionVersionFilter, first: Int, offset: Int, order: OperationsDefinitionVersionOrder): [OperationsDefinitionVersion]
}
""
type AddOperationsEventClassPayload {
  ""
  numUids: Int
  ""
  operationsEventClass(filter: OperationsEventClassFilter, first: Int, offset: Int, order: OperationsEventClassOrder): [OperationsEventClass]
}
""
type AddOperationsEventClassPropertyPayload {
  ""
  numUids: Int
  ""
  operationsEventClassProperty(filter: OperationsEventClassPropertyFilter, first: Int, offset: Int, order: OperationsEventClassPropertyOrder): [OperationsEventClassProperty]
}
""
type AddOperationsEventClassRecordSpecificationPayload {
  ""
  numUids: Int
  ""
  operationsEventClassRecordSpecification(filter: OperationsEventClassRecordSpecificationFilter, first: Int, offset: Int, order: OperationsEventClassRecordSpecificationOrder): [OperationsEventClassRecordSpecification]
}
""
type AddOperationsEventClassVersionPayload {
  ""
  numUids: Int
  ""
  operationsEventClassVersion(filter: OperationsEventClassVersionFilter, first: Int, offset: Int, order: OperationsEventClassVersionOrder): [OperationsEventClassVersion]
}
""
type AddOperationsEventDefinitionPayload {
  ""
  numUids: Int
  ""
  operationsEventDefinition(filter: OperationsEventDefinitionFilter, first: Int, offset: Int, order: OperationsEventDefinitionOrder): [OperationsEventDefinition]
}
""
type AddOperationsEventDefinitionPropertyPayload {
  ""
  numUids: Int
  ""
  operationsEventDefinitionProperty(filter: OperationsEventDefinitionPropertyFilter, first: Int, offset: Int, order: OperationsEventDefinitionPropertyOrder): [OperationsEventDefinitionProperty]
}
""
type AddOperationsEventDefinitionRecordSpecificationPayload {
  ""
  numUids: Int
  ""
  operationsEventDefinitionRecordSpecification(filter: OperationsEventDefinitionRecordSpecificationFilter, first: Int, offset: Int, order: OperationsEventDefinitionRecordSpecificationOrder): [OperationsEventDefinitionRecordSpecification]
}
""
type AddOperationsEventDefinitionVersionPayload {
  ""
  numUids: Int
  ""
  operationsEventDefinitionVersion(filter: OperationsEventDefinitionVersionFilter, first: Int, offset: Int, order: OperationsEventDefinitionVersionOrder): [OperationsEventDefinitionVersion]
}
""
type AddOperationsEventPayload {
  ""
  numUids: Int
  ""
  operationsEvent(filter: OperationsEventFilter, first: Int, offset: Int, order: OperationsEventOrder): [OperationsEvent]
}
""
type AddOperationsEventPropertyPayload {
  ""
  numUids: Int
  ""
  operationsEventProperty(filter: OperationsEventPropertyFilter, first: Int, offset: Int, order: OperationsEventPropertyOrder): [OperationsEventProperty]
}
""
type AddOperationsEventRecordEntryPayload {
  ""
  numUids: Int
  ""
  operationsEventRecordEntry(filter: OperationsEventRecordEntryFilter, first: Int, offset: Int, order: OperationsEventRecordEntryOrder): [OperationsEventRecordEntry]
}
""
type AddOperationsEventRecordPayload {
  ""
  numUids: Int
  ""
  operationsEventRecord(filter: OperationsEventRecordFilter, first: Int, offset: Int, order: OperationsEventRecordOrder): [OperationsEventRecord]
}
""
type AddOperationsMaterialBillPayload {
  ""
  numUids: Int
  ""
  operationsMaterialBill(filter: OperationsMaterialBillFilter, first: Int, offset: Int, order: OperationsMaterialBillOrder): [OperationsMaterialBill]
}
""
type AddOperationsPerformancePayload {
  ""
  numUids: Int
  ""
  operationsPerformance(filter: OperationsPerformanceFilter, first: Int, offset: Int, order: OperationsPerformanceOrder): [OperationsPerformance]
}
""
type AddOperationsRequestPayload {
  ""
  numUids: Int
  ""
  operationsRequest(filter: OperationsRequestFilter, first: Int, offset: Int, order: OperationsRequestOrder): [OperationsRequest]
}
""
type AddOperationsResponsePayload {
  ""
  numUids: Int
  ""
  operationsResponse(filter: OperationsResponseFilter, first: Int, offset: Int, order: OperationsResponseOrder): [OperationsResponse]
}
""
type AddOperationsResponsePropertyPayload {
  ""
  numUids: Int
  ""
  operationsResponseProperty(filter: OperationsResponsePropertyFilter, first: Int, offset: Int, order: OperationsResponsePropertyOrder): [OperationsResponseProperty]
}
""
type AddOperationsSchedulePayload {
  ""
  numUids: Int
  ""
  operationsSchedule(filter: OperationsScheduleFilter, first: Int, offset: Int, order: OperationsScheduleOrder): [OperationsSchedule]
}
""
type AddOperationsSegmentDependencyPayload {
  ""
  numUids: Int
  ""
  operationsSegmentDependency(filter: OperationsSegmentDependencyFilter, first: Int, offset: Int, order: OperationsSegmentDependencyOrder): [OperationsSegmentDependency]
}
""
type AddOperationsSegmentPayload {
  ""
  numUids: Int
  ""
  operationsSegment(filter: OperationsSegmentFilter, first: Int, offset: Int, order: OperationsSegmentOrder): [OperationsSegment]
}
""
type AddParameterSpecificationPayload {
  ""
  numUids: Int
  ""
  parameterSpecification(filter: ParameterSpecificationFilter, first: Int, offset: Int, order: ParameterSpecificationOrder): [ParameterSpecification]
}
""
type AddPayloadFieldDefinitionPayload {
  ""
  numUids: Int
  ""
  payloadFieldDefinition(filter: PayloadFieldDefinitionFilter, first: Int, offset: Int, order: PayloadFieldDefinitionOrder): [PayloadFieldDefinition]
}
""
type AddPersonPayload {
  ""
  numUids: Int
  ""
  person(filter: PersonFilter, first: Int, offset: Int, order: PersonOrder): [Person]
}
""
type AddPersonPropertyPayload {
  ""
  numUids: Int
  ""
  personProperty(filter: PersonPropertyFilter, first: Int, offset: Int, order: PersonPropertyOrder): [PersonProperty]
}
""
type AddPersonVersionPayload {
  ""
  numUids: Int
  ""
  personVersion(filter: PersonVersionFilter, first: Int, offset: Int, order: PersonVersionOrder): [PersonVersion]
}
""
type AddPersonnelActualPayload {
  ""
  numUids: Int
  ""
  personnelActual(filter: PersonnelActualFilter, first: Int, offset: Int, order: PersonnelActualOrder): [PersonnelActual]
}
""
type AddPersonnelActualPropertyPayload {
  ""
  numUids: Int
  ""
  personnelActualProperty(filter: PersonnelActualPropertyFilter, first: Int, offset: Int, order: PersonnelActualPropertyOrder): [PersonnelActualProperty]
}
""
type AddPersonnelClassPayload {
  ""
  numUids: Int
  ""
  personnelClass(filter: PersonnelClassFilter, first: Int, offset: Int, order: PersonnelClassOrder): [PersonnelClass]
}
""
type AddPersonnelClassPropertyPayload {
  ""
  numUids: Int
  ""
  personnelClassProperty(filter: PersonnelClassPropertyFilter, first: Int, offset: Int, order: PersonnelClassPropertyOrder): [PersonnelClassProperty]
}
""
type AddPersonnelClassVersionPayload {
  ""
  numUids: Int
  ""
  personnelClassVersion(filter: PersonnelClassVersionFilter, first: Int, offset: Int, order: PersonnelClassVersionOrder): [PersonnelClassVersion]
}
""
type AddPersonnelRequirementPayload {
  ""
  numUids: Int
  ""
  personnelRequirement(filter: PersonnelRequirementFilter, first: Int, offset: Int, order: PersonnelRequirementOrder): [PersonnelRequirement]
}
""
type AddPersonnelRequirementPropertyPayload {
  ""
  numUids: Int
  ""
  personnelRequirementProperty(filter: PersonnelRequirementPropertyFilter, first: Int, offset: Int, order: PersonnelRequirementPropertyOrder): [PersonnelRequirementProperty]
}
""
type AddPersonnelSpecificationPayload {
  ""
  numUids: Int
  ""
  personnelSpecification(filter: PersonnelSpecificationFilter, first: Int, offset: Int, order: PersonnelSpecificationOrder): [PersonnelSpecification]
}
""
type AddPersonnelSpecificationPropertyPayload {
  ""
  numUids: Int
  ""
  personnelSpecificationProperty(filter: PersonnelSpecificationPropertyFilter, first: Int, offset: Int, order: PersonnelSpecificationPropertyOrder): [PersonnelSpecificationProperty]
}
""
type AddPhysicalAssetActualPayload {
  ""
  numUids: Int
  ""
  physicalAssetActual(filter: PhysicalAssetActualFilter, first: Int, offset: Int, order: PhysicalAssetActualOrder): [PhysicalAssetActual]
}
""
type AddPhysicalAssetActualPropertyPayload {
  ""
  numUids: Int
  ""
  physicalAssetActualProperty(filter: PhysicalAssetActualPropertyFilter, first: Int, offset: Int, order: PhysicalAssetActualPropertyOrder): [PhysicalAssetActualProperty]
}
""
type AddPhysicalAssetClassPayload {
  ""
  numUids: Int
  ""
  physicalAssetClass(filter: PhysicalAssetClassFilter, first: Int, offset: Int, order: PhysicalAssetClassOrder): [PhysicalAssetClass]
}
""
type AddPhysicalAssetClassPropertyPayload {
  ""
  numUids: Int
  ""
  physicalAssetClassProperty(filter: PhysicalAssetClassPropertyFilter, first: Int, offset: Int, order: PhysicalAssetClassPropertyOrder): [PhysicalAssetClassProperty]
}
""
type AddPhysicalAssetClassVersionPayload {
  ""
  numUids: Int
  ""
  physicalAssetClassVersion(filter: PhysicalAssetClassVersionFilter, first: Int, offset: Int, order: PhysicalAssetClassVersionOrder): [PhysicalAssetClassVersion]
}
""
type AddPhysicalAssetDataSourcePayload {
  ""
  numUids: Int
  ""
  physicalAssetDataSource(filter: PhysicalAssetDataSourceFilter, first: Int, offset: Int, order: PhysicalAssetDataSourceOrder): [PhysicalAssetDataSource]
}
""
type AddPhysicalAssetPayload {
  ""
  numUids: Int
  ""
  physicalAsset(filter: PhysicalAssetFilter, first: Int, offset: Int, order: PhysicalAssetOrder): [PhysicalAsset]
}
""
type AddPhysicalAssetPropertyPayload {
  ""
  numUids: Int
  ""
  physicalAssetProperty(filter: PhysicalAssetPropertyFilter, first: Int, offset: Int, order: PhysicalAssetPropertyOrder): [PhysicalAssetProperty]
}
""
type AddPhysicalAssetRequirementPayload {
  ""
  numUids: Int
  ""
  physicalAssetRequirement(filter: PhysicalAssetRequirementFilter, first: Int, offset: Int, order: PhysicalAssetRequirementOrder): [PhysicalAssetRequirement]
}
""
type AddPhysicalAssetRequirementPropertyPayload {
  ""
  numUids: Int
  ""
  physicalAssetRequirementProperty(filter: PhysicalAssetRequirementPropertyFilter, first: Int, offset: Int, order: PhysicalAssetRequirementPropertyOrder): [PhysicalAssetRequirementProperty]
}
""
type AddPhysicalAssetSpecificationPayload {
  ""
  numUids: Int
  ""
  physicalAssetSpecification(filter: PhysicalAssetSpecificationFilter, first: Int, offset: Int, order: PhysicalAssetSpecificationOrder): [PhysicalAssetSpecification]
}
""
type AddPhysicalAssetSpecificationPropertyPayload {
  ""
  numUids: Int
  ""
  physicalAssetSpecificationProperty(filter: PhysicalAssetSpecificationPropertyFilter, first: Int, offset: Int, order: PhysicalAssetSpecificationPropertyOrder): [PhysicalAssetSpecificationProperty]
}
""
type AddPhysicalAssetVersionPayload {
  ""
  numUids: Int
  ""
  physicalAssetVersion(filter: PhysicalAssetVersionFilter, first: Int, offset: Int, order: PhysicalAssetVersionOrder): [PhysicalAssetVersion]
}
""
type AddProcessSegmentDependencyPayload {
  ""
  numUids: Int
  ""
  processSegmentDependency(filter: ProcessSegmentDependencyFilter, first: Int, offset: Int, order: ProcessSegmentDependencyOrder): [ProcessSegmentDependency]
}
""
type AddProcessSegmentParameterPayload {
  ""
  numUids: Int
  ""
  processSegmentParameter(filter: ProcessSegmentParameterFilter, first: Int, offset: Int, order: ProcessSegmentParameterOrder): [ProcessSegmentParameter]
}
""
type AddProcessSegmentPayload {
  ""
  numUids: Int
  ""
  processSegment(filter: ProcessSegmentFilter, first: Int, offset: Int, order: ProcessSegmentOrder): [ProcessSegment]
}
""
type AddProcessSegmentVersionPayload {
  ""
  numUids: Int
  ""
  processSegmentVersion(filter: ProcessSegmentVersionFilter, first: Int, offset: Int, order: ProcessSegmentVersionOrder): [ProcessSegmentVersion]
}
""
type AddPropertyMeasurementPayload {
  ""
  numUids: Int
  ""
  propertyMeasurement(filter: PropertyMeasurementFilter, first: Int, offset: Int, order: PropertyMeasurementOrder): [PropertyMeasurement]
}
""
type AddPropertyNameAliasPayload {
  ""
  numUids: Int
  ""
  propertyNameAlias(filter: PropertyNameAliasFilter, first: Int, offset: Int, order: PropertyNameAliasOrder): [PropertyNameAlias]
}
""
type AddPropertyValueAliasPayload {
  ""
  numUids: Int
  ""
  propertyValueAlias(filter: PropertyValueAliasFilter, first: Int, offset: Int, order: PropertyValueAliasOrder): [PropertyValueAlias]
}
""
type AddRulePayload {
  ""
  numUids: Int
  ""
  rule(filter: RuleFilter, first: Int, offset: Int, order: RuleOrder): [Rule]
}
""
type AddSecretPayload {
  ""
  numUids: Int
  ""
  secret(filter: SecretFilter, first: Int, offset: Int, order: SecretOrder): [Secret]
}
""
type AddSecretVersionPayload {
  ""
  numUids: Int
  ""
  secretVersion(filter: SecretVersionFilter, first: Int, offset: Int, order: SecretVersionOrder): [SecretVersion]
}
""
type AddSegmentDataPayload {
  ""
  numUids: Int
  ""
  segmentData(filter: SegmentDataFilter, first: Int, offset: Int, order: SegmentDataOrder): [SegmentData]
}
""
type AddSegmentParameterPayload {
  ""
  numUids: Int
  ""
  segmentParameter(filter: SegmentParameterFilter, first: Int, offset: Int, order: SegmentParameterOrder): [SegmentParameter]
}
""
type AddSegmentRequirementPayload {
  ""
  numUids: Int
  ""
  segmentRequirement(filter: SegmentRequirementFilter, first: Int, offset: Int, order: SegmentRequirementOrder): [SegmentRequirement]
}
""
type AddSegmentResponsePayload {
  ""
  numUids: Int
  ""
  segmentResponse(filter: SegmentResponseFilter, first: Int, offset: Int, order: SegmentResponseOrder): [SegmentResponse]
}
""
type AddSignaturePayload {
  ""
  numUids: Int
  ""
  signature(filter: SignatureFilter, first: Int, offset: Int, order: SignatureOrder): [Signature]
}
""
type AddSignatureReasonPayload {
  ""
  numUids: Int
  ""
  signatureReason(filter: SignatureReasonFilter, first: Int, offset: Int, order: SignatureReasonOrder): [SignatureReason]
}
""
type AddSpatialDefinitionPayload {
  ""
  numUids: Int
  ""
  spatialDefinition(filter: SpatialDefinitionFilter, first: Int, offset: Int, order: SpatialDefinitionOrder): [SpatialDefinition]
}
""
type AddStateModelActionPayload {
  ""
  numUids: Int
  ""
  stateModelAction(filter: StateModelActionFilter, first: Int, offset: Int, order: StateModelActionOrder): [StateModelAction]
}
""
type AddStateModelDefinitionPayload {
  ""
  numUids: Int
  ""
  stateModelDefinition(filter: StateModelDefinitionFilter, first: Int, offset: Int, order: StateModelDefinitionOrder): [StateModelDefinition]
}
""
type AddStateModelEventPayload {
  ""
  numUids: Int
  ""
  stateModelEvent(filter: StateModelEventFilter, first: Int, offset: Int, order: StateModelEventOrder): [StateModelEvent]
}
""
type AddStateModelInstancePayload {
  ""
  numUids: Int
  ""
  stateModelInstance(filter: StateModelInstanceFilter, first: Int, offset: Int, order: StateModelInstanceOrder): [StateModelInstance]
}
""
type AddStateModelPropertyPayload {
  ""
  numUids: Int
  ""
  stateModelProperty(filter: StateModelPropertyFilter, first: Int, offset: Int, order: StateModelPropertyOrder): [StateModelProperty]
}
""
type AddStateModelStatePayload {
  ""
  numUids: Int
  ""
  stateModelState(filter: StateModelStateFilter, first: Int, offset: Int, order: StateModelStateOrder): [StateModelState]
}
""
type AddStateModelTransitionPayload {
  ""
  numUids: Int
  ""
  stateModelTransition(filter: StateModelTransitionFilter, first: Int, offset: Int, order: StateModelTransitionOrder): [StateModelTransition]
}
""
type AddStateTransitionInstancePayload {
  ""
  numUids: Int
  ""
  stateTransitionInstance(filter: StateTransitionInstanceFilter, first: Int, offset: Int, order: StateTransitionInstanceOrder): [StateTransitionInstance]
}
""
type AddTestResultPayload {
  ""
  numUids: Int
  ""
  testResult(filter: TestResultFilter, first: Int, offset: Int, order: TestResultOrder): [TestResult]
}
""
type AddTestSpecificationCriteriaPayload {
  ""
  numUids: Int
  ""
  testSpecificationCriteria(filter: TestSpecificationCriteriaFilter, first: Int, offset: Int, order: TestSpecificationCriteriaOrder): [TestSpecificationCriteria]
}
""
type AddTestSpecificationPayload {
  ""
  numUids: Int
  ""
  testSpecification(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
}
""
type AddTestSpecificationPropertyPayload {
  ""
  numUids: Int
  ""
  testSpecificationProperty(filter: TestSpecificationPropertyFilter, first: Int, offset: Int, order: TestSpecificationPropertyOrder): [TestSpecificationProperty]
}
""
type AddUnitOfMeasureConversionPayload {
  ""
  numUids: Int
  ""
  unitOfMeasureConversion(filter: UnitOfMeasureConversionFilter, first: Int, offset: Int, order: UnitOfMeasureConversionOrder): [UnitOfMeasureConversion]
}
""
type AddUnitOfMeasurePayload {
  ""
  numUids: Int
  ""
  unitOfMeasure(filter: UnitOfMeasureFilter, first: Int, offset: Int, order: UnitOfMeasureOrder): [UnitOfMeasure]
}
""
type AddWorkCalendarDefinitionEntryPayload {
  ""
  numUids: Int
  ""
  workCalendarDefinitionEntry(filter: WorkCalendarDefinitionEntryFilter, first: Int, offset: Int, order: WorkCalendarDefinitionEntryOrder): [WorkCalendarDefinitionEntry]
}
""
type AddWorkCalendarDefinitionEntryPropertyPayload {
  ""
  numUids: Int
  ""
  workCalendarDefinitionEntryProperty(filter: WorkCalendarDefinitionEntryPropertyFilter, first: Int, offset: Int, order: WorkCalendarDefinitionEntryPropertyOrder): [WorkCalendarDefinitionEntryProperty]
}
""
type AddWorkCalendarEntryPayload {
  ""
  numUids: Int
  ""
  workCalendarEntry(filter: WorkCalendarEntryFilter, first: Int, offset: Int, order: WorkCalendarEntryOrder): [WorkCalendarEntry]
}
""
type AddWorkCalendarEntryPropertyPayload {
  ""
  numUids: Int
  ""
  workCalendarEntryProperty(filter: WorkCalendarEntryPropertyFilter, first: Int, offset: Int, order: WorkCalendarEntryPropertyOrder): [WorkCalendarEntryProperty]
}
""
type AddWorkCalendarPayload {
  ""
  numUids: Int
  ""
  workCalendar(filter: WorkCalendarFilter, first: Int, offset: Int, order: WorkCalendarOrder): [WorkCalendar]
}
""
type AddWorkDirectivePayload {
  ""
  numUids: Int
  ""
  workDirective(filter: WorkDirectiveFilter, first: Int, offset: Int, order: WorkDirectiveOrder): [WorkDirective]
}
""
type AddWorkMasterPayload {
  ""
  numUids: Int
  ""
  workMaster(filter: WorkMasterFilter, first: Int, offset: Int, order: WorkMasterOrder): [WorkMaster]
}
""
type AddWorkPerformancePayload {
  ""
  numUids: Int
  ""
  workPerformance(filter: WorkPerformanceFilter, first: Int, offset: Int, order: WorkPerformanceOrder): [WorkPerformance]
}
""
type AddWorkRequestPayload {
  ""
  numUids: Int
  ""
  workRequest(filter: WorkRequestFilter, first: Int, offset: Int, order: WorkRequestOrder): [WorkRequest]
}
""
type AddWorkResponsePayload {
  ""
  numUids: Int
  ""
  workResponse(filter: WorkResponseFilter, first: Int, offset: Int, order: WorkResponseOrder): [WorkResponse]
}
""
type AddWorkSchedulePayload {
  ""
  numUids: Int
  ""
  workSchedule(filter: WorkScheduleFilter, first: Int, offset: Int, order: WorkScheduleOrder): [WorkSchedule]
}
""
type AddWorkflowErrorPayload {
  ""
  numUids: Int
  ""
  workflowError(filter: WorkflowErrorFilter, first: Int, offset: Int, order: WorkflowErrorOrder): [WorkflowError]
}
""
type AddWorkflowMessagePayload {
  ""
  numUids: Int
  ""
  workflowMessage(filter: WorkflowMessageFilter, first: Int, offset: Int, order: WorkflowMessageOrder): [WorkflowMessage]
}
""
type AddWorkflowShapePayload {
  ""
  numUids: Int
  ""
  workflowShape(filter: WorkflowShapeFilter, first: Int, offset: Int, order: WorkflowShapeOrder): [WorkflowShape]
}
""
type AddWorkflowSpecificationConnectionPayload {
  ""
  numUids: Int
  ""
  workflowSpecificationConnection(filter: WorkflowSpecificationConnectionFilter, first: Int, offset: Int, order: WorkflowSpecificationConnectionOrder): [WorkflowSpecificationConnection]
}
""
type AddWorkflowSpecificationConnectionPropertyPayload {
  ""
  numUids: Int
  ""
  workflowSpecificationConnectionProperty(filter: WorkflowSpecificationConnectionPropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationConnectionPropertyOrder): [WorkflowSpecificationConnectionProperty]
}
""
type AddWorkflowSpecificationConnectionTypePayload {
  ""
  numUids: Int
  ""
  workflowSpecificationConnectionType(filter: WorkflowSpecificationConnectionTypeFilter, first: Int, offset: Int, order: WorkflowSpecificationConnectionTypeOrder): [WorkflowSpecificationConnectionType]
}
""
type AddWorkflowSpecificationConnectionTypePropertyPayload {
  ""
  numUids: Int
  ""
  workflowSpecificationConnectionTypeProperty(filter: WorkflowSpecificationConnectionTypePropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationConnectionTypePropertyOrder): [WorkflowSpecificationConnectionTypeProperty]
}
""
type AddWorkflowSpecificationNodePayload {
  ""
  numUids: Int
  ""
  workflowSpecificationNode(filter: WorkflowSpecificationNodeFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeOrder): [WorkflowSpecificationNode]
}
""
type AddWorkflowSpecificationNodePropertyPayload {
  ""
  numUids: Int
  ""
  workflowSpecificationNodeProperty(filter: WorkflowSpecificationNodePropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationNodePropertyOrder): [WorkflowSpecificationNodeProperty]
}
""
type AddWorkflowSpecificationNodeTestCasePayload {
  ""
  numUids: Int
  ""
  workflowSpecificationNodeTestCase(filter: WorkflowSpecificationNodeTestCaseFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeTestCaseOrder): [WorkflowSpecificationNodeTestCase]
}
""
type AddWorkflowSpecificationNodeTypePayload {
  ""
  numUids: Int
  ""
  workflowSpecificationNodeType(filter: WorkflowSpecificationNodeTypeFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeTypeOrder): [WorkflowSpecificationNodeType]
}
""
type AddWorkflowSpecificationNodeTypePropertyPayload {
  ""
  numUids: Int
  ""
  workflowSpecificationNodeTypeProperty(filter: WorkflowSpecificationNodeTypePropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeTypePropertyOrder): [WorkflowSpecificationNodeTypeProperty]
}
""
type AddWorkflowSpecificationNodeVariablePayload {
  ""
  numUids: Int
  ""
  workflowSpecificationNodeVariable(filter: WorkflowSpecificationNodeVariableFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeVariableOrder): [WorkflowSpecificationNodeVariable]
}
""
type AddWorkflowSpecificationPayload {
  ""
  numUids: Int
  ""
  workflowSpecification(filter: WorkflowSpecificationFilter, first: Int, offset: Int, order: WorkflowSpecificationOrder): [WorkflowSpecification]
}
""
type AddWorkflowSpecificationPropertyPayload {
  ""
  numUids: Int
  ""
  workflowSpecificationProperty(filter: WorkflowSpecificationPropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationPropertyOrder): [WorkflowSpecificationProperty]
}
""
type AddWorkflowSpecificationVersionPayload {
  ""
  numUids: Int
  ""
  workflowSpecificationVersion(filter: WorkflowSpecificationVersionFilter, first: Int, offset: Int, order: WorkflowSpecificationVersionOrder): [WorkflowSpecificationVersion]
}
""
type AddWorkflowTimerPayload {
  ""
  numUids: Int
  ""
  workflowTimer(filter: WorkflowTimerFilter, first: Int, offset: Int, order: WorkflowTimerOrder): [WorkflowTimer]
}
""
type AddWorkflowWaypointPayload {
  ""
  numUids: Int
  ""
  workflowWaypoint(filter: WorkflowWaypointFilter, first: Int, offset: Int, order: WorkflowWaypointOrder): [WorkflowWaypoint]
}
"ISA88.00.04 Alarm Event"
type AlarmEvent {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Record of different events during an alarm lifecycle. "
  alarmEvent: String!
  " Value a measurement exceeded that caused the alarm. "
  alarmLimit: String
  " The type of alarm from a process perspective. "
  alarmType: String
  " Defines a comment on the alarm event. "
  comments(filter: CommentFilter, first: Int, offset: Int, order: CommentOrder): [Comment]
  ""
  commentsAggregate(filter: CommentFilter): CommentAggregateResult
  " The date and time an Alarm Event is effective from "
  effectiveDateTime: DateTime
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The event that triggers this alarm "
  event(filter: EventFilter): Event
  " Unique internal database identifier. "
  iid: ID!
  " Indication of the importance of an event. "
  priority: String
  " The date and time an Alarm Event was last triggered "
  recordedDateTime: DateTime
  " Can have electronic Signature. "
  signatures(filter: SignatureFilter, first: Int, offset: Int, order: SignatureOrder): [Signature]
  ""
  signaturesAggregate(filter: SignatureFilter): SignatureAggregateResult
}
""
type AlarmEventAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  alarmEventMax: String
  ""
  alarmEventMin: String
  ""
  alarmLimitMax: String
  ""
  alarmLimitMin: String
  ""
  alarmTypeMax: String
  ""
  alarmTypeMin: String
  ""
  count: Int
  ""
  effectiveDateTimeMax: DateTime
  ""
  effectiveDateTimeMin: DateTime
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  priorityMax: String
  ""
  priorityMin: String
  ""
  recordedDateTimeMax: DateTime
  ""
  recordedDateTimeMin: DateTime
}
"Represents a Comment used for ISA88 compliance"
type Comment {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  """
  Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. 
  Note: having access to a secret implies access to the encrypted value, not the secret content itself.
  """
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The AlarmEvent the comment references. "
  alarmEvent(filter: AlarmEventFilter): AlarmEvent
  " Defines child comments. "
  child(filter: CommentFilter, first: Int, offset: Int, order: CommentOrder): [Comment]
  ""
  childAggregate(filter: CommentFilter): CommentAggregateResult
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The Equipment Actual the comment references. "
  equipmentActual(filter: EquipmentActualFilter): EquipmentActual
  " The Equipment Requirement the comment references. "
  equipmentRequirement(filter: EquipmentRequirementFilter): EquipmentRequirement
  " The event the comment references. "
  event(filter: EventFilter): Event
  " Comment unique external id. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The Job Order the comment references. "
  jobOrder(filter: JobOrderFilter): JobOrder
  " The Job Response the comment references. "
  jobResponse(filter: JobResponseFilter): JobResponse
  " The Job Response Data the comment references. "
  jobResponseData(filter: JobResponseDataFilter): JobResponseData
  " The Material Actual the comment references. "
  materialActual(filter: MaterialActualFilter): MaterialActual
  " The Material Requirement the comment references. "
  materialRequirement(filter: MaterialRequirementFilter): MaterialRequirement
  " Defines a comment on a signature. "
  onSignature(filter: SignatureFilter): Signature
  " Reference to parent comment. "
  parent(filter: CommentFilter): Comment
  " Person who created this Comment. "
  personVersion(filter: PersonVersionFilter): PersonVersion!
  " The Personnel Actual the comment references. "
  personnelActual(filter: PersonnelActualFilter): PersonnelActual
  " The Personnel Requirement the comment references. "
  personnelRequirement(filter: PersonnelRequirementFilter): PersonnelRequirement
  " The Physical Asset Actual the comment references. "
  physicalAssetActual(filter: PhysicalAssetActualFilter): PhysicalAssetActual
  " The Physical Asset Requirement the comment references. "
  physicalAssetRequirement(filter: PhysicalAssetRequirementFilter): PhysicalAssetRequirement
  " Associated OperationsRecordEntries from Operations Events "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " The Segment Parameter the comment references. "
  segmentParameter(filter: SegmentParameterFilter): SegmentParameter
  " This signature is for sign off on this comment. "
  signOff(filter: SignatureFilter): Signature
  " Comment body text. "
  text: String!
  " Timestamp of the comment. "
  timestamp: DateTime!
  " The Work Directive the comment references. "
  workDirective(filter: WorkDirectiveFilter): WorkDirective
  " The Work Master the comment references. "
  workMaster(filter: WorkMasterFilter): WorkMaster
  " The work Request the comment references. "
  workRequest(filter: WorkRequestFilter): WorkRequest
  " The Work Response the comment references. "
  workResponse(filter: WorkResponseFilter): WorkResponse
}
""
type CommentAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  textMax: String
  ""
  textMin: String
  ""
  timestampMax: DateTime
  ""
  timestampMin: DateTime
}
"Represents an external server for subscription to streams of data."
type DataSource {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The currently active version. To find a version that was active at a point in time, use versions with a filter. "
  activeVersion(filter: DataSourceVersionFilter): DataSourceVersion
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The external data provider details. "
  equipmentDataSources(filter: EquipmentDataSourceFilter, first: Int, offset: Int, order: EquipmentDataSourceOrder): [EquipmentDataSource]
  ""
  equipmentDataSourcesAggregate(filter: EquipmentDataSourceFilter): EquipmentDataSourceAggregateResult
  " Uniquely identifies the data source. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  " binding configuration for data source "
  propertyNameAliases(filter: PropertyNameAliasFilter, first: Int, offset: Int, order: PropertyNameAliasOrder): [PropertyNameAlias]
  ""
  propertyNameAliasesAggregate(filter: PropertyNameAliasFilter): PropertyNameAliasAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " The icon for the menu in the libre admin UI menu. "
  uiSortIndex: Int
  " Link to all available versions for this entity. "
  versions(filter: DataSourceVersionFilter, first: Int, offset: Int, order: DataSourceVersionOrder): [DataSourceVersion]
  ""
  versionsAggregate(filter: DataSourceVersionFilter): DataSourceVersionAggregateResult
}
""
type DataSourceAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  nextVersionMax: String
  ""
  nextVersionMin: String
  ""
  uiSortIndexAvg: Float
  ""
  uiSortIndexMax: Int
  ""
  uiSortIndexMin: Int
  ""
  uiSortIndexSum: Int
}
"""
A method within an OpcUa datasource that can be called against an object 
with input and output arguments
"""
type DataSourceMethod {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The Input Arguments for the method call "
  arguments(filter: DataSourceMethodArgumentFilter, first: Int, offset: Int, order: DataSourceMethodArgumentOrder): [DataSourceMethodArgument]
  ""
  argumentsAggregate(filter: DataSourceMethodArgumentFilter): DataSourceMethodArgumentAggregateResult
  " The DatasourceVersion this method links to. "
  dataSourceVersion(filter: DataSourceVersionFilter): DataSourceVersion!
  " Contains additional information and descriptions of the data source method. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  """
  The Error is optionally returned when the method call fails. Note, 
  this should be Null in BaaS, used for communication between services.
  """
  error: String
  " Uniquely identifies the data source method. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The method is last node in the fully qualified name of the method to call. "
  method: String!
  """
  The Object that the method is called against. Note, this should be Null in 
  BaaS, used for communication between services.
  """
  object: String
  """
  The StatusCode is returned after a method call. Note, this should be 
  Null in BaaS, used for communication between services.
  """
  statusCode: Int
}
""
type DataSourceMethodAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  errorMax: String
  ""
  errorMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  methodMax: String
  ""
  methodMin: String
  ""
  objectMax: String
  ""
  objectMin: String
  ""
  statusCodeAvg: Float
  ""
  statusCodeMax: Int
  ""
  statusCodeMin: Int
  ""
  statusCodeSum: Int
}
"An argument to a DataSourceMethod call"
type DataSourceMethodArgument {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The DataSourceMethod this argument is used to call "
  dataSourceMethod(filter: DataSourceMethodFilter): DataSourceMethod!
  " The type of data for this method argument. "
  dataType: DataType
  " Contains additional information and descriptions of the data source method argument. "
  description: String
  " The direction of the argument "
  direction: MethodArgumentDirection!
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Uniquely identifies the data source method argument. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The argument's position in the method call "
  position: Int!
  " The value of the argument, used for communicating with libre-agent "
  value: String
}
""
type DataSourceMethodArgumentAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  positionAvg: Float
  ""
  positionMax: Int
  ""
  positionMin: Int
  ""
  positionSum: Int
  ""
  valueMax: String
  ""
  valueMin: String
}
"An address within an external data server."
type DataSourceTopic {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The DatasourceVersion this topic links to. "
  dataSourceVersion(filter: DataSourceVersionFilter): DataSourceVersion!
  " The type of data for this topic. "
  dataType: DataType
  " Contains additional information and descriptions of the data source topic. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Uniquely identifies the data source topic. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " The messageKey for messages being published into NATS "
  messageKeyDeterminedBy: MessageKey!
  " binding configuration for data source topic "
  propertyNameAliases(filter: PropertyNameAliasFilter, first: Int, offset: Int, order: PropertyNameAliasOrder): [PropertyNameAlias] @deprecated(reason: "the dataSourceTopic Label is now maintained on the propertyNameAlias as a string rather than as a relationship")
  ""
  propertyNameAliasesAggregate(filter: PropertyNameAliasFilter): PropertyNameAliasAggregateResult
}
""
type DataSourceTopicAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
}
"Represents a specific version of a link to an external server for subscription to streams of data."
type DataSourceVersion {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Certificate for use with data sources that support encryption. "
  certificate: String
  " The full connection uri for the data source. "
  connectionString: String
  " The data source that this data source version relates to. "
  dataSource(filter: DataSourceFilter): DataSource!
  " Contains additional information and descriptions of the data source. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The external data provider details. "
  equipmentDataSources(filter: EquipmentDataSourceFilter, first: Int, offset: Int, order: EquipmentDataSourceOrder): [EquipmentDataSource]
  ""
  equipmentDataSourcesAggregate(filter: EquipmentDataSourceFilter): EquipmentDataSourceAggregateResult
  " Uniquely identifies the data source with the version. "
  id: String!
  ""
  id_version: String!
  " Unique internal database identifier. "
  iid: ID!
  " The data source that uses this data source version as it's active version. "
  isActiveVersionOf(filter: DataSourceFilter): DataSource
  " The list of methods that are available on the DataSource "
  methods(filter: DataSourceMethodFilter, first: Int, offset: Int, order: DataSourceMethodOrder): [DataSourceMethod]
  ""
  methodsAggregate(filter: DataSourceMethodFilter): DataSourceMethodAggregateResult
  " Password for data sources that use simple auth. "
  password: String
  " The external data provider details. "
  physicalAssetDataSources(filter: PhysicalAssetDataSourceFilter, first: Int, offset: Int, order: PhysicalAssetDataSourceOrder): [PhysicalAssetDataSource]
  ""
  physicalAssetDataSourcesAggregate(filter: PhysicalAssetDataSourceFilter): PhysicalAssetDataSourceAggregateResult
  " The protocol use to connect to the external data source. "
  protocol: DataSourceProtocol!
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " The list of addresses that are available in the data source. "
  topics(filter: DataSourceTopicFilter, first: Int, offset: Int, order: DataSourceTopicOrder): [DataSourceTopic]
  ""
  topicsAggregate(filter: DataSourceTopicFilter): DataSourceTopicAggregateResult
  " Username for data sources that use simple auth. "
  username: String
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
type DataSourceVersionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  certificateMax: String
  ""
  certificateMin: String
  ""
  connectionStringMax: String
  ""
  connectionStringMin: String
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  passwordMax: String
  ""
  passwordMin: String
  ""
  usernameMax: String
  ""
  usernameMin: String
  ""
  versionMax: String
  ""
  versionMin: String
}
""
type DataSubscription {
  ""
  id: ID!
  ""
  name: String!
  "The GraphQL Subscription query to use."
  query: String!
  "If the subscription returns a list, it can be split into separate messages in sub-topics using the id field."
  split: Boolean!
  "The MQTT Topic to publish this subscription to."
  topic: String!
}
""
type DataSubscriptionAggregateResult {
  ""
  count: Int
  ""
  nameMax: String
  ""
  nameMin: String
  ""
  queryMax: String
  ""
  queryMin: String
  ""
  topicMax: String
  ""
  topicMin: String
}
""
type DeleteAccessPermissionPayload {
  ""
  accessPermission(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteAlarmEventPayload {
  ""
  alarmEvent(filter: AlarmEventFilter, first: Int, offset: Int, order: AlarmEventOrder): [AlarmEvent]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteCommentPayload {
  ""
  comment(filter: CommentFilter, first: Int, offset: Int, order: CommentOrder): [Comment]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteDataSourceMethodArgumentPayload {
  ""
  dataSourceMethodArgument(filter: DataSourceMethodArgumentFilter, first: Int, offset: Int, order: DataSourceMethodArgumentOrder): [DataSourceMethodArgument]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteDataSourceMethodPayload {
  ""
  dataSourceMethod(filter: DataSourceMethodFilter, first: Int, offset: Int, order: DataSourceMethodOrder): [DataSourceMethod]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteDataSourcePayload {
  ""
  dataSource(filter: DataSourceFilter, first: Int, offset: Int, order: DataSourceOrder): [DataSource]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteDataSourceTopicPayload {
  ""
  dataSourceTopic(filter: DataSourceTopicFilter, first: Int, offset: Int, order: DataSourceTopicOrder): [DataSourceTopic]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteDataSourceVersionPayload {
  ""
  dataSourceVersion(filter: DataSourceVersionFilter, first: Int, offset: Int, order: DataSourceVersionOrder): [DataSourceVersion]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteDataSubscriptionPayload {
  ""
  dataSubscription(filter: DataSubscriptionFilter, first: Int, offset: Int, order: DataSubscriptionOrder): [DataSubscription]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteEnvironmentalVariablePayload {
  ""
  environmentalVariable(filter: EnvironmentalVariableFilter, first: Int, offset: Int, order: EnvironmentalVariableOrder): [EnvironmentalVariable]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteEnvironmentalVariableVersionPayload {
  ""
  environmentalVariableVersion(filter: EnvironmentalVariableVersionFilter, first: Int, offset: Int, order: EnvironmentalVariableVersionOrder): [EnvironmentalVariableVersion]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteEquipmentActualPayload {
  ""
  equipmentActual(filter: EquipmentActualFilter, first: Int, offset: Int, order: EquipmentActualOrder): [EquipmentActual]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteEquipmentActualPropertyPayload {
  ""
  equipmentActualProperty(filter: EquipmentActualPropertyFilter, first: Int, offset: Int, order: EquipmentActualPropertyOrder): [EquipmentActualProperty]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteEquipmentAssetMappingPayload {
  ""
  equipmentAssetMapping(filter: EquipmentAssetMappingFilter, first: Int, offset: Int, order: EquipmentAssetMappingOrder): [EquipmentAssetMapping]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteEquipmentClassPayload {
  ""
  equipmentClass(filter: EquipmentClassFilter, first: Int, offset: Int, order: EquipmentClassOrder): [EquipmentClass]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteEquipmentClassPropertyPayload {
  ""
  equipmentClassProperty(filter: EquipmentClassPropertyFilter, first: Int, offset: Int, order: EquipmentClassPropertyOrder): [EquipmentClassProperty]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteEquipmentClassVersionPayload {
  ""
  equipmentClassVersion(filter: EquipmentClassVersionFilter, first: Int, offset: Int, order: EquipmentClassVersionOrder): [EquipmentClassVersion]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteEquipmentDataSourcePayload {
  ""
  equipmentDataSource(filter: EquipmentDataSourceFilter, first: Int, offset: Int, order: EquipmentDataSourceOrder): [EquipmentDataSource]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteEquipmentNameAliasPayload {
  ""
  equipmentNameAlias(filter: EquipmentNameAliasFilter, first: Int, offset: Int, order: EquipmentNameAliasOrder): [EquipmentNameAlias]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteEquipmentPayload {
  ""
  equipment(filter: EquipmentFilter, first: Int, offset: Int, order: EquipmentOrder): [Equipment]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteEquipmentPropertyOverridePayload {
  ""
  equipmentPropertyOverride(filter: EquipmentPropertyOverrideFilter, first: Int, offset: Int, order: EquipmentPropertyOverrideOrder): [EquipmentPropertyOverride]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteEquipmentPropertyPayload {
  ""
  equipmentProperty(filter: EquipmentPropertyFilter, first: Int, offset: Int, order: EquipmentPropertyOrder): [EquipmentProperty]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteEquipmentRequirementPayload {
  ""
  equipmentRequirement(filter: EquipmentRequirementFilter, first: Int, offset: Int, order: EquipmentRequirementOrder): [EquipmentRequirement]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteEquipmentRequirementPropertyPayload {
  ""
  equipmentRequirementProperty(filter: EquipmentRequirementPropertyFilter, first: Int, offset: Int, order: EquipmentRequirementPropertyOrder): [EquipmentRequirementProperty]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteEquipmentSpecificationPayload {
  ""
  equipmentSpecification(filter: EquipmentSpecificationFilter, first: Int, offset: Int, order: EquipmentSpecificationOrder): [EquipmentSpecification]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteEquipmentSpecificationPropertyPayload {
  ""
  equipmentSpecificationProperty(filter: EquipmentSpecificationPropertyFilter, first: Int, offset: Int, order: EquipmentSpecificationPropertyOrder): [EquipmentSpecificationProperty]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteEquipmentVersionPayload {
  ""
  equipmentVersion(filter: EquipmentVersionFilter, first: Int, offset: Int, order: EquipmentVersionOrder): [EquipmentVersion]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteEvaluatedPropertyPayload {
  ""
  evaluatedProperty(filter: EvaluatedPropertyFilter, first: Int, offset: Int, order: EvaluatedPropertyOrder): [EvaluatedProperty]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteEventAssociationPayload {
  ""
  eventAssociation(filter: EventAssociationFilter, first: Int, offset: Int, order: EventAssociationOrder): [EventAssociation]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteEventPayload {
  ""
  event(filter: EventFilter, first: Int, offset: Int, order: EventOrder): [Event]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteEventPropertyPayload {
  ""
  eventProperty(filter: EventPropertyFilter, first: Int, offset: Int, order: EventPropertyOrder): [EventProperty]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteEventSubtypePayload {
  ""
  eventSubtype(filter: EventSubtypeFilter, first: Int, offset: Int, order: EventSubtypeOrder): [EventSubtype]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteEventTypePayload {
  ""
  eventType(filter: EventTypeFilter, first: Int, offset: Int, order: EventTypeOrder): [EventType]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteFormPayload {
  ""
  form(filter: FormFilter, first: Int, offset: Int, order: FormOrder): [Form]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteHierarchyScopePayload {
  ""
  hierarchyScope(filter: HierarchyScopeFilter, first: Int, offset: Int, order: HierarchyScopeOrder): [HierarchyScope]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteInformationObjectPayload {
  ""
  informationObject(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteJobListPayload {
  ""
  jobList(filter: JobListFilter, first: Int, offset: Int, order: JobListOrder): [JobList]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteJobOrderParameterPayload {
  ""
  jobOrderParameter(filter: JobOrderParameterFilter, first: Int, offset: Int, order: JobOrderParameterOrder): [JobOrderParameter]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteJobOrderPayload {
  ""
  jobOrder(filter: JobOrderFilter, first: Int, offset: Int, order: JobOrderOrder): [JobOrder]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteJobResponseDataPayload {
  ""
  jobResponseData(filter: JobResponseDataFilter, first: Int, offset: Int, order: JobResponseDataOrder): [JobResponseData]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteJobResponseListPayload {
  ""
  jobResponseList(filter: JobResponseListFilter, first: Int, offset: Int, order: JobResponseListOrder): [JobResponseList]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteJobResponsePayload {
  ""
  jobResponse(filter: JobResponseFilter, first: Int, offset: Int, order: JobResponseOrder): [JobResponse]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteLibreServicePayload {
  ""
  libreService(filter: LibreServiceFilter, first: Int, offset: Int, order: LibreServiceOrder): [LibreService]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteMaterialActualPayload {
  ""
  materialActual(filter: MaterialActualFilter, first: Int, offset: Int, order: MaterialActualOrder): [MaterialActual]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteMaterialActualPropertyPayload {
  ""
  materialActualProperty(filter: MaterialActualPropertyFilter, first: Int, offset: Int, order: MaterialActualPropertyOrder): [MaterialActualProperty]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteMaterialAlternatePayload {
  ""
  materialAlternate(filter: MaterialAlternateFilter, first: Int, offset: Int, order: MaterialAlternateOrder): [MaterialAlternate]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteMaterialClassPayload {
  ""
  materialClass(filter: MaterialClassFilter, first: Int, offset: Int, order: MaterialClassOrder): [MaterialClass]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteMaterialClassPropertyPayload {
  ""
  materialClassProperty(filter: MaterialClassPropertyFilter, first: Int, offset: Int, order: MaterialClassPropertyOrder): [MaterialClassProperty]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteMaterialClassVersionPayload {
  ""
  materialClassVersion(filter: MaterialClassVersionFilter, first: Int, offset: Int, order: MaterialClassVersionOrder): [MaterialClassVersion]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteMaterialDefinitionPayload {
  ""
  materialDefinition(filter: MaterialDefinitionFilter, first: Int, offset: Int, order: MaterialDefinitionOrder): [MaterialDefinition]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteMaterialDefinitionPropertyPayload {
  ""
  materialDefinitionProperty(filter: MaterialDefinitionPropertyFilter, first: Int, offset: Int, order: MaterialDefinitionPropertyOrder): [MaterialDefinitionProperty]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteMaterialDefinitionVersionPayload {
  ""
  materialDefinitionVersion(filter: MaterialDefinitionVersionFilter, first: Int, offset: Int, order: MaterialDefinitionVersionOrder): [MaterialDefinitionVersion]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteMaterialLotPayload {
  ""
  materialLot(filter: MaterialLotFilter, first: Int, offset: Int, order: MaterialLotOrder): [MaterialLot]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteMaterialLotPropertyPayload {
  ""
  materialLotProperty(filter: MaterialLotPropertyFilter, first: Int, offset: Int, order: MaterialLotPropertyOrder): [MaterialLotProperty]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteMaterialRequirementPayload {
  ""
  materialRequirement(filter: MaterialRequirementFilter, first: Int, offset: Int, order: MaterialRequirementOrder): [MaterialRequirement]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteMaterialRequirementPropertyPayload {
  ""
  materialRequirementProperty(filter: MaterialRequirementPropertyFilter, first: Int, offset: Int, order: MaterialRequirementPropertyOrder): [MaterialRequirementProperty]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteMaterialSpecificationPayload {
  ""
  materialSpecification(filter: MaterialSpecificationFilter, first: Int, offset: Int, order: MaterialSpecificationOrder): [MaterialSpecification]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteMaterialSpecificationPropertyPayload {
  ""
  materialSpecificationProperty(filter: MaterialSpecificationPropertyFilter, first: Int, offset: Int, order: MaterialSpecificationPropertyOrder): [MaterialSpecificationProperty]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteMaterialSubLotPayload {
  ""
  materialSubLot(filter: MaterialSubLotFilter, first: Int, offset: Int, order: MaterialSubLotOrder): [MaterialSubLot]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteMenuPayload {
  ""
  menu(filter: MenuFilter, first: Int, offset: Int, order: MenuOrder): [Menu]
  ""
  msg: String
  ""
  numUids: Int
}
""
type DeleteMultiplicityPayload {
  ""
  msg: String
  ""
  multiplicity(filter: MultiplicityFilter, first: Int, offset: Int, order: MultiplicityOrder): [Multiplicity]
  ""
  numUids: Int
}
""
type DeleteOperationalLocationClassPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationalLocationClass(filter: OperationalLocationClassFilter, first: Int, offset: Int, order: OperationalLocationClassOrder): [OperationalLocationClass]
}
""
type DeleteOperationalLocationClassPropertyPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationalLocationClassProperty(filter: OperationalLocationClassPropertyFilter, first: Int, offset: Int, order: OperationalLocationClassPropertyOrder): [OperationalLocationClassProperty]
}
""
type DeleteOperationalLocationClassVersionPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationalLocationClassVersion(filter: OperationalLocationClassVersionFilter, first: Int, offset: Int, order: OperationalLocationClassVersionOrder): [OperationalLocationClassVersion]
}
""
type DeleteOperationalLocationPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationalLocation(filter: OperationalLocationFilter, first: Int, offset: Int, order: OperationalLocationOrder): [OperationalLocation]
}
""
type DeleteOperationalLocationPropertyPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationalLocationProperty(filter: OperationalLocationPropertyFilter, first: Int, offset: Int, order: OperationalLocationPropertyOrder): [OperationalLocationProperty]
}
""
type DeleteOperationalLocationVersionPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationalLocationVersion(filter: OperationalLocationVersionFilter, first: Int, offset: Int, order: OperationalLocationVersionOrder): [OperationalLocationVersion]
}
""
type DeleteOperationsDefinitionPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationsDefinition(filter: OperationsDefinitionFilter, first: Int, offset: Int, order: OperationsDefinitionOrder): [OperationsDefinition]
}
""
type DeleteOperationsDefinitionVersionPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationsDefinitionVersion(filter: OperationsDefinitionVersionFilter, first: Int, offset: Int, order: OperationsDefinitionVersionOrder): [OperationsDefinitionVersion]
}
""
type DeleteOperationsEventClassPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationsEventClass(filter: OperationsEventClassFilter, first: Int, offset: Int, order: OperationsEventClassOrder): [OperationsEventClass]
}
""
type DeleteOperationsEventClassPropertyPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationsEventClassProperty(filter: OperationsEventClassPropertyFilter, first: Int, offset: Int, order: OperationsEventClassPropertyOrder): [OperationsEventClassProperty]
}
""
type DeleteOperationsEventClassRecordSpecificationPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationsEventClassRecordSpecification(filter: OperationsEventClassRecordSpecificationFilter, first: Int, offset: Int, order: OperationsEventClassRecordSpecificationOrder): [OperationsEventClassRecordSpecification]
}
""
type DeleteOperationsEventClassVersionPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationsEventClassVersion(filter: OperationsEventClassVersionFilter, first: Int, offset: Int, order: OperationsEventClassVersionOrder): [OperationsEventClassVersion]
}
""
type DeleteOperationsEventDefinitionPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationsEventDefinition(filter: OperationsEventDefinitionFilter, first: Int, offset: Int, order: OperationsEventDefinitionOrder): [OperationsEventDefinition]
}
""
type DeleteOperationsEventDefinitionPropertyPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationsEventDefinitionProperty(filter: OperationsEventDefinitionPropertyFilter, first: Int, offset: Int, order: OperationsEventDefinitionPropertyOrder): [OperationsEventDefinitionProperty]
}
""
type DeleteOperationsEventDefinitionRecordSpecificationPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationsEventDefinitionRecordSpecification(filter: OperationsEventDefinitionRecordSpecificationFilter, first: Int, offset: Int, order: OperationsEventDefinitionRecordSpecificationOrder): [OperationsEventDefinitionRecordSpecification]
}
""
type DeleteOperationsEventDefinitionVersionPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationsEventDefinitionVersion(filter: OperationsEventDefinitionVersionFilter, first: Int, offset: Int, order: OperationsEventDefinitionVersionOrder): [OperationsEventDefinitionVersion]
}
""
type DeleteOperationsEventPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationsEvent(filter: OperationsEventFilter, first: Int, offset: Int, order: OperationsEventOrder): [OperationsEvent]
}
""
type DeleteOperationsEventPropertyPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationsEventProperty(filter: OperationsEventPropertyFilter, first: Int, offset: Int, order: OperationsEventPropertyOrder): [OperationsEventProperty]
}
""
type DeleteOperationsEventRecordEntryPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationsEventRecordEntry(filter: OperationsEventRecordEntryFilter, first: Int, offset: Int, order: OperationsEventRecordEntryOrder): [OperationsEventRecordEntry]
}
""
type DeleteOperationsEventRecordPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationsEventRecord(filter: OperationsEventRecordFilter, first: Int, offset: Int, order: OperationsEventRecordOrder): [OperationsEventRecord]
}
""
type DeleteOperationsMaterialBillPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationsMaterialBill(filter: OperationsMaterialBillFilter, first: Int, offset: Int, order: OperationsMaterialBillOrder): [OperationsMaterialBill]
}
""
type DeleteOperationsPerformancePayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationsPerformance(filter: OperationsPerformanceFilter, first: Int, offset: Int, order: OperationsPerformanceOrder): [OperationsPerformance]
}
""
type DeleteOperationsRequestPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationsRequest(filter: OperationsRequestFilter, first: Int, offset: Int, order: OperationsRequestOrder): [OperationsRequest]
}
""
type DeleteOperationsResponsePayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationsResponse(filter: OperationsResponseFilter, first: Int, offset: Int, order: OperationsResponseOrder): [OperationsResponse]
}
""
type DeleteOperationsResponsePropertyPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationsResponseProperty(filter: OperationsResponsePropertyFilter, first: Int, offset: Int, order: OperationsResponsePropertyOrder): [OperationsResponseProperty]
}
""
type DeleteOperationsSchedulePayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationsSchedule(filter: OperationsScheduleFilter, first: Int, offset: Int, order: OperationsScheduleOrder): [OperationsSchedule]
}
""
type DeleteOperationsSegmentDependencyPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationsSegmentDependency(filter: OperationsSegmentDependencyFilter, first: Int, offset: Int, order: OperationsSegmentDependencyOrder): [OperationsSegmentDependency]
}
""
type DeleteOperationsSegmentPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  operationsSegment(filter: OperationsSegmentFilter, first: Int, offset: Int, order: OperationsSegmentOrder): [OperationsSegment]
}
""
type DeleteParameterSpecificationPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  parameterSpecification(filter: ParameterSpecificationFilter, first: Int, offset: Int, order: ParameterSpecificationOrder): [ParameterSpecification]
}
""
type DeletePayloadFieldDefinitionPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  payloadFieldDefinition(filter: PayloadFieldDefinitionFilter, first: Int, offset: Int, order: PayloadFieldDefinitionOrder): [PayloadFieldDefinition]
}
""
type DeletePersonPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  person(filter: PersonFilter, first: Int, offset: Int, order: PersonOrder): [Person]
}
""
type DeletePersonPropertyPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  personProperty(filter: PersonPropertyFilter, first: Int, offset: Int, order: PersonPropertyOrder): [PersonProperty]
}
""
type DeletePersonVersionPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  personVersion(filter: PersonVersionFilter, first: Int, offset: Int, order: PersonVersionOrder): [PersonVersion]
}
""
type DeletePersonnelActualPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  personnelActual(filter: PersonnelActualFilter, first: Int, offset: Int, order: PersonnelActualOrder): [PersonnelActual]
}
""
type DeletePersonnelActualPropertyPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  personnelActualProperty(filter: PersonnelActualPropertyFilter, first: Int, offset: Int, order: PersonnelActualPropertyOrder): [PersonnelActualProperty]
}
""
type DeletePersonnelClassPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  personnelClass(filter: PersonnelClassFilter, first: Int, offset: Int, order: PersonnelClassOrder): [PersonnelClass]
}
""
type DeletePersonnelClassPropertyPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  personnelClassProperty(filter: PersonnelClassPropertyFilter, first: Int, offset: Int, order: PersonnelClassPropertyOrder): [PersonnelClassProperty]
}
""
type DeletePersonnelClassVersionPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  personnelClassVersion(filter: PersonnelClassVersionFilter, first: Int, offset: Int, order: PersonnelClassVersionOrder): [PersonnelClassVersion]
}
""
type DeletePersonnelRequirementPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  personnelRequirement(filter: PersonnelRequirementFilter, first: Int, offset: Int, order: PersonnelRequirementOrder): [PersonnelRequirement]
}
""
type DeletePersonnelRequirementPropertyPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  personnelRequirementProperty(filter: PersonnelRequirementPropertyFilter, first: Int, offset: Int, order: PersonnelRequirementPropertyOrder): [PersonnelRequirementProperty]
}
""
type DeletePersonnelSpecificationPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  personnelSpecification(filter: PersonnelSpecificationFilter, first: Int, offset: Int, order: PersonnelSpecificationOrder): [PersonnelSpecification]
}
""
type DeletePersonnelSpecificationPropertyPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  personnelSpecificationProperty(filter: PersonnelSpecificationPropertyFilter, first: Int, offset: Int, order: PersonnelSpecificationPropertyOrder): [PersonnelSpecificationProperty]
}
""
type DeletePhysicalAssetActualPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  physicalAssetActual(filter: PhysicalAssetActualFilter, first: Int, offset: Int, order: PhysicalAssetActualOrder): [PhysicalAssetActual]
}
""
type DeletePhysicalAssetActualPropertyPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  physicalAssetActualProperty(filter: PhysicalAssetActualPropertyFilter, first: Int, offset: Int, order: PhysicalAssetActualPropertyOrder): [PhysicalAssetActualProperty]
}
""
type DeletePhysicalAssetClassPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  physicalAssetClass(filter: PhysicalAssetClassFilter, first: Int, offset: Int, order: PhysicalAssetClassOrder): [PhysicalAssetClass]
}
""
type DeletePhysicalAssetClassPropertyPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  physicalAssetClassProperty(filter: PhysicalAssetClassPropertyFilter, first: Int, offset: Int, order: PhysicalAssetClassPropertyOrder): [PhysicalAssetClassProperty]
}
""
type DeletePhysicalAssetClassVersionPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  physicalAssetClassVersion(filter: PhysicalAssetClassVersionFilter, first: Int, offset: Int, order: PhysicalAssetClassVersionOrder): [PhysicalAssetClassVersion]
}
""
type DeletePhysicalAssetDataSourcePayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  physicalAssetDataSource(filter: PhysicalAssetDataSourceFilter, first: Int, offset: Int, order: PhysicalAssetDataSourceOrder): [PhysicalAssetDataSource]
}
""
type DeletePhysicalAssetPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  physicalAsset(filter: PhysicalAssetFilter, first: Int, offset: Int, order: PhysicalAssetOrder): [PhysicalAsset]
}
""
type DeletePhysicalAssetPropertyPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  physicalAssetProperty(filter: PhysicalAssetPropertyFilter, first: Int, offset: Int, order: PhysicalAssetPropertyOrder): [PhysicalAssetProperty]
}
""
type DeletePhysicalAssetRequirementPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  physicalAssetRequirement(filter: PhysicalAssetRequirementFilter, first: Int, offset: Int, order: PhysicalAssetRequirementOrder): [PhysicalAssetRequirement]
}
""
type DeletePhysicalAssetRequirementPropertyPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  physicalAssetRequirementProperty(filter: PhysicalAssetRequirementPropertyFilter, first: Int, offset: Int, order: PhysicalAssetRequirementPropertyOrder): [PhysicalAssetRequirementProperty]
}
""
type DeletePhysicalAssetSpecificationPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  physicalAssetSpecification(filter: PhysicalAssetSpecificationFilter, first: Int, offset: Int, order: PhysicalAssetSpecificationOrder): [PhysicalAssetSpecification]
}
""
type DeletePhysicalAssetSpecificationPropertyPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  physicalAssetSpecificationProperty(filter: PhysicalAssetSpecificationPropertyFilter, first: Int, offset: Int, order: PhysicalAssetSpecificationPropertyOrder): [PhysicalAssetSpecificationProperty]
}
""
type DeletePhysicalAssetVersionPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  physicalAssetVersion(filter: PhysicalAssetVersionFilter, first: Int, offset: Int, order: PhysicalAssetVersionOrder): [PhysicalAssetVersion]
}
""
type DeleteProcessSegmentDependencyPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  processSegmentDependency(filter: ProcessSegmentDependencyFilter, first: Int, offset: Int, order: ProcessSegmentDependencyOrder): [ProcessSegmentDependency]
}
""
type DeleteProcessSegmentParameterPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  processSegmentParameter(filter: ProcessSegmentParameterFilter, first: Int, offset: Int, order: ProcessSegmentParameterOrder): [ProcessSegmentParameter]
}
""
type DeleteProcessSegmentPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  processSegment(filter: ProcessSegmentFilter, first: Int, offset: Int, order: ProcessSegmentOrder): [ProcessSegment]
}
""
type DeleteProcessSegmentVersionPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  processSegmentVersion(filter: ProcessSegmentVersionFilter, first: Int, offset: Int, order: ProcessSegmentVersionOrder): [ProcessSegmentVersion]
}
""
type DeletePropertyMeasurementPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  propertyMeasurement(filter: PropertyMeasurementFilter, first: Int, offset: Int, order: PropertyMeasurementOrder): [PropertyMeasurement]
}
""
type DeletePropertyNameAliasPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  propertyNameAlias(filter: PropertyNameAliasFilter, first: Int, offset: Int, order: PropertyNameAliasOrder): [PropertyNameAlias]
}
""
type DeletePropertyValueAliasPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  propertyValueAlias(filter: PropertyValueAliasFilter, first: Int, offset: Int, order: PropertyValueAliasOrder): [PropertyValueAlias]
}
""
type DeleteRulePayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  rule(filter: RuleFilter, first: Int, offset: Int, order: RuleOrder): [Rule]
}
""
type DeleteSecretPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  secret(filter: SecretFilter, first: Int, offset: Int, order: SecretOrder): [Secret]
}
""
type DeleteSecretVersionPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  secretVersion(filter: SecretVersionFilter, first: Int, offset: Int, order: SecretVersionOrder): [SecretVersion]
}
""
type DeleteSegmentDataPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  segmentData(filter: SegmentDataFilter, first: Int, offset: Int, order: SegmentDataOrder): [SegmentData]
}
""
type DeleteSegmentParameterPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  segmentParameter(filter: SegmentParameterFilter, first: Int, offset: Int, order: SegmentParameterOrder): [SegmentParameter]
}
""
type DeleteSegmentRequirementPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  segmentRequirement(filter: SegmentRequirementFilter, first: Int, offset: Int, order: SegmentRequirementOrder): [SegmentRequirement]
}
""
type DeleteSegmentResponsePayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  segmentResponse(filter: SegmentResponseFilter, first: Int, offset: Int, order: SegmentResponseOrder): [SegmentResponse]
}
""
type DeleteSignaturePayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  signature(filter: SignatureFilter, first: Int, offset: Int, order: SignatureOrder): [Signature]
}
""
type DeleteSignatureReasonPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  signatureReason(filter: SignatureReasonFilter, first: Int, offset: Int, order: SignatureReasonOrder): [SignatureReason]
}
""
type DeleteSpatialDefinitionPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  spatialDefinition(filter: SpatialDefinitionFilter, first: Int, offset: Int, order: SpatialDefinitionOrder): [SpatialDefinition]
}
""
type DeleteStateModelActionPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  stateModelAction(filter: StateModelActionFilter, first: Int, offset: Int, order: StateModelActionOrder): [StateModelAction]
}
""
type DeleteStateModelDefinitionPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  stateModelDefinition(filter: StateModelDefinitionFilter, first: Int, offset: Int, order: StateModelDefinitionOrder): [StateModelDefinition]
}
""
type DeleteStateModelEventPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  stateModelEvent(filter: StateModelEventFilter, first: Int, offset: Int, order: StateModelEventOrder): [StateModelEvent]
}
""
type DeleteStateModelInstancePayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  stateModelInstance(filter: StateModelInstanceFilter, first: Int, offset: Int, order: StateModelInstanceOrder): [StateModelInstance]
}
""
type DeleteStateModelPropertyPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  stateModelProperty(filter: StateModelPropertyFilter, first: Int, offset: Int, order: StateModelPropertyOrder): [StateModelProperty]
}
""
type DeleteStateModelStatePayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  stateModelState(filter: StateModelStateFilter, first: Int, offset: Int, order: StateModelStateOrder): [StateModelState]
}
""
type DeleteStateModelTransitionPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  stateModelTransition(filter: StateModelTransitionFilter, first: Int, offset: Int, order: StateModelTransitionOrder): [StateModelTransition]
}
""
type DeleteStateTransitionInstancePayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  stateTransitionInstance(filter: StateTransitionInstanceFilter, first: Int, offset: Int, order: StateTransitionInstanceOrder): [StateTransitionInstance]
}
""
type DeleteTestResultPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  testResult(filter: TestResultFilter, first: Int, offset: Int, order: TestResultOrder): [TestResult]
}
""
type DeleteTestSpecificationCriteriaPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  testSpecificationCriteria(filter: TestSpecificationCriteriaFilter, first: Int, offset: Int, order: TestSpecificationCriteriaOrder): [TestSpecificationCriteria]
}
""
type DeleteTestSpecificationPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  testSpecification(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
}
""
type DeleteTestSpecificationPropertyPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  testSpecificationProperty(filter: TestSpecificationPropertyFilter, first: Int, offset: Int, order: TestSpecificationPropertyOrder): [TestSpecificationProperty]
}
""
type DeleteUnitOfMeasureConversionPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  unitOfMeasureConversion(filter: UnitOfMeasureConversionFilter, first: Int, offset: Int, order: UnitOfMeasureConversionOrder): [UnitOfMeasureConversion]
}
""
type DeleteUnitOfMeasurePayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  unitOfMeasure(filter: UnitOfMeasureFilter, first: Int, offset: Int, order: UnitOfMeasureOrder): [UnitOfMeasure]
}
""
type DeleteWorkCalendarDefinitionEntryPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workCalendarDefinitionEntry(filter: WorkCalendarDefinitionEntryFilter, first: Int, offset: Int, order: WorkCalendarDefinitionEntryOrder): [WorkCalendarDefinitionEntry]
}
""
type DeleteWorkCalendarDefinitionEntryPropertyPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workCalendarDefinitionEntryProperty(filter: WorkCalendarDefinitionEntryPropertyFilter, first: Int, offset: Int, order: WorkCalendarDefinitionEntryPropertyOrder): [WorkCalendarDefinitionEntryProperty]
}
""
type DeleteWorkCalendarEntryPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workCalendarEntry(filter: WorkCalendarEntryFilter, first: Int, offset: Int, order: WorkCalendarEntryOrder): [WorkCalendarEntry]
}
""
type DeleteWorkCalendarEntryPropertyPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workCalendarEntryProperty(filter: WorkCalendarEntryPropertyFilter, first: Int, offset: Int, order: WorkCalendarEntryPropertyOrder): [WorkCalendarEntryProperty]
}
""
type DeleteWorkCalendarPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workCalendar(filter: WorkCalendarFilter, first: Int, offset: Int, order: WorkCalendarOrder): [WorkCalendar]
}
""
type DeleteWorkDirectivePayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workDirective(filter: WorkDirectiveFilter, first: Int, offset: Int, order: WorkDirectiveOrder): [WorkDirective]
}
""
type DeleteWorkMasterPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workMaster(filter: WorkMasterFilter, first: Int, offset: Int, order: WorkMasterOrder): [WorkMaster]
}
""
type DeleteWorkPerformancePayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workPerformance(filter: WorkPerformanceFilter, first: Int, offset: Int, order: WorkPerformanceOrder): [WorkPerformance]
}
""
type DeleteWorkRequestPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workRequest(filter: WorkRequestFilter, first: Int, offset: Int, order: WorkRequestOrder): [WorkRequest]
}
""
type DeleteWorkResponsePayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workResponse(filter: WorkResponseFilter, first: Int, offset: Int, order: WorkResponseOrder): [WorkResponse]
}
""
type DeleteWorkSchedulePayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workSchedule(filter: WorkScheduleFilter, first: Int, offset: Int, order: WorkScheduleOrder): [WorkSchedule]
}
""
type DeleteWorkflowErrorPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workflowError(filter: WorkflowErrorFilter, first: Int, offset: Int, order: WorkflowErrorOrder): [WorkflowError]
}
""
type DeleteWorkflowMessagePayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workflowMessage(filter: WorkflowMessageFilter, first: Int, offset: Int, order: WorkflowMessageOrder): [WorkflowMessage]
}
""
type DeleteWorkflowShapePayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workflowShape(filter: WorkflowShapeFilter, first: Int, offset: Int, order: WorkflowShapeOrder): [WorkflowShape]
}
""
type DeleteWorkflowSpecificationConnectionPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workflowSpecificationConnection(filter: WorkflowSpecificationConnectionFilter, first: Int, offset: Int, order: WorkflowSpecificationConnectionOrder): [WorkflowSpecificationConnection]
}
""
type DeleteWorkflowSpecificationConnectionPropertyPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workflowSpecificationConnectionProperty(filter: WorkflowSpecificationConnectionPropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationConnectionPropertyOrder): [WorkflowSpecificationConnectionProperty]
}
""
type DeleteWorkflowSpecificationConnectionTypePayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workflowSpecificationConnectionType(filter: WorkflowSpecificationConnectionTypeFilter, first: Int, offset: Int, order: WorkflowSpecificationConnectionTypeOrder): [WorkflowSpecificationConnectionType]
}
""
type DeleteWorkflowSpecificationConnectionTypePropertyPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workflowSpecificationConnectionTypeProperty(filter: WorkflowSpecificationConnectionTypePropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationConnectionTypePropertyOrder): [WorkflowSpecificationConnectionTypeProperty]
}
""
type DeleteWorkflowSpecificationNodePayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workflowSpecificationNode(filter: WorkflowSpecificationNodeFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeOrder): [WorkflowSpecificationNode]
}
""
type DeleteWorkflowSpecificationNodePropertyPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workflowSpecificationNodeProperty(filter: WorkflowSpecificationNodePropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationNodePropertyOrder): [WorkflowSpecificationNodeProperty]
}
""
type DeleteWorkflowSpecificationNodeTestCasePayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workflowSpecificationNodeTestCase(filter: WorkflowSpecificationNodeTestCaseFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeTestCaseOrder): [WorkflowSpecificationNodeTestCase]
}
""
type DeleteWorkflowSpecificationNodeTypePayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workflowSpecificationNodeType(filter: WorkflowSpecificationNodeTypeFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeTypeOrder): [WorkflowSpecificationNodeType]
}
""
type DeleteWorkflowSpecificationNodeTypePropertyPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workflowSpecificationNodeTypeProperty(filter: WorkflowSpecificationNodeTypePropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeTypePropertyOrder): [WorkflowSpecificationNodeTypeProperty]
}
""
type DeleteWorkflowSpecificationNodeVariablePayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workflowSpecificationNodeVariable(filter: WorkflowSpecificationNodeVariableFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeVariableOrder): [WorkflowSpecificationNodeVariable]
}
""
type DeleteWorkflowSpecificationPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workflowSpecification(filter: WorkflowSpecificationFilter, first: Int, offset: Int, order: WorkflowSpecificationOrder): [WorkflowSpecification]
}
""
type DeleteWorkflowSpecificationPropertyPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workflowSpecificationProperty(filter: WorkflowSpecificationPropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationPropertyOrder): [WorkflowSpecificationProperty]
}
""
type DeleteWorkflowSpecificationVersionPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workflowSpecificationVersion(filter: WorkflowSpecificationVersionFilter, first: Int, offset: Int, order: WorkflowSpecificationVersionOrder): [WorkflowSpecificationVersion]
}
""
type DeleteWorkflowTimerPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workflowTimer(filter: WorkflowTimerFilter, first: Int, offset: Int, order: WorkflowTimerOrder): [WorkflowTimer]
}
""
type DeleteWorkflowWaypointPayload {
  ""
  msg: String
  ""
  numUids: Int
  ""
  workflowWaypoint(filter: WorkflowWaypointFilter, first: Int, offset: Int, order: WorkflowWaypointOrder): [WorkflowWaypoint]
}
"""
Represents a key/value pair that can be substuted into more generic interfaces.
An example Environmental Variable might be the domain of a server accessed in a 
BPMN REST API node
"""
type EnvironmentalVariable {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The currently active version. To find a version that was active at a point in time, use versions with a filter. "
  activeVersion(filter: EnvironmentalVariableVersionFilter): EnvironmentalVariableVersion
  " Uniquely identifies the environmental variable. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  " Link to all available versions for this entity. "
  versions(filter: EnvironmentalVariableVersionFilter, first: Int, offset: Int, order: EnvironmentalVariableVersionOrder): [EnvironmentalVariableVersion]
  ""
  versionsAggregate(filter: EnvironmentalVariableVersionFilter): EnvironmentalVariableVersionAggregateResult
}
""
type EnvironmentalVariableAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  idMax: String
  ""
  idMin: String
  ""
  nextVersionMax: String
  ""
  nextVersionMin: String
}
"Represents a specific version of a key/value pair that can be substuted into more generic interfaces."
type EnvironmentalVariableVersion {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The environmental variable that this environmental variable version relates to. "
  environmentalVariable(filter: EnvironmentalVariableFilter): EnvironmentalVariable!
  " Uniquely identifies the environmental variable with the version. "
  id: String!
  ""
  id_version: String!
  " Unique internal database identifier. "
  iid: ID!
  " The environmental variable that uses this environmental variable version as it's active version. "
  isActiveVersionOf(filter: EnvironmentalVariableFilter): EnvironmentalVariable
  " The value is substuted into any templates in place of the variable's id. "
  value: String!
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
type EnvironmentalVariableVersionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  valueMax: String
  ""
  valueMin: String
  ""
  versionMax: String
  ""
  versionMin: String
}
"""
A representation of the elements of the equipment hierarchy model shown in ISA 95.00.01 shall be presented
as equipment. Equipment may be a listing of any of the following: enterprise, site, area, work center, work
unit, process cell, unit, production line, production unit, work cell, storage zone, and storage unit.

Equipment may be tested by the execution of the test specification criteria in the test specification
that references the evaluated property and may be recorded in an evaluated criterion result attribute
in the test result.

Equipment may be made up of other equipment, as presented in the equipment hierarchy model.
"""
type Equipment {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The currently active version. To find a version that was active at a point in time, use versions with a filter. "
  activeVersion(filter: EquipmentVersionFilter): EquipmentVersion
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The equipment actual(s) this equipment is associated with. "
  equipmentActual(filter: EquipmentActualFilter, first: Int, offset: Int, order: EquipmentActualOrder): [EquipmentActual]
  ""
  equipmentActualAggregate(filter: EquipmentActualFilter): EquipmentActualAggregateResult
  """
   The equipment asset mapping records the uses of the equipment that is associated with the physical
  asset if the equipment associated with a manufacturing function. 
  """
  equipmentAssetMapping(filter: EquipmentAssetMappingFilter, first: Int, offset: Int, order: EquipmentAssetMappingOrder): [EquipmentAssetMapping]
  ""
  equipmentAssetMappingAggregate(filter: EquipmentAssetMappingFilter): EquipmentAssetMappingAggregateResult
  " The equipment requirement(s) this equipment is associated with. "
  equipmentRequirements(filter: EquipmentRequirementFilter, first: Int, offset: Int, order: EquipmentRequirementOrder): [EquipmentRequirement]
  ""
  equipmentRequirementsAggregate(filter: EquipmentRequirementFilter): EquipmentRequirementAggregateResult
  " The equipment specification(s) this equipment is associated with. "
  equipmentSpecifications(filter: EquipmentSpecificationFilter, first: Int, offset: Int, order: EquipmentSpecificationOrder): [EquipmentSpecification]
  ""
  equipmentSpecificationsAggregate(filter: EquipmentSpecificationFilter): EquipmentSpecificationAggregateResult
  """
   Reference to ISA88.00.04 Event. An event is a discrete occurrence in time. Event objects document occurrences
  and can be stored in a batch production record. This is usually done when an event has meaning or significance to
  the manufacture of a product. 
  """
  events(filter: EventFilter, first: Int, offset: Int, order: EventOrder): [Event]
  ""
  eventsAggregate(filter: EventFilter): EventAggregateResult
  " A unique identification of a specific piece of equipment, within the scope of the information exchanged. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  """
   Aggregation hierarchy (Has A):
  - This object can include the properties of zero or many objects of the same type
  - This object's properties can be included in zero or many objects of the same type
  - This relationship intent is to create subordinate classes can be contained within various superordinate classes
  in the same way that a component may be made up of subcomponents
  
  Example:
  
  MixerMechanism properties: HeadShape, Type
  InsulationSleeve properties:  Density, Colour
  HeatingElement properties:  Power, Length
  Boiler isMadeUpOf  [MixerMechanism, Heating Element] (and extends this with property TargetTemperature)
  InsulatedBoiler isMadeUpOf  [MixerMechanism, Heating Element, InsulationSleeve] (and extends this with property TargetTemperature)
  """
  isMadeUpOf(filter: EquipmentFilter, first: Int, offset: Int, order: EquipmentOrder): [Equipment]
  ""
  isMadeUpOfAggregate(filter: EquipmentFilter): EquipmentAggregateResult
  " Aggregation hierarchy (Has A) "
  isPartOf(filter: EquipmentFilter, first: Int, offset: Int, order: EquipmentOrder): [Equipment]
  ""
  isPartOfAggregate(filter: EquipmentFilter): EquipmentAggregateResult
  " The label is last node in the fully qualified name. "
  label: String!
  " Identifies any material lot(s) stored at this Equipment. "
  materialLots(filter: MaterialLotFilter, first: Int, offset: Int, order: MaterialLotOrder): [MaterialLot]
  ""
  materialLotsAggregate(filter: MaterialLotFilter): MaterialLotAggregateResult
  " Identifies any material sublot(s) stored at this Equipment. "
  materialSubLots(filter: MaterialSubLotFilter, first: Int, offset: Int, order: MaterialSubLotOrder): [MaterialSubLot]
  ""
  materialSubLotsAggregate(filter: MaterialSubLotFilter): MaterialSubLotAggregateResult
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  " This equipment as role in a process segment is implemented by the physical asset. "
  physicalAsset(filter: PhysicalAssetFilter): PhysicalAsset
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " The test specification(s) used to evaluate this testable object. "
  specifiesTests(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  specifiesTestsAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " State Model Instances record the current state and history of state transitions "
  stateModelInstances(filter: StateModelInstanceFilter, first: Int, offset: Int, order: StateModelInstanceOrder): [StateModelInstance]
  ""
  stateModelInstancesAggregate(filter: StateModelInstanceFilter): StateModelInstanceAggregateResult
  " The test result records the evaluated criterion result attribute and property measurement for this testable object. "
  testResults(filter: TestResultFilter, first: Int, offset: Int, order: TestResultOrder): [TestResult]
  ""
  testResultsAggregate(filter: TestResultFilter): TestResultAggregateResult
  " The ID of this testable object ID(s) evaluated by the test specification. "
  testedBy(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  testedByAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " The icon for the menu in the libre admin UI menu. "
  uiSortIndex: Int
  " Link to all available versions for this entity. "
  versions(filter: EquipmentVersionFilter, first: Int, offset: Int, order: EquipmentVersionOrder): [EquipmentVersion]
  ""
  versionsAggregate(filter: EquipmentVersionFilter): EquipmentVersionAggregateResult
}
"""
An identification of an equipment capability used during a specified segment shall be presented as 
an equipment actual.

Equipment actual shall include the identification of the equipment used, usually identifying a 
specific piece of equipment.

Specific information about equipment actuals shall be presented in equipment actual properties.
"""
type EquipmentActual {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The related object(s) makes up part of this equipment actual as the whole. "
  children(filter: EquipmentActualFilter, first: Int, offset: Int, order: EquipmentActualOrder): [EquipmentActual]
  ""
  childrenAggregate(filter: EquipmentActualFilter): EquipmentActualAggregateResult
  " Defines a comment on equipment actual. "
  comments(filter: CommentFilter, first: Int, offset: Int, order: CommentOrder): [Comment]
  ""
  commentsAggregate(filter: CommentFilter): CommentAggregateResult
  " Contains additional information and descriptions of the equipment actual. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Identifies the associated equipment(s) actually used for a specific segment response. "
  equipment(filter: EquipmentFilter): Equipment
  " Identifies the associated equipment class(s) actually used for a specific segment response. "
  equipmentClass(filter: EquipmentClassFilter): EquipmentClass
  " Defines the actual use of the equipment class or equipment. "
  equipmentUse: String
  ""
  equipmentVersion(filter: EquipmentVersionFilter): EquipmentVersion
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " Defines a unique identification of a specific equipment actual. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " Job response this equipment actual relates to. "
  jobResponse(filter: JobResponseFilter): JobResponse
  " Identifies the operational location of the equipment specified by this equipment actual. "
  operationalLocation(filter: OperationalLocationFilter): OperationalLocation
  " The related object(s) this equipment actual makes up part of as the whole. "
  parent(filter: EquipmentActualFilter): EquipmentActual
  " The values in the equipment actual property are for this equipment actual. "
  properties(filter: EquipmentActualPropertyFilter, first: Int, offset: Int, order: EquipmentActualPropertyOrder): [EquipmentActualProperty]
  ""
  propertiesAggregate(filter: EquipmentActualPropertyFilter): EquipmentActualPropertyAggregateResult
  " Specifies the amount of equipment resources used in parent segment. "
  quantity: Float
  " Identifies the unit of measure of the quantity. "
  quantityUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The segment response containing in part this equipment actual. "
  segmentResponse(filter: SegmentResponseFilter): SegmentResponse
  " Can have electronic Signature. "
  signatures(filter: SignatureFilter, first: Int, offset: Int, order: SignatureOrder): [Signature]
  ""
  signaturesAggregate(filter: SignatureFilter): SignatureAggregateResult
  " Spatially defines the equipment specified by this equipment actual. "
  spatialDefinition(filter: SpatialDefinitionFilter): SpatialDefinition
  " The test result records the evaluated criterion result attribute and property measurement for this testable object. "
  testResults(filter: TestResultFilter, first: Int, offset: Int, order: TestResultOrder): [TestResult]
  ""
  testResultsAggregate(filter: TestResultFilter): TestResultAggregateResult
}
""
type EquipmentActualAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  equipmentUseMax: String
  ""
  equipmentUseMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
}
"""
Specific properties that are required for an equipment actual shall be presented as equipment actual 
properties. Equipment actual properties may contain nested equipment actual properties.
"""
type EquipmentActualProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The values in the child equipment actual property for this equipment actual. "
  children(filter: EquipmentActualPropertyFilter, first: Int, offset: Int, order: EquipmentActualPropertyOrder): [EquipmentActualProperty]
  ""
  childrenAggregate(filter: EquipmentActualPropertyFilter): EquipmentActualPropertyAggregateResult
  " Contains additional information and descriptions of the equipment actual property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The values for this equipment actual property in part are for the equipment actual. "
  equipmentActual(filter: EquipmentActualFilter): EquipmentActual!
  " A cross-model dependency to element in the equipment model. "
  equipmentClassProperty(filter: EquipmentClassPropertyFilter): EquipmentClassProperty
  " A cross-model dependency to element in the equipment model. "
  equipmentProperty(filter: EquipmentPropertyFilter): EquipmentProperty
  ""
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " An identification of the associated equipment property or equipment class property for a specific segment response. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  ""
  operationalLocation(filter: OperationalLocationFilter): OperationalLocation
  " The values in this child equipment actual property make up part of the equipment actual. "
  parent(filter: EquipmentActualPropertyFilter): EquipmentActualProperty
  " Specifies the amount of equipment resources used in parent segment. "
  quantity: Float!
  " Identifies the unit of measure of the quantity. "
  quantityUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  ""
  spatialDefinition(filter: SpatialDefinitionFilter): SpatialDefinition
  ""
  use: String
  " The value or set of values for the associated property. "
  value: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type EquipmentActualPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
  ""
  useMax: String
  ""
  useMin: String
  ""
  valueMax: String
  ""
  valueMin: String
}
""
type EquipmentAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  nextVersionMax: String
  ""
  nextVersionMin: String
  ""
  uiSortIndexAvg: Float
  ""
  uiSortIndexMax: Int
  ""
  uiSortIndexMin: Int
  ""
  uiSortIndexSum: Int
}
"""
The relationship between a physical asset and an equipment shall be presented as an equipment asset 
mapping. The equipment asset mapping records the time period when one equipment object and one physical 
asset object were associated.
"""
type EquipmentAssetMapping {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Additional information about the mapping element. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The ending time of the association. "
  endTime: DateTime
  " The equipment performing the manufacturing function. "
  equipment(filter: EquipmentFilter): Equipment!
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " An identification of the specific equipment asset mapping. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The physical asset that is associated with the equipment if the physical asset associated with a manufacturing function. "
  physicalAsset(filter: PhysicalAssetFilter): PhysicalAsset!
  " The starting time of the association. "
  startTime: DateTime
}
""
type EquipmentAssetMappingAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  endTimeMax: DateTime
  ""
  endTimeMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  startTimeMax: DateTime
  ""
  startTimeMin: DateTime
}
"""
A representation of a grouping of equipment with similar characteristics for a definite purpose such 
as manufacturing operations definition, scheduling, capability and performance shall be presented as 
an equipment class. Any piece of equipment may be a member of zero or more equipment classes. An 
equipment class may be defined as a derived class specialization of zero or more base equipment classes. 
An equipment class may be made up of zero or more equipment classes.

An equipment class may be tested by the evaluation of the test specification criteria in the test 
specification that references the evaluated property and may be recorded in an evaluated criterion 
result attribute in the test result.
"""
type EquipmentClass {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The currently active version. To find a version that was active at a point in time, use versions with a filter. "
  activeVersion(filter: EquipmentClassVersionFilter): EquipmentClassVersion
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The equipment actual this equipment class is associated with. "
  equipmentActual(filter: EquipmentActualFilter, first: Int, offset: Int, order: EquipmentActualOrder): [EquipmentActual]
  ""
  equipmentActualAggregate(filter: EquipmentActualFilter): EquipmentActualAggregateResult
  " The equipment requirements this equipment class is associated with. "
  equipmentRequirements(filter: EquipmentRequirementFilter, first: Int, offset: Int, order: EquipmentRequirementOrder): [EquipmentRequirement]
  ""
  equipmentRequirementsAggregate(filter: EquipmentRequirementFilter): EquipmentRequirementAggregateResult
  " The equipment specifications this equipment class is associated with. "
  equipmentSpecifications(filter: EquipmentSpecificationFilter, first: Int, offset: Int, order: EquipmentSpecificationOrder): [EquipmentSpecification]
  ""
  equipmentSpecificationsAggregate(filter: EquipmentSpecificationFilter): EquipmentSpecificationAggregateResult
  " The equipment objects support the equipment class property(s) associated with this equipment class. "
  equipmentVersions(filter: EquipmentVersionFilter, first: Int, offset: Int, order: EquipmentVersionOrder): [EquipmentVersion]
  ""
  equipmentVersionsAggregate(filter: EquipmentVersionFilter): EquipmentVersionAggregateResult
  " A unique identification of a specific equipment class, within the scope of the information exchanged. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  "Association relationship (Is A):"
  isIncludedIn(filter: EquipmentClassVersionFilter, first: Int, offset: Int, order: EquipmentClassVersionOrder): [EquipmentClassVersion]
  ""
  isIncludedInAggregate(filter: EquipmentClassVersionFilter): EquipmentClassVersionAggregateResult
  """
   Aggregation hierarchy (Has A):
  - This object can include the properties of zero or many objects of the same type
  - this object's properties can be included in zero or many objects of the same type
  - This relationship intent is to create subordinate classes can be contained within various superordinate classes
    in the same way that a component may be made up of subcomponents
  
  Example:
  
  MixerMechanism properties: HeadShape, Type
  InsulationSleeve properties:  Density, Colour
  HeatingElement properties:  Power, Length
  Boiler isMadeUpOf  [MixerMechanism, Heating Element] (and extends this with property TargetTemperature)
  InsulatedBoiler isMadeUpOf  [MixerMechanism, Heating Element, InsulationSleeve] (and extends this with property TargetTemperature)
  """
  isMadeUpOf(filter: EquipmentClassFilter, first: Int, offset: Int, order: EquipmentClassOrder): [EquipmentClass]
  ""
  isMadeUpOfAggregate(filter: EquipmentClassFilter): EquipmentClassAggregateResult
  " Aggregation hierarchy (Has A) "
  isPartOf(filter: EquipmentClassFilter, first: Int, offset: Int, order: EquipmentClassOrder): [EquipmentClass]
  ""
  isPartOfAggregate(filter: EquipmentClassFilter): EquipmentClassAggregateResult
  " The label is last node in the fully qualified name. "
  label: String!
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " The test specification(s) used to evaluate this testable object. "
  specifiesTests(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  specifiesTestsAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " The test result records the evaluated criterion result attribute and property measurement for this testable object. "
  testResults(filter: TestResultFilter, first: Int, offset: Int, order: TestResultOrder): [TestResult]
  ""
  testResultsAggregate(filter: TestResultFilter): TestResultAggregateResult
  " The ID of this testable object ID(s) evaluated by the test specification. "
  testedBy(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  testedByAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " The icon for the menu in the libre admin UI menu. "
  uiSortIndex: Int
  " Link to all available versions for this entity. "
  versions(filter: EquipmentClassVersionFilter, first: Int, offset: Int, order: EquipmentClassVersionOrder): [EquipmentClassVersion]
  ""
  versionsAggregate(filter: EquipmentClassVersionFilter): EquipmentClassVersionAggregateResult
}
""
type EquipmentClassAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  nextVersionMax: String
  ""
  nextVersionMin: String
  ""
  uiSortIndexAvg: Float
  ""
  uiSortIndexMax: Int
  ""
  uiSortIndexMin: Int
  ""
  uiSortIndexSum: Int
}
"""
Properties of an equipment class shall be presented as equipment class properties. Each may have zero 
or more recognized properties.

An equipment class property may be tested to the evaluated property in a test specification where the 
measured results may be recorded in a property measurement attribute in a test result. The measured 
results may also be evaluated to the test specification criteria in the test specification that references 
the evaluated property where they may be recorded in an evaluated criterion result attribute in the 
test result. Equipment class properties may contain nested equipment class properties.
"""
type EquipmentClassProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Defined how the Libre application treats the property binding logic. "
  bindingType: PropertyBindingType
  " The nested equipment class property(s) makes up part of this equipment class property as the whole. "
  children(filter: EquipmentClassPropertyFilter, first: Int, offset: Int, order: EquipmentClassPropertyOrder): [EquipmentClassProperty]
  ""
  childrenAggregate(filter: EquipmentClassPropertyFilter): EquipmentClassPropertyAggregateResult
  " This testable object property is measured to the test specification containing the evaluated property. "
  correspondsTo(filter: EvaluatedPropertyFilter): EvaluatedProperty
  " Additional information about the equipment class property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Equipment actual property(s) mapped to this equipment class property. "
  equipmentActualProperties(filter: EquipmentActualPropertyFilter, first: Int, offset: Int, order: EquipmentActualPropertyOrder): [EquipmentActualProperty]
  ""
  equipmentActualPropertiesAggregate(filter: EquipmentActualPropertyFilter): EquipmentActualPropertyAggregateResult
  " The equipment class defined in part by this equipment class property. "
  equipmentClassVersion(filter: EquipmentClassVersionFilter): EquipmentClassVersion!
  """
   If the parent equipment supports a equipment class, this equipment class property(s) is applied in the 
  equipment property(s). The equipment property maps to this corresponding equipment class property.
  """
  equipmentProperty(filter: EquipmentPropertyFilter): EquipmentProperty
  " Equipment requirement property(s) mapped to this equipment class property. "
  equipmentRequirementProperties(filter: EquipmentRequirementPropertyFilter, first: Int, offset: Int, order: EquipmentRequirementPropertyOrder): [EquipmentRequirementProperty]
  ""
  equipmentRequirementPropertiesAggregate(filter: EquipmentRequirementPropertyFilter): EquipmentRequirementPropertyAggregateResult
  " Equipment specification property(s) mapped to this equipment class property. "
  equipmentSpecificationProperties(filter: EquipmentSpecificationPropertyFilter, first: Int, offset: Int, order: EquipmentSpecificationPropertyOrder): [EquipmentSpecificationProperty]
  ""
  equipmentSpecificationPropertiesAggregate(filter: EquipmentSpecificationPropertyFilter): EquipmentSpecificationPropertyAggregateResult
  " An identification of the specific property. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " The equipment class property that this nested equipment class property makes up part of as the whole. "
  parent(filter: EquipmentClassPropertyFilter): EquipmentClassProperty
  " Defines the type of the property. "
  propertyType: Isa95PropertyType!
  " This EquipmentClassProperty records the measurement result for these PropertyMeasurement(s) "
  recordsMeasurementOf(filter: PropertyMeasurementFilter, first: Int, offset: Int, order: PropertyMeasurementOrder): [PropertyMeasurement]
  ""
  recordsMeasurementOfAggregate(filter: PropertyMeasurementFilter): PropertyMeasurementAggregateResult
  " The rule(s) potentially triggered by values in this property. "
  triggersRules(filter: RuleFilter, first: Int, offset: Int, order: RuleOrder): [Rule]
  ""
  triggersRulesAggregate(filter: RuleFilter): RuleAggregateResult
  " The value, set of values, or range of the property. "
  value: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type EquipmentClassPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  valueMax: String
  ""
  valueMin: String
}
"""
A representation of a grouping of equipment with similar characteristics for a definite purpose such
as manufacturing operations definition, scheduling, capability and performance shall be presented as
an equipment class. Any piece of equipment may be a member of zero or more equipment classes. An
equipment class may be defined as a derived class specialization of zero or more base equipment classes.
An equipment class may be made up of zero or more equipment classes.

An equipment class may be tested by the evaluation of the test specification criteria in the test
specification that references the evaluated property and may be recorded in an evaluated criterion
result attribute in the test result.
"""
type EquipmentClassVersion {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Additional information about the equipment class. "
  description: String
  " The display name in the libre admin UI menu. "
  displayName: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " The equipment class that this equipment class version relates to. "
  equipmentClass(filter: EquipmentClassFilter): EquipmentClass!
  " An identification of the level in the role-based equipment hierarchy. "
  equipmentLevel: EquipmentElementLevel
  " EquipmentVersions that are inheriting definition from this EquipmentClassVersion "
  equipmentVersions(filter: EquipmentVersionFilter, first: Int, offset: Int, order: EquipmentVersionOrder): [EquipmentVersion]
  ""
  equipmentVersionsAggregate(filter: EquipmentVersionFilter): EquipmentVersionAggregateResult
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of a specific equipment class version. "
  id: String!
  ""
  id_version: String!
  " Unique internal database identifier. "
  iid: ID!
  " The icon for the menu in the libre admin UI menu. "
  image: String
  " Association relationship (Is A):this class inherits the definition of the classes in the list"
  includesPropertiesOf(filter: EquipmentClassFilter, first: Int, offset: Int, order: EquipmentClassOrder): [EquipmentClass]
  ""
  includesPropertiesOfAggregate(filter: EquipmentClassFilter): EquipmentClassAggregateResult
  " The equipment class that uses this equipment class version as it's active version. "
  isActiveVersionOf(filter: EquipmentClassFilter): EquipmentClass
  " The equipment class property(s) of this equipment class. "
  properties(filter: EquipmentClassPropertyFilter, first: Int, offset: Int, order: EquipmentClassPropertyOrder): [EquipmentClassProperty]
  ""
  propertiesAggregate(filter: EquipmentClassPropertyFilter): EquipmentClassPropertyAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " A set of expressions that if evaluate to true trigger or create an instance of a workflow. "
  rules(filter: RuleFilter, first: Int, offset: Int, order: RuleOrder): [Rule]
  ""
  rulesAggregate(filter: RuleFilter): RuleAggregateResult
  " Finite State Models allow logic to be defined based on equipment state "
  stateModels(filter: StateModelDefinitionFilter, first: Int, offset: Int, order: StateModelDefinitionOrder): [StateModelDefinition]
  ""
  stateModelsAggregate(filter: StateModelDefinitionFilter): StateModelDefinitionAggregateResult
  " Monochrome icon for use in UI "
  uiMonochromeIcon: String
  " Colour setting for the monochrome icon. "
  uiMonochromeIconColour: String
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
type EquipmentClassVersionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  displayNameMax: String
  ""
  displayNameMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  imageMax: String
  ""
  imageMin: String
  ""
  uiMonochromeIconColourMax: String
  ""
  uiMonochromeIconColourMin: String
  ""
  uiMonochromeIconMax: String
  ""
  uiMonochromeIconMin: String
  ""
  versionMax: String
  ""
  versionMin: String
}
""
type EquipmentDataSource {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  ""
  dataSource(filter: DataSourceFilter): DataSource
  " The external data provider details "
  dataSourceVersion(filter: DataSourceVersionFilter): DataSourceVersion @deprecated(reason: "EquipmentDataSource should link to a DataSource rather tha")
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  ""
  equipmentVersion(filter: EquipmentVersionFilter): EquipmentVersion!
  " Unique internal database identifier. "
  iid: ID!
  " This JSONata transform resolves the data source topic id for the properties of the equipment"
  topicTemplate: String
}
""
type EquipmentDataSourceAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  topicTemplateMax: String
  ""
  topicTemplateMin: String
}
""
type EquipmentNameAlias {
  ""
  alias: String!
  ""
  equipment(filter: EquipmentFilter): Equipment!
  ""
  iid: ID!
  ""
  system: String!
}
""
type EquipmentNameAliasAggregateResult {
  ""
  aliasMax: String
  ""
  aliasMin: String
  ""
  count: Int
  ""
  systemMax: String
  ""
  systemMin: String
}
"""
Properties of equipment shall be presented as equipment properties. An equipment shall have zero or 
more equipment properties. These specify the current property values of the equipment for the associated 
equipment class property.

Equipment properties may include a unit of measure.

An equipment property may be tested to the evaluated property in a test specification where the measured 
results may be recorded in a property measurement attribute in a test result. The measured results may 
also be evaluated to the test specification criteria in the test specification that references the 
evaluated property where they may be recorded in an evaluated criterion result attribute in the test 
result. Equipment property(s) may contain nested equipment properties.
"""
type EquipmentProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Defined how the MES application treats the property. "
  bindingType: PropertyBindingType
  " The nested equipment property(s) makes up part of this equipment property as the whole. "
  children(filter: EquipmentPropertyFilter, first: Int, offset: Int, order: EquipmentPropertyOrder): [EquipmentProperty]
  ""
  childrenAggregate(filter: EquipmentPropertyFilter): EquipmentPropertyAggregateResult
  " This testable object property is measured to the test specification containing the evaluated property. "
  correspondsTo(filter: EvaluatedPropertyFilter): EvaluatedProperty
  " Additional information about the equipment property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Equipment actual property(s) mapped to this equipment class property. "
  equipmentActualProperties(filter: EquipmentActualPropertyFilter, first: Int, offset: Int, order: EquipmentActualPropertyOrder): [EquipmentActualProperty]
  ""
  equipmentActualPropertiesAggregate(filter: EquipmentActualPropertyFilter): EquipmentActualPropertyAggregateResult
  " If the parent equipment supports an equipment class, the equipment class property(s) is applied in this equipment property(s). This equipment property maps to the corresponding equipment class property. "
  equipmentClassProperty(filter: EquipmentClassPropertyFilter): EquipmentClassProperty
  " Equipment requirement property(s) mapped to this equipment class property. "
  equipmentRequirementProperties(filter: EquipmentRequirementPropertyFilter, first: Int, offset: Int, order: EquipmentRequirementPropertyOrder): [EquipmentRequirementProperty]
  ""
  equipmentRequirementPropertiesAggregate(filter: EquipmentRequirementPropertyFilter): EquipmentRequirementPropertyAggregateResult
  " Equipment specification property(s) mapped to this equipment class property. "
  equipmentSpecificationProperties(filter: EquipmentSpecificationPropertyFilter, first: Int, offset: Int, order: EquipmentSpecificationPropertyOrder): [EquipmentSpecificationProperty]
  ""
  equipmentSpecificationPropertiesAggregate(filter: EquipmentSpecificationPropertyFilter): EquipmentSpecificationPropertyAggregateResult
  " These equipment property values in part for the equipment. "
  equipmentVersion(filter: EquipmentVersionFilter): EquipmentVersion!
  " An identification of the specific property. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " The equipment property that this nested equipment property makes up part of as the whole. "
  parent(filter: EquipmentPropertyFilter): EquipmentProperty
  " This EquipmentProperty records the measurement result for these PropertyMeasurement(s) "
  recordsMeasurementOf(filter: PropertyMeasurementFilter, first: Int, offset: Int, order: PropertyMeasurementOrder): [PropertyMeasurement]
  ""
  recordsMeasurementOfAggregate(filter: PropertyMeasurementFilter): PropertyMeasurementAggregateResult
  " The value, set of values, or range of the property. "
  value: String
  " The lower limit that would trigger an alert. "
  valueLowerControlLimit: Float
  " The lower limit that impacts the quality of the product. "
  valueLowerSpecLimit: Float
  " Target value. "
  valueSetPoint: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The upper limit that would trigger an alert. "
  valueUpperControlLimit: Float
  " The upper limit that impacts the quality of the product. "
  valueUpperSpecLimit: Float
}
""
type EquipmentPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  valueLowerControlLimitAvg: Float
  ""
  valueLowerControlLimitMax: Float
  ""
  valueLowerControlLimitMin: Float
  ""
  valueLowerControlLimitSum: Float
  ""
  valueLowerSpecLimitAvg: Float
  ""
  valueLowerSpecLimitMax: Float
  ""
  valueLowerSpecLimitMin: Float
  ""
  valueLowerSpecLimitSum: Float
  ""
  valueMax: String
  ""
  valueMin: String
  ""
  valueSetPointMax: String
  ""
  valueSetPointMin: String
  ""
  valueUpperControlLimitAvg: Float
  ""
  valueUpperControlLimitMax: Float
  ""
  valueUpperControlLimitMin: Float
  ""
  valueUpperControlLimitSum: Float
  ""
  valueUpperSpecLimitAvg: Float
  ""
  valueUpperSpecLimitMax: Float
  ""
  valueUpperSpecLimitMin: Float
  ""
  valueUpperSpecLimitSum: Float
}
" Allows inherited property to be overridden on the instance. "
type EquipmentPropertyOverride {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  ""
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The data source reference for a bound property type. "
  address: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The equipment thats property is being overriden. "
  equipmentVersions(filter: EquipmentVersionFilter): EquipmentVersion!
  " Used for calculated property types. "
  expression: String
  " An identification of the specific property. "
  id: String!
  " Determines if this property is not relevent on the instance. "
  ignore: Boolean
  " Unique internal database identifier. "
  iid: ID!
  " The property to override the preexisting property with. "
  propertyLabel: String!
  " Determines if changes to values should be stored over time. "
  storeHistory: Boolean
  " Used for static property types. "
  value: String
}
""
type EquipmentPropertyOverrideAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  addressMax: String
  ""
  addressMin: String
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  expressionMax: String
  ""
  expressionMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  propertyLabelMax: String
  ""
  propertyLabelMin: String
  ""
  valueMax: String
  ""
  valueMin: String
}
"""
The identification of the number, type, duration, and scheduling of specific equipment and equipment 
classifications or equipment constraints needed to support the current operations request shall be 
presented as an equipment requirement. The operations request may include one or more equipment 
requirements. Requirements can be as generic as materials of construction, or as specific as a particular 
piece of equipment. Each of these requirements shall be an instance of an equipment requirement.

Properties of the equipment requirement shall be presented as equipment requirement properties. 

Each equipment requirement identifies a general class of equipment (such as reactor vessels), a specific 
class of equipment (such as isothermal reactors), or a specific piece or set of equipment (such as 
isothermal reactor #7). The specific requirements on the equipment, or equipment class are listed as 
equipment requirement property objects. 

An equipment requirement shall include the identification of the equipment needed, such as milling 
machine; and the quantity of equipment needed. Specific elements associated with each equipment 
requirement may be included in one or more equipment requirement properties.
"""
type EquipmentRequirement {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The related object(s) makes up part of this equipment requirement as the whole. "
  children(filter: EquipmentRequirementFilter, first: Int, offset: Int, order: EquipmentRequirementOrder): [EquipmentRequirement]
  ""
  childrenAggregate(filter: EquipmentRequirementFilter): EquipmentRequirementAggregateResult
  " Defines a comment on the equipment requirement. "
  comments(filter: CommentFilter, first: Int, offset: Int, order: CommentOrder): [Comment]
  ""
  commentsAggregate(filter: CommentFilter): CommentAggregateResult
  " Contains additional information and descriptions of the equipment requirement. "
  description: String
  " Identifies the associated equipment of the equipment requirement for a specific segment requirement. "
  equipment(filter: EquipmentFilter): Equipment
  " Identifies the associated equipment class(s) of the equipment requirement for a specific segment requirement. "
  equipmentClass(filter: EquipmentClassFilter): EquipmentClass
  " A definition of the level of the associated element of the equipment model. "
  equipmentLevel: EquipmentElementLevel
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " Defines a unique identification of a specific equipment requirement. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " Job order associated with this equipment requirement "
  jobOrder(filter: JobOrderFilter): JobOrder
  " Identifies the operational location of the equipment specified by this equipment requirement. "
  operationalLocation(filter: OperationalLocationFilter): OperationalLocation
  " The related object makes this equipment requirement up part of as the whole. "
  parent(filter: EquipmentRequirementFilter): EquipmentRequirement
  " The values in the equipment requirement property are for this equipment requirement. "
  properties(filter: EquipmentRequirementPropertyFilter, first: Int, offset: Int, order: EquipmentRequirementPropertyOrder): [EquipmentRequirementProperty]
  ""
  propertiesAggregate(filter: EquipmentRequirementPropertyFilter): EquipmentRequirementPropertyAggregateResult
  " Specifies the amount of equipment resources required for the parent segment. "
  quantity: Float
  " The unit of measure of the associated quantity. "
  quantityUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The segment requirement defined in part by this equipment requirement. "
  segmentRequirement(filter: SegmentRequirementFilter): SegmentRequirement
  " Can have electronic Signature. "
  signatures(filter: SignatureFilter, first: Int, offset: Int, order: SignatureOrder): [Signature]
  ""
  signaturesAggregate(filter: SignatureFilter): SignatureAggregateResult
  " The test specification(s) used to evaluate this testable object. "
  specifiesTests(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  specifiesTestsAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " The test result records the evaluated criterion result attribute and property measurement for this testable object. "
  testResults(filter: TestResultFilter, first: Int, offset: Int, order: TestResultOrder): [TestResult]
  ""
  testResultsAggregate(filter: TestResultFilter): TestResultAggregateResult
  " The ID of this testable object ID(s) evaluated by the test specification. "
  testedBy(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  testedByAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " Defines the expected use of the equipment class or equipment. "
  use: String
}
""
type EquipmentRequirementAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
  ""
  useMax: String
  ""
  useMin: String
}
"""
Specific properties that are required for equipment requirements shall be presented as equipment 
requirement properties. Equipment requirement properties may contain nested equipment requirement 
properties.
"""
type EquipmentRequirementProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The values in the child equipment requirement property for this equipment requirement. "
  children(filter: EquipmentRequirementPropertyFilter, first: Int, offset: Int, order: EquipmentRequirementPropertyOrder): [EquipmentRequirementProperty]
  ""
  childrenAggregate(filter: EquipmentRequirementPropertyFilter): EquipmentRequirementPropertyAggregateResult
  " Contains additional information and descriptions of the equipment requirement property definition. "
  description: String
  " A cross-model dependency to element in the equipment model. "
  equipmentClassProperty(filter: EquipmentClassPropertyFilter): EquipmentClassProperty
  " A cross-model dependency to element in the equipment model. "
  equipmentProperty(filter: EquipmentPropertyFilter): EquipmentProperty
  " The values for this equipment requirement property in part are for the equipment requirement. "
  equipmentRequirement(filter: EquipmentRequirementFilter): EquipmentRequirement!
  " An identification of the associated equipment property or equipment class property for a specific segment requirement. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " The equipment requirement property this entity is part of. "
  parent(filter: EquipmentRequirementPropertyFilter): EquipmentRequirementProperty
  " Specifies the amount of equipment requirement property required for the parent equipment requirement. "
  quantity: Float
  " The unit of measure of the associated quantity. "
  quantityUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The value, set of values, or range of the associated property. "
  value: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type EquipmentRequirementPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
  ""
  valueMax: String
  ""
  valueMin: String
}
"""
An identification, reference, or correspondence to an equipment capability shall be presented as an 
equipment specification. An equipment specification may specify either an equipment class or a piece 
of equipment. An equipment specification identifies the specific equipment capability that is associated 
with the segment. Specific elements associated with an equipment specification may be included in one 
or more equipment specification properties.
"""
type EquipmentSpecification {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The related object(s) makes up part of this equipment specification as the whole. "
  children(filter: EquipmentSpecificationFilter, first: Int, offset: Int, order: EquipmentSpecificationOrder): [EquipmentSpecification]
  ""
  childrenAggregate(filter: EquipmentSpecificationFilter): EquipmentSpecificationAggregateResult
  " Contains additional information of the equipment specification. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " A cross-model association to element in the equipment model. "
  equipment(filter: EquipmentFilter): Equipment
  " A cross-model association to element in the equipment model. "
  equipmentClass(filter: EquipmentClassFilter): EquipmentClass
  " Defines the expected use of the equipment class or equipment in the context of the operations segment. "
  equipmentUse: String
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of a specific equipment segment specification. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " Identifies the operational location of the equipment resource(s) specified by this equipment specification. "
  operationalLocation(filter: OperationalLocationFilter): OperationalLocation
  " The operations segment that is in part defined by this equipment specification. "
  operationsSegment(filter: OperationsSegmentFilter): OperationsSegment
  " The related object that this this equipment specification makes up part of as the whole. "
  parent(filter: EquipmentSpecificationFilter): EquipmentSpecification
  " The process segment version that is in part defined by this equipment specification. "
  processSegmentVersion(filter: ProcessSegmentVersionFilter): ProcessSegmentVersion
  " The equipment specification property(s) of this equipment specification. "
  properties(filter: EquipmentSpecificationPropertyFilter, first: Int, offset: Int, order: EquipmentSpecificationPropertyOrder): [EquipmentSpecificationProperty]
  ""
  propertiesAggregate(filter: EquipmentSpecificationPropertyFilter): EquipmentSpecificationPropertyAggregateResult
  " Specifies the amount of equipment resources required for the parent segment. "
  quantity: Float
  " The unit of measure of the associated quantity. "
  quantityUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " Spatially defines the equipment specified by this equipment specification. "
  spatialDefinition(filter: SpatialDefinitionFilter): SpatialDefinition
  " The test specification(s) used to evaluate this testable object. "
  specifiesTests(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  specifiesTestsAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " The test result records the evaluated criterion result attribute and property measurement for this testable object. "
  testResults(filter: TestResultFilter, first: Int, offset: Int, order: TestResultOrder): [TestResult]
  ""
  testResultsAggregate(filter: TestResultFilter): TestResultAggregateResult
  " The ID of this testable object ID(s) evaluated by the test specification. "
  testedBy(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  testedByAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " The resources and instructions required to perform a unit of work for a specific job order. "
  workDirective(filter: WorkDirectiveFilter): WorkDirective
  " The resources and instructions required to perform a unit of work without reference to a specific job order. "
  workMaster(filter: WorkMasterFilter): WorkMaster
}
""
type EquipmentSpecificationAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  equipmentUseMax: String
  ""
  equipmentUseMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
}
"""
Specific properties that are required for equipment specifications shall be presented as equipment 
specification properties. Equipment specification properties may contain nested equipment specification 
properties.
"""
type EquipmentSpecificationProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " This child equipment specification property(s) of the parent equipment specification property. "
  children(filter: EquipmentSpecificationPropertyFilter, first: Int, offset: Int, order: EquipmentSpecificationPropertyOrder): [EquipmentSpecificationProperty]
  ""
  childrenAggregate(filter: EquipmentSpecificationPropertyFilter): EquipmentSpecificationPropertyAggregateResult
  " Contains additional information and descriptions of the equipment specification property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " A cross-model dependency to element in the equipment model. "
  equipmentClassProperty(filter: EquipmentClassPropertyFilter): EquipmentClassProperty
  " A cross-model dependency to element in the equipment model. "
  equipmentProperty(filter: EquipmentPropertyFilter): EquipmentProperty
  " The equipment specification property(s) of this equipment specification property. "
  equipmentSpecification(filter: EquipmentSpecificationFilter): EquipmentSpecification!
  " An identification of a property of the associated equipment property or equipment class property for a specific segment. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " This parent equipment specification property of this parent equipment specification property. "
  parent(filter: EquipmentSpecificationPropertyFilter): EquipmentSpecificationProperty
  " Specifies the amount of equipment resources required for the parent segment. "
  quantity: Float
  " The unit of measure of the associated quantity. "
  quantityUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The value, set of values, or range of the property. "
  value: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type EquipmentSpecificationPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
  ""
  valueMax: String
  ""
  valueMin: String
}
"""
A representation of a version of the elements of the equipment hierarchy model shown in ISA 95.00.01 shall be presented
as equipment. Equipment may be a listing of any of the following: enterprise, site, area, work center, work
unit, process cell, unit, production line, production unit, work cell, storage zone, and storage unit.

Equipment may be tested by the execution of the test specification criteria in the test specification
that references the evaluated property and may be recorded in an evaluated criterion result attribute
in the test result.

Equipment may be made up of other equipment, as presented in the equipment hierarchy model.
"""
type EquipmentVersion {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " list of external servers that can provide property values "
  dataSources(filter: EquipmentDataSourceFilter, first: Int, offset: Int, order: EquipmentDataSourceOrder): [EquipmentDataSource]
  ""
  dataSourcesAggregate(filter: EquipmentDataSourceFilter): EquipmentDataSourceAggregateResult
  " Additional information about the equipment. "
  description: String
  " The display name in the libre admin UI menu. "
  displayName: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " The equipment that this equipment version relates to. "
  equipment(filter: EquipmentFilter): Equipment!
  " The equipment actual(s) this equipment is associated with. "
  equipmentActual(filter: EquipmentActualFilter, first: Int, offset: Int, order: EquipmentActualOrder): [EquipmentActual]
  ""
  equipmentActualAggregate(filter: EquipmentActualFilter): EquipmentActualAggregateResult
  " This equipment supports the equipment class property(s) associated with the equipment class. "
  equipmentClassVersions(filter: EquipmentClassVersionFilter, first: Int, offset: Int, order: EquipmentClassVersionOrder): [EquipmentClassVersion]
  ""
  equipmentClassVersionsAggregate(filter: EquipmentClassVersionFilter): EquipmentClassVersionAggregateResult
  " This equipment supports the equipment class property(s) associated with the equipment class. "
  equipmentClasses(filter: EquipmentClassFilter, first: Int, offset: Int, order: EquipmentClassOrder): [EquipmentClass]
  ""
  equipmentClassesAggregate(filter: EquipmentClassFilter): EquipmentClassAggregateResult
  " An identification of the level in the role-based equipment hierarchy. "
  equipmentLevel: EquipmentElementLevel
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of a specific piece of equipment, within the scope of the information exchanged. "
  id: String!
  ""
  id_version: String!
  " Unique internal database identifier. "
  iid: ID!
  " The equipment that uses this equipment version as it's active version. "
  isActiveVersionOf(filter: EquipmentFilter): Equipment
  " Identifies the operational location of the equipment. "
  operationalLocation(filter: OperationalLocationFilter): OperationalLocation
  " The equipment property values of this equipment. "
  properties(filter: EquipmentPropertyFilter, first: Int, offset: Int, order: EquipmentPropertyOrder): [EquipmentProperty]
  ""
  propertiesAggregate(filter: EquipmentPropertyFilter): EquipmentPropertyAggregateResult
  " binding configuration for data source topic "
  propertyNameAliases(filter: PropertyNameAliasFilter, first: Int, offset: Int, order: PropertyNameAliasOrder): [PropertyNameAlias]
  ""
  propertyNameAliasesAggregate(filter: PropertyNameAliasFilter): PropertyNameAliasAggregateResult
  " Overrides of inherited properties on this equipment instance. "
  propertyOverrides(filter: EquipmentPropertyOverrideFilter, first: Int, offset: Int, order: EquipmentPropertyOverrideOrder): [EquipmentPropertyOverride]
  ""
  propertyOverridesAggregate(filter: EquipmentPropertyOverrideFilter): EquipmentPropertyOverrideAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " Spatially defines the equipment as a zero-dimensional point. "
  spatialDefinition(filter: SpatialDefinitionFilter): SpatialDefinition
  " state models allow logic to be defined based on equipment state "
  stateModels(filter: StateModelDefinitionFilter, first: Int, offset: Int, order: StateModelDefinitionOrder): [StateModelDefinition]
  ""
  stateModelsAggregate(filter: StateModelDefinitionFilter): StateModelDefinitionAggregateResult
  " The time zone this equipment is located in. "
  timeZoneName: String
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
  " The definition of working time for this equipment. "
  workCalendar(filter: WorkCalendarFilter): WorkCalendar
}
""
type EquipmentVersionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  displayNameMax: String
  ""
  displayNameMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  timeZoneNameMax: String
  ""
  timeZoneNameMin: String
  ""
  versionMax: String
  ""
  versionMin: String
}
"""
The evaluated property object identifies the set of testable object / testable object property pairs 
to be measured and the applicable test method to obtain a property measurement.
"""
type EvaluatedProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " This test specification criteria used to evaluate the evaluated property of a testable object property. "
  criteria(filter: TestSpecificationCriteriaFilter, first: Int, offset: Int, order: TestSpecificationCriteriaOrder): [TestSpecificationCriteria]
  ""
  criteriaAggregate(filter: TestSpecificationCriteriaFilter): TestSpecificationCriteriaAggregateResult
  " Description of the test specification criteria. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The EquipmentClassProperty ID which is to be measured by this test specification. "
  equipmentClassProperty(filter: EquipmentClassPropertyFilter, first: Int, offset: Int, order: EquipmentClassPropertyOrder): [EquipmentClassProperty]
  ""
  equipmentClassPropertyAggregate(filter: EquipmentClassPropertyFilter): EquipmentClassPropertyAggregateResult
  " The EquipmentProperty ID which is to be measured by this test specification. "
  equipmentProperty(filter: EquipmentPropertyFilter, first: Int, offset: Int, order: EquipmentPropertyOrder): [EquipmentProperty]
  ""
  equipmentPropertyAggregate(filter: EquipmentPropertyFilter): EquipmentPropertyAggregateResult
  " Identification of the evaluated property. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " The MaterialClassProperty ID which is to be measured by this test specification. "
  materialClassProperty(filter: MaterialClassPropertyFilter, first: Int, offset: Int, order: MaterialClassPropertyOrder): [MaterialClassProperty]
  ""
  materialClassPropertyAggregate(filter: MaterialClassPropertyFilter): MaterialClassPropertyAggregateResult
  " The MaterialDefinitionProperty ID which is to be measured by this test specification. "
  materialDefinitionProperty(filter: MaterialDefinitionPropertyFilter, first: Int, offset: Int, order: MaterialDefinitionPropertyOrder): [MaterialDefinitionProperty]
  ""
  materialDefinitionPropertyAggregate(filter: MaterialDefinitionPropertyFilter): MaterialDefinitionPropertyAggregateResult
  " The MaterialLotProperty ID which is to be measured by this test specification. "
  materialLotProperty(filter: MaterialLotPropertyFilter, first: Int, offset: Int, order: MaterialLotPropertyOrder): [MaterialLotProperty]
  ""
  materialLotPropertyAggregate(filter: MaterialLotPropertyFilter): MaterialLotPropertyAggregateResult
  " The PersonProperty ID which is to be measured by this test specification. "
  personProperty(filter: PersonPropertyFilter, first: Int, offset: Int, order: PersonPropertyOrder): [PersonProperty]
  ""
  personPropertyAggregate(filter: PersonPropertyFilter): PersonPropertyAggregateResult
  " The PersonnelClassProperty ID which is to be measured by this test specification. "
  personnelClassProperty(filter: PersonnelClassPropertyFilter, first: Int, offset: Int, order: PersonnelClassPropertyOrder): [PersonnelClassProperty]
  ""
  personnelClassPropertyAggregate(filter: PersonnelClassPropertyFilter): PersonnelClassPropertyAggregateResult
  " The PhysicalAssetClassProperty ID which is to be measured by this test specification. "
  physicalAssetClassProperty(filter: PhysicalAssetClassPropertyFilter, first: Int, offset: Int, order: PhysicalAssetClassPropertyOrder): [PhysicalAssetClassProperty]
  ""
  physicalAssetClassPropertyAggregate(filter: PhysicalAssetClassPropertyFilter): PhysicalAssetClassPropertyAggregateResult
  " The PhysicalAssetProperty ID which is to be measured by this test specification. "
  physicalAssetProperty(filter: PhysicalAssetPropertyFilter, first: Int, offset: Int, order: PhysicalAssetPropertyOrder): [PhysicalAssetProperty]
  ""
  physicalAssetPropertyAggregate(filter: PhysicalAssetPropertyFilter): PhysicalAssetPropertyAggregateResult
  " This evaluated property(s) is measured and evaluated by the test specification. "
  testSpecification(filter: TestSpecificationFilter): TestSpecification!
  " The work directive this evaluated property is measured with method of. "
  workDirective(filter: WorkDirectiveFilter): WorkDirective
  " The work master this evaluated property is measured with method of. "
  workMaster(filter: WorkMasterFilter): WorkMaster
}
""
type EvaluatedPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
}
"""
ISA88.00.04 Event

An event object shall be represented by the model in Figure 11. An event is a discrete occurrence in 
time. Event objects document occurrences and can be stored in a batch production record. This is usually 
done when an event has meaning or significance to the manufacture of a product.

There are different types of event objects. Each event is identified by an event type. Within an event 
type there are different sub-types. Each event type and subtype may use a different subset of the event 
attributes.

Any event may contain zero or more user-defined attributes. Attributes not included in the event object 
may be defined in user-defined attribute objects. This may be required when specific systems generate 
event content not covered by the standard event object.

Event objects may be associated with other events. For example, a process signal may generate a high 
alarm, and then a high-high alarm before the high alarm is acknowledged. Then the high-high alarm may 
be acknowledged. All of the event objects in this scenario could be associated with each other to make 
the information more meaningful than a set of three unassociated event objects with some common data 
would be.
"""
type Event {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " The Alarm Events to be triggered "
  alarmEvents(filter: AlarmEventFilter, first: Int, offset: Int, order: AlarmEventOrder): [AlarmEvent]
  ""
  alarmEventsAggregate(filter: AlarmEventFilter): AlarmEventAggregateResult
  " Attribute "
  attribute: String
  " The use category of the event. "
  category: String
  " Defines a comment on the event. "
  comments(filter: CommentFilter, first: Int, offset: Int, order: CommentOrder): [Comment]
  ""
  commentsAggregate(filter: CommentFilter): CommentAggregateResult
  " Unique identification of the computer where the event originated. "
  computerID: String
  " The date and time an Event is effective from "
  effectiveDateTime: DateTime
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Identification of the equipment associated with the event. "
  equipment(filter: EquipmentFilter): Equipment
  " The event associations originating from this event. "
  eventAssociationsFrom(filter: EventAssociationFilter, first: Int, offset: Int, order: EventAssociationOrder): [EventAssociation]
  ""
  eventAssociationsFromAggregate(filter: EventAssociationFilter): EventAssociationAggregateResult
  " The event associations related to this event. "
  eventAssociationsTo(filter: EventAssociationFilter, first: Int, offset: Int, order: EventAssociationOrder): [EventAssociation]
  ""
  eventAssociationsToAggregate(filter: EventAssociationFilter): EventAssociationAggregateResult
  " The event property(s) of the event. "
  eventProperties(filter: EventPropertyFilter, first: Int, offset: Int, order: EventPropertyOrder): [EventProperty]
  ""
  eventPropertiesAggregate(filter: EventPropertyFilter): EventPropertyAggregateResult
  " Defines the type of the event. "
  eventType(filter: EventTypeFilter): EventType
  " Unique internal database identifier. "
  iid: ID!
  " The Job Response associated with this Event "
  jobResponse(filter: JobResponseFilter): JobResponse
  " The Job Response Data associated with this Event "
  jobResponseData(filter: JobResponseDataFilter): JobResponseData
  " The Material Lot associated with this Event "
  materialLot(filter: MaterialLotFilter): MaterialLot
  " The Material Sub Lot associated with this Event "
  materialSubLot(filter: MaterialSubLotFilter): MaterialSubLot
  " Text describing the event. "
  messageText: String
  " The Person associated with this Event "
  person(filter: PersonFilter): Person
  " Identification of the person associated with the event. "
  personID: String
  " The Physical Asset associated with this Event "
  physicalAsset(filter: PhysicalAssetFilter): PhysicalAsset
  " The value prior to the change documented by the event. "
  previousValue: String
  """
  Reference to a procedural element. This maps to an element of the procedural hierarchy, such as a 
  phase in a control recipe, or an operation in a control recipe.
  """
  proceduralElementReference: String
  " Associated OperationsRecordEntries from Operations Events "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " The date and time an Event was last triggered "
  recordedDateTime: DateTime
  " Can have electronic Signature. "
  signatures(filter: SignatureFilter, first: Int, offset: Int, order: SignatureOrder): [Signature]
  ""
  signaturesAggregate(filter: SignatureFilter): SignatureAggregateResult
  " Value associated with the event. "
  value: String
  " The Work Response associated with this Event "
  workResponse(filter: WorkResponseFilter): WorkResponse
}
""
type EventAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  attributeMax: String
  ""
  attributeMin: String
  ""
  categoryMax: String
  ""
  categoryMin: String
  ""
  computerIDMax: String
  ""
  computerIDMin: String
  ""
  count: Int
  ""
  effectiveDateTimeMax: DateTime
  ""
  effectiveDateTimeMin: DateTime
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  messageTextMax: String
  ""
  messageTextMin: String
  ""
  personIDMax: String
  ""
  personIDMin: String
  ""
  previousValueMax: String
  ""
  previousValueMin: String
  ""
  proceduralElementReferenceMax: String
  ""
  proceduralElementReferenceMin: String
  ""
  recordedDateTimeMax: DateTime
  ""
  recordedDateTimeMin: DateTime
  ""
  valueMax: String
  ""
  valueMin: String
}
"""
ISA88.00.04 Event Association
Event objects may be associated to other event objects, such as through a time-based or equipmentbased relationship. Event association objects contain the associations. 
"""
type EventAssociation {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " A description of the event type. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The event from which the event association is formed. "
  from(filter: EventFilter): Event!
  " A unique identification of a specific event type. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The event to which the event association is formed. "
  to(filter: EventFilter): Event!
  " An identification of the version of the event association. "
  version: String
}
""
type EventAssociationAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  versionMax: String
  ""
  versionMin: String
}
"""
ISA88.00.04 Event Property
Referred to as User-defined attribute in the ISA88.00.04 Standard
The user-defined attribute element is used to include addition information about an event, when the event
information cannot be represented in the event object. 
"""
type EventProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The nested event properties makes up part of this event property as the whole. "
  children(filter: EventPropertyFilter, first: Int, offset: Int, order: EventPropertyOrder): [EventProperty]
  ""
  childrenAggregate(filter: EventPropertyFilter): EventPropertyAggregateResult
  " A description of the event type. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The event assocated with the event property. "
  event(filter: EventFilter): Event
  " A unique identification of a specific event type. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " Human friendly alternative identifier "
  label: String
  " This nested event property makes up part of the event property as the whole. "
  parent(filter: EventPropertyFilter): EventProperty
  " The value, set of values, or range of the property. "
  value: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
  " An identification of the version of the event property. "
  version: String
}
""
type EventPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  valueMax: String
  ""
  valueMin: String
  ""
  versionMax: String
  ""
  versionMin: String
}
"""
ISA88.00.04 Event Subtype
Within an event type there are different sub-types. Each event type and subtype may use a different subset of the event
attributes. 
"""
type EventSubtype {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The nested event subtypes(s) makes up part of this event subtype as the whole. "
  children(filter: EventSubtypeFilter, first: Int, offset: Int, order: EventSubtypeOrder): [EventSubtype]
  ""
  childrenAggregate(filter: EventSubtypeFilter): EventSubtypeAggregateResult
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The event type associated with the event subtype. "
  eventTypes(filter: EventTypeFilter, first: Int, offset: Int, order: EventTypeOrder): [EventType!]
  ""
  eventTypesAggregate(filter: EventTypeFilter): EventTypeAggregateResult
  " A unique identification of a specific event type. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " Human friendly alternative identifier "
  label: String!
  " This nested event subtype makes up part of the event subtype as the whole. "
  parent(filter: EventSubtypeFilter): EventSubtype
  " An identification of the version of the event subtype. "
  version: String
}
""
type EventSubtypeAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  versionMax: String
  ""
  versionMin: String
}
"""
ISA88.00.04 Event Type
There are different types of event objects. Each event is identified by an event type. Within an event
type there are different sub-types. Each event type and subtype may use a different subset of the event
attributes. 
"""
type EventType {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The nested event types(s) makes up part of this event type as the whole. "
  children(filter: EventTypeFilter, first: Int, offset: Int, order: EventTypeOrder): [EventType]
  ""
  childrenAggregate(filter: EventTypeFilter): EventTypeAggregateResult
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The event subtype associated with the event type. "
  eventSubtypes(filter: EventSubtypeFilter, first: Int, offset: Int, order: EventSubtypeOrder): [EventSubtype]
  ""
  eventSubtypesAggregate(filter: EventSubtypeFilter): EventSubtypeAggregateResult
  " The event associated with the event type. "
  events(filter: EventFilter, first: Int, offset: Int, order: EventOrder): [Event]
  ""
  eventsAggregate(filter: EventFilter): EventAggregateResult
  " A unique identification of a specific event type. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " Human friendly alternative identifier "
  label: String!
  " This nested event type makes up part of the event type as the whole. "
  parent(filter: EventTypeFilter): EventType
  " An identification of the version of the event type. "
  version: String
}
""
type EventTypeAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  versionMax: String
  ""
  versionMin: String
}
"""
Form: Extension of ISA95 Standard to accommodate BPMN2.0. User actions within 
BPMN require forms to allow the action to be completed. Forms are specified 
with a JsonSchema and a UI Schema.
"""
type Form {
  ""
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  ""
  jsonSchema: String
  ""
  name: String
  ""
  uiSchema: String
  ""
  workflowSpecificationNodes(filter: WorkflowSpecificationNodeFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeOrder): [WorkflowSpecificationNode]
  ""
  workflowSpecificationNodesAggregate(filter: WorkflowSpecificationNodeFilter): WorkflowSpecificationNodeAggregateResult
}
""
type FormAggregateResult {
  ""
  count: Int
  ""
  idMax: String
  ""
  idMin: String
  ""
  jsonSchemaMax: String
  ""
  jsonSchemaMin: String
  ""
  nameMax: String
  ""
  nameMin: String
  ""
  uiSchemaMax: String
  ""
  uiSchemaMin: String
}
"""
The Hierarchy Scope defines where the exchanged information fits within the 
role based equipment hierarchy. It defines the scope of the exchanged 
information, such as a site or area for which the information is relevant. The 
Hierarchy scope identifies the associated instance in the role-based equipment 
hierarchy.
"""
type HierarchyScope {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " The child hierarchy scope(s) contained within this hierarchy scope. "
  children(filter: HierarchyScopeFilter, first: Int, offset: Int, order: HierarchyScopeOrder): [HierarchyScope]
  ""
  childrenAggregate(filter: HierarchyScopeFilter): HierarchyScopeAggregateResult
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Identification of the equipment level if the equipment element is defined. "
  equipmentLevel: EquipmentElementLevel
  " The equipment(s) associated with this hierarchy scope. "
  equipmentVersions(filter: EquipmentVersionFilter, first: Int, offset: Int, order: EquipmentVersionOrder): [EquipmentVersion]
  ""
  equipmentVersionsAggregate(filter: EquipmentVersionFilter): EquipmentVersionAggregateResult
  " An identification of the specific property. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " The material class(s) associated with this hierarchy scope. "
  materialClassVersions(filter: MaterialClassVersionFilter, first: Int, offset: Int, order: MaterialClassVersionOrder): [MaterialClassVersion]
  ""
  materialClassVersionsAggregate(filter: MaterialClassVersionFilter): MaterialClassVersionAggregateResult
  " The material class(s) associated with this hierarchy scope. "
  materialDefinitionVersions(filter: MaterialDefinitionVersionFilter, first: Int, offset: Int, order: MaterialDefinitionVersionOrder): [MaterialDefinitionVersion]
  ""
  materialDefinitionVersionsAggregate(filter: MaterialDefinitionVersionFilter): MaterialDefinitionVersionAggregateResult
  " The material class(s) associated with this hierarchy scope. "
  materialLots(filter: MaterialLotFilter, first: Int, offset: Int, order: MaterialLotOrder): [MaterialLot]
  ""
  materialLotsAggregate(filter: MaterialLotFilter): MaterialLotAggregateResult
  " The material class(s) associated with this hierarchy scope. "
  materialSubLots(filter: MaterialSubLotFilter, first: Int, offset: Int, order: MaterialSubLotOrder): [MaterialSubLot]
  ""
  materialSubLotsAggregate(filter: MaterialSubLotFilter): MaterialSubLotAggregateResult
  " The parent hierarchy scope(s) for this hierarchy scope. "
  parent(filter: HierarchyScopeFilter): HierarchyScope
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
}
""
type HierarchyScopeAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
}
""
type InformationObject {
  ""
  Other: String
  ""
  comment(filter: CommentFilter): Comment
  ""
  dataSource(filter: DataSourceFilter): DataSource
  ""
  dataSourceVersion(filter: DataSourceVersionFilter): DataSourceVersion
  ""
  equipment(filter: EquipmentFilter): Equipment
  ""
  equipmentClass(filter: EquipmentClassFilter): EquipmentClass
  ""
  equipmentClassVersion(filter: EquipmentClassVersionFilter): EquipmentClassVersion
  ""
  equipmentVersion(filter: EquipmentVersionFilter): EquipmentVersion
  ""
  event(filter: EventFilter): Event
  ""
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " Unique internal database identifier. "
  iid: ID!
  ""
  jobList(filter: JobListFilter): JobList
  ""
  jobOrder(filter: JobOrderFilter): JobOrder
  ""
  jobResponse(filter: JobResponseFilter): JobResponse
  ""
  jobResponseList(filter: JobResponseListFilter): JobResponseList
  ""
  materialClass(filter: MaterialClassFilter): MaterialClass
  ""
  materialClassVersion(filter: MaterialClassVersionFilter): MaterialClassVersion
  ""
  materialDefinition(filter: MaterialDefinitionFilter): MaterialDefinition
  ""
  materialDefinitionVersion(filter: MaterialDefinitionVersionFilter): MaterialDefinitionVersion
  ""
  materialLot(filter: MaterialLotFilter): MaterialLot
  ""
  materialSubLot(filter: MaterialSubLotFilter): MaterialSubLot
  ""
  operationalLocation(filter: OperationalLocationFilter): OperationalLocation
  ""
  operationalLocationClass(filter: OperationalLocationClassFilter): OperationalLocationClass
  ""
  operationalLocationClassVersion(filter: OperationalLocationClassVersionFilter): OperationalLocationClassVersion
  ""
  operationalLocationVersion(filter: OperationalLocationVersionFilter): OperationalLocationVersion
  ""
  operationsDefinition(filter: OperationsDefinitionFilter): OperationsDefinition
  ""
  operationsDefinitionVersion(filter: OperationsDefinitionVersionFilter): OperationsDefinitionVersion
  ""
  operationsEvent(filter: OperationsEventFilter): OperationsEvent
  ""
  operationsEventClass(filter: OperationsEventClassFilter): OperationsEventClass
  ""
  operationsEventClassVersion(filter: OperationsEventClassVersionFilter): OperationsEventClassVersion
  ""
  operationsEventDefinition(filter: OperationsEventDefinitionFilter): OperationsEventDefinition
  ""
  operationsEventDefinitionVersion(filter: OperationsEventDefinitionVersionFilter): OperationsEventDefinitionVersion
  ""
  operationsEventRecordEntry(filter: OperationsEventRecordEntryFilter): OperationsEventRecordEntry
  ""
  operationsPerformance(filter: OperationsPerformanceFilter): OperationsPerformance
  ""
  operationsRequest(filter: OperationsRequestFilter): OperationsRequest
  ""
  operationsResponse(filter: OperationsResponseFilter): OperationsResponse
  ""
  operationsSchedule(filter: OperationsScheduleFilter): OperationsSchedule
  ""
  operationsSegment(filter: OperationsSegmentFilter): OperationsSegment
  ""
  person(filter: PersonFilter): Person
  ""
  personVersion(filter: PersonVersionFilter): PersonVersion
  ""
  personnelClass(filter: PersonnelClassFilter): PersonnelClass
  ""
  personnelClassVersion(filter: PersonnelClassVersionFilter): PersonnelClassVersion
  ""
  physicalAsset(filter: PhysicalAssetFilter): PhysicalAsset
  ""
  physicalAssetClass(filter: PhysicalAssetClassFilter): PhysicalAssetClass
  ""
  physicalAssetClassVersion(filter: PhysicalAssetClassVersionFilter): PhysicalAssetClassVersion
  ""
  physicalAssetVersion(filter: PhysicalAssetVersionFilter): PhysicalAssetVersion
  ""
  processSegment(filter: ProcessSegmentFilter): ProcessSegment
  ""
  processSegmentVersion(filter: ProcessSegmentVersionFilter): ProcessSegmentVersion
  ""
  propertyMeasurement(filter: PropertyMeasurementFilter): PropertyMeasurement
  ""
  spatialDefinition(filter: SpatialDefinitionFilter): SpatialDefinition
  ""
  testResult(filter: TestResultFilter): TestResult
  ""
  testSpecification(filter: TestSpecificationFilter): TestSpecification
  ""
  unitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
  ""
  workCalendar(filter: WorkCalendarFilter): WorkCalendar
  ""
  workDirective(filter: WorkDirectiveFilter): WorkDirective
  ""
  workMaster(filter: WorkMasterFilter): WorkMaster
  ""
  workPerformance(filter: WorkPerformanceFilter): WorkPerformance
  ""
  workRequest(filter: WorkRequestFilter): WorkRequest
  ""
  workResponse(filter: WorkResponseFilter): WorkResponse
  ""
  workSchedule(filter: WorkScheduleFilter): WorkSchedule
  ""
  workflowSpecification(filter: WorkflowSpecificationFilter): WorkflowSpecification
  ""
  workflowSpecificationConnectionType(filter: WorkflowSpecificationConnectionTypeFilter): WorkflowSpecificationConnectionType
  ""
  workflowSpecificationNodeType(filter: WorkflowSpecificationNodeTypeFilter): WorkflowSpecificationNodeType
  ""
  workflowSpecificationVersion(filter: WorkflowSpecificationVersionFilter): WorkflowSpecificationVersion
}
""
type InformationObjectAggregateResult {
  ""
  OtherMax: String
  ""
  OtherMin: String
  ""
  count: Int
}
"""
A job list shall be defined as a collection of job orders for a specific period of time and selected 
work centers or other resources. A job list may be considered as a slice of work schedules.

Job list has the same attributes as work requests, because it is a slice of a work schedule.
"""
type JobList {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Contains additional information and descriptions of the job list. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of the job list and could include version and revision identification. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The job orders contained by this job list. "
  jobOrders(filter: JobOrderFilter, first: Int, offset: Int, order: JobOrderOrder): [JobOrder!]!
  ""
  jobOrdersAggregate(filter: JobOrderFilter): JobOrderAggregateResult
  " The ending time for the associated job list. "
  plannedEndDateTime: DateTime
  " The starting time for the associated job list. "
  plannedStartDateTime: DateTime
  " The date and time on which the job list was published or generated. "
  publishedDate: DateTime
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " Describes the category of work. "
  workType: WorkType!
}
""
type JobListAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  plannedEndDateTimeMax: DateTime
  ""
  plannedEndDateTimeMin: DateTime
  ""
  plannedStartDateTimeMax: DateTime
  ""
  plannedStartDateTimeMin: DateTime
  ""
  publishedDateMax: DateTime
  ""
  publishedDateMin: DateTime
}
"""
The unit of work requested for execution in a job list and a work request shall be defined as a job 
order. A job order references an associated work master.

A job order may be reported by one or more job responses. It has attributes to contain information 
added by the dispatching activities.
"""
type JobOrder {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Identifies the action the execution management activity is to perform on the job order. "
  command: String
  " Instruction to execution management activities specifying conditions to execute the command. "
  commandRule: String
  " Defines a comment on the job order. "
  comments(filter: CommentFilter, first: Int, offset: Int, order: CommentOrder): [Comment]
  ""
  commentsAggregate(filter: CommentFilter): CommentAggregateResult
  " Contains additional information and descriptions of the job order. "
  description: String
  " Identifies the status of the entry from the perspective of the dispatch activity. "
  dispatchStatus: DispatchStatus
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The equipment requirements related to this job order. "
  equipmentRequirements(filter: EquipmentRequirementFilter, first: Int, offset: Int, order: EquipmentRequirementOrder): [EquipmentRequirement]
  ""
  equipmentRequirementsAggregate(filter: EquipmentRequirementFilter): EquipmentRequirementAggregateResult
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of the job order. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The job list(s) make up part of this job order. "
  jobList(filter: JobListFilter): JobList
  " This job order related to the job response "
  jobResponses(filter: JobResponseFilter, first: Int, offset: Int, order: JobResponseOrder): [JobResponse]
  ""
  jobResponsesAggregate(filter: JobResponseFilter): JobResponseAggregateResult
  " Display name. "
  label: String
  " The material requirements related to this job order. "
  materialRequirements(filter: MaterialRequirementFilter, first: Int, offset: Int, order: MaterialRequirementOrder): [MaterialRequirement]
  ""
  materialRequirementsAggregate(filter: MaterialRequirementFilter): MaterialRequirementAggregateResult
  " Leftover from Libre 2 that allows us to track the actual sequence of jobs rather than planned. To be removed in future. "
  next(filter: JobOrderFilter, first: Int, offset: Int, order: JobOrderOrder): [JobOrder]
  ""
  nextAggregate(filter: JobOrderFilter): JobOrderAggregateResult
  " The job order parameter related to this job order. "
  parameters(filter: JobOrderParameterFilter, first: Int, offset: Int, order: JobOrderParameterOrder): [JobOrderParameter]
  ""
  parametersAggregate(filter: JobOrderParameterFilter): JobOrderParameterAggregateResult
  " The personnel requirements related to this job order. "
  personnelRequirements(filter: PersonnelRequirementFilter, first: Int, offset: Int, order: PersonnelRequirementOrder): [PersonnelRequirement]
  ""
  personnelRequirementsAggregate(filter: PersonnelRequirementFilter): PersonnelRequirementAggregateResult
  " The physical asset requirements related to this job order. "
  physicalAssetRequirements(filter: PhysicalAssetRequirementFilter, first: Int, offset: Int, order: PhysicalAssetRequirementOrder): [PhysicalAssetRequirement]
  ""
  physicalAssetRequirementsAggregate(filter: PhysicalAssetRequirementFilter): PhysicalAssetRequirementAggregateResult
  " Leftover from Libre 2 that allows us to track the actual sequence of jobs rather than planned. To be removed in future. "
  previous(filter: JobOrderFilter, first: Int, offset: Int, order: JobOrderOrder): [JobOrder]
  ""
  previousAggregate(filter: JobOrderFilter): JobOrderAggregateResult
  " The priority of the job order. "
  priority: Int
  " The date and time on which the resource relationship network was published or generated. "
  publishedDate: DateTime
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " When work is to be completed. "
  scheduledEndDateTime: DateTime
  " When work is to be started. "
  scheduledStartDateTime: DateTime
  " The segment requirement(s) within the scope of an operations request that specifically relates to this job order. "
  segmentRequirement(filter: SegmentRequirementFilter): SegmentRequirement
  " Can have electronic Signature. "
  signatures(filter: SignatureFilter, first: Int, offset: Int, order: SignatureOrder): [Signature]
  ""
  signaturesAggregate(filter: SignatureFilter): SignatureAggregateResult
  " The work directive that this job order corresponds to. "
  workDirective(filter: WorkDirectiveFilter): WorkDirective
  " The work master applied to this job order. "
  workMaster(filter: WorkMasterFilter): WorkMaster
  " The work request containing this job order. "
  workRequest(filter: WorkRequestFilter): WorkRequest
  " Describes the category of work. "
  workType: WorkType
  " Workflow specification that this job order corresponds with. "
  workflowSpecification(filter: WorkflowSpecificationFilter): WorkflowSpecification
  " Workflow specification node that this job order corresponds with. "
  workflowSpecificationNode(filter: WorkflowSpecificationNodeFilter): WorkflowSpecificationNode
  " Workflow specification version that this job order corresponds with. "
  workflowSpecificationVersion(filter: WorkflowSpecificationVersionFilter): WorkflowSpecificationVersion
}
""
type JobOrderAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  commandMax: String
  ""
  commandMin: String
  ""
  commandRuleMax: String
  ""
  commandRuleMin: String
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  priorityAvg: Float
  ""
  priorityMax: Int
  ""
  priorityMin: Int
  ""
  prioritySum: Int
  ""
  publishedDateMax: DateTime
  ""
  publishedDateMin: DateTime
  ""
  scheduledEndDateTimeMax: DateTime
  ""
  scheduledEndDateTimeMin: DateTime
  ""
  scheduledStartDateTimeMax: DateTime
  ""
  scheduledStartDateTimeMin: DateTime
}
"""
Information to be exchanged which cannot be mapped as personnel, equipment, physical asset or material 
properties shall be defined as job order parameters.

The attributes for a job order parameter are the same as those for a segment parameter.

A job order parameter may be made up of zero or more nested job order parameters. A job order parameter 
should include a set of limits that apply to any change to the value, such as quality limits and safety 
limits.
"""
type JobOrderParameter {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The child job order parameter(s) that are part of this job order parameter. "
  children(filter: JobOrderParameterFilter, first: Int, offset: Int, order: JobOrderParameterOrder): [JobOrderParameter]
  ""
  childrenAggregate(filter: JobOrderParameterFilter): JobOrderParameterAggregateResult
  " Contains additional information and descriptions of the job order parameter. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " The identification of the job order parameter. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The job order containing this job order parameter. "
  jobOrder(filter: JobOrderFilter): JobOrder!
  " Display name. "
  label: String
  " The parameter specification takes its definition from the operations segment. "
  parameterSpecification(filter: ParameterSpecificationFilter): ParameterSpecification
  " The job order parameter that this job order parameter is a child of. "
  parent(filter: JobOrderParameterFilter): JobOrderParameter
  " If no parameter is defined on the operations segment then the definition may be taken from the process segment. "
  processSegmentParameter(filter: ProcessSegmentParameterFilter): ProcessSegmentParameter
  " The value, set of values, or range of the value to be used for this parameter. "
  value: String
  " The engineering units in which the value is defined. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type JobOrderParameterAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  valueMax: String
  ""
  valueMin: String
}
"""
The responses from manufacturing that are associated with a job order shall be defined as a job response. 
There may be one or more job responses for a single job order if the manufacturing facility needs to 
split the job order into smaller elements of work. Where smaller elements of work are reported, the job 
response may be for a specific workflow specification or a workflow specification node.

A job order may include the status of the request, such as the percentage complete, a finished status, 
or an aborted status.
"""
type JobResponse {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The related object(s), job response, makes up part of this job response as the whole. "
  children(filter: JobResponseFilter, first: Int, offset: Int, order: JobResponseOrder): [JobResponse]
  ""
  childrenAggregate(filter: JobResponseFilter): JobResponseAggregateResult
  " Defines a comment on the job response. "
  comments(filter: CommentFilter, first: Int, offset: Int, order: CommentOrder): [Comment]
  ""
  commentsAggregate(filter: CommentFilter): CommentAggregateResult
  " Data associated with this job response. "
  data(filter: JobResponseDataFilter, first: Int, offset: Int, order: JobResponseDataOrder): [JobResponseData]
  ""
  dataAggregate(filter: JobResponseDataFilter): JobResponseDataAggregateResult
  " The variable context for process instance. May be moved to data field. "
  dataJSON: String
  " Contains additional information and descriptions of the job response. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The actual ending time of information in the job response. "
  endDateTime: DateTime
  " The equipment actual(s) related to this job response. "
  equipmentActual(filter: EquipmentActualFilter, first: Int, offset: Int, order: EquipmentActualOrder): [EquipmentActual]
  ""
  equipmentActualAggregate(filter: EquipmentActualFilter): EquipmentActualAggregateResult
  " ISA88 event. An event is a discrete occurrence in time. "
  events(filter: EventFilter, first: Int, offset: Int, order: EventOrder): [Event]
  ""
  eventsAggregate(filter: EventFilter): EventAggregateResult
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " An identification within the associated job response. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The job order related to this job response, "
  jobOrder(filter: JobOrderFilter): JobOrder
  " The job response list referenced in this job response. "
  jobResponseList(filter: JobResponseListFilter): JobResponseList
  " Indicates the state of job work response. "
  jobState: JobState
  " The material actual(s) related to this job response. "
  materialActual(filter: MaterialActualFilter, first: Int, offset: Int, order: MaterialActualOrder): [MaterialActual]
  ""
  materialActualAggregate(filter: MaterialActualFilter): MaterialActualAggregateResult
  " The related object, job response, this job response makes up part of as the whole. "
  parent(filter: JobResponseFilter): JobResponse
  " The personnel actual(s) related to this job response. "
  personnelActual(filter: PersonnelActualFilter, first: Int, offset: Int, order: PersonnelActualOrder): [PersonnelActual]
  ""
  personnelActualAggregate(filter: PersonnelActualFilter): PersonnelActualAggregateResult
  " The physical asset actual(s) related to this job response. "
  physicalAssetActual(filter: PhysicalAssetActualFilter, first: Int, offset: Int, order: PhysicalAssetActualOrder): [PhysicalAssetActual]
  ""
  physicalAssetActualAggregate(filter: PhysicalAssetActualFilter): PhysicalAssetActualAggregateResult
  " The production day this job was finished. "
  productionDate: String
  " The date and time on which the resource relationship network was published or generated. "
  publishedDate: DateTime
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " The segment response contains in part this job response. "
  segmentResponse(filter: SegmentResponseFilter): SegmentResponse
  " Can have electronic Signature. "
  signatures(filter: SignatureFilter, first: Int, offset: Int, order: SignatureOrder): [Signature]
  ""
  signaturesAggregate(filter: SignatureFilter): SignatureAggregateResult
  " The actual starting time of information in the job response. "
  startDateTime: DateTime
  " The work directive related to this job response. "
  workDirective(filter: WorkDirectiveFilter): WorkDirective
  " The work master related to this job response. "
  workMaster(filter: WorkMasterFilter): WorkMaster
  " The work response this job response makes up part of. "
  workResponse(filter: WorkResponseFilter): WorkResponse
  " Describes the category of work. "
  workType: WorkType
  " The workflow specifications related to this job response. "
  workflowSpecification(filter: WorkflowSpecificationFilter): WorkflowSpecification
  " The workflow specification node related this job response. "
  workflowSpecificationNode(filter: WorkflowSpecificationNodeFilter): WorkflowSpecificationNode
  " The workflow specifications version related to this job response. "
  workflowSpecificationVersion(filter: WorkflowSpecificationVersionFilter): WorkflowSpecificationVersion
}
""
type JobResponseAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  dataJSONMax: String
  ""
  dataJSONMin: String
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  endDateTimeMax: DateTime
  ""
  endDateTimeMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  productionDateMax: String
  ""
  productionDateMin: String
  ""
  publishedDateMax: DateTime
  ""
  publishedDateMin: DateTime
  ""
  startDateTimeMax: DateTime
  ""
  startDateTimeMin: DateTime
}
"""
Other information related to the actual work made shall be presented as job response data.
A job response data object may be made up of zero or more nested job response data objects.
"""
type JobResponseData {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The job response data(s) that is part of this job response data as the whole. "
  children(filter: JobResponseDataFilter, first: Int, offset: Int, order: JobResponseDataOrder): [JobResponseData]
  ""
  childrenAggregate(filter: JobResponseDataFilter): JobResponseDataAggregateResult
  " Defines a comment on the job response data. "
  comments(filter: CommentFilter, first: Int, offset: Int, order: CommentOrder): [Comment]
  ""
  commentsAggregate(filter: CommentFilter): CommentAggregateResult
  " Contains additional information and descriptions of the job response data. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The events associated with this job response data. "
  events(filter: EventFilter, first: Int, offset: Int, order: EventOrder): [Event]
  ""
  eventsAggregate(filter: EventFilter): EventAggregateResult
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " The identification of the job response data. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The job response contains in part this job response data(s). "
  jobResponse(filter: JobResponseFilter): JobResponse!
  " Display name. "
  label: String
  " The job response data(s) that this job response is part of data as the whole. "
  parent(filter: JobResponseDataFilter): JobResponseData
  " Approval Signature for this Data record "
  signatures(filter: SignatureFilter, first: Int, offset: Int, order: SignatureOrder): [Signature]
  ""
  signaturesAggregate(filter: SignatureFilter): SignatureAggregateResult
  " The value or set of values of the job response data. "
  value: String
  " The engineering units in which the value is defined. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type JobResponseDataAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  valueMax: String
  ""
  valueMin: String
}
"""
A job response list shall be defined as a collection of job responses for a specific period of time 
and selected work centers or other resources. A job response list may be considered as a slice of 
work performances. 

A job response list may contain job responses from multiple work responses and work performances.
"""
type JobResponseList {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Contains additional information and descriptions of the job response list. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The ending time of this job response list. "
  endDateTime: DateTime
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of the job response list. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The job response(s) that make up this job response list. "
  jobResponses(filter: JobResponseFilter, first: Int, offset: Int, order: JobResponseOrder): [JobResponse!]!
  ""
  jobResponsesAggregate(filter: JobResponseFilter): JobResponseAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " The starting time of this job response list. "
  startDateTime: DateTime
  " An identification of the version of the job response list. "
  version: String!
  " Describes the category of work. "
  workType: WorkType
}
""
type JobResponseListAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  endDateTimeMax: DateTime
  ""
  endDateTimeMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  startDateTimeMax: DateTime
  ""
  startDateTimeMin: DateTime
  ""
  versionMax: String
  ""
  versionMin: String
}
"""
Store the heartbeat timestamps of connected libre-services.
microservices can subscribe to this entity to check the status of their subscription
"""
type LibreService {
  ""
  heartbeat: DateTime
  ""
  id: ID!
  ""
  name: String!
}
""
type LibreServiceAggregateResult {
  ""
  count: Int
  ""
  heartbeatMax: DateTime
  ""
  heartbeatMin: DateTime
  ""
  nameMax: String
  ""
  nameMin: String
}
"""
An identification of a material that was used in the operations request shall be presented as a 
material actual. Material actuals contain definitions of materials that may have be consumed, produced, 
replaced, sampled, or otherwise used in manufacturing. 

A material actual may be defined as follows by containing an assembly of material actuals and as part 
of an assembly of material actuals. A material actual may define an assembly of zero or more material 
actuals. A material actual may be an assembly element of zero or more material actuals. An assembly 
may be defined as a permanent or transient assembly of material actuals. An assembly may be defined 
as physical or a logical assembly of material actuals.
"""
type MaterialActual {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  " The related object(s) makes up part of this material actual as the whole. "
  children(filter: MaterialActualFilter, first: Int, offset: Int, order: MaterialActualOrder): [MaterialActual]
  ""
  childrenAggregate(filter: MaterialActualFilter): MaterialActualAggregateResult
  " Defines a comment on material actual. "
  comments(filter: CommentFilter, first: Int, offset: Int, order: CommentOrder): [Comment]
  ""
  commentsAggregate(filter: CommentFilter): CommentAggregateResult
  " Contains additional information and descriptions of the material actual. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " Define a unique identification of a specific material actual. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " Job response this material actual relates to. "
  jobResponse(filter: JobResponseFilter): JobResponse
  " Identifies the associated material class(s) of the material actual for a specific segment response. "
  materialClass(filter: MaterialClassFilter): MaterialClass
  " Identifies the associated material definition of the material actual for a specific segment response. "
  materialDefinition(filter: MaterialDefinitionFilter): MaterialDefinition
  " Identifies the associated material definition of the material actual for a specific segment response. "
  materialDefinitionVersion(filter: MaterialDefinitionVersionFilter): MaterialDefinitionVersion
  " Identifies the associated material lot of the material actual for a specific segment response. "
  materialLot(filter: MaterialLotFilter, first: Int, offset: Int, order: MaterialLotOrder): [MaterialLot]
  ""
  materialLotAggregate(filter: MaterialLotFilter): MaterialLotAggregateResult
  " Identifies the associated material sublot of the material actual for a specific segment response. "
  materialSubLot(filter: MaterialSubLotFilter, first: Int, offset: Int, order: MaterialSubLotOrder): [MaterialSubLot]
  ""
  materialSubLotAggregate(filter: MaterialSubLotFilter): MaterialSubLotAggregateResult
  """
   Defines the expected use of the material class, material definition, material lot, or material sublot 
  in the context of the segment response. 
  """
  materialUse: MaterialUse
  " The related object(s) this material actual makes up part of as the whole. "
  parent(filter: MaterialActualFilter): MaterialActual
  " The values in the material actual property are for this material actual. "
  properties(filter: MaterialActualPropertyFilter, first: Int, offset: Int, order: MaterialActualPropertyOrder): [MaterialActualProperty]
  ""
  propertiesAggregate(filter: MaterialActualPropertyFilter): MaterialActualPropertyAggregateResult
  " Specifies the amount of material produced by the parent segment. "
  quantity: Float
  " Identifies the unit of measure of the quantity. "
  quantityUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The segment response this material actual relates to. "
  segmentResponse(filter: SegmentResponseFilter): SegmentResponse
  " Can have electronic Signature. "
  signatures(filter: SignatureFilter, first: Int, offset: Int, order: SignatureOrder): [Signature]
  ""
  signaturesAggregate(filter: SignatureFilter): SignatureAggregateResult
  " Spatially defines the material resource(s) specified by this material actual. "
  spatialDefinition(filter: SpatialDefinitionFilter): SpatialDefinition
  " Identifies the storage location of the material resource(s) specified by this material actual. "
  storageLocation(filter: OperationalLocationFilter): OperationalLocation
  " The test result records the evaluated criterion result attribute and property measurement for this testable object. "
  testResults(filter: TestResultFilter, first: Int, offset: Int, order: TestResultOrder): [TestResult]
  ""
  testResultsAggregate(filter: TestResultFilter): TestResultAggregateResult
}
""
type MaterialActualAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
}
"""
Specific properties that are required for a material actual shall be presented as material actual 
properties. Material actual properties may contain nested material actual properties.
"""
type MaterialActualProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The values in the child material actual property for this material actual property. "
  children(filter: MaterialActualPropertyFilter, first: Int, offset: Int, order: MaterialActualPropertyOrder): [MaterialActualProperty]
  ""
  childrenAggregate(filter: MaterialActualPropertyFilter): MaterialActualPropertyAggregateResult
  " Contains additional information and descriptions of the material produced actual property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  ""
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " An identification of the associated material property or material class property for a specific segment response. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " The values for this material actual property in part are for the material actual. "
  materialActual(filter: MaterialActualFilter): MaterialActual!
  " A cross-model dependency to element in the material model. "
  materialClassProperty(filter: MaterialClassPropertyFilter): MaterialClassProperty
  " A cross-model dependency to element in the material model. "
  materialDefinitionProperty(filter: MaterialDefinitionPropertyFilter): MaterialDefinitionProperty
  " A cross-model dependency to element in the material model. "
  materialLotProperty(filter: MaterialLotPropertyFilter): MaterialLotProperty
  ""
  operationalLocation(filter: OperationalLocationFilter): OperationalLocation
  " This child material actual property gives values for the parent material actual property. "
  parent(filter: MaterialActualPropertyFilter): MaterialActualProperty
  " Specifies the amount of material produced by the parent segment. "
  quantity: Float!
  " Identifies the unit of measure of the quantity. "
  quantityUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  ""
  spatialDefinition(filter: SpatialDefinitionFilter): SpatialDefinition
  ""
  use: String
  " The value or set of values for the associated property. "
  value: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type MaterialActualPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
  ""
  useMax: String
  ""
  useMin: String
  ""
  valueMax: String
  ""
  valueMin: String
}
" Libre specific extension to ISA95 schema. "
type MaterialAlternate {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The material that can be used as an alternate. "
  alternateMaterial(filter: MaterialDefinitionFilter): MaterialDefinition!
  " Moment after which this Material alternative will be available as an alternative "
  effectiveDateTime: DateTime!
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Unique internal database identifier. "
  iid: ID!
  " The material identified as having an alternate. "
  materialDefinitionVersion(filter: MaterialDefinitionVersionFilter): MaterialDefinitionVersion!
  " Priority order is used to prioritise which Material Alternative is used (if more than one is available)"
  priorityOrder: Int!
}
""
type MaterialAlternateAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveDateTimeMax: DateTime
  ""
  effectiveDateTimeMin: DateTime
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  priorityOrderAvg: Float
  ""
  priorityOrderMax: Int
  ""
  priorityOrderMin: Int
  ""
  priorityOrderSum: Int
}
"""
A representation of groupings of material definitions for a definite purpose such as
manufacturing operations definition, scheduling, capability, and performance shall be
presented as a material class. A material definition shall belong to zero or more material classes.

A material class may be defined as a derived class specialization of zero or more base material
classes. A material class may be made up of zero or more material classes. A material class may
be defined as follows by containing an assembly of material classes and as part of an assembly
of material classes.
  a) A material class may define an assembly of zero or more material classes.
  b) A material class may be an assembly element of zero or more material classes.
  c) An assembly may be defined as a permanent or transient assembly of material classes.
  d) An assembly may be defined as physical or a logical assembly of material classes.

A material class may be tested by the evaluation of the test specification criteria in the test
specification that references the evaluated property and may be recorded in an evaluated criterion
result attribute in the test result.
"""
type MaterialClass {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The currently active version. To find a version that was active at a point in time, use versions with a filter. "
  activeVersion(filter: MaterialClassVersionFilter): MaterialClassVersion
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " A unique identification of a specific material class, within the scope of the information exchanged. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  """
   Aggregation hierarchy (Has A):
  - This object can include the properties of zero or many objects of the same type
  - this object's properties can be included in zero or many objects of the same type
  - This relationship intent is to create subordinate classes can be contained within various superordinate classes
  """
  isAssembledFrom(filter: MaterialClassFilter, first: Int, offset: Int, order: MaterialClassOrder): [MaterialClass]
  ""
  isAssembledFromAggregate(filter: MaterialClassFilter): MaterialClassAggregateResult
  " Aggregation hierarchy (Has A) "
  isComponentOf(filter: MaterialClassFilter): MaterialClass
  "Association relationship (Is A):"
  isIncludedIn(filter: MaterialClassVersionFilter, first: Int, offset: Int, order: MaterialClassVersionOrder): [MaterialClassVersion]
  ""
  isIncludedInAggregate(filter: MaterialClassVersionFilter): MaterialClassVersionAggregateResult
  " A user-friendly identifier for this entity "
  label: String!
  " The material actuals this material class is associated with. "
  materialActual(filter: MaterialActualFilter, first: Int, offset: Int, order: MaterialActualOrder): [MaterialActual]
  ""
  materialActualAggregate(filter: MaterialActualFilter): MaterialActualAggregateResult
  " The material definition objects support the material class property(s) associated with this material class. "
  materialDefinitionVersions(filter: MaterialDefinitionVersionFilter, first: Int, offset: Int, order: MaterialDefinitionVersionOrder): [MaterialDefinitionVersion]
  ""
  materialDefinitionVersionsAggregate(filter: MaterialDefinitionVersionFilter): MaterialDefinitionVersionAggregateResult
  " The set of material requirements that are linked to this material class. "
  materialRequirements(filter: MaterialRequirementFilter, first: Int, offset: Int, order: MaterialRequirementOrder): [MaterialRequirement]
  ""
  materialRequirementsAggregate(filter: MaterialRequirementFilter): MaterialRequirementAggregateResult
  " The material specifications this material definition is associated with. "
  materialSpecifications(filter: MaterialSpecificationFilter, first: Int, offset: Int, order: MaterialSpecificationOrder): [MaterialSpecification]
  ""
  materialSpecificationsAggregate(filter: MaterialSpecificationFilter): MaterialSpecificationAggregateResult
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " The test specification(s) used to evaluate this testable object. "
  specifiesTests(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  specifiesTestsAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " The test result records the evaluated criterion result attribute and property measurement for this testable object. "
  testResults(filter: TestResultFilter, first: Int, offset: Int, order: TestResultOrder): [TestResult]
  ""
  testResultsAggregate(filter: TestResultFilter): TestResultAggregateResult
  " The ID of this testable object ID(s) evaluated by the test specification. "
  testedBy(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  testedByAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " Link to all available versions for this entity. "
  versions(filter: MaterialClassVersionFilter, first: Int, offset: Int, order: MaterialClassVersionOrder): [MaterialClassVersion]
  ""
  versionsAggregate(filter: MaterialClassVersionFilter): MaterialClassVersionAggregateResult
}
""
type MaterialClassAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  nextVersionMax: String
  ""
  nextVersionMin: String
}
"""
Properties of a material class shall be presented as material class properties. A material 
class may define zero or more material class properties.

A material class property may be tested to the evaluated property in a test specification where 
the measured results may be recorded in a property measurement attribute in a test result. The 
measured results may also be evaluated to the test specification criteria in the test specification 
that references the evaluated property where they may be recorded in an evaluated criterion result 
attribute in the test result. 

Material class property(s) may contain nested material class property(s).

The material class properties often list the nominal or standard values for the material. A material 
property value does not have to match the value of the corresponding material class property.
"""
type MaterialClassProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The nested material class property(s) makes up part of this material class property as the whole. "
  children(filter: MaterialClassPropertyFilter, first: Int, offset: Int, order: MaterialClassPropertyOrder): [MaterialClassProperty]
  ""
  childrenAggregate(filter: MaterialClassPropertyFilter): MaterialClassPropertyAggregateResult
  " This testable object property is measured to the test specification containing the evaluated property. "
  correspondsTo(filter: EvaluatedPropertyFilter): EvaluatedProperty
  " Additional information about the material class property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " An identification of a specific material class property. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " Material actual property(s) mapped to this material class property. "
  materialActualProperties(filter: MaterialActualPropertyFilter, first: Int, offset: Int, order: MaterialActualPropertyOrder): [MaterialActualProperty]
  ""
  materialActualPropertiesAggregate(filter: MaterialActualPropertyFilter): MaterialActualPropertyAggregateResult
  " The material class defined in part by this material class property. "
  materialClassVersion(filter: MaterialClassVersionFilter): MaterialClassVersion!
  """
   If the parent material definition supports a material class, this material class property(s) is applied in the 
  material definition property(s). The material definition property maps to this corresponding material class property. 
  """
  materialDefinitionProperty(filter: MaterialDefinitionPropertyFilter): MaterialDefinitionProperty
  " Material requirement property(s) mapped to this material class property. "
  materialRequirementProperties(filter: MaterialRequirementPropertyFilter, first: Int, offset: Int, order: MaterialRequirementPropertyOrder): [MaterialRequirementProperty]
  ""
  materialRequirementPropertiesAggregate(filter: MaterialRequirementPropertyFilter): MaterialRequirementPropertyAggregateResult
  " Material specification property(s) mapped to this material class property. "
  materialSpecificationProperties(filter: MaterialSpecificationPropertyFilter, first: Int, offset: Int, order: MaterialSpecificationPropertyOrder): [MaterialSpecificationProperty]
  ""
  materialSpecificationPropertiesAggregate(filter: MaterialSpecificationPropertyFilter): MaterialSpecificationPropertyAggregateResult
  " The material class property that this nested material class property makes up part of as the whole. "
  parent(filter: MaterialClassPropertyFilter): MaterialClassProperty
  " Defines the type of the property. "
  propertyType: Isa95PropertyType!
  " The property measurement records the measurement result for this testable object property. "
  recordsMeasurementOf(filter: PropertyMeasurementFilter, first: Int, offset: Int, order: PropertyMeasurementOrder): [PropertyMeasurement]
  ""
  recordsMeasurementOfAggregate(filter: PropertyMeasurementFilter): PropertyMeasurementAggregateResult
  " The value, set of values, or range of the property. "
  value: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type MaterialClassPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  valueMax: String
  ""
  valueMin: String
}
"""
A representation of groupings of material definitions for a definite purpose such as
manufacturing operations definition, scheduling, capability, and performance shall be
presented as a material class. A material definition shall belong to zero or more material classes.

A material class may be defined as a derived class specialization of zero or more base material
classes. A material class may be made up of zero or more material classes. A material class may
be defined as follows by containing an assembly of material classes and as part of an assembly
of material classes.
a) A material class may define an assembly of zero or more material classes.
b) A material class may be an assembly element of zero or more material classes.
c) An assembly may be defined as a permanent or transient assembly of material classes.
d) An assembly may be defined as physical or a logical assembly of material classes.

A material class may be tested by the evaluation of the test specification criteria in the test
specification that references the evaluated property and may be recorded in an evaluated criterion
result attribute in the test result.
"""
type MaterialClassVersion {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  " Additional information about the material class. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of a specific material class, within the scope of the information exchanged. "
  id: String!
  ""
  id_version: String!
  " Unique internal database identifier. "
  iid: ID!
  """
   Association relationship (Is A):
  - This object can include the properties of zero or many objects of the same type
  - This object's properties can be included in zero or many objects of the same type
  - This relationship intent is to create subordinate classes which are a specialisation of the superordinate class
  """
  includesPropertiesOf(filter: MaterialClassFilter, first: Int, offset: Int, order: MaterialClassOrder): [MaterialClass]
  ""
  includesPropertiesOfAggregate(filter: MaterialClassFilter): MaterialClassAggregateResult
  " The material class that uses this material class version as it's active version. "
  isActiveVersionOf(filter: MaterialClassFilter): MaterialClass
  " The material class that this material class version relates to. "
  materialClass(filter: MaterialClassFilter): MaterialClass!
  " The material class property(s) of this material class. "
  properties(filter: MaterialClassPropertyFilter, first: Int, offset: Int, order: MaterialClassPropertyOrder): [MaterialClassProperty]
  ""
  propertiesAggregate(filter: MaterialClassPropertyFilter): MaterialClassPropertyAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " state models allow logic to be defined based on the material state "
  stateModels(filter: StateModelDefinitionFilter, first: Int, offset: Int, order: StateModelDefinitionOrder): [StateModelDefinition]
  ""
  stateModelsAggregate(filter: StateModelDefinitionFilter): StateModelDefinitionAggregateResult
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
type MaterialClassVersionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  versionMax: String
  ""
  versionMin: String
}
"""
A representation of a material with similar characteristics for the purpose of manufacturing operations 
definition, scheduling, capability and performance shall be presented as a material definition.

A material definition may be tested by the evaluation of the test specification criteria in the test 
specification that references the evaluated property and may be recorded in an evaluated criterion 
result attribute in the test result.

Any material lot shall be associated with one material definition.
"""
type MaterialDefinition {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The currently active version. To find a version that was active at a point in time, use versions with a filter. "
  activeVersion(filter: MaterialDefinitionVersionFilter): MaterialDefinitionVersion
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " A unique identification of a specific material definition, within the scope of the information exchanged. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " Material(s) this material definition can be used as an alternate for. "
  isAlternateFor(filter: MaterialAlternateFilter, first: Int, offset: Int, order: MaterialAlternateOrder): [MaterialAlternate]
  ""
  isAlternateForAggregate(filter: MaterialAlternateFilter): MaterialAlternateAggregateResult
  " A user-friendly identifier for this entity "
  label: String!
  " The material actuals this material definition is associated with. "
  materialActual(filter: MaterialActualFilter, first: Int, offset: Int, order: MaterialActualOrder): [MaterialActual]
  ""
  materialActualAggregate(filter: MaterialActualFilter): MaterialActualAggregateResult
  " The material lot occurrences that are constructed based on this material definition. "
  materialLots(filter: MaterialLotFilter, first: Int, offset: Int, order: MaterialLotOrder): [MaterialLot]
  ""
  materialLotsAggregate(filter: MaterialLotFilter): MaterialLotAggregateResult
  " The material requirements this material definition is associated with. "
  materialRequirements(filter: MaterialRequirementFilter, first: Int, offset: Int, order: MaterialRequirementOrder): [MaterialRequirement]
  ""
  materialRequirementsAggregate(filter: MaterialRequirementFilter): MaterialRequirementAggregateResult
  " The material specifications this material definition is associated with. "
  materialSpecifications(filter: MaterialSpecificationFilter, first: Int, offset: Int, order: MaterialSpecificationOrder): [MaterialSpecification]
  ""
  materialSpecificationsAggregate(filter: MaterialSpecificationFilter): MaterialSpecificationAggregateResult
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " The test specification(s) used to evaluate this testable object. "
  specifiesTests(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  specifiesTestsAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " State Model Instances record the current state and history of state transitions "
  stateModelInstances(filter: StateModelInstanceFilter, first: Int, offset: Int, order: StateModelInstanceOrder): [StateModelInstance]
  ""
  stateModelInstancesAggregate(filter: StateModelInstanceFilter): StateModelInstanceAggregateResult
  " The test result records the evaluated criterion result attribute and property measurement for this testable object. "
  testResults(filter: TestResultFilter, first: Int, offset: Int, order: TestResultOrder): [TestResult]
  ""
  testResultsAggregate(filter: TestResultFilter): TestResultAggregateResult
  " The ID of this testable object ID(s) evaluated by the test specification. "
  testedBy(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  testedByAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " Link to all available versions for this entity. "
  versions(filter: MaterialDefinitionVersionFilter, first: Int, offset: Int, order: MaterialDefinitionVersionOrder): [MaterialDefinitionVersion]
  ""
  versionsAggregate(filter: MaterialDefinitionVersionFilter): MaterialDefinitionVersionAggregateResult
}
""
type MaterialDefinitionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  nextVersionMax: String
  ""
  nextVersionMin: String
}
"""
Properties of a material definition shall be presented as material definition properties. A material 
definition may define zero or more material definition properties.

A material definition property may be tested to the evaluated property in a test specification where 
the measured results may be recorded in a property measurement attribute in a test result. The 
measured results may also be evaluated to the test specification criteria in the test specification 
that references the evaluated property where they may be recorded in an evaluated criterion result 
attribute in the test result.

Material definition property(s) may contain nested material definition property(s).

Properties may present the nominal or standard values for the material.
"""
type MaterialDefinitionProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The nested material definition property(s) makes up part of this material definition property as the whole. "
  children(filter: MaterialDefinitionPropertyFilter, first: Int, offset: Int, order: MaterialDefinitionPropertyOrder): [MaterialDefinitionProperty]
  ""
  childrenAggregate(filter: MaterialDefinitionPropertyFilter): MaterialDefinitionPropertyAggregateResult
  " This testable object property is measured to the test specification containing the evaluated property. "
  correspondsTo(filter: EvaluatedPropertyFilter): EvaluatedProperty
  " Additional information about the material definition property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " An identification of the specific material definition property. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " Material actual property(s) mapped to this material definition property. "
  materialActualProperties(filter: MaterialActualPropertyFilter, first: Int, offset: Int, order: MaterialActualPropertyOrder): [MaterialActualProperty]
  ""
  materialActualPropertiesAggregate(filter: MaterialActualPropertyFilter): MaterialActualPropertyAggregateResult
  """
   If the parent material definition supports a material class, the material class property(s) is applied in the
  material definition property(s). This material definition property maps to the corresponding material class property. 
  """
  materialClassProperty(filter: MaterialClassPropertyFilter): MaterialClassProperty
  " The material definition defined in part by this material definition property. "
  materialDefinitionVersion(filter: MaterialDefinitionVersionFilter): MaterialDefinitionVersion!
  " If the parent material lot supports a material definition, this material definition property(s) is applied in the material lot property(s). The material lot property maps to this corresponding material definition property. "
  materialLotProperty(filter: MaterialLotPropertyFilter): MaterialLotProperty
  " Material requirement property(s) mapped to this material definition property. "
  materialRequirementProperties(filter: MaterialRequirementPropertyFilter, first: Int, offset: Int, order: MaterialRequirementPropertyOrder): [MaterialRequirementProperty]
  ""
  materialRequirementPropertiesAggregate(filter: MaterialRequirementPropertyFilter): MaterialRequirementPropertyAggregateResult
  " Material specification property(s) mapped to this material definition property. "
  materialSpecificationProperties(filter: MaterialSpecificationPropertyFilter, first: Int, offset: Int, order: MaterialSpecificationPropertyOrder): [MaterialSpecificationProperty]
  ""
  materialSpecificationPropertiesAggregate(filter: MaterialSpecificationPropertyFilter): MaterialSpecificationPropertyAggregateResult
  " The material definition property that this nested material definition property makes up part of as the whole. "
  parent(filter: MaterialDefinitionPropertyFilter): MaterialDefinitionProperty
  " The property measurement records the measurement result for this testable object property. "
  recordsMeasurementOf(filter: PropertyMeasurementFilter, first: Int, offset: Int, order: PropertyMeasurementOrder): [PropertyMeasurement]
  ""
  recordsMeasurementOfAggregate(filter: PropertyMeasurementFilter): PropertyMeasurementAggregateResult
  " The value, set of values, or range of the property. "
  value: String
  " The lower limit that would trigger an alert. "
  valueLowerControlLimit: Float
  " The lower limit that impacts the quality of the product. "
  valueLowerSpecLimit: Float
  " Target value. "
  valueSetPoint: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The upper limit that would trigger an alert. "
  valueUpperControlLimit: Float
  " The upper limit that impacts the quality of the product. "
  valueUpperSpecLimit: Float
}
""
type MaterialDefinitionPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  valueLowerControlLimitAvg: Float
  ""
  valueLowerControlLimitMax: Float
  ""
  valueLowerControlLimitMin: Float
  ""
  valueLowerControlLimitSum: Float
  ""
  valueLowerSpecLimitAvg: Float
  ""
  valueLowerSpecLimitMax: Float
  ""
  valueLowerSpecLimitMin: Float
  ""
  valueLowerSpecLimitSum: Float
  ""
  valueMax: String
  ""
  valueMin: String
  ""
  valueSetPointMax: String
  ""
  valueSetPointMin: String
  ""
  valueUpperControlLimitAvg: Float
  ""
  valueUpperControlLimitMax: Float
  ""
  valueUpperControlLimitMin: Float
  ""
  valueUpperControlLimitSum: Float
  ""
  valueUpperSpecLimitAvg: Float
  ""
  valueUpperSpecLimitMax: Float
  ""
  valueUpperSpecLimitMin: Float
  ""
  valueUpperSpecLimitSum: Float
}
"""
A representation of a material with similar characteristics for the purpose of manufacturing operations
definition, scheduling, capability and performance shall be presented as a material definition.

A material definition may be tested by the evaluation of the test specification criteria in the test
specification that references the evaluated property and may be recorded in an evaluated criterion
result attribute in the test result.

Any material lot shall be associated with one material definition.
"""
type MaterialDefinitionVersion {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Material(s) that can be used as an alternate to this material definition. "
  alternates(filter: MaterialAlternateFilter, first: Int, offset: Int, order: MaterialAlternateOrder): [MaterialAlternate]
  ""
  alternatesAggregate(filter: MaterialAlternateFilter): MaterialAlternateAggregateResult
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  " Default unit of measure for this material definition. "
  baseUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
  " Additional information about the material definition. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " Identifies where the exchanged information fits within the role-based equipment hierarchy.  "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of a specific material definition, within the scope of the information exchanged. "
  id: String!
  ""
  id_version: String!
  " Unique internal database identifier. "
  iid: ID!
  " The material definition that uses this material definition version as it's active version. "
  isActiveVersionOf(filter: MaterialDefinitionFilter): MaterialDefinition
  " This material definition is part of the related object as the whole. "
  isAssembledFrom(filter: MaterialDefinitionVersionFilter, first: Int, offset: Int, order: MaterialDefinitionVersionOrder): [MaterialDefinitionVersion]
  ""
  isAssembledFromAggregate(filter: MaterialDefinitionVersionFilter): MaterialDefinitionVersionAggregateResult
  " The material definition is part of the related object(s) as the whole. "
  isComponentOf(filter: MaterialDefinitionVersionFilter): MaterialDefinitionVersion
  " The material actuals this material definition is associated with. "
  materialActual(filter: MaterialActualFilter, first: Int, offset: Int, order: MaterialActualOrder): [MaterialActual]
  ""
  materialActualAggregate(filter: MaterialActualFilter): MaterialActualAggregateResult
  " This material definition objects support the material class property(s) associated with the material class. "
  materialClasses(filter: MaterialClassFilter, first: Int, offset: Int, order: MaterialClassOrder): [MaterialClass]
  ""
  materialClassesAggregate(filter: MaterialClassFilter): MaterialClassAggregateResult
  " The material definition that this material definition version relates to. "
  materialDefinition(filter: MaterialDefinitionFilter): MaterialDefinition!
  " The material lot occurrences that are constructed based on this material definition version. "
  materialLots(filter: MaterialLotFilter, first: Int, offset: Int, order: MaterialLotOrder): [MaterialLot]
  ""
  materialLotsAggregate(filter: MaterialLotFilter): MaterialLotAggregateResult
  " The material definition property(s) of this material definition. "
  properties(filter: MaterialDefinitionPropertyFilter, first: Int, offset: Int, order: MaterialDefinitionPropertyOrder): [MaterialDefinitionProperty]
  ""
  propertiesAggregate(filter: MaterialDefinitionPropertyFilter): MaterialDefinitionPropertyAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " Spatially defines the material definition. "
  spatialDefinition(filter: SpatialDefinitionFilter): SpatialDefinition
  " state models allow logic to be defined for material states "
  stateModels(filter: StateModelDefinitionFilter, first: Int, offset: Int, order: StateModelDefinitionOrder): [StateModelDefinition]
  ""
  stateModelsAggregate(filter: StateModelDefinitionFilter): StateModelDefinitionAggregateResult
  " List of conversion factors between other units of measure and the base unit of measure. "
  uomConversions(filter: UnitOfMeasureConversionFilter, first: Int, offset: Int, order: UnitOfMeasureConversionOrder): [UnitOfMeasureConversion]
  ""
  uomConversionsAggregate(filter: UnitOfMeasureConversionFilter): UnitOfMeasureConversionAggregateResult
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
type MaterialDefinitionVersionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  versionMax: String
  ""
  versionMin: String
}
"""
A uniquely identified specific amount of material, either countable or weighable shall be presented 
as a material lot. A material lot describes the planned or actual total quantity or amount of 
material available, its current state, and its specific property values.

A material lot may be tested by the evaluation of a test specification.

A material lot shall include
  a) the unique identification of the lot;
  b) the amount of material; 
  c) the unit of measure of the material; 
  d) the storage location for the material; and
  e) any status of the lot.

A material lot may be made up of material sublots. Material lots and material sublots may be used 
for traceability when they contain unique identifications.
"""
type MaterialLot {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  " The material lot are constructed based on the material sublot. "
  childSubLot(filter: MaterialSubLotFilter, first: Int, offset: Int, order: MaterialSubLotOrder): [MaterialSubLot]
  ""
  childSubLotAggregate(filter: MaterialSubLotFilter): MaterialSubLotAggregateResult
  " Additional information about the material lot. "
  description: String
  " Planning and logistics disposition of a material lot or assembly of material lots. "
  disposition: Disposition
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The events associated with this material lot. "
  events(filter: EventFilter, first: Int, offset: Int, order: EventOrder): [Event]
  ""
  eventsAggregate(filter: EventFilter): EventAggregateResult
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of a specific material lot, within the scope of the information exchanged. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " This child material lot is part of the material lot as the whole. "
  isAssembledFromMaterialLot(filter: MaterialLotFilter, first: Int, offset: Int, order: MaterialLotOrder): [MaterialLot]
  ""
  isAssembledFromMaterialLotAggregate(filter: MaterialLotFilter): MaterialLotAggregateResult
  " The material sublot is part of the material lot as the whole. "
  isAssembledFromMaterialSubLot(filter: MaterialSubLotFilter, first: Int, offset: Int, order: MaterialSubLotOrder): [MaterialSubLot]
  ""
  isAssembledFromMaterialSubLotAggregate(filter: MaterialSubLotFilter): MaterialSubLotAggregateResult
  " The material lot is part of the related object(s) as the whole. "
  isComponentOfMaterialLot(filter: MaterialLotFilter): MaterialLot
  " The material lot makes up part of this material sublot as the whole. "
  isComponentOfMaterialSubLot(filter: MaterialSubLotFilter): MaterialSubLot
  " The material actuals this material lot is associated with. "
  materialActual(filter: MaterialActualFilter, first: Int, offset: Int, order: MaterialActualOrder): [MaterialActual]
  ""
  materialActualAggregate(filter: MaterialActualFilter): MaterialActualAggregateResult
  " The material definition that defines this material lot. "
  materialDefinition(filter: MaterialDefinitionFilter): MaterialDefinition!
  " The material definition that defines this material lot. "
  materialDefinitionVersion(filter: MaterialDefinitionVersionFilter): MaterialDefinitionVersion!
  " The material requirements this material lot is associated with. "
  materialRequirements(filter: MaterialRequirementFilter, first: Int, offset: Int, order: MaterialRequirementOrder): [MaterialRequirement]
  ""
  materialRequirementsAggregate(filter: MaterialRequirementFilter): MaterialRequirementAggregateResult
  " The material specifications this material lot is associated with. "
  materialSpecifications(filter: MaterialSpecificationFilter, first: Int, offset: Int, order: MaterialSpecificationOrder): [MaterialSpecification]
  ""
  materialSpecificationsAggregate(filter: MaterialSpecificationFilter): MaterialSpecificationAggregateResult
  " The material lot property(s) of this material lot. "
  properties(filter: MaterialLotPropertyFilter, first: Int, offset: Int, order: MaterialLotPropertyOrder): [MaterialLotProperty]
  ""
  propertiesAggregate(filter: MaterialLotPropertyFilter): MaterialLotPropertyAggregateResult
  " The quantity of the material lot. "
  quantity: Float
  " The unit of measure of the associated quantity. "
  quantityUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " Spatially defines the material lot. "
  spatialDefinition(filter: SpatialDefinitionFilter): SpatialDefinition
  " The test specification(s) used to evaluate this testable object. "
  specifiesTests(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  specifiesTestsAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " State Model Instances record the current state and history of state transitions "
  stateModelInstances(filter: StateModelInstanceFilter, first: Int, offset: Int, order: StateModelInstanceOrder): [StateModelInstance]
  ""
  stateModelInstancesAggregate(filter: StateModelInstanceFilter): StateModelInstanceAggregateResult
  " Status of the material lot in manufacturing operations. Values defined by implementation. "
  status: String
  " Identifies the storage location description of the material lot. "
  storageLocationDescription: String
  " Identifies the equipment storage location of the material lot. "
  storageLocationEquipment(filter: EquipmentFilter): Equipment
  " Identifies the operational location storage location of the material lot. "
  storageLocationOperationalLocation(filter: OperationalLocationFilter): OperationalLocation
  " Identifies the physical asset storage location of the material lot. "
  storageLocationPhysicalAsset(filter: PhysicalAssetFilter): PhysicalAsset
  " The test result records the evaluated criterion result attribute and property measurement for this testable object. "
  testResults(filter: TestResultFilter, first: Int, offset: Int, order: TestResultOrder): [TestResult]
  ""
  testResultsAggregate(filter: TestResultFilter): TestResultAggregateResult
  " The ID of this testable object ID(s) evaluated by the test specification. "
  testedBy(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  testedByAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
}
""
type MaterialLotAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
  ""
  statusMax: String
  ""
  statusMin: String
  ""
  storageLocationDescriptionMax: String
  ""
  storageLocationDescriptionMin: String
}
"""
Properties of a material lot shall be presented as material lot properties. Each material can have 
unique values for zero or more material lot properties, such as a specific pH value for the specific 
material lot, or a specific density for the material lot.

A material lot property may be tested to the evaluated property in a test specification where the 
measured results may be recorded in a property measurement attribute in a test result. The measured 
results may be evaluated to the test specification criteria in the test specification that references 
the evaluated property where they may be recorded in an evaluated criterion result attribute in the test result.

Material lot property(s) may contain nested material lot property(s).

A material lot property is associated with either a material lot or a material sublot. When associated 
with a material lot it specifies a property value for all material sublots, when associated with a 
material sublot it specifies a property value for a single material sublot.
"""
type MaterialLotProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The nested material lot property(s) makes up part of this material lot property as the whole. "
  children(filter: MaterialLotPropertyFilter, first: Int, offset: Int, order: MaterialLotPropertyOrder): [MaterialLotProperty]
  ""
  childrenAggregate(filter: MaterialLotPropertyFilter): MaterialLotPropertyAggregateResult
  " This testable object property is measured to the test specification containing the evaluated property. "
  correspondsTo(filter: EvaluatedPropertyFilter): EvaluatedProperty
  " Additional information about the material lot property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " An identification of the specific material lot property. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " Material actual property(s) mapped to this material lot property. "
  materialActualProperties(filter: MaterialActualPropertyFilter, first: Int, offset: Int, order: MaterialActualPropertyOrder): [MaterialActualProperty]
  ""
  materialActualPropertiesAggregate(filter: MaterialActualPropertyFilter): MaterialActualPropertyAggregateResult
  """
   If the parent material lot supports a material definition, the material definition property(s) is applied in t
  he material lot property(s). This material lot property maps to the corresponding material definition property. 
  """
  materialDefinitionProperty(filter: MaterialDefinitionPropertyFilter): MaterialDefinitionProperty
  " The material lot defined in part by this material lot property. "
  materialLot(filter: MaterialLotFilter): MaterialLot
  " Material requirement property(s) mapped to this material lot property. "
  materialRequirementProperties(filter: MaterialRequirementPropertyFilter, first: Int, offset: Int, order: MaterialRequirementPropertyOrder): [MaterialRequirementProperty]
  ""
  materialRequirementPropertiesAggregate(filter: MaterialRequirementPropertyFilter): MaterialRequirementPropertyAggregateResult
  " Material specification property(s) mapped to this material lot property. "
  materialSpecificationProperties(filter: MaterialSpecificationPropertyFilter, first: Int, offset: Int, order: MaterialSpecificationPropertyOrder): [MaterialSpecificationProperty]
  ""
  materialSpecificationPropertiesAggregate(filter: MaterialSpecificationPropertyFilter): MaterialSpecificationPropertyAggregateResult
  " The material sublot defined in part by this material lot property. "
  materialSubLot(filter: MaterialSubLotFilter): MaterialSubLot
  " The material lot property that this nested material lot property makes up part of as the whole. "
  parent(filter: MaterialLotPropertyFilter): MaterialLotProperty
  " The property measurement records the measurement result for this testable object property. "
  recordsMeasurementOf(filter: PropertyMeasurementFilter, first: Int, offset: Int, order: PropertyMeasurementOrder): [PropertyMeasurement]
  ""
  recordsMeasurementOfAggregate(filter: PropertyMeasurementFilter): PropertyMeasurementAggregateResult
  " The value, set of values, or range of the property. "
  value: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type MaterialLotPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  valueMax: String
  ""
  valueMin: String
}
"""
An identification of a material that is expected to be used in the operations request shall be 
presented as a material requirement. Material requirements contain definitions of materials that may 
be consumed, produced, replaced, sampled, or otherwise used in manufacturing. 
"""
type MaterialRequirement {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  " The related object(s) makes up part of this material requirement as the whole. "
  children(filter: MaterialRequirementFilter, first: Int, offset: Int, order: MaterialRequirementOrder): [MaterialRequirement]
  ""
  childrenAggregate(filter: MaterialRequirementFilter): MaterialRequirementAggregateResult
  " Defines a comment on the material requirement. "
  comments(filter: CommentFilter, first: Int, offset: Int, order: CommentOrder): [Comment]
  ""
  commentsAggregate(filter: CommentFilter): CommentAggregateResult
  " Contains additional information and descriptions of the material requirement definition. "
  description: String
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " Defines a unique identification of a specific material requirement, "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " Job order associated with this material requirement. "
  jobOrder(filter: JobOrderFilter): JobOrder
  " Identifies the associated material definition(s) of the material requirement for a specific segment requirement. "
  material(filter: MaterialDefinitionFilter): MaterialDefinition
  " Identifies the associated material class(s) of the material requirement for a specific segment requirement. "
  materialClass(filter: MaterialClassFilter): MaterialClass
  " Identifies the associated material lot(s) of the material requirement for a specific segment requirement. "
  materialLots(filter: MaterialLotFilter, first: Int, offset: Int, order: MaterialLotOrder): [MaterialLot]
  ""
  materialLotsAggregate(filter: MaterialLotFilter): MaterialLotAggregateResult
  " Identifies the associated material sublot(s) of the material requirement for a specific segment requirement. "
  materialSubLots(filter: MaterialSubLotFilter, first: Int, offset: Int, order: MaterialSubLotOrder): [MaterialSubLot]
  ""
  materialSubLotsAggregate(filter: MaterialSubLotFilter): MaterialSubLotAggregateResult
  """
   Defines the expected use of the material class, material definition, material lot, or material sublot 
    in the context of the segment requirement. 
  """
  materialUse: MaterialUse!
  " The related object that this material requirement makes up part of as the whole. "
  parent(filter: MaterialRequirementFilter): MaterialRequirement
  " The values in the material requirement property are for this material requirement. "
  properties(filter: MaterialRequirementPropertyFilter, first: Int, offset: Int, order: MaterialRequirementPropertyOrder): [MaterialRequirementProperty]
  ""
  propertiesAggregate(filter: MaterialRequirementPropertyFilter): MaterialRequirementPropertyAggregateResult
  " Specifies the amount of material to be used. "
  quantity: Float!
  " Identifies the unit of measure of the quantity if applicable. "
  quantityUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The segment requirement defined in part by this material requirement. "
  segmentRequirement(filter: SegmentRequirementFilter): SegmentRequirement
  " Can have electronic Signature. "
  signatures(filter: SignatureFilter, first: Int, offset: Int, order: SignatureOrder): [Signature]
  ""
  signaturesAggregate(filter: SignatureFilter): SignatureAggregateResult
  " The test specification(s) used to evaluate this testable object. "
  specifiesTests(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  specifiesTestsAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " Identifies the storage location of the material resource(s) specified by this material requirement. "
  storageLocation(filter: OperationalLocationFilter): OperationalLocation
  " The test result records the evaluated criterion result attribute and property measurement for this testable object. "
  testResults(filter: TestResultFilter, first: Int, offset: Int, order: TestResultOrder): [TestResult]
  ""
  testResultsAggregate(filter: TestResultFilter): TestResultAggregateResult
  " The ID of this testable object ID(s) evaluated by the test specification. "
  testedBy(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  testedByAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
}
""
type MaterialRequirementAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
}
"""
Properties of a material requirement shall be presented as material requirement properties. Specific 
elements associated with each material requirement may be included in one or more material requirement 
properties. Material requirement properties may contain nested material requirement properties.
"""
type MaterialRequirementProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The values in the child material requirement property for this material requirement. "
  children(filter: MaterialRequirementPropertyFilter, first: Int, offset: Int, order: MaterialRequirementPropertyOrder): [MaterialRequirementProperty]
  ""
  childrenAggregate(filter: MaterialRequirementPropertyFilter): MaterialRequirementPropertyAggregateResult
  " Contains additional information and descriptions of the material produced requirement property definition. "
  description: String
  """
   An identification of a property of the associated material property or material class property for a 
    specific segment requirement. 
  """
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " A cross-model dependency to element in the material model. "
  materialClassProperty(filter: MaterialClassPropertyFilter): MaterialClassProperty
  " A cross-model dependency to element in the material model. "
  materialDefinitionProperty(filter: MaterialDefinitionPropertyFilter): MaterialDefinitionProperty
  " A cross-model dependency to element in the material model. "
  materialLotProperty(filter: MaterialLotPropertyFilter): MaterialLotProperty
  " The values for this material requirement property in part are for the material requirement. "
  materialRequirement(filter: MaterialRequirementFilter): MaterialRequirement!
  " The partent material requirement property this material requirement has values for. "
  parent(filter: MaterialRequirementPropertyFilter): MaterialRequirementProperty
  " Specifies the amount of material to be produced. "
  quantity: Float
  " Identifies the unit of measure of the quantity if applicable. "
  quantityUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The value, set of values, or range of the associated property. "
  value: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type MaterialRequirementPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
  ""
  valueMax: String
  ""
  valueMin: String
}
"""
An identification or correspondence to a material capability shall be presented as a material 
specification. A material specification specifies a material, material definition or material class. 
A material specification identifies the specific material specification that is associated with the 
identified operations segment.

Specific elements associated with a material specification may be included in one or more material 
specification properties.
"""
type MaterialSpecification {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  " The related object(s) makes up part of this material specification as the whole. "
  children(filter: MaterialSpecificationFilter, first: Int, offset: Int, order: MaterialSpecificationOrder): [MaterialSpecification]
  ""
  childrenAggregate(filter: MaterialSpecificationFilter): MaterialSpecificationAggregateResult
  " Contains additional information and descriptions of the material specification. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of a specific material specification. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " The associated material definition or set of material definition of the specification for a specific operations segment. "
  material(filter: MaterialDefinitionFilter): MaterialDefinition
  " The associated material class or set of material classes of the specification for a specific operations segment. "
  materialClass(filter: MaterialClassFilter): MaterialClass
  " The associated material lot or set of material lot of the specification for a specific operations segment. "
  materialLot(filter: MaterialLotFilter): MaterialLot
  " The associated material sublot or set of material sublot of the specification for a specific operations segment. "
  materialSubLot(filter: MaterialSubLotFilter): MaterialSubLot
  " Defines the expected use of the material class or material in the context of the operations segment. "
  materialUse: MaterialUse!
  " This material specification(s) defines the specified operation material bill item. "
  materialsBill(filter: OperationsMaterialBillFilter): OperationsMaterialBill
  " The operations segment that is in part defined by this material specification. "
  operationsSegment(filter: OperationsSegmentFilter): OperationsSegment
  " The related object that this this material specification makes up part of as the whole. "
  parent(filter: MaterialSpecificationFilter): MaterialSpecification
  " The process segment version that is in part defined by this material specification. "
  processSegmentVersion(filter: ProcessSegmentVersionFilter): ProcessSegmentVersion
  " The material specification property(s) of this material specification. "
  properties(filter: MaterialSpecificationPropertyFilter, first: Int, offset: Int, order: MaterialSpecificationPropertyOrder): [MaterialSpecificationProperty]
  ""
  propertiesAggregate(filter: MaterialSpecificationPropertyFilter): MaterialSpecificationPropertyAggregateResult
  " Specifies the amount of material resources required for the parent segment. "
  quantity: Float
  " The unit of measure of the associated quantity. "
  quantityUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " Spatially defines the material resource(s) specified by this material specification. "
  spatialDefinition(filter: SpatialDefinitionFilter): SpatialDefinition
  " The test specification(s) used to evaluate this testable object. "
  specifiesTests(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  specifiesTestsAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " Identifies the storage location of the material resource(s) specified by this material specification. "
  storageLocation(filter: OperationalLocationFilter): OperationalLocation
  " The test result records the evaluated criterion result attribute and property measurement for this testable object. "
  testResults(filter: TestResultFilter, first: Int, offset: Int, order: TestResultOrder): [TestResult]
  ""
  testResultsAggregate(filter: TestResultFilter): TestResultAggregateResult
  " The ID of this testable object ID(s) evaluated by the test specification. "
  testedBy(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  testedByAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " The resources and instructions required to perform a unit of work for a specific job order. "
  workDirective(filter: WorkDirectiveFilter): WorkDirective
  " The resources and instructions required to perform a unit of work without reference to a specific job order. "
  workMaster(filter: WorkMasterFilter): WorkMaster
}
""
type MaterialSpecificationAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
}
"""
Specific properties that are required for material specifications shall be presented as material 
specification properties. Material specification properties may contain nested material specification 
properties.
"""
type MaterialSpecificationProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " This child material specification property(s) of the parent material specification property. "
  children(filter: MaterialSpecificationPropertyFilter, first: Int, offset: Int, order: MaterialSpecificationPropertyOrder): [MaterialSpecificationProperty]
  ""
  childrenAggregate(filter: MaterialSpecificationPropertyFilter): MaterialSpecificationPropertyAggregateResult
  " Contains additional information and descriptions of the material specification property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " An identification of the associated material property for a specific segment. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " A cross-model dependency to element in the material model. "
  materialClassProperty(filter: MaterialClassPropertyFilter): MaterialClassProperty
  " A cross-model dependency to element in the material model. "
  materialDefinitionProperty(filter: MaterialDefinitionPropertyFilter): MaterialDefinitionProperty
  " A cross-model dependency to element in the material model. "
  materialLotProperty(filter: MaterialLotPropertyFilter): MaterialLotProperty
  " The material specification property(s) of this material specification property. "
  materialSpecification(filter: MaterialSpecificationFilter): MaterialSpecification!
  " This parent material specification property of this parent material specification property. "
  parent(filter: MaterialSpecificationPropertyFilter): MaterialSpecificationProperty
  " Specifies the amount of material resources required for the parent segment. "
  quantity: Float
  " The unit of measure of the associated property value. "
  quantityUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The value, set of values, or range for the associated property. "
  value: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type MaterialSpecificationPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
  ""
  valueMax: String
  ""
  valueMin: String
}
"""
Each separately identifiable quantity of the same material lot shall be presented as a material sublot. 
A material lot may be stored in separately identifiable quantities. All material sublots are part of 
the same material lot, so they have the material lot's property values. A material sublot may be just 
a single item.

Material sublots may have sublot specific properties. 

A material sublot property may be tested to the evaluated property in a test specification where the 
measured results may be recorded in a property measurement attribute in a test result. The measured 
results may be evaluated to the test specification criteria in the test specification that references 
the evaluated property where they may be recorded in an evaluated criterion result attribute in the 
test result.

Material sublot property(s) may contain nested material sublot property(s).

Each material sublot shall contain the location of the material sublot and the quantity or amount of 
material available in the material sublot.

Material sublots may contain other material sublots.

A material sublot shall include
    a) a unique identification of the material sublot, 
    b) the storage location of the material sublot,
    c) the unit of measure of the material, and
    d) any status of the material sublot.
"""
type MaterialSubLot {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  " This material sublot is part of the related object as the whole. "
  children(filter: MaterialSubLotFilter, first: Int, offset: Int, order: MaterialSubLotOrder): [MaterialSubLot]
  ""
  childrenAggregate(filter: MaterialSubLotFilter): MaterialSubLotAggregateResult
  " Additional information about the material sublot property. "
  description: String
  " Planning and logistics disposition of a material sublot or assembly of material lots. "
  disposition: Disposition
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The events associated with this material sub lot. "
  events(filter: EventFilter, first: Int, offset: Int, order: EventOrder): [Event]
  ""
  eventsAggregate(filter: EventFilter): EventAggregateResult
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of a specific material sublot, within the scope of the information exchanged. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The material lot(s) makes up part of this material sublot as the whole. "
  isAssembledFromMaterialLot(filter: MaterialLotFilter, first: Int, offset: Int, order: MaterialLotOrder): [MaterialLot]
  ""
  isAssembledFromMaterialLotAggregate(filter: MaterialLotFilter): MaterialLotAggregateResult
  " The material sublot is constructed based on this material sublot. "
  isAssembledFromMaterialSubLot(filter: MaterialSubLotFilter, first: Int, offset: Int, order: MaterialSubLotOrder): [MaterialSubLot]
  ""
  isAssembledFromMaterialSubLotAggregate(filter: MaterialSubLotFilter): MaterialSubLotAggregateResult
  " This material lot is part of the material sublot as the whole. "
  isComponentOfMaterialLot(filter: MaterialLotFilter): MaterialLot
  " This material sublot is constructed based on the material sublot. "
  isComponentOfMaterialSubLot(filter: MaterialSubLotFilter): MaterialSubLot
  " The material actuals this material sublot is associated with. "
  materialActual(filter: MaterialActualFilter, first: Int, offset: Int, order: MaterialActualOrder): [MaterialActual]
  ""
  materialActualAggregate(filter: MaterialActualFilter): MaterialActualAggregateResult
  " The material requirements this material sublot is associated with for. "
  materialRequirements(filter: MaterialRequirementFilter, first: Int, offset: Int, order: MaterialRequirementOrder): [MaterialRequirement]
  ""
  materialRequirementsAggregate(filter: MaterialRequirementFilter): MaterialRequirementAggregateResult
  " The material specifications this material sublot is associated with. "
  materialSpecifications(filter: MaterialSpecificationFilter, first: Int, offset: Int, order: MaterialSpecificationOrder): [MaterialSpecification]
  ""
  materialSpecificationsAggregate(filter: MaterialSpecificationFilter): MaterialSpecificationAggregateResult
  " The material sublot is part of the related object(s) as the whole. "
  parent(filter: MaterialSubLotFilter): MaterialSubLot
  " The material lot that is being constructed based on this material sublot. "
  parentMaterialLot(filter: MaterialLotFilter): MaterialLot
  " The material lot property(s) of this material sublot. "
  properties(filter: MaterialLotPropertyFilter, first: Int, offset: Int, order: MaterialLotPropertyOrder): [MaterialLotProperty]
  ""
  propertiesAggregate(filter: MaterialLotPropertyFilter): MaterialLotPropertyAggregateResult
  " The quantity of the material sublot. "
  quantity: Float
  " The unit of measure of the associated quantity. "
  quantityUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " Spatially defines the material sublot. "
  spatialDefinition(filter: SpatialDefinitionFilter): SpatialDefinition
  " The test specification(s) used to evaluate this testable object. "
  specifiesTests(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  specifiesTestsAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " State Model Instances record the current state and history of state transitions "
  stateModelInstances(filter: StateModelInstanceFilter, first: Int, offset: Int, order: StateModelInstanceOrder): [StateModelInstance]
  ""
  stateModelInstancesAggregate(filter: StateModelInstanceFilter): StateModelInstanceAggregateResult
  " Status of the material sublot in manufacturing operations. Values defined by implementation. "
  status: String
  " Identifies the storage location description of the material sublot. "
  storageLocationDescription: String
  " Identifies the equipment storage location of the material sublot. "
  storageLocationEquipment(filter: EquipmentFilter): Equipment
  " Identifies the operational location storage location of the material sublot. "
  storageLocationOperationalLocation(filter: OperationalLocationFilter): OperationalLocation
  " Identifies the physical asset storage location of the material sublot. "
  storageLocationPhysicalAsset(filter: PhysicalAssetFilter): PhysicalAsset
  " The test result records the evaluated criterion result attribute and property measurement for this testable object. "
  testResults(filter: TestResultFilter, first: Int, offset: Int, order: TestResultOrder): [TestResult]
  ""
  testResultsAggregate(filter: TestResultFilter): TestResultAggregateResult
  " The ID of this testable object ID(s) evaluated by the test specification. "
  testedBy(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  testedByAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
}
""
type MaterialSubLotAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
  ""
  statusMax: String
  ""
  statusMin: String
  ""
  storageLocationDescriptionMax: String
  ""
  storageLocationDescriptionMin: String
}
""
type Menu {
  ""
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  ""
  children(filter: MenuFilter, first: Int, offset: Int, order: MenuOrder): [Menu!]
  ""
  childrenAggregate(filter: MenuFilter): MenuAggregateResult
  ""
  icon: String
  ""
  iid: ID!
  ""
  isPage: Boolean!
  ""
  isSection: Boolean!
  ""
  label: String!
  ""
  menuPage: String
  ""
  orderNumber: Int
  ""
  parent(filter: MenuFilter): Menu
}
""
type MenuAggregateResult {
  ""
  count: Int
  ""
  iconMax: String
  ""
  iconMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  menuPageMax: String
  ""
  menuPageMin: String
  ""
  orderNumberAvg: Float
  ""
  orderNumberMax: Int
  ""
  orderNumberMin: Int
  ""
  orderNumberSum: Int
}
""
type MultiPolygon {
  ""
  polygons: [Polygon!]!
}
""
type Multiplicity {
  ""
  Max: Int
  ""
  Min: Int
}
""
type MultiplicityAggregateResult {
  ""
  MaxAvg: Float
  ""
  MaxMax: Int
  ""
  MaxMin: Int
  ""
  MaxSum: Int
  ""
  MinAvg: Float
  ""
  MinMax: Int
  ""
  MinMin: Int
  ""
  MinSum: Int
  ""
  count: Int
}
""
type Mutation {
  ""
  addAccessPermission(input: [AddAccessPermissionInput!]!): AddAccessPermissionPayload
  ""
  addAlarmEvent(input: [AddAlarmEventInput!]!): AddAlarmEventPayload
  ""
  addComment(input: [AddCommentInput!]!, upsert: Boolean): AddCommentPayload
  ""
  addDataSource(input: [AddDataSourceInput!]!, upsert: Boolean): AddDataSourcePayload
  ""
  addDataSourceMethod(input: [AddDataSourceMethodInput!]!, upsert: Boolean): AddDataSourceMethodPayload
  ""
  addDataSourceMethodArgument(input: [AddDataSourceMethodArgumentInput!]!, upsert: Boolean): AddDataSourceMethodArgumentPayload
  ""
  addDataSourceTopic(input: [AddDataSourceTopicInput!]!, upsert: Boolean): AddDataSourceTopicPayload
  ""
  addDataSourceVersion(input: [AddDataSourceVersionInput!]!): AddDataSourceVersionPayload
  ""
  addDataSubscription(input: [AddDataSubscriptionInput!]!, upsert: Boolean): AddDataSubscriptionPayload
  ""
  addEnvironmentalVariable(input: [AddEnvironmentalVariableInput!]!, upsert: Boolean): AddEnvironmentalVariablePayload
  ""
  addEnvironmentalVariableVersion(input: [AddEnvironmentalVariableVersionInput!]!): AddEnvironmentalVariableVersionPayload
  ""
  addEquipment(input: [AddEquipmentInput!]!, upsert: Boolean): AddEquipmentPayload
  ""
  addEquipmentActual(input: [AddEquipmentActualInput!]!, upsert: Boolean): AddEquipmentActualPayload
  ""
  addEquipmentActualProperty(input: [AddEquipmentActualPropertyInput!]!, upsert: Boolean): AddEquipmentActualPropertyPayload
  ""
  addEquipmentAssetMapping(input: [AddEquipmentAssetMappingInput!]!, upsert: Boolean): AddEquipmentAssetMappingPayload
  ""
  addEquipmentClass(input: [AddEquipmentClassInput!]!, upsert: Boolean): AddEquipmentClassPayload
  ""
  addEquipmentClassProperty(input: [AddEquipmentClassPropertyInput!]!, upsert: Boolean): AddEquipmentClassPropertyPayload
  ""
  addEquipmentClassVersion(input: [AddEquipmentClassVersionInput!]!): AddEquipmentClassVersionPayload
  ""
  addEquipmentDataSource(input: [AddEquipmentDataSourceInput!]!): AddEquipmentDataSourcePayload
  ""
  addEquipmentNameAlias(input: [AddEquipmentNameAliasInput!]!): AddEquipmentNameAliasPayload
  ""
  addEquipmentProperty(input: [AddEquipmentPropertyInput!]!, upsert: Boolean): AddEquipmentPropertyPayload
  ""
  addEquipmentPropertyOverride(input: [AddEquipmentPropertyOverrideInput!]!, upsert: Boolean): AddEquipmentPropertyOverridePayload
  ""
  addEquipmentRequirement(input: [AddEquipmentRequirementInput!]!, upsert: Boolean): AddEquipmentRequirementPayload
  ""
  addEquipmentRequirementProperty(input: [AddEquipmentRequirementPropertyInput!]!, upsert: Boolean): AddEquipmentRequirementPropertyPayload
  ""
  addEquipmentSpecification(input: [AddEquipmentSpecificationInput!]!, upsert: Boolean): AddEquipmentSpecificationPayload
  ""
  addEquipmentSpecificationProperty(input: [AddEquipmentSpecificationPropertyInput!]!, upsert: Boolean): AddEquipmentSpecificationPropertyPayload
  ""
  addEquipmentVersion(input: [AddEquipmentVersionInput!]!): AddEquipmentVersionPayload
  ""
  addEvaluatedProperty(input: [AddEvaluatedPropertyInput!]!, upsert: Boolean): AddEvaluatedPropertyPayload
  ""
  addEvent(input: [AddEventInput!]!): AddEventPayload
  ""
  addEventAssociation(input: [AddEventAssociationInput!]!, upsert: Boolean): AddEventAssociationPayload
  ""
  addEventProperty(input: [AddEventPropertyInput!]!, upsert: Boolean): AddEventPropertyPayload
  ""
  addEventSubtype(input: [AddEventSubtypeInput!]!, upsert: Boolean): AddEventSubtypePayload
  ""
  addEventType(input: [AddEventTypeInput!]!, upsert: Boolean): AddEventTypePayload
  ""
  addForm(input: [AddFormInput!]!, upsert: Boolean): AddFormPayload
  ""
  addHierarchyScope(input: [AddHierarchyScopeInput!]!, upsert: Boolean): AddHierarchyScopePayload
  ""
  addInformationObject(input: [AddInformationObjectInput!]!): AddInformationObjectPayload
  ""
  addJobList(input: [AddJobListInput!]!, upsert: Boolean): AddJobListPayload
  ""
  addJobOrder(input: [AddJobOrderInput!]!, upsert: Boolean): AddJobOrderPayload
  ""
  addJobOrderParameter(input: [AddJobOrderParameterInput!]!, upsert: Boolean): AddJobOrderParameterPayload
  ""
  addJobResponse(input: [AddJobResponseInput!]!, upsert: Boolean): AddJobResponsePayload
  ""
  addJobResponseData(input: [AddJobResponseDataInput!]!, upsert: Boolean): AddJobResponseDataPayload
  ""
  addJobResponseList(input: [AddJobResponseListInput!]!, upsert: Boolean): AddJobResponseListPayload
  ""
  addLibreService(input: [AddLibreServiceInput!]!, upsert: Boolean): AddLibreServicePayload
  ""
  addMaterialActual(input: [AddMaterialActualInput!]!, upsert: Boolean): AddMaterialActualPayload
  ""
  addMaterialActualProperty(input: [AddMaterialActualPropertyInput!]!, upsert: Boolean): AddMaterialActualPropertyPayload
  ""
  addMaterialAlternate(input: [AddMaterialAlternateInput!]!): AddMaterialAlternatePayload
  ""
  addMaterialClass(input: [AddMaterialClassInput!]!, upsert: Boolean): AddMaterialClassPayload
  ""
  addMaterialClassProperty(input: [AddMaterialClassPropertyInput!]!, upsert: Boolean): AddMaterialClassPropertyPayload
  ""
  addMaterialClassVersion(input: [AddMaterialClassVersionInput!]!): AddMaterialClassVersionPayload
  ""
  addMaterialDefinition(input: [AddMaterialDefinitionInput!]!, upsert: Boolean): AddMaterialDefinitionPayload
  ""
  addMaterialDefinitionProperty(input: [AddMaterialDefinitionPropertyInput!]!, upsert: Boolean): AddMaterialDefinitionPropertyPayload
  ""
  addMaterialDefinitionVersion(input: [AddMaterialDefinitionVersionInput!]!): AddMaterialDefinitionVersionPayload
  ""
  addMaterialLot(input: [AddMaterialLotInput!]!, upsert: Boolean): AddMaterialLotPayload
  ""
  addMaterialLotProperty(input: [AddMaterialLotPropertyInput!]!, upsert: Boolean): AddMaterialLotPropertyPayload
  ""
  addMaterialRequirement(input: [AddMaterialRequirementInput!]!, upsert: Boolean): AddMaterialRequirementPayload
  ""
  addMaterialRequirementProperty(input: [AddMaterialRequirementPropertyInput!]!, upsert: Boolean): AddMaterialRequirementPropertyPayload
  ""
  addMaterialSpecification(input: [AddMaterialSpecificationInput!]!, upsert: Boolean): AddMaterialSpecificationPayload
  ""
  addMaterialSpecificationProperty(input: [AddMaterialSpecificationPropertyInput!]!, upsert: Boolean): AddMaterialSpecificationPropertyPayload
  ""
  addMaterialSubLot(input: [AddMaterialSubLotInput!]!, upsert: Boolean): AddMaterialSubLotPayload
  ""
  addMenu(input: [AddMenuInput!]!): AddMenuPayload
  ""
  addMultiplicity(input: [AddMultiplicityInput!]!): AddMultiplicityPayload
  ""
  addOperationalLocation(input: [AddOperationalLocationInput!]!, upsert: Boolean): AddOperationalLocationPayload
  ""
  addOperationalLocationClass(input: [AddOperationalLocationClassInput!]!, upsert: Boolean): AddOperationalLocationClassPayload
  ""
  addOperationalLocationClassProperty(input: [AddOperationalLocationClassPropertyInput!]!, upsert: Boolean): AddOperationalLocationClassPropertyPayload
  ""
  addOperationalLocationClassVersion(input: [AddOperationalLocationClassVersionInput!]!): AddOperationalLocationClassVersionPayload
  ""
  addOperationalLocationProperty(input: [AddOperationalLocationPropertyInput!]!, upsert: Boolean): AddOperationalLocationPropertyPayload
  ""
  addOperationalLocationVersion(input: [AddOperationalLocationVersionInput!]!): AddOperationalLocationVersionPayload
  ""
  addOperationsDefinition(input: [AddOperationsDefinitionInput!]!, upsert: Boolean): AddOperationsDefinitionPayload
  ""
  addOperationsDefinitionVersion(input: [AddOperationsDefinitionVersionInput!]!): AddOperationsDefinitionVersionPayload
  ""
  addOperationsEvent(input: [AddOperationsEventInput!]!, upsert: Boolean): AddOperationsEventPayload
  ""
  addOperationsEventClass(input: [AddOperationsEventClassInput!]!, upsert: Boolean): AddOperationsEventClassPayload
  ""
  addOperationsEventClassProperty(input: [AddOperationsEventClassPropertyInput!]!, upsert: Boolean): AddOperationsEventClassPropertyPayload
  ""
  addOperationsEventClassRecordSpecification(input: [AddOperationsEventClassRecordSpecificationInput!]!): AddOperationsEventClassRecordSpecificationPayload
  ""
  addOperationsEventClassVersion(input: [AddOperationsEventClassVersionInput!]!): AddOperationsEventClassVersionPayload
  ""
  addOperationsEventDefinition(input: [AddOperationsEventDefinitionInput!]!, upsert: Boolean): AddOperationsEventDefinitionPayload
  ""
  addOperationsEventDefinitionProperty(input: [AddOperationsEventDefinitionPropertyInput!]!): AddOperationsEventDefinitionPropertyPayload
  ""
  addOperationsEventDefinitionRecordSpecification(input: [AddOperationsEventDefinitionRecordSpecificationInput!]!): AddOperationsEventDefinitionRecordSpecificationPayload
  ""
  addOperationsEventDefinitionVersion(input: [AddOperationsEventDefinitionVersionInput!]!): AddOperationsEventDefinitionVersionPayload
  ""
  addOperationsEventProperty(input: [AddOperationsEventPropertyInput!]!, upsert: Boolean): AddOperationsEventPropertyPayload
  ""
  addOperationsEventRecord(input: [AddOperationsEventRecordInput!]!, upsert: Boolean): AddOperationsEventRecordPayload
  ""
  addOperationsEventRecordEntry(input: [AddOperationsEventRecordEntryInput!]!): AddOperationsEventRecordEntryPayload
  ""
  addOperationsMaterialBill(input: [AddOperationsMaterialBillInput!]!, upsert: Boolean): AddOperationsMaterialBillPayload
  ""
  addOperationsPerformance(input: [AddOperationsPerformanceInput!]!, upsert: Boolean): AddOperationsPerformancePayload
  ""
  addOperationsRequest(input: [AddOperationsRequestInput!]!, upsert: Boolean): AddOperationsRequestPayload
  ""
  addOperationsResponse(input: [AddOperationsResponseInput!]!, upsert: Boolean): AddOperationsResponsePayload
  ""
  addOperationsResponseProperty(input: [AddOperationsResponsePropertyInput!]!, upsert: Boolean): AddOperationsResponsePropertyPayload
  ""
  addOperationsSchedule(input: [AddOperationsScheduleInput!]!, upsert: Boolean): AddOperationsSchedulePayload
  ""
  addOperationsSegment(input: [AddOperationsSegmentInput!]!, upsert: Boolean): AddOperationsSegmentPayload
  ""
  addOperationsSegmentDependency(input: [AddOperationsSegmentDependencyInput!]!, upsert: Boolean): AddOperationsSegmentDependencyPayload
  ""
  addParameterSpecification(input: [AddParameterSpecificationInput!]!, upsert: Boolean): AddParameterSpecificationPayload
  ""
  addPayloadFieldDefinition(input: [AddPayloadFieldDefinitionInput!]!): AddPayloadFieldDefinitionPayload
  ""
  addPerson(input: [AddPersonInput!]!, upsert: Boolean): AddPersonPayload
  ""
  addPersonProperty(input: [AddPersonPropertyInput!]!, upsert: Boolean): AddPersonPropertyPayload
  ""
  addPersonVersion(input: [AddPersonVersionInput!]!): AddPersonVersionPayload
  ""
  addPersonnelActual(input: [AddPersonnelActualInput!]!, upsert: Boolean): AddPersonnelActualPayload
  ""
  addPersonnelActualProperty(input: [AddPersonnelActualPropertyInput!]!, upsert: Boolean): AddPersonnelActualPropertyPayload
  ""
  addPersonnelClass(input: [AddPersonnelClassInput!]!, upsert: Boolean): AddPersonnelClassPayload
  ""
  addPersonnelClassProperty(input: [AddPersonnelClassPropertyInput!]!, upsert: Boolean): AddPersonnelClassPropertyPayload
  ""
  addPersonnelClassVersion(input: [AddPersonnelClassVersionInput!]!): AddPersonnelClassVersionPayload
  ""
  addPersonnelRequirement(input: [AddPersonnelRequirementInput!]!, upsert: Boolean): AddPersonnelRequirementPayload
  ""
  addPersonnelRequirementProperty(input: [AddPersonnelRequirementPropertyInput!]!, upsert: Boolean): AddPersonnelRequirementPropertyPayload
  ""
  addPersonnelSpecification(input: [AddPersonnelSpecificationInput!]!, upsert: Boolean): AddPersonnelSpecificationPayload
  ""
  addPersonnelSpecificationProperty(input: [AddPersonnelSpecificationPropertyInput!]!, upsert: Boolean): AddPersonnelSpecificationPropertyPayload
  ""
  addPhysicalAsset(input: [AddPhysicalAssetInput!]!, upsert: Boolean): AddPhysicalAssetPayload
  ""
  addPhysicalAssetActual(input: [AddPhysicalAssetActualInput!]!, upsert: Boolean): AddPhysicalAssetActualPayload
  ""
  addPhysicalAssetActualProperty(input: [AddPhysicalAssetActualPropertyInput!]!, upsert: Boolean): AddPhysicalAssetActualPropertyPayload
  ""
  addPhysicalAssetClass(input: [AddPhysicalAssetClassInput!]!, upsert: Boolean): AddPhysicalAssetClassPayload
  ""
  addPhysicalAssetClassProperty(input: [AddPhysicalAssetClassPropertyInput!]!, upsert: Boolean): AddPhysicalAssetClassPropertyPayload
  ""
  addPhysicalAssetClassVersion(input: [AddPhysicalAssetClassVersionInput!]!): AddPhysicalAssetClassVersionPayload
  ""
  addPhysicalAssetDataSource(input: [AddPhysicalAssetDataSourceInput!]!): AddPhysicalAssetDataSourcePayload
  ""
  addPhysicalAssetProperty(input: [AddPhysicalAssetPropertyInput!]!, upsert: Boolean): AddPhysicalAssetPropertyPayload
  ""
  addPhysicalAssetRequirement(input: [AddPhysicalAssetRequirementInput!]!, upsert: Boolean): AddPhysicalAssetRequirementPayload
  ""
  addPhysicalAssetRequirementProperty(input: [AddPhysicalAssetRequirementPropertyInput!]!, upsert: Boolean): AddPhysicalAssetRequirementPropertyPayload
  ""
  addPhysicalAssetSpecification(input: [AddPhysicalAssetSpecificationInput!]!, upsert: Boolean): AddPhysicalAssetSpecificationPayload
  ""
  addPhysicalAssetSpecificationProperty(input: [AddPhysicalAssetSpecificationPropertyInput!]!, upsert: Boolean): AddPhysicalAssetSpecificationPropertyPayload
  ""
  addPhysicalAssetVersion(input: [AddPhysicalAssetVersionInput!]!): AddPhysicalAssetVersionPayload
  ""
  addProcessSegment(input: [AddProcessSegmentInput!]!, upsert: Boolean): AddProcessSegmentPayload
  ""
  addProcessSegmentDependency(input: [AddProcessSegmentDependencyInput!]!, upsert: Boolean): AddProcessSegmentDependencyPayload
  ""
  addProcessSegmentParameter(input: [AddProcessSegmentParameterInput!]!, upsert: Boolean): AddProcessSegmentParameterPayload
  ""
  addProcessSegmentVersion(input: [AddProcessSegmentVersionInput!]!): AddProcessSegmentVersionPayload
  ""
  addPropertyMeasurement(input: [AddPropertyMeasurementInput!]!, upsert: Boolean): AddPropertyMeasurementPayload
  ""
  addPropertyNameAlias(input: [AddPropertyNameAliasInput!]!): AddPropertyNameAliasPayload
  ""
  addPropertyValueAlias(input: [AddPropertyValueAliasInput!]!): AddPropertyValueAliasPayload
  ""
  addRule(input: [AddRuleInput!]!, upsert: Boolean): AddRulePayload
  ""
  addSecret(input: [AddSecretInput!]!, upsert: Boolean): AddSecretPayload
  ""
  addSecretVersion(input: [AddSecretVersionInput!]!): AddSecretVersionPayload
  ""
  addSegmentData(input: [AddSegmentDataInput!]!, upsert: Boolean): AddSegmentDataPayload
  ""
  addSegmentParameter(input: [AddSegmentParameterInput!]!, upsert: Boolean): AddSegmentParameterPayload
  ""
  addSegmentRequirement(input: [AddSegmentRequirementInput!]!, upsert: Boolean): AddSegmentRequirementPayload
  ""
  addSegmentResponse(input: [AddSegmentResponseInput!]!, upsert: Boolean): AddSegmentResponsePayload
  ""
  addSignature(input: [AddSignatureInput!]!): AddSignaturePayload
  ""
  addSignatureReason(input: [AddSignatureReasonInput!]!, upsert: Boolean): AddSignatureReasonPayload
  ""
  addSpatialDefinition(input: [AddSpatialDefinitionInput!]!, upsert: Boolean): AddSpatialDefinitionPayload
  ""
  addStateModelAction(input: [AddStateModelActionInput!]!, upsert: Boolean): AddStateModelActionPayload
  ""
  addStateModelDefinition(input: [AddStateModelDefinitionInput!]!, upsert: Boolean): AddStateModelDefinitionPayload
  ""
  addStateModelEvent(input: [AddStateModelEventInput!]!, upsert: Boolean): AddStateModelEventPayload
  ""
  addStateModelInstance(input: [AddStateModelInstanceInput!]!, upsert: Boolean): AddStateModelInstancePayload
  ""
  addStateModelProperty(input: [AddStateModelPropertyInput!]!, upsert: Boolean): AddStateModelPropertyPayload
  ""
  addStateModelState(input: [AddStateModelStateInput!]!, upsert: Boolean): AddStateModelStatePayload
  ""
  addStateModelTransition(input: [AddStateModelTransitionInput!]!, upsert: Boolean): AddStateModelTransitionPayload
  ""
  addStateTransitionInstance(input: [AddStateTransitionInstanceInput!]!): AddStateTransitionInstancePayload
  ""
  addTestResult(input: [AddTestResultInput!]!, upsert: Boolean): AddTestResultPayload
  ""
  addTestSpecification(input: [AddTestSpecificationInput!]!, upsert: Boolean): AddTestSpecificationPayload
  ""
  addTestSpecificationCriteria(input: [AddTestSpecificationCriteriaInput!]!, upsert: Boolean): AddTestSpecificationCriteriaPayload
  ""
  addTestSpecificationProperty(input: [AddTestSpecificationPropertyInput!]!, upsert: Boolean): AddTestSpecificationPropertyPayload
  ""
  addUnitOfMeasure(input: [AddUnitOfMeasureInput!]!, upsert: Boolean): AddUnitOfMeasurePayload
  ""
  addUnitOfMeasureConversion(input: [AddUnitOfMeasureConversionInput!]!): AddUnitOfMeasureConversionPayload
  ""
  addWorkCalendar(input: [AddWorkCalendarInput!]!, upsert: Boolean): AddWorkCalendarPayload
  ""
  addWorkCalendarDefinitionEntry(input: [AddWorkCalendarDefinitionEntryInput!]!): AddWorkCalendarDefinitionEntryPayload
  ""
  addWorkCalendarDefinitionEntryProperty(input: [AddWorkCalendarDefinitionEntryPropertyInput!]!, upsert: Boolean): AddWorkCalendarDefinitionEntryPropertyPayload
  ""
  addWorkCalendarEntry(input: [AddWorkCalendarEntryInput!]!): AddWorkCalendarEntryPayload
  ""
  addWorkCalendarEntryProperty(input: [AddWorkCalendarEntryPropertyInput!]!, upsert: Boolean): AddWorkCalendarEntryPropertyPayload
  ""
  addWorkDirective(input: [AddWorkDirectiveInput!]!): AddWorkDirectivePayload
  ""
  addWorkMaster(input: [AddWorkMasterInput!]!): AddWorkMasterPayload
  ""
  addWorkPerformance(input: [AddWorkPerformanceInput!]!, upsert: Boolean): AddWorkPerformancePayload
  ""
  addWorkRequest(input: [AddWorkRequestInput!]!, upsert: Boolean): AddWorkRequestPayload
  ""
  addWorkResponse(input: [AddWorkResponseInput!]!, upsert: Boolean): AddWorkResponsePayload
  ""
  addWorkSchedule(input: [AddWorkScheduleInput!]!, upsert: Boolean): AddWorkSchedulePayload
  ""
  addWorkflowError(input: [AddWorkflowErrorInput!]!, upsert: Boolean): AddWorkflowErrorPayload
  ""
  addWorkflowMessage(input: [AddWorkflowMessageInput!]!, upsert: Boolean): AddWorkflowMessagePayload
  ""
  addWorkflowShape(input: [AddWorkflowShapeInput!]!, upsert: Boolean): AddWorkflowShapePayload
  ""
  addWorkflowSpecification(input: [AddWorkflowSpecificationInput!]!, upsert: Boolean): AddWorkflowSpecificationPayload
  ""
  addWorkflowSpecificationConnection(input: [AddWorkflowSpecificationConnectionInput!]!, upsert: Boolean): AddWorkflowSpecificationConnectionPayload
  ""
  addWorkflowSpecificationConnectionProperty(input: [AddWorkflowSpecificationConnectionPropertyInput!]!, upsert: Boolean): AddWorkflowSpecificationConnectionPropertyPayload
  ""
  addWorkflowSpecificationConnectionType(input: [AddWorkflowSpecificationConnectionTypeInput!]!, upsert: Boolean): AddWorkflowSpecificationConnectionTypePayload
  ""
  addWorkflowSpecificationConnectionTypeProperty(input: [AddWorkflowSpecificationConnectionTypePropertyInput!]!, upsert: Boolean): AddWorkflowSpecificationConnectionTypePropertyPayload
  ""
  addWorkflowSpecificationNode(input: [AddWorkflowSpecificationNodeInput!]!, upsert: Boolean): AddWorkflowSpecificationNodePayload
  ""
  addWorkflowSpecificationNodeProperty(input: [AddWorkflowSpecificationNodePropertyInput!]!, upsert: Boolean): AddWorkflowSpecificationNodePropertyPayload
  ""
  addWorkflowSpecificationNodeTestCase(input: [AddWorkflowSpecificationNodeTestCaseInput!]!, upsert: Boolean): AddWorkflowSpecificationNodeTestCasePayload
  ""
  addWorkflowSpecificationNodeType(input: [AddWorkflowSpecificationNodeTypeInput!]!, upsert: Boolean): AddWorkflowSpecificationNodeTypePayload
  ""
  addWorkflowSpecificationNodeTypeProperty(input: [AddWorkflowSpecificationNodeTypePropertyInput!]!, upsert: Boolean): AddWorkflowSpecificationNodeTypePropertyPayload
  ""
  addWorkflowSpecificationNodeVariable(input: [AddWorkflowSpecificationNodeVariableInput!]!): AddWorkflowSpecificationNodeVariablePayload
  ""
  addWorkflowSpecificationProperty(input: [AddWorkflowSpecificationPropertyInput!]!, upsert: Boolean): AddWorkflowSpecificationPropertyPayload
  ""
  addWorkflowSpecificationVersion(input: [AddWorkflowSpecificationVersionInput!]!): AddWorkflowSpecificationVersionPayload
  ""
  addWorkflowTimer(input: [AddWorkflowTimerInput!]!, upsert: Boolean): AddWorkflowTimerPayload
  ""
  addWorkflowWaypoint(input: [AddWorkflowWaypointInput!]!): AddWorkflowWaypointPayload
  ""
  deleteAccessPermission(filter: AccessPermissionFilter!): DeleteAccessPermissionPayload
  ""
  deleteAlarmEvent(filter: AlarmEventFilter!): DeleteAlarmEventPayload
  ""
  deleteComment(filter: CommentFilter!): DeleteCommentPayload
  ""
  deleteDataSource(filter: DataSourceFilter!): DeleteDataSourcePayload
  ""
  deleteDataSourceMethod(filter: DataSourceMethodFilter!): DeleteDataSourceMethodPayload
  ""
  deleteDataSourceMethodArgument(filter: DataSourceMethodArgumentFilter!): DeleteDataSourceMethodArgumentPayload
  ""
  deleteDataSourceTopic(filter: DataSourceTopicFilter!): DeleteDataSourceTopicPayload
  ""
  deleteDataSourceVersion(filter: DataSourceVersionFilter!): DeleteDataSourceVersionPayload
  ""
  deleteDataSubscription(filter: DataSubscriptionFilter!): DeleteDataSubscriptionPayload
  ""
  deleteEnvironmentalVariable(filter: EnvironmentalVariableFilter!): DeleteEnvironmentalVariablePayload
  ""
  deleteEnvironmentalVariableVersion(filter: EnvironmentalVariableVersionFilter!): DeleteEnvironmentalVariableVersionPayload
  ""
  deleteEquipment(filter: EquipmentFilter!): DeleteEquipmentPayload
  ""
  deleteEquipmentActual(filter: EquipmentActualFilter!): DeleteEquipmentActualPayload
  ""
  deleteEquipmentActualProperty(filter: EquipmentActualPropertyFilter!): DeleteEquipmentActualPropertyPayload
  ""
  deleteEquipmentAssetMapping(filter: EquipmentAssetMappingFilter!): DeleteEquipmentAssetMappingPayload
  ""
  deleteEquipmentClass(filter: EquipmentClassFilter!): DeleteEquipmentClassPayload
  ""
  deleteEquipmentClassProperty(filter: EquipmentClassPropertyFilter!): DeleteEquipmentClassPropertyPayload
  ""
  deleteEquipmentClassVersion(filter: EquipmentClassVersionFilter!): DeleteEquipmentClassVersionPayload
  ""
  deleteEquipmentDataSource(filter: EquipmentDataSourceFilter!): DeleteEquipmentDataSourcePayload
  ""
  deleteEquipmentNameAlias(filter: EquipmentNameAliasFilter!): DeleteEquipmentNameAliasPayload
  ""
  deleteEquipmentProperty(filter: EquipmentPropertyFilter!): DeleteEquipmentPropertyPayload
  ""
  deleteEquipmentPropertyOverride(filter: EquipmentPropertyOverrideFilter!): DeleteEquipmentPropertyOverridePayload
  ""
  deleteEquipmentRequirement(filter: EquipmentRequirementFilter!): DeleteEquipmentRequirementPayload
  ""
  deleteEquipmentRequirementProperty(filter: EquipmentRequirementPropertyFilter!): DeleteEquipmentRequirementPropertyPayload
  ""
  deleteEquipmentSpecification(filter: EquipmentSpecificationFilter!): DeleteEquipmentSpecificationPayload
  ""
  deleteEquipmentSpecificationProperty(filter: EquipmentSpecificationPropertyFilter!): DeleteEquipmentSpecificationPropertyPayload
  ""
  deleteEquipmentVersion(filter: EquipmentVersionFilter!): DeleteEquipmentVersionPayload
  ""
  deleteEvaluatedProperty(filter: EvaluatedPropertyFilter!): DeleteEvaluatedPropertyPayload
  ""
  deleteEvent(filter: EventFilter!): DeleteEventPayload
  ""
  deleteEventAssociation(filter: EventAssociationFilter!): DeleteEventAssociationPayload
  ""
  deleteEventProperty(filter: EventPropertyFilter!): DeleteEventPropertyPayload
  ""
  deleteEventSubtype(filter: EventSubtypeFilter!): DeleteEventSubtypePayload
  ""
  deleteEventType(filter: EventTypeFilter!): DeleteEventTypePayload
  ""
  deleteForm(filter: FormFilter!): DeleteFormPayload
  ""
  deleteHierarchyScope(filter: HierarchyScopeFilter!): DeleteHierarchyScopePayload
  ""
  deleteInformationObject(filter: InformationObjectFilter!): DeleteInformationObjectPayload
  ""
  deleteJobList(filter: JobListFilter!): DeleteJobListPayload
  ""
  deleteJobOrder(filter: JobOrderFilter!): DeleteJobOrderPayload
  ""
  deleteJobOrderParameter(filter: JobOrderParameterFilter!): DeleteJobOrderParameterPayload
  ""
  deleteJobResponse(filter: JobResponseFilter!): DeleteJobResponsePayload
  ""
  deleteJobResponseData(filter: JobResponseDataFilter!): DeleteJobResponseDataPayload
  ""
  deleteJobResponseList(filter: JobResponseListFilter!): DeleteJobResponseListPayload
  ""
  deleteLibreService(filter: LibreServiceFilter!): DeleteLibreServicePayload
  ""
  deleteMaterialActual(filter: MaterialActualFilter!): DeleteMaterialActualPayload
  ""
  deleteMaterialActualProperty(filter: MaterialActualPropertyFilter!): DeleteMaterialActualPropertyPayload
  ""
  deleteMaterialAlternate(filter: MaterialAlternateFilter!): DeleteMaterialAlternatePayload
  ""
  deleteMaterialClass(filter: MaterialClassFilter!): DeleteMaterialClassPayload
  ""
  deleteMaterialClassProperty(filter: MaterialClassPropertyFilter!): DeleteMaterialClassPropertyPayload
  ""
  deleteMaterialClassVersion(filter: MaterialClassVersionFilter!): DeleteMaterialClassVersionPayload
  ""
  deleteMaterialDefinition(filter: MaterialDefinitionFilter!): DeleteMaterialDefinitionPayload
  ""
  deleteMaterialDefinitionProperty(filter: MaterialDefinitionPropertyFilter!): DeleteMaterialDefinitionPropertyPayload
  ""
  deleteMaterialDefinitionVersion(filter: MaterialDefinitionVersionFilter!): DeleteMaterialDefinitionVersionPayload
  ""
  deleteMaterialLot(filter: MaterialLotFilter!): DeleteMaterialLotPayload
  ""
  deleteMaterialLotProperty(filter: MaterialLotPropertyFilter!): DeleteMaterialLotPropertyPayload
  ""
  deleteMaterialRequirement(filter: MaterialRequirementFilter!): DeleteMaterialRequirementPayload
  ""
  deleteMaterialRequirementProperty(filter: MaterialRequirementPropertyFilter!): DeleteMaterialRequirementPropertyPayload
  ""
  deleteMaterialSpecification(filter: MaterialSpecificationFilter!): DeleteMaterialSpecificationPayload
  ""
  deleteMaterialSpecificationProperty(filter: MaterialSpecificationPropertyFilter!): DeleteMaterialSpecificationPropertyPayload
  ""
  deleteMaterialSubLot(filter: MaterialSubLotFilter!): DeleteMaterialSubLotPayload
  ""
  deleteMenu(filter: MenuFilter!): DeleteMenuPayload
  ""
  deleteMultiplicity(filter: MultiplicityFilter!): DeleteMultiplicityPayload
  ""
  deleteOperationalLocation(filter: OperationalLocationFilter!): DeleteOperationalLocationPayload
  ""
  deleteOperationalLocationClass(filter: OperationalLocationClassFilter!): DeleteOperationalLocationClassPayload
  ""
  deleteOperationalLocationClassProperty(filter: OperationalLocationClassPropertyFilter!): DeleteOperationalLocationClassPropertyPayload
  ""
  deleteOperationalLocationClassVersion(filter: OperationalLocationClassVersionFilter!): DeleteOperationalLocationClassVersionPayload
  ""
  deleteOperationalLocationProperty(filter: OperationalLocationPropertyFilter!): DeleteOperationalLocationPropertyPayload
  ""
  deleteOperationalLocationVersion(filter: OperationalLocationVersionFilter!): DeleteOperationalLocationVersionPayload
  ""
  deleteOperationsDefinition(filter: OperationsDefinitionFilter!): DeleteOperationsDefinitionPayload
  ""
  deleteOperationsDefinitionVersion(filter: OperationsDefinitionVersionFilter!): DeleteOperationsDefinitionVersionPayload
  ""
  deleteOperationsEvent(filter: OperationsEventFilter!): DeleteOperationsEventPayload
  ""
  deleteOperationsEventClass(filter: OperationsEventClassFilter!): DeleteOperationsEventClassPayload
  ""
  deleteOperationsEventClassProperty(filter: OperationsEventClassPropertyFilter!): DeleteOperationsEventClassPropertyPayload
  ""
  deleteOperationsEventClassRecordSpecification(filter: OperationsEventClassRecordSpecificationFilter!): DeleteOperationsEventClassRecordSpecificationPayload
  ""
  deleteOperationsEventClassVersion(filter: OperationsEventClassVersionFilter!): DeleteOperationsEventClassVersionPayload
  ""
  deleteOperationsEventDefinition(filter: OperationsEventDefinitionFilter!): DeleteOperationsEventDefinitionPayload
  ""
  deleteOperationsEventDefinitionProperty(filter: OperationsEventDefinitionPropertyFilter!): DeleteOperationsEventDefinitionPropertyPayload
  ""
  deleteOperationsEventDefinitionRecordSpecification(filter: OperationsEventDefinitionRecordSpecificationFilter!): DeleteOperationsEventDefinitionRecordSpecificationPayload
  ""
  deleteOperationsEventDefinitionVersion(filter: OperationsEventDefinitionVersionFilter!): DeleteOperationsEventDefinitionVersionPayload
  ""
  deleteOperationsEventProperty(filter: OperationsEventPropertyFilter!): DeleteOperationsEventPropertyPayload
  ""
  deleteOperationsEventRecord(filter: OperationsEventRecordFilter!): DeleteOperationsEventRecordPayload
  ""
  deleteOperationsEventRecordEntry(filter: OperationsEventRecordEntryFilter!): DeleteOperationsEventRecordEntryPayload
  ""
  deleteOperationsMaterialBill(filter: OperationsMaterialBillFilter!): DeleteOperationsMaterialBillPayload
  ""
  deleteOperationsPerformance(filter: OperationsPerformanceFilter!): DeleteOperationsPerformancePayload
  ""
  deleteOperationsRequest(filter: OperationsRequestFilter!): DeleteOperationsRequestPayload
  ""
  deleteOperationsResponse(filter: OperationsResponseFilter!): DeleteOperationsResponsePayload
  ""
  deleteOperationsResponseProperty(filter: OperationsResponsePropertyFilter!): DeleteOperationsResponsePropertyPayload
  ""
  deleteOperationsSchedule(filter: OperationsScheduleFilter!): DeleteOperationsSchedulePayload
  ""
  deleteOperationsSegment(filter: OperationsSegmentFilter!): DeleteOperationsSegmentPayload
  ""
  deleteOperationsSegmentDependency(filter: OperationsSegmentDependencyFilter!): DeleteOperationsSegmentDependencyPayload
  ""
  deleteParameterSpecification(filter: ParameterSpecificationFilter!): DeleteParameterSpecificationPayload
  ""
  deletePayloadFieldDefinition(filter: PayloadFieldDefinitionFilter!): DeletePayloadFieldDefinitionPayload
  ""
  deletePerson(filter: PersonFilter!): DeletePersonPayload
  ""
  deletePersonProperty(filter: PersonPropertyFilter!): DeletePersonPropertyPayload
  ""
  deletePersonVersion(filter: PersonVersionFilter!): DeletePersonVersionPayload
  ""
  deletePersonnelActual(filter: PersonnelActualFilter!): DeletePersonnelActualPayload
  ""
  deletePersonnelActualProperty(filter: PersonnelActualPropertyFilter!): DeletePersonnelActualPropertyPayload
  ""
  deletePersonnelClass(filter: PersonnelClassFilter!): DeletePersonnelClassPayload
  ""
  deletePersonnelClassProperty(filter: PersonnelClassPropertyFilter!): DeletePersonnelClassPropertyPayload
  ""
  deletePersonnelClassVersion(filter: PersonnelClassVersionFilter!): DeletePersonnelClassVersionPayload
  ""
  deletePersonnelRequirement(filter: PersonnelRequirementFilter!): DeletePersonnelRequirementPayload
  ""
  deletePersonnelRequirementProperty(filter: PersonnelRequirementPropertyFilter!): DeletePersonnelRequirementPropertyPayload
  ""
  deletePersonnelSpecification(filter: PersonnelSpecificationFilter!): DeletePersonnelSpecificationPayload
  ""
  deletePersonnelSpecificationProperty(filter: PersonnelSpecificationPropertyFilter!): DeletePersonnelSpecificationPropertyPayload
  ""
  deletePhysicalAsset(filter: PhysicalAssetFilter!): DeletePhysicalAssetPayload
  ""
  deletePhysicalAssetActual(filter: PhysicalAssetActualFilter!): DeletePhysicalAssetActualPayload
  ""
  deletePhysicalAssetActualProperty(filter: PhysicalAssetActualPropertyFilter!): DeletePhysicalAssetActualPropertyPayload
  ""
  deletePhysicalAssetClass(filter: PhysicalAssetClassFilter!): DeletePhysicalAssetClassPayload
  ""
  deletePhysicalAssetClassProperty(filter: PhysicalAssetClassPropertyFilter!): DeletePhysicalAssetClassPropertyPayload
  ""
  deletePhysicalAssetClassVersion(filter: PhysicalAssetClassVersionFilter!): DeletePhysicalAssetClassVersionPayload
  ""
  deletePhysicalAssetDataSource(filter: PhysicalAssetDataSourceFilter!): DeletePhysicalAssetDataSourcePayload
  ""
  deletePhysicalAssetProperty(filter: PhysicalAssetPropertyFilter!): DeletePhysicalAssetPropertyPayload
  ""
  deletePhysicalAssetRequirement(filter: PhysicalAssetRequirementFilter!): DeletePhysicalAssetRequirementPayload
  ""
  deletePhysicalAssetRequirementProperty(filter: PhysicalAssetRequirementPropertyFilter!): DeletePhysicalAssetRequirementPropertyPayload
  ""
  deletePhysicalAssetSpecification(filter: PhysicalAssetSpecificationFilter!): DeletePhysicalAssetSpecificationPayload
  ""
  deletePhysicalAssetSpecificationProperty(filter: PhysicalAssetSpecificationPropertyFilter!): DeletePhysicalAssetSpecificationPropertyPayload
  ""
  deletePhysicalAssetVersion(filter: PhysicalAssetVersionFilter!): DeletePhysicalAssetVersionPayload
  ""
  deleteProcessSegment(filter: ProcessSegmentFilter!): DeleteProcessSegmentPayload
  ""
  deleteProcessSegmentDependency(filter: ProcessSegmentDependencyFilter!): DeleteProcessSegmentDependencyPayload
  ""
  deleteProcessSegmentParameter(filter: ProcessSegmentParameterFilter!): DeleteProcessSegmentParameterPayload
  ""
  deleteProcessSegmentVersion(filter: ProcessSegmentVersionFilter!): DeleteProcessSegmentVersionPayload
  ""
  deletePropertyMeasurement(filter: PropertyMeasurementFilter!): DeletePropertyMeasurementPayload
  ""
  deletePropertyNameAlias(filter: PropertyNameAliasFilter!): DeletePropertyNameAliasPayload
  ""
  deletePropertyValueAlias(filter: PropertyValueAliasFilter!): DeletePropertyValueAliasPayload
  ""
  deleteRule(filter: RuleFilter!): DeleteRulePayload
  ""
  deleteSecret(filter: SecretFilter!): DeleteSecretPayload
  ""
  deleteSecretVersion(filter: SecretVersionFilter!): DeleteSecretVersionPayload
  ""
  deleteSegmentData(filter: SegmentDataFilter!): DeleteSegmentDataPayload
  ""
  deleteSegmentParameter(filter: SegmentParameterFilter!): DeleteSegmentParameterPayload
  ""
  deleteSegmentRequirement(filter: SegmentRequirementFilter!): DeleteSegmentRequirementPayload
  ""
  deleteSegmentResponse(filter: SegmentResponseFilter!): DeleteSegmentResponsePayload
  ""
  deleteSignature(filter: SignatureFilter!): DeleteSignaturePayload
  ""
  deleteSignatureReason(filter: SignatureReasonFilter!): DeleteSignatureReasonPayload
  ""
  deleteSpatialDefinition(filter: SpatialDefinitionFilter!): DeleteSpatialDefinitionPayload
  ""
  deleteStateModelAction(filter: StateModelActionFilter!): DeleteStateModelActionPayload
  ""
  deleteStateModelDefinition(filter: StateModelDefinitionFilter!): DeleteStateModelDefinitionPayload
  ""
  deleteStateModelEvent(filter: StateModelEventFilter!): DeleteStateModelEventPayload
  ""
  deleteStateModelInstance(filter: StateModelInstanceFilter!): DeleteStateModelInstancePayload
  ""
  deleteStateModelProperty(filter: StateModelPropertyFilter!): DeleteStateModelPropertyPayload
  ""
  deleteStateModelState(filter: StateModelStateFilter!): DeleteStateModelStatePayload
  ""
  deleteStateModelTransition(filter: StateModelTransitionFilter!): DeleteStateModelTransitionPayload
  ""
  deleteStateTransitionInstance(filter: StateTransitionInstanceFilter!): DeleteStateTransitionInstancePayload
  ""
  deleteTestResult(filter: TestResultFilter!): DeleteTestResultPayload
  ""
  deleteTestSpecification(filter: TestSpecificationFilter!): DeleteTestSpecificationPayload
  ""
  deleteTestSpecificationCriteria(filter: TestSpecificationCriteriaFilter!): DeleteTestSpecificationCriteriaPayload
  ""
  deleteTestSpecificationProperty(filter: TestSpecificationPropertyFilter!): DeleteTestSpecificationPropertyPayload
  ""
  deleteUnitOfMeasure(filter: UnitOfMeasureFilter!): DeleteUnitOfMeasurePayload
  ""
  deleteUnitOfMeasureConversion(filter: UnitOfMeasureConversionFilter!): DeleteUnitOfMeasureConversionPayload
  ""
  deleteWorkCalendar(filter: WorkCalendarFilter!): DeleteWorkCalendarPayload
  ""
  deleteWorkCalendarDefinitionEntry(filter: WorkCalendarDefinitionEntryFilter!): DeleteWorkCalendarDefinitionEntryPayload
  ""
  deleteWorkCalendarDefinitionEntryProperty(filter: WorkCalendarDefinitionEntryPropertyFilter!): DeleteWorkCalendarDefinitionEntryPropertyPayload
  ""
  deleteWorkCalendarEntry(filter: WorkCalendarEntryFilter!): DeleteWorkCalendarEntryPayload
  ""
  deleteWorkCalendarEntryProperty(filter: WorkCalendarEntryPropertyFilter!): DeleteWorkCalendarEntryPropertyPayload
  ""
  deleteWorkDirective(filter: WorkDirectiveFilter!): DeleteWorkDirectivePayload
  ""
  deleteWorkMaster(filter: WorkMasterFilter!): DeleteWorkMasterPayload
  ""
  deleteWorkPerformance(filter: WorkPerformanceFilter!): DeleteWorkPerformancePayload
  ""
  deleteWorkRequest(filter: WorkRequestFilter!): DeleteWorkRequestPayload
  ""
  deleteWorkResponse(filter: WorkResponseFilter!): DeleteWorkResponsePayload
  ""
  deleteWorkSchedule(filter: WorkScheduleFilter!): DeleteWorkSchedulePayload
  ""
  deleteWorkflowError(filter: WorkflowErrorFilter!): DeleteWorkflowErrorPayload
  ""
  deleteWorkflowMessage(filter: WorkflowMessageFilter!): DeleteWorkflowMessagePayload
  ""
  deleteWorkflowShape(filter: WorkflowShapeFilter!): DeleteWorkflowShapePayload
  ""
  deleteWorkflowSpecification(filter: WorkflowSpecificationFilter!): DeleteWorkflowSpecificationPayload
  ""
  deleteWorkflowSpecificationConnection(filter: WorkflowSpecificationConnectionFilter!): DeleteWorkflowSpecificationConnectionPayload
  ""
  deleteWorkflowSpecificationConnectionProperty(filter: WorkflowSpecificationConnectionPropertyFilter!): DeleteWorkflowSpecificationConnectionPropertyPayload
  ""
  deleteWorkflowSpecificationConnectionType(filter: WorkflowSpecificationConnectionTypeFilter!): DeleteWorkflowSpecificationConnectionTypePayload
  ""
  deleteWorkflowSpecificationConnectionTypeProperty(filter: WorkflowSpecificationConnectionTypePropertyFilter!): DeleteWorkflowSpecificationConnectionTypePropertyPayload
  ""
  deleteWorkflowSpecificationNode(filter: WorkflowSpecificationNodeFilter!): DeleteWorkflowSpecificationNodePayload
  ""
  deleteWorkflowSpecificationNodeProperty(filter: WorkflowSpecificationNodePropertyFilter!): DeleteWorkflowSpecificationNodePropertyPayload
  ""
  deleteWorkflowSpecificationNodeTestCase(filter: WorkflowSpecificationNodeTestCaseFilter!): DeleteWorkflowSpecificationNodeTestCasePayload
  ""
  deleteWorkflowSpecificationNodeType(filter: WorkflowSpecificationNodeTypeFilter!): DeleteWorkflowSpecificationNodeTypePayload
  ""
  deleteWorkflowSpecificationNodeTypeProperty(filter: WorkflowSpecificationNodeTypePropertyFilter!): DeleteWorkflowSpecificationNodeTypePropertyPayload
  ""
  deleteWorkflowSpecificationNodeVariable(filter: WorkflowSpecificationNodeVariableFilter!): DeleteWorkflowSpecificationNodeVariablePayload
  ""
  deleteWorkflowSpecificationProperty(filter: WorkflowSpecificationPropertyFilter!): DeleteWorkflowSpecificationPropertyPayload
  ""
  deleteWorkflowSpecificationVersion(filter: WorkflowSpecificationVersionFilter!): DeleteWorkflowSpecificationVersionPayload
  ""
  deleteWorkflowTimer(filter: WorkflowTimerFilter!): DeleteWorkflowTimerPayload
  ""
  deleteWorkflowWaypoint(filter: WorkflowWaypointFilter!): DeleteWorkflowWaypointPayload
  ""
  updateAccessPermission(input: UpdateAccessPermissionInput!): UpdateAccessPermissionPayload
  ""
  updateAlarmEvent(input: UpdateAlarmEventInput!): UpdateAlarmEventPayload
  ""
  updateComment(input: UpdateCommentInput!): UpdateCommentPayload
  ""
  updateDataSource(input: UpdateDataSourceInput!): UpdateDataSourcePayload
  ""
  updateDataSourceMethod(input: UpdateDataSourceMethodInput!): UpdateDataSourceMethodPayload
  ""
  updateDataSourceMethodArgument(input: UpdateDataSourceMethodArgumentInput!): UpdateDataSourceMethodArgumentPayload
  ""
  updateDataSourceTopic(input: UpdateDataSourceTopicInput!): UpdateDataSourceTopicPayload
  ""
  updateDataSourceVersion(input: UpdateDataSourceVersionInput!): UpdateDataSourceVersionPayload
  ""
  updateDataSubscription(input: UpdateDataSubscriptionInput!): UpdateDataSubscriptionPayload
  ""
  updateEnvironmentalVariable(input: UpdateEnvironmentalVariableInput!): UpdateEnvironmentalVariablePayload
  ""
  updateEnvironmentalVariableVersion(input: UpdateEnvironmentalVariableVersionInput!): UpdateEnvironmentalVariableVersionPayload
  ""
  updateEquipment(input: UpdateEquipmentInput!): UpdateEquipmentPayload
  ""
  updateEquipmentActual(input: UpdateEquipmentActualInput!): UpdateEquipmentActualPayload
  ""
  updateEquipmentActualProperty(input: UpdateEquipmentActualPropertyInput!): UpdateEquipmentActualPropertyPayload
  ""
  updateEquipmentAssetMapping(input: UpdateEquipmentAssetMappingInput!): UpdateEquipmentAssetMappingPayload
  ""
  updateEquipmentClass(input: UpdateEquipmentClassInput!): UpdateEquipmentClassPayload
  ""
  updateEquipmentClassProperty(input: UpdateEquipmentClassPropertyInput!): UpdateEquipmentClassPropertyPayload
  ""
  updateEquipmentClassVersion(input: UpdateEquipmentClassVersionInput!): UpdateEquipmentClassVersionPayload
  ""
  updateEquipmentDataSource(input: UpdateEquipmentDataSourceInput!): UpdateEquipmentDataSourcePayload
  ""
  updateEquipmentNameAlias(input: UpdateEquipmentNameAliasInput!): UpdateEquipmentNameAliasPayload
  ""
  updateEquipmentProperty(input: UpdateEquipmentPropertyInput!): UpdateEquipmentPropertyPayload
  ""
  updateEquipmentPropertyOverride(input: UpdateEquipmentPropertyOverrideInput!): UpdateEquipmentPropertyOverridePayload
  ""
  updateEquipmentRequirement(input: UpdateEquipmentRequirementInput!): UpdateEquipmentRequirementPayload
  ""
  updateEquipmentRequirementProperty(input: UpdateEquipmentRequirementPropertyInput!): UpdateEquipmentRequirementPropertyPayload
  ""
  updateEquipmentSpecification(input: UpdateEquipmentSpecificationInput!): UpdateEquipmentSpecificationPayload
  ""
  updateEquipmentSpecificationProperty(input: UpdateEquipmentSpecificationPropertyInput!): UpdateEquipmentSpecificationPropertyPayload
  ""
  updateEquipmentVersion(input: UpdateEquipmentVersionInput!): UpdateEquipmentVersionPayload
  ""
  updateEvaluatedProperty(input: UpdateEvaluatedPropertyInput!): UpdateEvaluatedPropertyPayload
  ""
  updateEvent(input: UpdateEventInput!): UpdateEventPayload
  ""
  updateEventAssociation(input: UpdateEventAssociationInput!): UpdateEventAssociationPayload
  ""
  updateEventProperty(input: UpdateEventPropertyInput!): UpdateEventPropertyPayload
  ""
  updateEventSubtype(input: UpdateEventSubtypeInput!): UpdateEventSubtypePayload
  ""
  updateEventType(input: UpdateEventTypeInput!): UpdateEventTypePayload
  ""
  updateForm(input: UpdateFormInput!): UpdateFormPayload
  ""
  updateHierarchyScope(input: UpdateHierarchyScopeInput!): UpdateHierarchyScopePayload
  ""
  updateInformationObject(input: UpdateInformationObjectInput!): UpdateInformationObjectPayload
  ""
  updateJobList(input: UpdateJobListInput!): UpdateJobListPayload
  ""
  updateJobOrder(input: UpdateJobOrderInput!): UpdateJobOrderPayload
  ""
  updateJobOrderParameter(input: UpdateJobOrderParameterInput!): UpdateJobOrderParameterPayload
  ""
  updateJobResponse(input: UpdateJobResponseInput!): UpdateJobResponsePayload
  ""
  updateJobResponseData(input: UpdateJobResponseDataInput!): UpdateJobResponseDataPayload
  ""
  updateJobResponseList(input: UpdateJobResponseListInput!): UpdateJobResponseListPayload
  ""
  updateLibreService(input: UpdateLibreServiceInput!): UpdateLibreServicePayload
  ""
  updateMaterialActual(input: UpdateMaterialActualInput!): UpdateMaterialActualPayload
  ""
  updateMaterialActualProperty(input: UpdateMaterialActualPropertyInput!): UpdateMaterialActualPropertyPayload
  ""
  updateMaterialAlternate(input: UpdateMaterialAlternateInput!): UpdateMaterialAlternatePayload
  ""
  updateMaterialClass(input: UpdateMaterialClassInput!): UpdateMaterialClassPayload
  ""
  updateMaterialClassProperty(input: UpdateMaterialClassPropertyInput!): UpdateMaterialClassPropertyPayload
  ""
  updateMaterialClassVersion(input: UpdateMaterialClassVersionInput!): UpdateMaterialClassVersionPayload
  ""
  updateMaterialDefinition(input: UpdateMaterialDefinitionInput!): UpdateMaterialDefinitionPayload
  ""
  updateMaterialDefinitionProperty(input: UpdateMaterialDefinitionPropertyInput!): UpdateMaterialDefinitionPropertyPayload
  ""
  updateMaterialDefinitionVersion(input: UpdateMaterialDefinitionVersionInput!): UpdateMaterialDefinitionVersionPayload
  ""
  updateMaterialLot(input: UpdateMaterialLotInput!): UpdateMaterialLotPayload
  ""
  updateMaterialLotProperty(input: UpdateMaterialLotPropertyInput!): UpdateMaterialLotPropertyPayload
  ""
  updateMaterialRequirement(input: UpdateMaterialRequirementInput!): UpdateMaterialRequirementPayload
  ""
  updateMaterialRequirementProperty(input: UpdateMaterialRequirementPropertyInput!): UpdateMaterialRequirementPropertyPayload
  ""
  updateMaterialSpecification(input: UpdateMaterialSpecificationInput!): UpdateMaterialSpecificationPayload
  ""
  updateMaterialSpecificationProperty(input: UpdateMaterialSpecificationPropertyInput!): UpdateMaterialSpecificationPropertyPayload
  ""
  updateMaterialSubLot(input: UpdateMaterialSubLotInput!): UpdateMaterialSubLotPayload
  ""
  updateMenu(input: UpdateMenuInput!): UpdateMenuPayload
  ""
  updateMultiplicity(input: UpdateMultiplicityInput!): UpdateMultiplicityPayload
  ""
  updateOperationalLocation(input: UpdateOperationalLocationInput!): UpdateOperationalLocationPayload
  ""
  updateOperationalLocationClass(input: UpdateOperationalLocationClassInput!): UpdateOperationalLocationClassPayload
  ""
  updateOperationalLocationClassProperty(input: UpdateOperationalLocationClassPropertyInput!): UpdateOperationalLocationClassPropertyPayload
  ""
  updateOperationalLocationClassVersion(input: UpdateOperationalLocationClassVersionInput!): UpdateOperationalLocationClassVersionPayload
  ""
  updateOperationalLocationProperty(input: UpdateOperationalLocationPropertyInput!): UpdateOperationalLocationPropertyPayload
  ""
  updateOperationalLocationVersion(input: UpdateOperationalLocationVersionInput!): UpdateOperationalLocationVersionPayload
  ""
  updateOperationsDefinition(input: UpdateOperationsDefinitionInput!): UpdateOperationsDefinitionPayload
  ""
  updateOperationsDefinitionVersion(input: UpdateOperationsDefinitionVersionInput!): UpdateOperationsDefinitionVersionPayload
  ""
  updateOperationsEvent(input: UpdateOperationsEventInput!): UpdateOperationsEventPayload
  ""
  updateOperationsEventClass(input: UpdateOperationsEventClassInput!): UpdateOperationsEventClassPayload
  ""
  updateOperationsEventClassProperty(input: UpdateOperationsEventClassPropertyInput!): UpdateOperationsEventClassPropertyPayload
  ""
  updateOperationsEventClassRecordSpecification(input: UpdateOperationsEventClassRecordSpecificationInput!): UpdateOperationsEventClassRecordSpecificationPayload
  ""
  updateOperationsEventClassVersion(input: UpdateOperationsEventClassVersionInput!): UpdateOperationsEventClassVersionPayload
  ""
  updateOperationsEventDefinition(input: UpdateOperationsEventDefinitionInput!): UpdateOperationsEventDefinitionPayload
  ""
  updateOperationsEventDefinitionProperty(input: UpdateOperationsEventDefinitionPropertyInput!): UpdateOperationsEventDefinitionPropertyPayload
  ""
  updateOperationsEventDefinitionRecordSpecification(input: UpdateOperationsEventDefinitionRecordSpecificationInput!): UpdateOperationsEventDefinitionRecordSpecificationPayload
  ""
  updateOperationsEventDefinitionVersion(input: UpdateOperationsEventDefinitionVersionInput!): UpdateOperationsEventDefinitionVersionPayload
  ""
  updateOperationsEventProperty(input: UpdateOperationsEventPropertyInput!): UpdateOperationsEventPropertyPayload
  ""
  updateOperationsEventRecord(input: UpdateOperationsEventRecordInput!): UpdateOperationsEventRecordPayload
  ""
  updateOperationsEventRecordEntry(input: UpdateOperationsEventRecordEntryInput!): UpdateOperationsEventRecordEntryPayload
  ""
  updateOperationsMaterialBill(input: UpdateOperationsMaterialBillInput!): UpdateOperationsMaterialBillPayload
  ""
  updateOperationsPerformance(input: UpdateOperationsPerformanceInput!): UpdateOperationsPerformancePayload
  ""
  updateOperationsRequest(input: UpdateOperationsRequestInput!): UpdateOperationsRequestPayload
  ""
  updateOperationsResponse(input: UpdateOperationsResponseInput!): UpdateOperationsResponsePayload
  ""
  updateOperationsResponseProperty(input: UpdateOperationsResponsePropertyInput!): UpdateOperationsResponsePropertyPayload
  ""
  updateOperationsSchedule(input: UpdateOperationsScheduleInput!): UpdateOperationsSchedulePayload
  ""
  updateOperationsSegment(input: UpdateOperationsSegmentInput!): UpdateOperationsSegmentPayload
  ""
  updateOperationsSegmentDependency(input: UpdateOperationsSegmentDependencyInput!): UpdateOperationsSegmentDependencyPayload
  ""
  updateParameterSpecification(input: UpdateParameterSpecificationInput!): UpdateParameterSpecificationPayload
  ""
  updatePayloadFieldDefinition(input: UpdatePayloadFieldDefinitionInput!): UpdatePayloadFieldDefinitionPayload
  ""
  updatePerson(input: UpdatePersonInput!): UpdatePersonPayload
  ""
  updatePersonProperty(input: UpdatePersonPropertyInput!): UpdatePersonPropertyPayload
  ""
  updatePersonVersion(input: UpdatePersonVersionInput!): UpdatePersonVersionPayload
  ""
  updatePersonnelActual(input: UpdatePersonnelActualInput!): UpdatePersonnelActualPayload
  ""
  updatePersonnelActualProperty(input: UpdatePersonnelActualPropertyInput!): UpdatePersonnelActualPropertyPayload
  ""
  updatePersonnelClass(input: UpdatePersonnelClassInput!): UpdatePersonnelClassPayload
  ""
  updatePersonnelClassProperty(input: UpdatePersonnelClassPropertyInput!): UpdatePersonnelClassPropertyPayload
  ""
  updatePersonnelClassVersion(input: UpdatePersonnelClassVersionInput!): UpdatePersonnelClassVersionPayload
  ""
  updatePersonnelRequirement(input: UpdatePersonnelRequirementInput!): UpdatePersonnelRequirementPayload
  ""
  updatePersonnelRequirementProperty(input: UpdatePersonnelRequirementPropertyInput!): UpdatePersonnelRequirementPropertyPayload
  ""
  updatePersonnelSpecification(input: UpdatePersonnelSpecificationInput!): UpdatePersonnelSpecificationPayload
  ""
  updatePersonnelSpecificationProperty(input: UpdatePersonnelSpecificationPropertyInput!): UpdatePersonnelSpecificationPropertyPayload
  ""
  updatePhysicalAsset(input: UpdatePhysicalAssetInput!): UpdatePhysicalAssetPayload
  ""
  updatePhysicalAssetActual(input: UpdatePhysicalAssetActualInput!): UpdatePhysicalAssetActualPayload
  ""
  updatePhysicalAssetActualProperty(input: UpdatePhysicalAssetActualPropertyInput!): UpdatePhysicalAssetActualPropertyPayload
  ""
  updatePhysicalAssetClass(input: UpdatePhysicalAssetClassInput!): UpdatePhysicalAssetClassPayload
  ""
  updatePhysicalAssetClassProperty(input: UpdatePhysicalAssetClassPropertyInput!): UpdatePhysicalAssetClassPropertyPayload
  ""
  updatePhysicalAssetClassVersion(input: UpdatePhysicalAssetClassVersionInput!): UpdatePhysicalAssetClassVersionPayload
  ""
  updatePhysicalAssetDataSource(input: UpdatePhysicalAssetDataSourceInput!): UpdatePhysicalAssetDataSourcePayload
  ""
  updatePhysicalAssetProperty(input: UpdatePhysicalAssetPropertyInput!): UpdatePhysicalAssetPropertyPayload
  ""
  updatePhysicalAssetRequirement(input: UpdatePhysicalAssetRequirementInput!): UpdatePhysicalAssetRequirementPayload
  ""
  updatePhysicalAssetRequirementProperty(input: UpdatePhysicalAssetRequirementPropertyInput!): UpdatePhysicalAssetRequirementPropertyPayload
  ""
  updatePhysicalAssetSpecification(input: UpdatePhysicalAssetSpecificationInput!): UpdatePhysicalAssetSpecificationPayload
  ""
  updatePhysicalAssetSpecificationProperty(input: UpdatePhysicalAssetSpecificationPropertyInput!): UpdatePhysicalAssetSpecificationPropertyPayload
  ""
  updatePhysicalAssetVersion(input: UpdatePhysicalAssetVersionInput!): UpdatePhysicalAssetVersionPayload
  ""
  updateProcessSegment(input: UpdateProcessSegmentInput!): UpdateProcessSegmentPayload
  ""
  updateProcessSegmentDependency(input: UpdateProcessSegmentDependencyInput!): UpdateProcessSegmentDependencyPayload
  ""
  updateProcessSegmentParameter(input: UpdateProcessSegmentParameterInput!): UpdateProcessSegmentParameterPayload
  ""
  updateProcessSegmentVersion(input: UpdateProcessSegmentVersionInput!): UpdateProcessSegmentVersionPayload
  ""
  updatePropertyMeasurement(input: UpdatePropertyMeasurementInput!): UpdatePropertyMeasurementPayload
  ""
  updatePropertyNameAlias(input: UpdatePropertyNameAliasInput!): UpdatePropertyNameAliasPayload
  ""
  updatePropertyValueAlias(input: UpdatePropertyValueAliasInput!): UpdatePropertyValueAliasPayload
  ""
  updateRule(input: UpdateRuleInput!): UpdateRulePayload
  ""
  updateSecret(input: UpdateSecretInput!): UpdateSecretPayload
  ""
  updateSecretVersion(input: UpdateSecretVersionInput!): UpdateSecretVersionPayload
  ""
  updateSegmentData(input: UpdateSegmentDataInput!): UpdateSegmentDataPayload
  ""
  updateSegmentParameter(input: UpdateSegmentParameterInput!): UpdateSegmentParameterPayload
  ""
  updateSegmentRequirement(input: UpdateSegmentRequirementInput!): UpdateSegmentRequirementPayload
  ""
  updateSegmentResponse(input: UpdateSegmentResponseInput!): UpdateSegmentResponsePayload
  ""
  updateSignature(input: UpdateSignatureInput!): UpdateSignaturePayload
  ""
  updateSignatureReason(input: UpdateSignatureReasonInput!): UpdateSignatureReasonPayload
  ""
  updateSpatialDefinition(input: UpdateSpatialDefinitionInput!): UpdateSpatialDefinitionPayload
  ""
  updateStateModelAction(input: UpdateStateModelActionInput!): UpdateStateModelActionPayload
  ""
  updateStateModelDefinition(input: UpdateStateModelDefinitionInput!): UpdateStateModelDefinitionPayload
  ""
  updateStateModelEvent(input: UpdateStateModelEventInput!): UpdateStateModelEventPayload
  ""
  updateStateModelInstance(input: UpdateStateModelInstanceInput!): UpdateStateModelInstancePayload
  ""
  updateStateModelProperty(input: UpdateStateModelPropertyInput!): UpdateStateModelPropertyPayload
  ""
  updateStateModelState(input: UpdateStateModelStateInput!): UpdateStateModelStatePayload
  ""
  updateStateModelTransition(input: UpdateStateModelTransitionInput!): UpdateStateModelTransitionPayload
  ""
  updateStateTransitionInstance(input: UpdateStateTransitionInstanceInput!): UpdateStateTransitionInstancePayload
  ""
  updateTestResult(input: UpdateTestResultInput!): UpdateTestResultPayload
  ""
  updateTestSpecification(input: UpdateTestSpecificationInput!): UpdateTestSpecificationPayload
  ""
  updateTestSpecificationCriteria(input: UpdateTestSpecificationCriteriaInput!): UpdateTestSpecificationCriteriaPayload
  ""
  updateTestSpecificationProperty(input: UpdateTestSpecificationPropertyInput!): UpdateTestSpecificationPropertyPayload
  ""
  updateUnitOfMeasure(input: UpdateUnitOfMeasureInput!): UpdateUnitOfMeasurePayload
  ""
  updateUnitOfMeasureConversion(input: UpdateUnitOfMeasureConversionInput!): UpdateUnitOfMeasureConversionPayload
  ""
  updateWorkCalendar(input: UpdateWorkCalendarInput!): UpdateWorkCalendarPayload
  ""
  updateWorkCalendarDefinitionEntry(input: UpdateWorkCalendarDefinitionEntryInput!): UpdateWorkCalendarDefinitionEntryPayload
  ""
  updateWorkCalendarDefinitionEntryProperty(input: UpdateWorkCalendarDefinitionEntryPropertyInput!): UpdateWorkCalendarDefinitionEntryPropertyPayload
  ""
  updateWorkCalendarEntry(input: UpdateWorkCalendarEntryInput!): UpdateWorkCalendarEntryPayload
  ""
  updateWorkCalendarEntryProperty(input: UpdateWorkCalendarEntryPropertyInput!): UpdateWorkCalendarEntryPropertyPayload
  ""
  updateWorkDirective(input: UpdateWorkDirectiveInput!): UpdateWorkDirectivePayload
  ""
  updateWorkMaster(input: UpdateWorkMasterInput!): UpdateWorkMasterPayload
  ""
  updateWorkPerformance(input: UpdateWorkPerformanceInput!): UpdateWorkPerformancePayload
  ""
  updateWorkRequest(input: UpdateWorkRequestInput!): UpdateWorkRequestPayload
  ""
  updateWorkResponse(input: UpdateWorkResponseInput!): UpdateWorkResponsePayload
  ""
  updateWorkSchedule(input: UpdateWorkScheduleInput!): UpdateWorkSchedulePayload
  ""
  updateWorkflowError(input: UpdateWorkflowErrorInput!): UpdateWorkflowErrorPayload
  ""
  updateWorkflowMessage(input: UpdateWorkflowMessageInput!): UpdateWorkflowMessagePayload
  ""
  updateWorkflowShape(input: UpdateWorkflowShapeInput!): UpdateWorkflowShapePayload
  ""
  updateWorkflowSpecification(input: UpdateWorkflowSpecificationInput!): UpdateWorkflowSpecificationPayload
  ""
  updateWorkflowSpecificationConnection(input: UpdateWorkflowSpecificationConnectionInput!): UpdateWorkflowSpecificationConnectionPayload
  ""
  updateWorkflowSpecificationConnectionProperty(input: UpdateWorkflowSpecificationConnectionPropertyInput!): UpdateWorkflowSpecificationConnectionPropertyPayload
  ""
  updateWorkflowSpecificationConnectionType(input: UpdateWorkflowSpecificationConnectionTypeInput!): UpdateWorkflowSpecificationConnectionTypePayload
  ""
  updateWorkflowSpecificationConnectionTypeProperty(input: UpdateWorkflowSpecificationConnectionTypePropertyInput!): UpdateWorkflowSpecificationConnectionTypePropertyPayload
  ""
  updateWorkflowSpecificationNode(input: UpdateWorkflowSpecificationNodeInput!): UpdateWorkflowSpecificationNodePayload
  ""
  updateWorkflowSpecificationNodeProperty(input: UpdateWorkflowSpecificationNodePropertyInput!): UpdateWorkflowSpecificationNodePropertyPayload
  ""
  updateWorkflowSpecificationNodeTestCase(input: UpdateWorkflowSpecificationNodeTestCaseInput!): UpdateWorkflowSpecificationNodeTestCasePayload
  ""
  updateWorkflowSpecificationNodeType(input: UpdateWorkflowSpecificationNodeTypeInput!): UpdateWorkflowSpecificationNodeTypePayload
  ""
  updateWorkflowSpecificationNodeTypeProperty(input: UpdateWorkflowSpecificationNodeTypePropertyInput!): UpdateWorkflowSpecificationNodeTypePropertyPayload
  ""
  updateWorkflowSpecificationNodeVariable(input: UpdateWorkflowSpecificationNodeVariableInput!): UpdateWorkflowSpecificationNodeVariablePayload
  ""
  updateWorkflowSpecificationProperty(input: UpdateWorkflowSpecificationPropertyInput!): UpdateWorkflowSpecificationPropertyPayload
  ""
  updateWorkflowSpecificationVersion(input: UpdateWorkflowSpecificationVersionInput!): UpdateWorkflowSpecificationVersionPayload
  ""
  updateWorkflowTimer(input: UpdateWorkflowTimerInput!): UpdateWorkflowTimerPayload
  ""
  updateWorkflowWaypoint(input: UpdateWorkflowWaypointInput!): UpdateWorkflowWaypointPayload
}
"""
A logical or physical location where a material lot, material sublot, equipment, physical asset or person 
is located or expected to be located shallbe presented as an operational location. Operational locations 
may be made up of other operational locations.
"""
type OperationalLocation {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The currently active version. To find a version that was active at a point in time, use versions with a filter. "
  activeVersion(filter: OperationalLocationVersionFilter): OperationalLocationVersion
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  """
  A unique identification of a specific operational location, within the hierarchy scope of the
  operational location.
  """
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The parent operational location of child this operational location. "
  isMadeUpOf(filter: OperationalLocationFilter): OperationalLocation
  " The child operational location(s) contained within this operational location. "
  isPartOf(filter: OperationalLocationFilter, first: Int, offset: Int, order: OperationalLocationOrder): [OperationalLocation]
  ""
  isPartOfAggregate(filter: OperationalLocationFilter): OperationalLocationAggregateResult
  " The label is last node in the fully qualified name. "
  label: String!
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " Link to all available versions for this entity. "
  versions(filter: OperationalLocationVersionFilter, first: Int, offset: Int, order: OperationalLocationVersionOrder): [OperationalLocationVersion]
  ""
  versionsAggregate(filter: OperationalLocationVersionFilter): OperationalLocationVersionAggregateResult
}
""
type OperationalLocationAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  nextVersionMax: String
  ""
  nextVersionMin: String
}
"""
A representation of a grouping of operational locations with similar characteristics for a definite 
purpose such as manufacturing operations definition, scheduling, capability and performance shall be 
presented as an operational location class. Any operational location may be a member of zero ormore 
operational location classes.

An operational class may be defined as a derived class specialization of zero or more base operational classes.

An operational location class may be made up of zero or more operational location classes.
"""
type OperationalLocationClass {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The currently active version. To find a version that was active at a point in time, use versions with a filter. "
  activeVersion(filter: OperationalLocationClassVersionFilter): OperationalLocationClassVersion
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " A unique identification of a specific operational location class. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The operational location class(s) being derived from this base operational location class(s). "
  includedIn(filter: OperationalLocationClassVersionFilter, first: Int, offset: Int, order: OperationalLocationClassVersionOrder): [OperationalLocationClassVersion]
  ""
  includedInAggregate(filter: OperationalLocationClassVersionFilter): OperationalLocationClassVersionAggregateResult
  " The parent operational location class that this child operational location class makes up a part. "
  isMadeUpOf(filter: OperationalLocationClassFilter): OperationalLocationClass
  " This parent operational location class is whole of the child operational location class(s) as the part. "
  isPartOf(filter: OperationalLocationClassFilter, first: Int, offset: Int, order: OperationalLocationClassOrder): [OperationalLocationClass]
  ""
  isPartOfAggregate(filter: OperationalLocationClassFilter): OperationalLocationClassAggregateResult
  " The label is last node in the fully qualified name. "
  label: String!
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  " The operational location version(s) defined by this operational location class. "
  operationalLocationVersions(filter: OperationalLocationVersionFilter, first: Int, offset: Int, order: OperationalLocationVersionOrder): [OperationalLocationVersion]
  ""
  operationalLocationVersionsAggregate(filter: OperationalLocationVersionFilter): OperationalLocationVersionAggregateResult
  " Associated OperationsRecordEntries from Operations Events "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " Link to all available versions for this entity. "
  versions(filter: OperationalLocationClassVersionFilter, first: Int, offset: Int, order: OperationalLocationClassVersionOrder): [OperationalLocationClassVersion]
  ""
  versionsAggregate(filter: OperationalLocationClassVersionFilter): OperationalLocationClassVersionAggregateResult
}
""
type OperationalLocationClassAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  nextVersionMax: String
  ""
  nextVersionMin: String
}
"""
Properties of an operational location class shall be defined as operational location class property(s). 
An operational location class property may contain nested operational location class property(s). An 
operational location class property may have zero or more operational location property(s) mapping to it.
"""
type OperationalLocationClassProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Additional information about the operational location class property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " A unique identification of a specific operational location class property within the operational location class. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The parent operational location class property of this operational location class property. "
  isMadeUpOf(filter: OperationalLocationClassPropertyFilter): OperationalLocationClassProperty
  " The child operational location class property(s) of this operational location class property. "
  isPartOf(filter: OperationalLocationClassPropertyFilter, first: Int, offset: Int, order: OperationalLocationClassPropertyOrder): [OperationalLocationClassProperty]
  ""
  isPartOfAggregate(filter: OperationalLocationClassPropertyFilter): OperationalLocationClassPropertyAggregateResult
  " The label is last node in the fully qualified name. "
  label: String!
  " The operational location property(s) is mapping to this operational location class property. "
  mapsTo(filter: OperationalLocationPropertyFilter, first: Int, offset: Int, order: OperationalLocationPropertyOrder): [OperationalLocationProperty]
  ""
  mapsToAggregate(filter: OperationalLocationPropertyFilter): OperationalLocationPropertyAggregateResult
  " The operational location class property(s) of this operational location class "
  operationalLocationClassVersion(filter: OperationalLocationClassVersionFilter): OperationalLocationClassVersion!
  " Defines the type of the property. "
  propertyType: Isa95PropertyType!
  " The value, set of values, or range of the property. "
  value: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type OperationalLocationClassPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  valueMax: String
  ""
  valueMin: String
}
"""
A representation of a grouping of operational locations with similar characteristics for a definite 
purpose such as manufacturing operations definition, scheduling, capability and performance shall be 
presented as an operational location class. Any operational location may be a member of zero ormore 
operational location classes.

An operational class may be defined as a derived class specialization of zero or more base operational classes.

An operational location class may be made up of zero or more operational location classes.
"""
type OperationalLocationClassVersion {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Contains additional information and descriptions of the operational location. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of a specific operational location class version. "
  id: String!
  ""
  id_version: String!
  " Unique internal database identifier. "
  iid: ID!
  " The derived operational location class includes properties of this base operational location class(s). "
  includesPropertiesOf(filter: OperationalLocationClassFilter, first: Int, offset: Int, order: OperationalLocationClassOrder): [OperationalLocationClass]
  ""
  includesPropertiesOfAggregate(filter: OperationalLocationClassFilter): OperationalLocationClassAggregateResult
  " The operational location class that uses this operational location class version as it's active version. "
  isActiveVersionOf(filter: OperationalLocationClassFilter): OperationalLocationClass
  " The parent operational location class version that this child operational location class makes up a part. "
  isMadeUpOf(filter: OperationalLocationClassVersionFilter): OperationalLocationClassVersion
  " This parent operational location class version is whole of the child operational location class(s) as the part. "
  isPartOf(filter: OperationalLocationClassVersionFilter, first: Int, offset: Int, order: OperationalLocationClassVersionOrder): [OperationalLocationClassVersion]
  ""
  isPartOfAggregate(filter: OperationalLocationClassVersionFilter): OperationalLocationClassVersionAggregateResult
  " The label is last node in the fully qualified name. "
  label: String!
  " A short description of the material definition. "
  name: String
  " The parent operational location class is the whole of the versions. "
  operationalLocationClass(filter: OperationalLocationClassFilter): OperationalLocationClass!
  " The operational location class property(s) of this operational location class. "
  properties(filter: OperationalLocationClassPropertyFilter, first: Int, offset: Int, order: OperationalLocationClassPropertyOrder): [OperationalLocationClassProperty]
  ""
  propertiesAggregate(filter: OperationalLocationClassPropertyFilter): OperationalLocationClassPropertyAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
type OperationalLocationClassVersionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  nameMax: String
  ""
  nameMin: String
  ""
  versionMax: String
  ""
  versionMin: String
}
"""
Properties of operational locations shall be presented as operational location properties. An operational 
location shall have zero or more operational location properties. These specify the current property 
values of the operational location for the associated operational location class property. Operational 
location properties may include a unit of measure.

Operational location properties may contain nested operational location properties.
"""
type OperationalLocationProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Additional information about the operational location property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " A unique identification of a specific operational location class property within the operational location class. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The parent operational location property of this operational location property. "
  isMadeUpOf(filter: OperationalLocationPropertyFilter): OperationalLocationProperty
  " The child operational location property(s) of this operational location property. "
  isPartOf(filter: OperationalLocationPropertyFilter, first: Int, offset: Int, order: OperationalLocationPropertyOrder): [OperationalLocationProperty]
  ""
  isPartOfAggregate(filter: OperationalLocationPropertyFilter): OperationalLocationPropertyAggregateResult
  " The label is last node in the fully qualified name. "
  label: String!
  " The operational location class property to which this operational location class property maps. "
  mapsTo(filter: OperationalLocationClassPropertyFilter): OperationalLocationClassProperty
  " This operational location property(s) of the operational location. "
  operationalLocationVersion(filter: OperationalLocationVersionFilter): OperationalLocationVersion!
  " The value, set of values, or range of the property. "
  value: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type OperationalLocationPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  valueMax: String
  ""
  valueMin: String
}
"""
A logical or physical location where a material lot, material sublot, equipment, physical asset or person 
is located or expected to be located shallbe presented as an operational location. Operational locations 
may be made up of other operational locations.
"""
type OperationalLocationVersion {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Contains additional information and descriptions of the operational location. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of a specific operational location, within the scope of the information exchanged. "
  id: String!
  ""
  id_version: String!
  " Unique internal database identifier. "
  iid: ID!
  " The operational location that uses this operational location version as it's active version. "
  isActiveVersionOf(filter: OperationalLocationFilter): OperationalLocation
  " The parent operational location version of child this operational location version. "
  isMadeUpOf(filter: OperationalLocationVersionFilter): OperationalLocationVersion
  " The child operational location(s) contained within this operational location version. "
  isPartOf(filter: OperationalLocationVersionFilter, first: Int, offset: Int, order: OperationalLocationVersionOrder): [OperationalLocationVersion]
  ""
  isPartOfAggregate(filter: OperationalLocationVersionFilter): OperationalLocationVersionAggregateResult
  " A short description of the material definition. "
  name: String
  " The parent operational location is the whole of the versions. "
  operationalLocation(filter: OperationalLocationFilter): OperationalLocation!
  " The operational location class(s) to which this operational location belong. "
  operationalLocationClasses(filter: OperationalLocationClassFilter, first: Int, offset: Int, order: OperationalLocationClassOrder): [OperationalLocationClass]
  ""
  operationalLocationClassesAggregate(filter: OperationalLocationClassFilter): OperationalLocationClassAggregateResult
  " The operational location property(s) of this operational location. "
  properties(filter: OperationalLocationPropertyFilter, first: Int, offset: Int, order: OperationalLocationPropertyOrder): [OperationalLocationProperty]
  ""
  propertiesAggregate(filter: OperationalLocationPropertyFilter): OperationalLocationPropertyAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  """
  Spatially defines the operational location as a zero-dimensional point, one-dimensional line, or 
  two-dimensional shape or three dimensional solid. 
  """
  spatialDefinition(filter: SpatialDefinitionFilter): SpatialDefinition
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
type OperationalLocationVersionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  nameMax: String
  ""
  nameMin: String
  ""
  versionMax: String
  ""
  versionMin: String
}
"""
An operations definition defines the resources required to perform a specified operation. The 
operations definition may apply to defining production, maintenance, quality test and inventory 
operations. The actual definition of how to perform the operation is not included in the object 
model and are defined in a work definition.
"""
type OperationsDefinition {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The currently active version. To find a version that was active at a point in time, use versions with a filter. "
  activeVersion(filter: OperationsDefinitionVersionFilter): OperationsDefinitionVersion
  " The child operations definition(s) in support of this parent operations definition. "
  children(filter: OperationsDefinitionFilter, first: Int, offset: Int, order: OperationsDefinitionOrder): [OperationsDefinition]
  ""
  childrenAggregate(filter: OperationsDefinitionFilter): OperationsDefinitionAggregateResult
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Uniquely identifies the operations definition. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  " The operations request(s) associated with this operations definition. "
  operationsRequests(filter: OperationsRequestFilter, first: Int, offset: Int, order: OperationsRequestOrder): [OperationsRequest]
  ""
  operationsRequestsAggregate(filter: OperationsRequestFilter): OperationsRequestAggregateResult
  " The operations response(s) associated with this operations definition. "
  operationsResponses(filter: OperationsResponseFilter, first: Int, offset: Int, order: OperationsResponseOrder): [OperationsResponse]
  ""
  operationsResponsesAggregate(filter: OperationsResponseFilter): OperationsResponseAggregateResult
  """
   In support of the definition type attribute, this instance or child pattern operations definition 
    includes objects, relationships, and properties of the operations definition. 
  """
  parent(filter: OperationsDefinitionFilter): OperationsDefinition
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " The segment requirement(s) associated with this operations definition. "
  segmentRequirements(filter: SegmentRequirementFilter, first: Int, offset: Int, order: SegmentRequirementOrder): [SegmentRequirement]
  ""
  segmentRequirementsAggregate(filter: SegmentRequirementFilter): SegmentRequirementAggregateResult
  " The segment response(s) associated with this operations definition. "
  segmentResponses(filter: SegmentResponseFilter, first: Int, offset: Int, order: SegmentResponseOrder): [SegmentResponse]
  ""
  segmentResponsesAggregate(filter: SegmentResponseFilter): SegmentResponseAggregateResult
  " Link to all available versions for this entity. "
  versions(filter: OperationsDefinitionVersionFilter, first: Int, offset: Int, order: OperationsDefinitionVersionOrder): [OperationsDefinitionVersion]
  ""
  versionsAggregate(filter: OperationsDefinitionVersionFilter): OperationsDefinitionVersionAggregateResult
  " This operations definition(s) applies zero to many work masters. "
  workMasters(filter: WorkMasterFilter, first: Int, offset: Int, order: WorkMasterOrder): [WorkMaster]
  ""
  workMastersAggregate(filter: WorkMasterFilter): WorkMasterAggregateResult
}
""
type OperationsDefinitionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  nextVersionMax: String
  ""
  nextVersionMin: String
}
"""
A specific version of an operations definition. An operations definition defines the resources 
required to perform a specified operation. The operations definition may apply to defining production, 
maintenance, quality test and inventory operations. The actual definition of how to perform the 
operation is not included in the object model and are defined in a work definition.
"""
type OperationsDefinitionVersion {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Identification of the external bill of material associated with this operation definition. "
  billOfMaterial: String
  " Identification of the external bill of resource associated with this operation definition. "
  billOfResources: String
  " Defines the type of the process segment. "
  definitionType: DefinitionType
  " Contains additional information and descriptions of the operations definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " Uniquely identifies the operations definition version. "
  id: String!
  ""
  id_version: String!
  " Unique internal database identifier. "
  iid: ID!
  " The operations definition that uses this operations definition version as it's active version. "
  isActiveVersionOf(filter: OperationsDefinitionFilter): OperationsDefinition
  " The operation material bills associated with this operations definition version. "
  materialsBill(filter: OperationsMaterialBillFilter, first: Int, offset: Int, order: OperationsMaterialBillOrder): [OperationsMaterialBill]
  ""
  materialsBillAggregate(filter: OperationsMaterialBillFilter): OperationsMaterialBillAggregateResult
  " The operations definition that this operations definition version relates to. "
  operationsDefinition(filter: OperationsDefinitionFilter): OperationsDefinition!
  " Describes the category of the activity. "
  operationsType: WorkType!
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " The detailed information needed to quantify a specific operation definition. "
  segments(filter: OperationsSegmentFilter, first: Int, offset: Int, order: OperationsSegmentOrder): [OperationsSegment]
  ""
  segmentsAggregate(filter: OperationsSegmentFilter): OperationsSegmentAggregateResult
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
type OperationsDefinitionVersionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  billOfMaterialMax: String
  ""
  billOfMaterialMin: String
  ""
  billOfResourcesMax: String
  ""
  billOfResourcesMin: String
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  versionMax: String
  ""
  versionMin: String
}
""
type OperationsEvent {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  ""
  category: String
  ""
  children(filter: OperationsEventFilter, first: Int, offset: Int, order: OperationsEventOrder): [OperationsEvent]
  ""
  childrenAggregate(filter: OperationsEventFilter): OperationsEventAggregateResult
  ""
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  ""
  enterpriseFunction: EnterpriseFunctionEnum
  ""
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  ""
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  ""
  momFunction: MOMFunctionEnum
  ""
  operationsEventDefinition(filter: OperationsEventDefinitionFilter): OperationsEventDefinition!
  ""
  operationsEventLevel: OperationsEventLevelEnum
  ""
  operationsEventType: OperationsEventTypeEnum
  ""
  operationsType: WorkType
  ""
  parent(filter: OperationsEventFilter): OperationsEvent
  ""
  priority: String
  ""
  properties(filter: OperationsEventPropertyFilter, first: Int, offset: Int, order: OperationsEventPropertyOrder): [OperationsEventProperty]
  ""
  propertiesAggregate(filter: OperationsEventPropertyFilter): OperationsEventPropertyAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  ""
  recordTimestamp: DateTime!
  ""
  records(filter: OperationsEventRecordFilter, first: Int, offset: Int, order: OperationsEventRecordOrder): [OperationsEventRecord]
  ""
  recordsAggregate(filter: OperationsEventRecordFilter): OperationsEventRecordAggregateResult
  ""
  source: String
}
""
type OperationsEventAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  categoryMax: String
  ""
  categoryMin: String
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  priorityMax: String
  ""
  priorityMin: String
  ""
  recordTimestampMax: DateTime
  ""
  recordTimestampMin: DateTime
  ""
  sourceMax: String
  ""
  sourceMin: String
}
""
type OperationsEventClass {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  ""
  activeVersion(filter: OperationsEventClassVersionFilter): OperationsEventClassVersion
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " A unique identification of a specific equipment class, within the scope of the information exchanged. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  "Composition relationship (Is A):"
  includesPropertiesOf(filter: OperationsEventClassFilter, first: Int, offset: Int, order: OperationsEventClassOrder): [OperationsEventClass]
  ""
  includesPropertiesOfAggregate(filter: OperationsEventClassFilter): OperationsEventClassAggregateResult
  "Aggregation relationship (Has A):"
  isAssembledFrom(filter: OperationsEventClassFilter, first: Int, offset: Int, order: OperationsEventClassOrder): [OperationsEventClass]
  ""
  isAssembledFromAggregate(filter: OperationsEventClassFilter): OperationsEventClassAggregateResult
  ""
  isComponentOf(filter: OperationsEventClassFilter): OperationsEventClass
  ""
  isIncludedIn(filter: OperationsEventClassFilter): OperationsEventClass
  " The label is last node in the fully qualified name. "
  label: String!
  ""
  nextVersion: String
  ""
  operationsEventDefinitionVersions(filter: OperationsEventDefinitionVersionFilter, first: Int, offset: Int, order: OperationsEventDefinitionVersionOrder): [OperationsEventDefinitionVersion]
  ""
  operationsEventDefinitionVersionsAggregate(filter: OperationsEventDefinitionVersionFilter): OperationsEventDefinitionVersionAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  ""
  versions(filter: OperationsEventClassVersionFilter, first: Int, offset: Int, order: OperationsEventClassVersionOrder): [OperationsEventClassVersion]
  ""
  versionsAggregate(filter: OperationsEventClassVersionFilter): OperationsEventClassVersionAggregateResult
}
""
type OperationsEventClassAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  nextVersionMax: String
  ""
  nextVersionMin: String
}
""
type OperationsEventClassProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  ""
  children(filter: OperationsEventClassPropertyFilter, first: Int, offset: Int, order: OperationsEventClassPropertyOrder): [OperationsEventClassProperty]
  ""
  childrenAggregate(filter: OperationsEventClassPropertyFilter): OperationsEventClassPropertyAggregateResult
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  ""
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  ""
  operationsEventClassVersion(filter: OperationsEventClassVersionFilter): OperationsEventClassVersion!
  ""
  parent(filter: OperationsEventClassPropertyFilter): OperationsEventClassProperty
  ""
  propertyType: Isa95PropertyType
  ""
  value: String
  ""
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type OperationsEventClassPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  valueMax: String
  ""
  valueMin: String
}
""
type OperationsEventClassRecordSpecification {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  ""
  action: [Action]
  ""
  actionMultiplicity(filter: MultiplicityFilter): Multiplicity
  ""
  definitionType: DefinitionType
  ""
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  ""
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  ""
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  ""
  informationObjectType: [InformationObjectTypeEnum]
  ""
  multiplicity(filter: MultiplicityFilter): Multiplicity
  ""
  operationsEventClassVersion(filter: OperationsEventClassVersionFilter): OperationsEventClassVersion!
}
""
type OperationsEventClassRecordSpecificationAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
}
""
type OperationsEventClassVersion {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  ""
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " A unique identification of a specific record. "
  id: String!
  ""
  id_version: String!
  " Unique internal database identifier. "
  iid: ID!
  " The equipment class that uses this equipment class version as it's active version. "
  isActiveVersionOf(filter: OperationsEventClassFilter): OperationsEventClass
  ""
  operationsEventClass(filter: OperationsEventClassFilter): OperationsEventClass!
  ""
  properties(filter: OperationsEventClassPropertyFilter, first: Int, offset: Int, order: OperationsEventClassPropertyOrder): [OperationsEventClassProperty]
  ""
  propertiesAggregate(filter: OperationsEventClassPropertyFilter): OperationsEventClassPropertyAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  ""
  recordSpecifications(filter: OperationsEventClassRecordSpecificationFilter, first: Int, offset: Int, order: OperationsEventClassRecordSpecificationOrder): [OperationsEventClassRecordSpecification]
  ""
  recordSpecificationsAggregate(filter: OperationsEventClassRecordSpecificationFilter): OperationsEventClassRecordSpecificationAggregateResult
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
type OperationsEventClassVersionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  versionMax: String
  ""
  versionMin: String
}
""
type OperationsEventDefinition {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  ""
  activeVersion(filter: OperationsEventDefinitionVersionFilter): OperationsEventDefinitionVersion
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  ""
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of a specific equipment class, within the scope of the information exchanged. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  "Composition relationship (Is A):"
  includesPropertiesOf(filter: OperationsEventDefinitionFilter, first: Int, offset: Int, order: OperationsEventDefinitionOrder): [OperationsEventDefinition]
  ""
  includesPropertiesOfAggregate(filter: OperationsEventDefinitionFilter): OperationsEventDefinitionAggregateResult
  "Aggregation relationship (Has A):"
  isAssembledFrom(filter: OperationsEventDefinitionFilter, first: Int, offset: Int, order: OperationsEventDefinitionOrder): [OperationsEventDefinition]
  ""
  isAssembledFromAggregate(filter: OperationsEventDefinitionFilter): OperationsEventDefinitionAggregateResult
  ""
  isComponentOf(filter: OperationsEventDefinitionFilter): OperationsEventDefinition
  ""
  isIncludedIn(filter: OperationsEventDefinitionFilter): OperationsEventDefinition
  " The label is last node in the fully qualified name. "
  label: String!
  ""
  nextVersion: String
  ""
  operationsEvents(filter: OperationsEventFilter, first: Int, offset: Int, order: OperationsEventOrder): [OperationsEvent]
  ""
  operationsEventsAggregate(filter: OperationsEventFilter): OperationsEventAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  ""
  versions(filter: OperationsEventDefinitionVersionFilter, first: Int, offset: Int, order: OperationsEventDefinitionVersionOrder): [OperationsEventDefinitionVersion]
  ""
  versionsAggregate(filter: OperationsEventDefinitionVersionFilter): OperationsEventDefinitionVersionAggregateResult
}
""
type OperationsEventDefinitionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  nextVersionMax: String
  ""
  nextVersionMin: String
}
""
type OperationsEventDefinitionProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  ""
  children(filter: OperationsEventDefinitionPropertyFilter, first: Int, offset: Int, order: OperationsEventDefinitionPropertyOrder): [OperationsEventDefinitionProperty]
  ""
  childrenAggregate(filter: OperationsEventDefinitionPropertyFilter): OperationsEventDefinitionPropertyAggregateResult
  ""
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  ""
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  ""
  operationsEventClassProperty(filter: OperationsEventClassPropertyFilter): OperationsEventClassProperty
  ""
  operationsEventDefinitionVersion(filter: OperationsEventDefinitionVersionFilter): OperationsEventDefinitionVersion!
  ""
  parent(filter: OperationsEventDefinitionPropertyFilter): OperationsEventDefinitionProperty
  ""
  value: String
  ""
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type OperationsEventDefinitionPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  valueMax: String
  ""
  valueMin: String
}
""
type OperationsEventDefinitionRecordSpecification {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  ""
  action: [Action]
  ""
  actionMultiplicity(filter: MultiplicityFilter): Multiplicity
  ""
  definitionType: DefinitionType
  ""
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  ""
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  ""
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  ""
  informationObjectType: [InformationObjectTypeEnum]
  ""
  multiplicity(filter: MultiplicityFilter): Multiplicity
  ""
  operationsEventDefinitionVersion(filter: OperationsEventDefinitionVersionFilter): OperationsEventDefinitionVersion!
  ""
  operationsEventRecords(filter: OperationsEventRecordFilter, first: Int, offset: Int, order: OperationsEventRecordOrder): [OperationsEventRecord]
  ""
  operationsEventRecordsAggregate(filter: OperationsEventRecordFilter): OperationsEventRecordAggregateResult
}
""
type OperationsEventDefinitionRecordSpecificationAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
}
""
type OperationsEventDefinitionVersion {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  ""
  category: String
  " A unique identification of a specific equipment class version. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  ""
  enterpriseFunction: EnterpriseFunctionEnum
  ""
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  ""
  id: String!
  ""
  id_version: String!
  " Unique internal database identifier. "
  iid: ID!
  " The equipment class that uses this equipment class version as it's active version. "
  isActiveVersionOf(filter: OperationsEventDefinitionFilter): OperationsEventDefinition
  ""
  momFunction: MOMFunctionEnum
  ""
  operationsEventClasses(filter: OperationsEventClassFilter, first: Int, offset: Int, order: OperationsEventClassOrder): [OperationsEventClass]
  ""
  operationsEventClassesAggregate(filter: OperationsEventClassFilter): OperationsEventClassAggregateResult
  ""
  operationsEventDefinition(filter: OperationsEventDefinitionFilter): OperationsEventDefinition!
  ""
  operationsEventLevel: OperationsEventLevelEnum
  ""
  operationsEventType: OperationsEventTypeEnum
  ""
  operationsType: WorkType
  ""
  priority: [String]
  ""
  properties(filter: OperationsEventDefinitionPropertyFilter, first: Int, offset: Int, order: OperationsEventDefinitionPropertyOrder): [OperationsEventDefinitionProperty]
  ""
  propertiesAggregate(filter: OperationsEventDefinitionPropertyFilter): OperationsEventDefinitionPropertyAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  ""
  recordSpecifications(filter: OperationsEventDefinitionRecordSpecificationFilter, first: Int, offset: Int, order: OperationsEventDefinitionRecordSpecificationOrder): [OperationsEventDefinitionRecordSpecification]
  ""
  recordSpecificationsAggregate(filter: OperationsEventDefinitionRecordSpecificationFilter): OperationsEventDefinitionRecordSpecificationAggregateResult
  ""
  source: String
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
type OperationsEventDefinitionVersionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  categoryMax: String
  ""
  categoryMin: String
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  sourceMax: String
  ""
  sourceMin: String
  ""
  versionMax: String
  ""
  versionMin: String
}
""
type OperationsEventProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  ""
  children(filter: OperationsEventPropertyFilter, first: Int, offset: Int, order: OperationsEventPropertyOrder): [OperationsEventProperty]
  ""
  childrenAggregate(filter: OperationsEventPropertyFilter): OperationsEventPropertyAggregateResult
  ""
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  ""
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  ""
  operationsEvent(filter: OperationsEventFilter): OperationsEvent!
  ""
  operationsEventDefinitionProperty(filter: OperationsEventDefinitionPropertyFilter): OperationsEventDefinitionProperty
  ""
  parent(filter: OperationsEventPropertyFilter): OperationsEventProperty
  ""
  value: String
  ""
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type OperationsEventPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  valueMax: String
  ""
  valueMin: String
}
""
type OperationsEventRecord {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  ""
  action: Action
  ""
  children(filter: OperationsEventRecordFilter, first: Int, offset: Int, order: OperationsEventRecordOrder): [OperationsEventRecord]
  ""
  childrenAggregate(filter: OperationsEventRecordFilter): OperationsEventRecordAggregateResult
  ""
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  ""
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  ""
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  ""
  operationsEvent(filter: OperationsEventFilter): OperationsEvent!
  ""
  operationsEventDefinitionRecordSpecification(filter: OperationsEventDefinitionRecordSpecificationFilter): OperationsEventDefinitionRecordSpecification
  ""
  parent(filter: OperationsEventRecordFilter): OperationsEventRecord
  ""
  recordEntries(filter: OperationsEventRecordEntryFilter, first: Int, offset: Int, order: OperationsEventRecordEntryOrder): [OperationsEventRecordEntry]
  ""
  recordEntriesAggregate(filter: OperationsEventRecordEntryFilter): OperationsEventRecordEntryAggregateResult
  " The date and time the publisher recorded/transacted the action. Record timestamp explicitly states the time that the publisher took the action  "
  recordTimestamp: DateTime
}
""
type OperationsEventRecordAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  recordTimestampMax: DateTime
  ""
  recordTimestampMin: DateTime
}
""
type OperationsEventRecordEntry {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  ""
  children(filter: OperationsEventRecordEntryFilter, first: Int, offset: Int, order: OperationsEventRecordEntryOrder): [OperationsEventRecordEntry]
  ""
  childrenAggregate(filter: OperationsEventRecordEntryFilter): OperationsEventRecordEntryAggregateResult
  ""
  data: String
  ""
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  ""
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " Unique external identifier is a composite of the id and the parent record id. "
  id: String!
  ""
  id_recordId: String!
  " Unique internal database identifier. "
  iid: ID!
  ""
  informationObject(filter: InformationObjectFilter): InformationObject
  ""
  operationsEventRecord(filter: OperationsEventRecordFilter): OperationsEventRecord!
  ""
  parent(filter: OperationsEventRecordEntryFilter): OperationsEventRecordEntry
  ""
  recordId: String!
  ""
  recordTimestamp: DateTime!
}
""
type OperationsEventRecordEntryAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  dataMax: String
  ""
  dataMin: String
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  recordIdMax: String
  ""
  recordIdMin: String
  ""
  recordTimestampMax: DateTime
  ""
  recordTimestampMin: DateTime
}
"""
The collection of all material used in the operation, independent of the process segment the material 
is used in, shall be presented as operations material bills. There may be multiple operations material 
bills with different uses.
"""
type OperationsMaterialBill {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Identification of the bill of material associated with this operations material bill. "
  billOfMaterial: String
  " Contains additional information of the manufacturing bill. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of a manufacturing bill. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " The material bill items that are part of this operations material bill. "
  materialBillItems(filter: MaterialSpecificationFilter, first: Int, offset: Int, order: MaterialSpecificationOrder): [MaterialSpecification]
  ""
  materialBillItemsAggregate(filter: MaterialSpecificationFilter): MaterialSpecificationAggregateResult
  " Identification of the operations definition associated with this operations material bill. "
  operationsDefinitionVersion(filter: OperationsDefinitionVersionFilter): OperationsDefinitionVersion
  " Identification of the operations segment associated with this operations material bill. "
  operationsSegments(filter: OperationsSegmentFilter, first: Int, offset: Int, order: OperationsSegmentOrder): [OperationsSegment]
  ""
  operationsSegmentsAggregate(filter: OperationsSegmentFilter): OperationsSegmentAggregateResult
  " Defines the use of the material. "
  useType: MaterialUse
}
""
type OperationsMaterialBillAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  billOfMaterialMax: String
  ""
  billOfMaterialMin: String
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
}
"""
The performance of the requested manufacturing requests shall be presented as an operations performance. 
Operations performance shall be a collection of operations responses.
"""
type OperationsPerformance {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Contains additional information and descriptions of the operations performance. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The ending time of the associated operations performance. "
  endDateTime: DateTime
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of the operations performance and could include version and revision identification. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The operations responses that make up part of this operations performance as the whole. "
  operationsResponses(filter: OperationsResponseFilter, first: Int, offset: Int, order: OperationsResponseOrder): [OperationsResponse!]!
  ""
  operationsResponsesAggregate(filter: OperationsResponseFilter): OperationsResponseAggregateResult
  " An identification of the associated operations schedule. "
  operationsSchedule(filter: OperationsScheduleFilter): OperationsSchedule
  " Describes the category of operations. "
  operationsType: WorkType!
  " Indicates the state of the operations performance. "
  performanceState: JobState
  " The date and time on which the operations performance was published or generated. "
  publishedDate: DateTime
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " The starting time of the associated operations performance. "
  startDateTime: DateTime
}
""
type OperationsPerformanceAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  endDateTimeMax: DateTime
  ""
  endDateTimeMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  publishedDateMax: DateTime
  ""
  publishedDateMin: DateTime
  ""
  startDateTimeMax: DateTime
  ""
  startDateTimeMin: DateTime
}
"""
A request for an element of an operation schedule shall be presented as an operations request. An 
operations request contains the information required by manufacturing to fulfill the scheduled operation. 
An operations request may be a subset of the business information, or it may contain additional information 
not normally used by the business system.

An operations request may identify or reference the associated operations instructions. An operations 
request shall contain at least one segment requirement, even if the segment requirement spans all of 
the operation.

An operations request may include when to start the operation, typically used if a scheduling system 
controls the schedule; when the operation is to be finished, typically used if the manufacturing operations 
system controls its internal schedule to meet deadlines; and the priority of the request, typically used 
if exact ordering of production is not externally scheduled.

An operations request may be reported on by one or more operations responses. Additional information may 
be described in the parameters, personnel requirements, equipment requirements, physical asset requirements 
and material requirements.
"""
type OperationsRequest {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Contains additional information and descriptions of the operations request. "
  description: String
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of the operations request. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " Notes about this operations request. "
  notes: String
  " The operations definition reference that corresponds to this operations request. "
  operationsDefinition(filter: OperationsDefinitionFilter): OperationsDefinition
  " The operations response(s) related to this operations request(s). "
  operationsResponses(filter: OperationsResponseFilter, first: Int, offset: Int, order: OperationsResponseOrder): [OperationsResponse]
  ""
  operationsResponsesAggregate(filter: OperationsResponseFilter): OperationsResponseAggregateResult
  " The operations schedule object defined in part by this operations request. "
  operationsSchedule(filter: OperationsScheduleFilter): OperationsSchedule!
  " The associated operations segments reference that corresponds to this operations request. "
  operationsSegment(filter: OperationsSegmentFilter): OperationsSegment
  " Describes the category of operations. "
  operationsType: WorkType!
  " The priority of the request. "
  priority: String
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " Indicates the state of the operations request. "
  requestState: ScheduleState!
  " When operation is to be completed. "
  scheduledEndDate: DateTime
  " When operation is to be started. "
  scheduledStartDate: DateTime
  " The segment requirements related to this operations request. "
  segmentRequirements(filter: SegmentRequirementFilter, first: Int, offset: Int, order: SegmentRequirementOrder): [SegmentRequirement!]!
  ""
  segmentRequirementsAggregate(filter: SegmentRequirementFilter): SegmentRequirementAggregateResult
  " The segment response(s) related to this operations request(s). "
  segmentResponses(filter: SegmentResponseFilter, first: Int, offset: Int, order: SegmentResponseOrder): [SegmentResponse]
  ""
  segmentResponsesAggregate(filter: SegmentResponseFilter): SegmentResponseAggregateResult
  " The work request(s) related to this operations request(s). "
  workRequests(filter: WorkRequestFilter, first: Int, offset: Int, order: WorkRequestOrder): [WorkRequest]
  ""
  workRequestsAggregate(filter: WorkRequestFilter): WorkRequestAggregateResult
}
""
type OperationsRequestAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  notesMax: String
  ""
  notesMin: String
  ""
  priorityMax: String
  ""
  priorityMin: String
  ""
  scheduledEndDateMax: DateTime
  ""
  scheduledEndDateMin: DateTime
  ""
  scheduledStartDateMax: DateTime
  ""
  scheduledStartDateMin: DateTime
}
"""
The responses from manufacturing that are associated with an operations request shall be presented as 
operations responses. There may be one or more operations responses for a single operations request if 
the manufacturing facility needs to split the operations request into smaller elements. 

An operations response may include the status of the request, such as the percentage complete, a 
finished status, or an aborted status.
"""
type OperationsResponse {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Contains additional information and descriptions of the operations response. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The ending time of this operations response. "
  endDateTime: DateTime
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " An identification within the associated operations response. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  ""
  isActive: Boolean
  " The operations definition(s) that corresponds to this operations response if it exists or is relevant. "
  operationsDefinition(filter: OperationsDefinitionFilter): OperationsDefinition
  " The operations performance is defined in part by this operations response. "
  operationsPerformance(filter: OperationsPerformanceFilter): OperationsPerformance!
  " The operations request that corresponds to this operations response if it exists or is relevant. "
  operationsRequest(filter: OperationsRequestFilter): OperationsRequest
  " The operations segment(s) that corresponds to this operations response if it exists or is relevant. "
  operationsSegment(filter: OperationsSegmentFilter): OperationsSegment
  " Describes the category of operations. "
  operationsType: WorkType!
  ""
  properties(filter: OperationsResponsePropertyFilter, first: Int, offset: Int, order: OperationsResponsePropertyOrder): [OperationsResponseProperty]
  ""
  propertiesAggregate(filter: OperationsResponsePropertyFilter): OperationsResponsePropertyAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " Indicates the state of the operations response. "
  responseState: JobState
  " The segment requirement(s) related to this operations response. "
  segmentRequirements(filter: SegmentRequirementFilter, first: Int, offset: Int, order: SegmentRequirementOrder): [SegmentRequirement]
  ""
  segmentRequirementsAggregate(filter: SegmentRequirementFilter): SegmentRequirementAggregateResult
  " The segment response(s) related to this operations response. "
  segmentResponses(filter: SegmentResponseFilter, first: Int, offset: Int, order: SegmentResponseOrder): [SegmentResponse!]!
  ""
  segmentResponsesAggregate(filter: SegmentResponseFilter): SegmentResponseAggregateResult
  " The starting time of this operations response. "
  startDateTime: DateTime!
}
""
type OperationsResponseAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  endDateTimeMax: DateTime
  ""
  endDateTimeMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  startDateTimeMax: DateTime
  ""
  startDateTimeMin: DateTime
}
""
type OperationsResponseProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  ""
  children(filter: OperationsResponsePropertyFilter, first: Int, offset: Int, order: OperationsResponsePropertyOrder): [OperationsResponseProperty]
  ""
  childrenAggregate(filter: OperationsResponsePropertyFilter): OperationsResponsePropertyAggregateResult
  ""
  description: String
  ""
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  ""
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  ""
  operationalLocation(filter: OperationalLocationFilter): OperationalLocation
  ""
  operationsResponse(filter: OperationsResponseFilter): OperationsResponse!
  ""
  parent(filter: OperationsResponsePropertyFilter): OperationsResponseProperty
  ""
  quantity: Float!
  ""
  quantityUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  ""
  spatialDefinition(filter: SpatialDefinitionFilter): SpatialDefinition
  ""
  use: String
}
""
type OperationsResponsePropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
  ""
  useMax: String
  ""
  useMin: String
}
"""
A request for operations to be performed shall be presented as an operations schedule. An operations 
schedule shall be made up of one or more operations requests. An operations schedule may be defined 
for any specific category of operations; production, maintenance, quality, or inventory, or it may be 
defined for a combination of categories. When a combination is selected, then the operations requests 
or segment requirements specify the category of the operation.
"""
type OperationsSchedule {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Contains additional information and descriptions of the operations schedule. "
  description: String
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of the operations schedule and could include version and revision identification. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The operations performance(s) reporting the actuals and states references this operations schedule(s). "
  operationsPerformance(filter: OperationsPerformanceFilter, first: Int, offset: Int, order: OperationsPerformanceOrder): [OperationsPerformance]
  ""
  operationsPerformanceAggregate(filter: OperationsPerformanceFilter): OperationsPerformanceAggregateResult
  " The operations requests that make up the operations schedule. "
  operationsRequests(filter: OperationsRequestFilter, first: Int, offset: Int, order: OperationsRequestOrder): [OperationsRequest!]!
  ""
  operationsRequestsAggregate(filter: OperationsRequestFilter): OperationsRequestAggregateResult
  " Describes the category of operation. "
  operationsType: WorkType!
  " The date and time on which the operations schedule was published or generated. "
  publishedDate: DateTime
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " Indicates the state of the operations schedule. "
  scheduleState: ScheduleState
  " The ending time for the associated operations schedule. "
  scheduledEndDate: DateTime
  " The starting time for the associated operations schedule. "
  scheduledStartDate: DateTime
}
""
type OperationsScheduleAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  publishedDateMax: DateTime
  ""
  publishedDateMin: DateTime
  ""
  scheduledEndDateMax: DateTime
  ""
  scheduledEndDateMin: DateTime
  ""
  scheduledStartDateMax: DateTime
  ""
  scheduledStartDateMin: DateTime
}
"""
The information needed to quantify a segment for a specific operation shall be presented as an 
operations segment. An operations segment identifies, references, or corresponds to a process segment.

An operations segment within an operations definition that is specialization of another operations 
definition may be a specialization of an operations segment within that other operations definition.

A pattern operations segment defines a 'template', upon which other pattern or instance operations 
segments may be based. Unlike instance operations segments, pattern operations segments shall not be 
directly scheduled or tracked. Therefore, segment requirements, segment responses and operations 
segment capabilities shall not reference pattern operations segments. In the specialization association 
relationship, 'defined by' on the operation segment object, an instance or child pattern operations 
segment may be defined by a parent pattern.

Operations segments shall assume the definition type (pattern or instance) attribute of the operations 
definition to which they belong. Therefore, all operations segments contained within a pattern operations 
definition shall be assumed to be a pattern, while all operations segments contained within an instance 
operations definition shall be assumed to be an instance.

Where an operations segment references a work master, the definition type attribute of the referenced 
work master shall have the same value as that of the operations segment.  Where an operations segment 
references a process segment, the definition type attribute of the referenced process segment shall 
have the same value as that of the operations segment.

The parameter, personnel, equipment, physical asset and material specifications of an operations segment 
may map to those of any pattern operations segment upon which the operations segment is based.
"""
type OperationsSegment {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Identification of the external bill of material associated with this operation segment. "
  billOfMaterial: String
  " Identification of the external bill of material associated with this operation segment. "
  billOfResources: String
  " The child operations segment(s) in support of this parent operations segment. "
  children(filter: OperationsSegmentFilter, first: Int, offset: Int, order: OperationsSegmentOrder): [OperationsSegment]
  ""
  childrenAggregate(filter: OperationsSegmentFilter): OperationsSegmentAggregateResult
  " Defines the type of the operations segment. "
  definitionType: DefinitionType
  " Contains additional information of the segment. "
  description: String
  " Duration of segment, if known. "
  duration: Float
  " The units of measure of the duration, if defined. "
  durationUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The equipment specification(s) related to this operations segment. "
  equipmentSpecifications(filter: EquipmentSpecificationFilter, first: Int, offset: Int, order: EquipmentSpecificationOrder): [EquipmentSpecification]
  ""
  equipmentSpecificationsAggregate(filter: EquipmentSpecificationFilter): EquipmentSpecificationAggregateResult
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " The last part of the fully qualified id. Used as the display name "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " This segment node(s) to the segment dependency(s). "
  inflows(filter: OperationsSegmentDependencyFilter, first: Int, offset: Int, order: OperationsSegmentDependencyOrder): [OperationsSegmentDependency]
  ""
  inflowsAggregate(filter: OperationsSegmentDependencyFilter): OperationsSegmentDependencyAggregateResult
  " Operations segment(s) makes up part of this operations segment as the whole. "
  isMadeUpOf(filter: OperationsSegmentFilter, first: Int, offset: Int, order: OperationsSegmentOrder): [OperationsSegment]
  ""
  isMadeUpOfAggregate(filter: OperationsSegmentFilter): OperationsSegmentAggregateResult
  " The label is last node in the fully qualified name. "
  label: String!
  " Operations segment made up in part by this operations segment as the whole. "
  makesUp(filter: OperationsSegmentFilter): OperationsSegment
  " The material specification(s) related to this operations segment. "
  materialSpecifications(filter: MaterialSpecificationFilter, first: Int, offset: Int, order: MaterialSpecificationOrder): [MaterialSpecification]
  ""
  materialSpecificationsAggregate(filter: MaterialSpecificationFilter): MaterialSpecificationAggregateResult
  " Identification of the operations material bill associated with this operations segment. "
  materialsBill(filter: OperationsMaterialBillFilter, first: Int, offset: Int, order: OperationsMaterialBillOrder): [OperationsMaterialBill]
  ""
  materialsBillAggregate(filter: OperationsMaterialBillFilter): OperationsMaterialBillAggregateResult
  " A collection information required to perform the specified operation. "
  operationsDefinitionVersion(filter: OperationsDefinitionVersionFilter): OperationsDefinitionVersion!
  " Operations request(s) associated with this operations segment. "
  operationsRequests(filter: OperationsRequestFilter, first: Int, offset: Int, order: OperationsRequestOrder): [OperationsRequest]
  ""
  operationsRequestsAggregate(filter: OperationsRequestFilter): OperationsRequestAggregateResult
  " Operations response(s) associated with this operations segment. "
  operationsResponses(filter: OperationsResponseFilter, first: Int, offset: Int, order: OperationsResponseOrder): [OperationsResponse]
  ""
  operationsResponsesAggregate(filter: OperationsResponseFilter): OperationsResponseAggregateResult
  " Describes the category of operation. "
  operationsType: WorkType
  " The segment dependency(s) from this segment node. "
  outflows(filter: OperationsSegmentDependencyFilter, first: Int, offset: Int, order: OperationsSegmentDependencyOrder): [OperationsSegmentDependency]
  ""
  outflowsAggregate(filter: OperationsSegmentDependencyFilter): OperationsSegmentDependencyAggregateResult
  " The parameter specification(s) related to this operations segment. "
  parameterSpecifications(filter: ParameterSpecificationFilter, first: Int, offset: Int, order: ParameterSpecificationOrder): [ParameterSpecification]
  ""
  parameterSpecificationsAggregate(filter: ParameterSpecificationFilter): ParameterSpecificationAggregateResult
  """
   In support of the definition type attribute, this instance or child pattern operations segment) 
    includes objects, relationships, and properties of the parent pattern operations segment. 
  """
  parent(filter: OperationsSegmentFilter): OperationsSegment
  " The personnel specification(s) related to this operations segment. "
  personnelSpecifications(filter: PersonnelSpecificationFilter, first: Int, offset: Int, order: PersonnelSpecificationOrder): [PersonnelSpecification]
  ""
  personnelSpecificationsAggregate(filter: PersonnelSpecificationFilter): PersonnelSpecificationAggregateResult
  " The physical asset specification(s) related to this operations segment. "
  physicalAssetSpecifications(filter: PhysicalAssetSpecificationFilter, first: Int, offset: Int, order: PhysicalAssetSpecificationOrder): [PhysicalAssetSpecification]
  ""
  physicalAssetSpecificationsAggregate(filter: PhysicalAssetSpecificationFilter): PhysicalAssetSpecificationAggregateResult
  " Used by Libre UI for chart drawing. "
  positionX: Int
  " Used by Libre UI for chart drawing. "
  positionY: Int
  " The process segments correspond to this operations segment. Identifies the associated process segments. "
  processSegment(filter: ProcessSegmentFilter): ProcessSegment
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " A set of expressions that if evaluate to true trigger or create an instance of a workflow. "
  rules(filter: RuleFilter, first: Int, offset: Int, order: RuleOrder): [Rule]
  ""
  rulesAggregate(filter: RuleFilter): RuleAggregateResult
  " Segment requirement(s) associated with this operations segment. "
  segmentRequirements(filter: SegmentRequirementFilter, first: Int, offset: Int, order: SegmentRequirementOrder): [SegmentRequirement]
  ""
  segmentRequirementsAggregate(filter: SegmentRequirementFilter): SegmentRequirementAggregateResult
  " Segment response(s) associated with this operations segment. "
  segmentResponses(filter: SegmentResponseFilter, first: Int, offset: Int, order: SegmentResponseOrder): [SegmentResponse]
  ""
  segmentResponsesAggregate(filter: SegmentResponseFilter): SegmentResponseAggregateResult
  " Work masters related to this operations segment. "
  workMasters(filter: WorkMasterFilter, first: Int, offset: Int, order: WorkMasterOrder): [WorkMaster]
  ""
  workMastersAggregate(filter: WorkMasterFilter): WorkMasterAggregateResult
}
""
type OperationsSegmentAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  billOfMaterialMax: String
  ""
  billOfMaterialMin: String
  ""
  billOfResourcesMax: String
  ""
  billOfResourcesMin: String
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  durationAvg: Float
  ""
  durationMax: Float
  ""
  durationMin: Float
  ""
  durationSum: Float
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  positionXAvg: Float
  ""
  positionXMax: Int
  ""
  positionXMin: Int
  ""
  positionXSum: Int
  ""
  positionYAvg: Float
  ""
  positionYMax: Int
  ""
  positionYMin: Int
  ""
  positionYSum: Int
}
"Operations dependencies that are operation or product specific shall be presented as segment dependencies."
type OperationsSegmentDependency {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " A condition required to transition between operations segments. Expressed as JSONata expression. "
  condition: String
  " Factor used by dependency. "
  dependencyFactor: Float
  " Defines the execution dependency constraints of one operations to another operations. "
  dependencyType: DependencyType
  " Contains additional information and descriptions of the operations dependency definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The units of measure of the dependency factor. "
  factorUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The operations segment connected from this operations segment dependency. "
  from(filter: OperationsSegmentFilter): OperationsSegment!
  " The identification of the unique instance of the operations segment dependency. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " A set of expressions that if evaluate to true trigger or create an instance of a workflow. "
  rules(filter: RuleFilter, first: Int, offset: Int, order: RuleOrder): [Rule]
  ""
  rulesAggregate(filter: RuleFilter): RuleAggregateResult
  " The operations segment connected to this segment dependency. "
  to(filter: OperationsSegmentFilter): OperationsSegment!
}
""
type OperationsSegmentDependencyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  conditionMax: String
  ""
  conditionMin: String
  ""
  count: Int
  ""
  dependencyFactorAvg: Float
  ""
  dependencyFactorMax: Float
  ""
  dependencyFactorMin: Float
  ""
  dependencyFactorSum: Float
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
}
"""
Specific parameters required for an operations segment shall be presented as parameter specifications. 
An operations segment may have an associated set of zero or more parameter specifications. The parameter 
specification contains the names and types of the values that may be sent to the Level 3 systems to 
parameterize the operation. Parameter specifications may contain nested parameter specifications.
"""
type ParameterSpecification {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The child parameter specification(s) that are part of this parameter specification as whole. "
  children(filter: ParameterSpecificationFilter, first: Int, offset: Int, order: ParameterSpecificationOrder): [ParameterSpecification]
  ""
  childrenAggregate(filter: ParameterSpecificationFilter): ParameterSpecificationAggregateResult
  " Contains additional information of the parameter. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " Identification of the parameter for a specific segment. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The job order parameter(s) corresponding with this parameter specification. "
  jobOrderParameter(filter: JobOrderParameterFilter, first: Int, offset: Int, order: JobOrderParameterOrder): [JobOrderParameter]
  ""
  jobOrderParameterAggregate(filter: JobOrderParameterFilter): JobOrderParameterAggregateResult
  " The label is last node in the fully qualified name. "
  label: String!
  " The operations segment(s) is defined in part by this parameter specification. "
  operationsSegment(filter: OperationsSegmentFilter): OperationsSegment
  " The parameter specification that this parameter specification is a part of as whole. "
  parent(filter: ParameterSpecificationFilter): ParameterSpecification
  " The segment parameter(s) corresponding with this parameter specification. "
  segmentParameters(filter: SegmentParameterFilter, first: Int, offset: Int, order: SegmentParameterOrder): [SegmentParameter]
  ""
  segmentParametersAggregate(filter: SegmentParameterFilter): SegmentParameterAggregateResult
  " The value, set of values, or range of acceptable values. "
  value: String
  " The lower limit that would trigger an alert. "
  valueLowerControlLimit: Float
  " The lower limit that impacts the quality of the product. "
  valueLowerSpecLimit: Float
  " Target value. "
  valueSetPoint: String
  " Unit of measure of the values. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The upper limit that would trigger an alert. "
  valueUpperControlLimit: Float
  " The upper limit that impacts the quality of the product. "
  valueUpperSpecLimit: Float
  " The resources and instructions required to perform a unit of work for a specific job order. "
  workDirective(filter: WorkDirectiveFilter): WorkDirective
  " The resources and instructions required to perform a unit of work without reference to a specific job order. "
  workMaster(filter: WorkMasterFilter): WorkMaster
}
""
type ParameterSpecificationAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  valueLowerControlLimitAvg: Float
  ""
  valueLowerControlLimitMax: Float
  ""
  valueLowerControlLimitMin: Float
  ""
  valueLowerControlLimitSum: Float
  ""
  valueLowerSpecLimitAvg: Float
  ""
  valueLowerSpecLimitMax: Float
  ""
  valueLowerSpecLimitMin: Float
  ""
  valueLowerSpecLimitSum: Float
  ""
  valueMax: String
  ""
  valueMin: String
  ""
  valueSetPointMax: String
  ""
  valueSetPointMin: String
  ""
  valueUpperControlLimitAvg: Float
  ""
  valueUpperControlLimitMax: Float
  ""
  valueUpperControlLimitMin: Float
  ""
  valueUpperControlLimitSum: Float
  ""
  valueUpperSpecLimitAvg: Float
  ""
  valueUpperSpecLimitMax: Float
  ""
  valueUpperSpecLimitMin: Float
  ""
  valueUpperSpecLimitSum: Float
}
" Payload Field Definition "
type PayloadFieldDefinition {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The payload field expression"
  expression: String!
  " Unique internal database identifier. "
  iid: ID!
  " A short description of the payload field definition. "
  name: String!
}
""
type PayloadFieldDefinitionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  expressionMax: String
  ""
  expressionMin: String
  ""
  nameMax: String
  ""
  nameMin: String
}
"""
A representation of a specifically identified individual shall be presented as a person. A person
may be a member of zero or more personnel classes.

A person may be tested by the evaluation of the test specification criteria in the test specification
that references the evaluated property and may be recorded in an evaluated criterion result attribute
in the test result.

Person shall include a unique identification of the individual. 
"""
type Person {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The currently active version. To find a version that was active at a point in time, use versions with a filter. "
  activeVersion(filter: PersonVersionFilter): PersonVersion
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The events associated with this person. "
  events(filter: EventFilter, first: Int, offset: Int, order: EventOrder): [Event]
  ""
  eventsAggregate(filter: EventFilter): EventAggregateResult
  " A unique identification of a specific person, within the scope of the information exchanged. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " Human friendly alternative identifier "
  label: String!
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  " The personel actual(s) associated with this person. "
  personnelActual(filter: PersonnelActualFilter, first: Int, offset: Int, order: PersonnelActualOrder): [PersonnelActual]
  ""
  personnelActualAggregate(filter: PersonnelActualFilter): PersonnelActualAggregateResult
  " Personnel requirement(s) corresponding with this person. "
  personnelRequirements(filter: PersonnelRequirementFilter, first: Int, offset: Int, order: PersonnelRequirementOrder): [PersonnelRequirement]
  ""
  personnelRequirementsAggregate(filter: PersonnelRequirementFilter): PersonnelRequirementAggregateResult
  " Personnel specification(s) corresponding with this person. "
  personnelSpecifications(filter: PersonnelSpecificationFilter, first: Int, offset: Int, order: PersonnelSpecificationOrder): [PersonnelSpecification]
  ""
  personnelSpecificationsAggregate(filter: PersonnelSpecificationFilter): PersonnelSpecificationAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " The test specification(s) used to evaluate this testable object. "
  specifiesTests(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  specifiesTestsAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " State Model Instances record the current state and history of state transitions "
  stateModelInstances(filter: StateModelInstanceFilter, first: Int, offset: Int, order: StateModelInstanceOrder): [StateModelInstance]
  ""
  stateModelInstancesAggregate(filter: StateModelInstanceFilter): StateModelInstanceAggregateResult
  " The test result records the evaluated criterion result attribute and property measurement for this testable object. "
  testResults(filter: TestResultFilter, first: Int, offset: Int, order: TestResultOrder): [TestResult]
  ""
  testResultsAggregate(filter: TestResultFilter): TestResultAggregateResult
  " The ID of this testable object ID(s) evaluated by the test specification. "
  testedBy(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  testedByAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " Link to all available versions for this entity. "
  versions(filter: PersonVersionFilter, first: Int, offset: Int, order: PersonVersionOrder): [PersonVersion]
  ""
  versionsAggregate(filter: PersonVersionFilter): PersonVersionAggregateResult
}
""
type PersonAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  nextVersionMax: String
  ""
  nextVersionMin: String
}
"""
Properties of a person shall be presented as person properties. Each person shall have zero or more person properties. 
These specify the current property values of the person for the associated personnel class property.

EXAMPLE: A person property can be night shift and its value would be available, and a person property can be 
exposure hours available and its value would be 4.

Person properties may include the current availability of a person and other current information, 
such as location and assigned activity, and the unit of measure of the current information.

A person property may be tested to the evaluated property in a test specification where the measured 
results may be recorded in a property measurement attribute in a test result. The measured results may also be 
evaluated to the test specification criteria in the test specification that references the evaluated property 
where they may be recorded in an evaluated criterion result attribute in the test result. 

Person properties may contain nested person properties.
"""
type PersonProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " This nested person property(s) is part of the person property as the whole. "
  children(filter: PersonPropertyFilter, first: Int, offset: Int, order: PersonPropertyOrder): [PersonProperty]
  ""
  childrenAggregate(filter: PersonPropertyFilter): PersonPropertyAggregateResult
  " This testable object property is measured to the test specification containing the evaluated property. "
  correspondsTo(filter: EvaluatedPropertyFilter): EvaluatedProperty
  " Additional information about the person property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " An identification of the specific property. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " This nested person property makes up part of the parent person property as the whole. "
  parent(filter: PersonPropertyFilter): PersonProperty
  " This person property values in part for the person. "
  personVersion(filter: PersonVersionFilter): PersonVersion!
  " Personnel actual property(s) mapped to this person property. "
  personnelActualProperties(filter: PersonnelActualPropertyFilter, first: Int, offset: Int, order: PersonnelActualPropertyOrder): [PersonnelActualProperty]
  ""
  personnelActualPropertiesAggregate(filter: PersonnelActualPropertyFilter): PersonnelActualPropertyAggregateResult
  " If the person supports the parent personnel class, the personnel class property(s) is applied in this person property(s). "
  personnelClassProperty(filter: PersonnelClassPropertyFilter): PersonnelClassProperty
  " Personnel requirement property(s) mapped to this person property. "
  personnelRequirementProperties(filter: PersonnelRequirementPropertyFilter, first: Int, offset: Int, order: PersonnelRequirementPropertyOrder): [PersonnelRequirementProperty]
  ""
  personnelRequirementPropertiesAggregate(filter: PersonnelRequirementPropertyFilter): PersonnelRequirementPropertyAggregateResult
  " Personnel specification property(s) mapped to this person property. "
  personnelSpecificationProperties(filter: PersonnelSpecificationPropertyFilter, first: Int, offset: Int, order: PersonnelSpecificationPropertyOrder): [PersonnelSpecificationProperty]
  ""
  personnelSpecificationPropertiesAggregate(filter: PersonnelSpecificationPropertyFilter): PersonnelSpecificationPropertyAggregateResult
  " This PersonnelClassProperty records the measurement result for these PropertyMeasurement(s) "
  recordsMeasurementOf(filter: PropertyMeasurementFilter, first: Int, offset: Int, order: PropertyMeasurementOrder): [PropertyMeasurement]
  ""
  recordsMeasurementOfAggregate(filter: PropertyMeasurementFilter): PropertyMeasurementAggregateResult
  " The value, set of values, or range of the property. "
  value: String
  " The lower limit that would trigger an alert. "
  valueLowerControlLimit: Float
  " The lower limit that impacts the quality of the product. "
  valueLowerSpecLimit: Float
  " Target value. "
  valueSetPoint: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The upper limit that would trigger an alert. "
  valueUpperControlLimit: Float
  " The upper limit that impacts the quality of the product. "
  valueUpperSpecLimit: Float
}
""
type PersonPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  valueLowerControlLimitAvg: Float
  ""
  valueLowerControlLimitMax: Float
  ""
  valueLowerControlLimitMin: Float
  ""
  valueLowerControlLimitSum: Float
  ""
  valueLowerSpecLimitAvg: Float
  ""
  valueLowerSpecLimitMax: Float
  ""
  valueLowerSpecLimitMin: Float
  ""
  valueLowerSpecLimitSum: Float
  ""
  valueMax: String
  ""
  valueMin: String
  ""
  valueSetPointMax: String
  ""
  valueSetPointMin: String
  ""
  valueUpperControlLimitAvg: Float
  ""
  valueUpperControlLimitMax: Float
  ""
  valueUpperControlLimitMin: Float
  ""
  valueUpperControlLimitSum: Float
  ""
  valueUpperSpecLimitAvg: Float
  ""
  valueUpperSpecLimitMax: Float
  ""
  valueUpperSpecLimitMin: Float
  ""
  valueUpperSpecLimitSum: Float
}
"""
A representation of a specifically identified individual shall be presented as a person. A person
may be a member of zero or more personnel classes.

A person may be tested by the evaluation of the test specification criteria in the test specification
that references the evaluated property and may be recorded in an evaluated criterion result attribute
in the test result.

Person shall include a unique identification of the individual.
"""
type PersonVersion {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Defines the person who made a comment. "
  comments(filter: CommentFilter, first: Int, offset: Int, order: CommentOrder): [Comment]
  ""
  commentsAggregate(filter: CommentFilter): CommentAggregateResult
  " Additional information about the resource. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of a specific person, within the scope of the information exchanged. "
  id: String!
  ""
  id_version: String!
  " Unique internal database identifier. "
  iid: ID!
  " The person that uses this person version as it's active version. "
  isActiveVersionOf(filter: PersonFilter): Person
  " The name of the individual. "
  name: String!
  " Identifies the operational location of the person. "
  operationalLocation(filter: OperationalLocationFilter): OperationalLocation
  " The person that this person version relates to. "
  person(filter: PersonFilter): Person!
  " The equipment actual this equipment class is associated with. "
  personnelActual(filter: PersonnelActualFilter, first: Int, offset: Int, order: PersonnelActualOrder): [PersonnelActual]
  ""
  personnelActualAggregate(filter: PersonnelActualFilter): PersonnelActualAggregateResult
  " This person supports the personnel class property(s) associated with the personnel class. "
  personnelClasses(filter: PersonnelClassFilter, first: Int, offset: Int, order: PersonnelClassOrder): [PersonnelClass]
  ""
  personnelClassesAggregate(filter: PersonnelClassFilter): PersonnelClassAggregateResult
  " The person property values of this person. "
  properties(filter: PersonPropertyFilter, first: Int, offset: Int, order: PersonPropertyOrder): [PersonProperty]
  ""
  propertiesAggregate(filter: PersonPropertyFilter): PersonPropertyAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " Electronic signatures made by this person. "
  signaturesMade(filter: SignatureFilter, first: Int, offset: Int, order: SignatureOrder): [Signature]
  ""
  signaturesMadeAggregate(filter: SignatureFilter): SignatureAggregateResult
  " Spatially defines the person. "
  spatialDefinition(filter: SpatialDefinitionFilter): SpatialDefinition
  " State Model Definitions define the allowed states and transitions between states "
  stateModels(filter: StateModelDefinitionFilter, first: Int, offset: Int, order: StateModelDefinitionOrder): [StateModelDefinition]
  ""
  stateModelsAggregate(filter: StateModelDefinitionFilter): StateModelDefinitionAggregateResult
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
type PersonVersionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  nameMax: String
  ""
  nameMin: String
  ""
  versionMax: String
  ""
  versionMin: String
}
"""
An identification of a personnel capability used during a specified segment response shall be presented 
as personnel actual.

Personnel actuals shall include the identification of each resource used, usually identifying a specific 
personnel capability or personnel class, such as end-point transmission assembly operators, or personnel 
IDs such as Jean Smith or SS# 999-123-4567.

Specific information about personnel actuals shall be presented in personnel actual properties.
"""
type PersonnelActual {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The related object(s) makes up part of this personnel actual as the whole. "
  children(filter: PersonnelActualFilter, first: Int, offset: Int, order: PersonnelActualOrder): [PersonnelActual]
  ""
  childrenAggregate(filter: PersonnelActualFilter): PersonnelActualAggregateResult
  " Defines a comment on personnel actual. "
  comments(filter: CommentFilter, first: Int, offset: Int, order: CommentOrder): [Comment]
  ""
  commentsAggregate(filter: CommentFilter): CommentAggregateResult
  " Contains additional information and descriptions of the personnel actual. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of a specific personnel actual. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " Job response this personnel actual relates to. "
  jobResponse(filter: JobResponseFilter): JobResponse
  " Identifies the operational location of the personnel resource(s) specified by this personnel actual. "
  operationalLocation(filter: OperationalLocationFilter): OperationalLocation
  " The related object(s) this personnel actual makes up part of as the whole. "
  parent(filter: PersonnelActualFilter): PersonnelActual
  " Identifies the associated person(s) actually used for a specific segment response. "
  person(filter: PersonFilter, first: Int, offset: Int, order: PersonOrder): [Person]
  ""
  personAggregate(filter: PersonFilter): PersonAggregateResult
  " Identifies the associated person(s) actually used for a specific segment response. "
  personVersion(filter: PersonVersionFilter, first: Int, offset: Int, order: PersonVersionOrder): [PersonVersion]
  ""
  personVersionAggregate(filter: PersonVersionFilter): PersonVersionAggregateResult
  " Identifies the associated personnel class(s) actually used for a specific segment response. "
  personnelClass(filter: PersonnelClassFilter, first: Int, offset: Int, order: PersonnelClassOrder): [PersonnelClass]
  ""
  personnelClassAggregate(filter: PersonnelClassFilter): PersonnelClassAggregateResult
  " Defines the expected use of the personnel class or person in the context of the operations response. "
  personnelUse: String
  " The values in the personnel actual property are for this personnel actual. "
  properties(filter: PersonnelActualPropertyFilter, first: Int, offset: Int, order: PersonnelActualPropertyOrder): [PersonnelActualProperty]
  ""
  propertiesAggregate(filter: PersonnelActualPropertyFilter): PersonnelActualPropertyAggregateResult
  " Specifies the amount of personnel resources used in the parent segment. "
  quantity: Float
  " Identifies the unit of measure of the quantity. "
  quantityUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " This personnel actual is a part of the segment response as the whole. "
  segmentResponse(filter: SegmentResponseFilter): SegmentResponse
  " Can have electronic Signature. "
  signatures(filter: SignatureFilter, first: Int, offset: Int, order: SignatureOrder): [Signature]
  ""
  signaturesAggregate(filter: SignatureFilter): SignatureAggregateResult
  " Spatially defines the personnel resource(s) specified by this personnel actual. "
  spatialDefinition(filter: SpatialDefinitionFilter): SpatialDefinition
  " This personnel actual reports the test result in a segment response or job response. "
  testResults(filter: TestResultFilter, first: Int, offset: Int, order: TestResultOrder): [TestResult]
  ""
  testResultsAggregate(filter: TestResultFilter): TestResultAggregateResult
}
""
type PersonnelActualAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  personnelUseMax: String
  ""
  personnelUseMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
}
"""
Specific properties that are required for a personnel actual shall be presented as personnel actual 
properties. Personnel actual properties may contain nested personnel actual properties.
"""
type PersonnelActualProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The values in the child personnel actual property for this personnel actual. "
  children(filter: PersonnelActualPropertyFilter, first: Int, offset: Int, order: PersonnelActualPropertyOrder): [PersonnelActualProperty]
  ""
  childrenAggregate(filter: PersonnelActualPropertyFilter): PersonnelActualPropertyAggregateResult
  " Contains additional information and descriptions of the personnel actual property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  ""
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " An identification of the associated person property or personnel class property for a specific segment response. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  ""
  operationalLocation(filter: OperationalLocationFilter): OperationalLocation
  " The values in this child personnel actual property make up part of the personnel actual. "
  parent(filter: PersonnelActualPropertyFilter): PersonnelActualProperty
  " A cross-model dependency to element in the personnel model. "
  personProperty(filter: PersonPropertyFilter): PersonProperty
  " The values for this personnel actual property in part are for the personnel actual. "
  personnelActual(filter: PersonnelActualFilter): PersonnelActual!
  " A cross-model dependency to element in the personnel model. "
  personnelClassProperty(filter: PersonnelClassPropertyFilter): PersonnelClassProperty
  " Specifies the amount of personnel resources used in the parent segment. "
  quantity: Float!
  " Identifies the unit of measure of the quantity. "
  quantityUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  ""
  spatialDefinition(filter: SpatialDefinitionFilter): SpatialDefinition
  ""
  use: String
  " The value or set of values for the associated property. "
  value: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type PersonnelActualPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
  ""
  useMax: String
  ""
  useMin: String
  ""
  valueMax: String
  ""
  valueMin: String
}
"""
A representation of a grouping of persons with similar characteristics for a definite 
purpose such as manufacturing operations definition, scheduling, capability and performance 
shall be presented as a personnel class. Any person may be a member of zero or 
more personnel classes. 

A personnel class may be defined as a specialization of zero or more personnel class. 
A personnel class may be made up of zero or more personnel class(s).

A personnel class may be tested by the evaluation of the test specification criteria 
in the test specification that references the evaluated property and may be recorded 
in an evaluated criterion result attribute in the test result.

EXAMPLE: Personnel classes are cook machine mechanics, slicing machine operators, 
          cat-cracker operator, and zipper line inspectors.
"""
type PersonnelClass {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The currently active version. To find a version that was active at a point in time, use versions with a filter. "
  activeVersion(filter: PersonnelClassVersionFilter): PersonnelClassVersion
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " A unique identification of a specific personnel class. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The child personnel class(s) include properties of this personnel class. "
  isIncludedIn(filter: PersonnelClassVersionFilter, first: Int, offset: Int, order: PersonnelClassVersionOrder): [PersonnelClassVersion]
  ""
  isIncludedInAggregate(filter: PersonnelClassVersionFilter): PersonnelClassVersionAggregateResult
  " Human friendly alternative identifier "
  label: String!
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  " The person supports this personnel class. "
  personVersions(filter: PersonVersionFilter, first: Int, offset: Int, order: PersonVersionOrder): [PersonVersion]
  ""
  personVersionsAggregate(filter: PersonVersionFilter): PersonVersionAggregateResult
  " The equipment actual this equipment class is associated with. "
  personnelActual(filter: PersonnelActualFilter, first: Int, offset: Int, order: PersonnelActualOrder): [PersonnelActual]
  ""
  personnelActualAggregate(filter: PersonnelActualFilter): PersonnelActualAggregateResult
  " Personnel requirement(s) corresponding with this personnel class. "
  personnelRequirements(filter: PersonnelRequirementFilter, first: Int, offset: Int, order: PersonnelRequirementOrder): [PersonnelRequirement]
  ""
  personnelRequirementsAggregate(filter: PersonnelRequirementFilter): PersonnelRequirementAggregateResult
  " Personnel specification(s) corresponding with this personnel class. "
  personnelSpecifications(filter: PersonnelSpecificationFilter, first: Int, offset: Int, order: PersonnelSpecificationOrder): [PersonnelSpecification]
  ""
  personnelSpecificationsAggregate(filter: PersonnelSpecificationFilter): PersonnelSpecificationAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " The test specification(s) used to evaluate this testable object. "
  specifiesTests(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  specifiesTestsAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " The test result records the evaluated criterion result attribute and property measurement for this testable object. "
  testResults(filter: TestResultFilter, first: Int, offset: Int, order: TestResultOrder): [TestResult]
  ""
  testResultsAggregate(filter: TestResultFilter): TestResultAggregateResult
  " The ID of this testable object ID(s) evaluated by the test specification. "
  testedBy(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  testedByAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " Link to all available versions for this entity. "
  versions(filter: PersonnelClassVersionFilter, first: Int, offset: Int, order: PersonnelClassVersionOrder): [PersonnelClassVersion]
  ""
  versionsAggregate(filter: PersonnelClassVersionFilter): PersonnelClassVersionAggregateResult
}
""
type PersonnelClassAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  nextVersionMax: String
  ""
  nextVersionMin: String
}
"""
Properties of a personnel class shall be presented as personnel class properties. 
Each personnel class shall have zero or more recognized properties.

EXAMPLE 1 Personnel class properties for the personnel class operators can be a class 1 certified, 
class 2 certified, night shift, and exposure hours.

Operations requests may specify required personnel class property requirements for an operations 
segment.

A personnel class property may be tested to the evaluated property in a test specification where 
the measured results may be recorded in a property measurement attribute in a test result. 
The measured results may also be evaluated to the test specification criteria in the test specification 
that references the evaluated property where they may be recorded in an evaluated criterion result attribute 
in the test result.

Personnel class property(s) may contain nested personnel class property(s). 
"""
type PersonnelClassProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The nested personnel class property(s) makes up part of this personnel class property as the whole. "
  children(filter: PersonnelClassPropertyFilter, first: Int, offset: Int, order: PersonnelClassPropertyOrder): [PersonnelClassProperty]
  ""
  childrenAggregate(filter: PersonnelClassPropertyFilter): PersonnelClassPropertyAggregateResult
  " This testable object property is measured to the test specification containing the evaluated property. "
  correspondsTo(filter: EvaluatedPropertyFilter): EvaluatedProperty
  " Additional information and description about the personnel class property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " An identification of the specific property, unique fully qualified id"
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " This nested personnel class property makes up part of the parent personnel class property as the whole. "
  parent(filter: PersonnelClassPropertyFilter): PersonnelClassProperty
  " If the person supports a personnel class, this personnel class property(s) is applied in the person property(s). "
  personProperty(filter: PersonPropertyFilter): PersonProperty
  " Equipment actual property(s) mapped to this personnel Class Property. "
  personnelActualProperties(filter: PersonnelActualPropertyFilter, first: Int, offset: Int, order: PersonnelActualPropertyOrder): [PersonnelActualProperty]
  ""
  personnelActualPropertiesAggregate(filter: PersonnelActualPropertyFilter): PersonnelActualPropertyAggregateResult
  " The personnel class defined in part by this personnel class property. "
  personnelClassVersion(filter: PersonnelClassVersionFilter): PersonnelClassVersion!
  " Personnel requirement property(s) mapped to this personnel class property. "
  personnelRequirementProperties(filter: PersonnelRequirementPropertyFilter, first: Int, offset: Int, order: PersonnelRequirementPropertyOrder): [PersonnelRequirementProperty]
  ""
  personnelRequirementPropertiesAggregate(filter: PersonnelRequirementPropertyFilter): PersonnelRequirementPropertyAggregateResult
  " Personnel specification property(s) mapped to this personnel class property. "
  personnelSpecificationProperties(filter: PersonnelSpecificationPropertyFilter, first: Int, offset: Int, order: PersonnelSpecificationPropertyOrder): [PersonnelSpecificationProperty]
  ""
  personnelSpecificationPropertiesAggregate(filter: PersonnelSpecificationPropertyFilter): PersonnelSpecificationPropertyAggregateResult
  " Defines the type of the property. "
  propertyType: Isa95PropertyType!
  " This PersonnelClassProperty records the measurement result for these PropertyMeasurement(s). "
  recordsMeasurementOf(filter: PropertyMeasurementFilter, first: Int, offset: Int, order: PropertyMeasurementOrder): [PropertyMeasurement]
  ""
  recordsMeasurementOfAggregate(filter: PropertyMeasurementFilter): PropertyMeasurementAggregateResult
  " The value, set of values, or range of the property. "
  value: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type PersonnelClassPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  valueMax: String
  ""
  valueMin: String
}
"""
A representation of a grouping of persons with similar characteristics for a definite
purpose such as manufacturing operations definition, scheduling, capability and performance
shall be presented as a personnel class. Any person may be a member of zero or
more personnel classes.

A personnel class may be defined as a specialization of zero or more personnel class.
A personnel class may be made up of zero or more personnel class(s).

A personnel class may be tested by the evaluation of the test specification criteria
in the test specification that references the evaluated property and may be recorded
in an evaluated criterion result attribute in the test result.

EXAMPLE: Personnel classes are cook machine mechanics, slicing machine operators,
cat-cracker operator, and zipper line inspectors.
"""
type PersonnelClassVersion {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Additional information and description about the personnel class. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of a specific personnel class. "
  id: String!
  ""
  id_version: String!
  " Unique internal database identifier. "
  iid: ID!
  " This personnel class(s) includes properties of the parent personnel class. "
  includesPropertiesOf(filter: PersonnelClassFilter, first: Int, offset: Int, order: PersonnelClassOrder): [PersonnelClass]
  ""
  includesPropertiesOfAggregate(filter: PersonnelClassFilter): PersonnelClassAggregateResult
  " The personnel class that uses this personnel class version as it's active version. "
  isActiveVersionOf(filter: PersonnelClassFilter): PersonnelClass
  " The personnel class that this personnel class version relates to. "
  personnelClass(filter: PersonnelClassFilter): PersonnelClass!
  " The personnel class property(s) of this personnel class. "
  properties(filter: PersonnelClassPropertyFilter, first: Int, offset: Int, order: PersonnelClassPropertyOrder): [PersonnelClassProperty]
  ""
  propertiesAggregate(filter: PersonnelClassPropertyFilter): PersonnelClassPropertyAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " State Model Definitions define the allowed states and transitions between states "
  stateModels(filter: StateModelDefinitionFilter, first: Int, offset: Int, order: StateModelDefinitionOrder): [StateModelDefinition]
  ""
  stateModelsAggregate(filter: StateModelDefinitionFilter): StateModelDefinitionAggregateResult
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
type PersonnelClassVersionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  versionMax: String
  ""
  versionMin: String
}
"""
The identification of the number, type, duration, and scheduling of specific certifications and job 
classifications needed to support the current operations request shall be presented as personnel 
requirements.

A personnel requirement shall include the identification of the personnel needed, such as milling 
machine operator; and the quantity of personnel needed.

Specific elements associated with each personnel requirement may be included in one or more personnel 
requirement properties.
"""
type PersonnelRequirement {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The related object(s) makes up part of this personnel requirement as the whole. "
  children(filter: PersonnelRequirementFilter, first: Int, offset: Int, order: PersonnelRequirementOrder): [PersonnelRequirement]
  ""
  childrenAggregate(filter: PersonnelRequirementFilter): PersonnelRequirementAggregateResult
  " Defines a comment on the personnel requirement. "
  comments(filter: CommentFilter, first: Int, offset: Int, order: CommentOrder): [Comment]
  ""
  commentsAggregate(filter: CommentFilter): CommentAggregateResult
  " Contains additional information and descriptions of the personnel requirement. "
  description: String
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of a specific personnel requirement. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " Job order associated with this personnel requirement. "
  jobOrder(filter: JobOrderFilter): JobOrder
  " Identifies the operational location of the personnel resource(s) specified by this personnel requirement. "
  operationalLocation(filter: OperationalLocationFilter): OperationalLocation
  " The related object makes this personnel requirement up part of as the whole. "
  parent(filter: PersonnelRequirementFilter): PersonnelRequirement
  " Identifies the associated person(s) of the personnel requirement for a specific segment requirement.  "
  person(filter: PersonFilter): Person
  " Identifies the associated personnel class(s) of the personnel requirement for a specific segment requirement. "
  personnelClass(filter: PersonnelClassFilter): PersonnelClass
  " The values in the personnel requirement property are for this personnel requirement. "
  properties(filter: PersonnelRequirementPropertyFilter, first: Int, offset: Int, order: PersonnelRequirementPropertyOrder): [PersonnelRequirementProperty]
  ""
  propertiesAggregate(filter: PersonnelRequirementPropertyFilter): PersonnelRequirementPropertyAggregateResult
  " Specifies the amount of personnel resources required for the parent segment. "
  quantity: Float!
  " Identifies the unit of measure of the quantity. "
  quantityUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " This personnel requirement is a part of the segment requirement as the whole. "
  segmentRequirement(filter: SegmentRequirementFilter): SegmentRequirement
  " Can have electronic Signature. "
  signatures(filter: SignatureFilter, first: Int, offset: Int, order: SignatureOrder): [Signature]
  ""
  signaturesAggregate(filter: SignatureFilter): SignatureAggregateResult
  " The test specification(s) used to evaluate this testable object. "
  specifiesTests(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  specifiesTestsAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " The test result records the evaluated criterion result attribute and property measurement for this testable object. "
  testResults(filter: TestResultFilter, first: Int, offset: Int, order: TestResultOrder): [TestResult]
  ""
  testResultsAggregate(filter: TestResultFilter): TestResultAggregateResult
  " The ID of this testable object ID(s) evaluated by the test specification. "
  testedBy(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  testedByAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " Defines the expected use of the personnel class or person in the context of the segment requirement. "
  use: String
}
""
type PersonnelRequirementAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
  ""
  useMax: String
  ""
  useMin: String
}
"""
Specific properties that are required for personnel requirements shall be presented as personnel 
requirement properties. Personnel requirement properties may contain nested personnel requirement 
properties.
"""
type PersonnelRequirementProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The values in the child personnel requirement property for this personnel requirement. "
  children(filter: PersonnelRequirementPropertyFilter, first: Int, offset: Int, order: PersonnelRequirementPropertyOrder): [PersonnelRequirementProperty]
  ""
  childrenAggregate(filter: PersonnelRequirementPropertyFilter): PersonnelRequirementPropertyAggregateResult
  " Contains additional information and descriptions of the personnel requirement property definition. "
  description: String
  " An identification of the associated person property or personnel class property for a specific segment requirement. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " The values in the child personnel requirement property for this personnel requirement. "
  parent(filter: PersonnelRequirementPropertyFilter): PersonnelRequirementProperty
  " A cross-model dependency to element in the personnel model. "
  personProperty(filter: PersonPropertyFilter): PersonProperty
  " A cross-model dependency to element in the personnel model. "
  personnelClassProperty(filter: PersonnelClassPropertyFilter): PersonnelClassProperty
  " The values for this personnel requirement property in part are for the personnel requirement. "
  personnelRequirement(filter: PersonnelRequirementFilter): PersonnelRequirement!
  " Specifies the amount of the property required for the parent personnel requirement. "
  quantity: Float
  " Identifies the unit of measure of the quantity. "
  quantityUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The value, set of values, or range of the property. "
  value: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type PersonnelRequirementPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
  ""
  valueMax: String
  ""
  valueMin: String
}
"""
An identification, reference, or correspondence to a personnel capability shall be presented as a 
personnel specification. A personnel specification usually specifies a personnel class but may specify 
a person. A personnel specification identifies the specific personnel capability that is associated 
with the identified operations segment or operations segment.

A personnel specification shall include an identification of the personnel capability needed, the 
quantity of the personnel capability needed, and the unit of measure of the quantity.

Specific elements associated with a personnel specification may be included in one or more personnel 
specification properties.
"""
type PersonnelSpecification {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The related object(s) makes up part of this personnel specification as the whole. "
  children(filter: PersonnelSpecificationFilter, first: Int, offset: Int, order: PersonnelSpecificationOrder): [PersonnelSpecification]
  ""
  childrenAggregate(filter: PersonnelSpecificationFilter): PersonnelSpecificationAggregateResult
  " Contains additional information of the personnel specification. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of a specific personnel segment specification. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " Identifies the operational location of the personnel resource(s) specified by this personnel specification. "
  operationalLocation(filter: OperationalLocationFilter): OperationalLocation
  " The operations segment that is in part defined by this personnel specification. "
  operationsSegment(filter: OperationsSegmentFilter): OperationsSegment
  " The related object that this this personnel specification makes up part of as the whole. "
  parent(filter: PersonnelSpecificationFilter): PersonnelSpecification
  " Identifies the associated person(s) of the specification for a specific operations segment. "
  person(filter: PersonFilter): Person
  " Identifies the associated personnel class(es) of the specification for a specific operations segment. "
  personnelClass(filter: PersonnelClassFilter): PersonnelClass
  " Defines the expected use of the personnel class or person in the context of the operations segment. "
  personnelUse: String
  " The process segment version that is in part defined by this personnel specification. "
  processSegmentVersion(filter: ProcessSegmentVersionFilter): ProcessSegmentVersion
  " The personnel specification property(s) of this personnel specification. "
  properties(filter: PersonnelSpecificationPropertyFilter, first: Int, offset: Int, order: PersonnelSpecificationPropertyOrder): [PersonnelSpecificationProperty]
  ""
  propertiesAggregate(filter: PersonnelSpecificationPropertyFilter): PersonnelSpecificationPropertyAggregateResult
  " Specifies the amount of personnel resources required for the parent segment. "
  quantity: Float
  " The unit of measure of the associated quantity. "
  quantityUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " Spatially defines the personnel resource(s) specified by this personnel specification. "
  spatialDefinition(filter: SpatialDefinitionFilter): SpatialDefinition
  " The test specification(s) used to evaluate this testable object. "
  specifiesTests(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  specifiesTestsAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " The test result records the evaluated criterion result attribute and property measurement for this testable object. "
  testResults(filter: TestResultFilter): TestResult
  " The ID of this testable object ID(s) evaluated by the test specification. "
  testedBy(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  testedByAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " The resources and instructions required to perform a unit of work for a specific job order. "
  workDirective(filter: WorkDirectiveFilter): WorkDirective
  " The resources and instructions required to perform a unit of work without reference to a specific job order. "
  workMaster(filter: WorkMasterFilter): WorkMaster
}
""
type PersonnelSpecificationAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  personnelUseMax: String
  ""
  personnelUseMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
}
"""
Specific properties that are required for personnel specifications shall be presented as personnel 
specification properties. Personnel specification properties may contain nested personnel specification 
properties.
"""
type PersonnelSpecificationProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " This child personnel specification property(s) of the parent personnel specification property. "
  children(filter: PersonnelSpecificationPropertyFilter, first: Int, offset: Int, order: PersonnelSpecificationPropertyOrder): [PersonnelSpecificationProperty]
  ""
  childrenAggregate(filter: PersonnelSpecificationPropertyFilter): PersonnelSpecificationPropertyAggregateResult
  " Contains additional information and descriptions of the personnel specification property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " An identification of a property of the associated person property or personnel class property for a specific segment. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " This parent personnel specification property of this parent personnel specification property. "
  parent(filter: PersonnelSpecificationPropertyFilter): PersonnelSpecificationProperty
  " A cross-model dependency to element in the personnel model. "
  personProperty(filter: PersonPropertyFilter): PersonProperty
  " A cross-model dependency to element in the personnel model. "
  personnelClassProperty(filter: PersonnelClassPropertyFilter): PersonnelClassProperty
  " The personnel specification property(s) of this personnel specification property. "
  personnelSpecification(filter: PersonnelSpecificationFilter): PersonnelSpecification!
  " Specifies the amount of personnel resources required for the parent segment. "
  quantity: Float
  " The unit of measure of the associated quantity. "
  quantityUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The value, set of values, or range of the property. "
  value: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type PersonnelSpecificationPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
  ""
  valueMax: String
  ""
  valueMin: String
}
"""
A physical piece of equipment shall be presented as a physical asset.

A physical asset may be tested by the evaluation of the test specification criteria in the test specification
that references the evaluated property and may be recorded in an evaluated criterion result attribute
in the test result.

Physical assets may be made up of other physical assets.

Example: A packaging line can be made up of conveyor sections, motors and sensors.
"""
type PhysicalAsset {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The currently active version. To find a version that was active at a point in time, use versions with a filter. "
  activeVersion(filter: PhysicalAssetVersionFilter): PhysicalAssetVersion
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " This equipment as role in a process segment is implemented by the physical asset. "
  equipment(filter: EquipmentFilter): Equipment
  """
   The equipment asset mapping records the uses of the physical asset that is associated with the 
    equipment if the physical asset associated with a manufacturing function. 
  """
  equipmentAssetMapping(filter: EquipmentAssetMappingFilter, first: Int, offset: Int, order: EquipmentAssetMappingOrder): [EquipmentAssetMapping]
  ""
  equipmentAssetMappingAggregate(filter: EquipmentAssetMappingFilter): EquipmentAssetMappingAggregateResult
  " The events associated with this physical asset. "
  events(filter: EventFilter, first: Int, offset: Int, order: EventOrder): [Event]
  ""
  eventsAggregate(filter: EventFilter): EventAggregateResult
  " Defines a unique identification of a physical asset. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  """
   Aggregation hierarchy (Has A):
    - This object can include the properties of zero or many objects of the same type
    - This object's properties can be included in zero or many objects of the same type
    - This relationship intent is to create subordinate classes can be contained within various superordinate classes
    in the same way that a component may be made up of subcomponents
  
    Example:
  
    MixerMechanism properties: HeadShape, Type
    InsulationSleeve properties:  Density, Colour
    HeatingElement properties:  Power, Length
    Boiler isMadeUpOf  [MixerMechanism, Heating Element] (and extends this with property TargetTemperature)
    InsulatedBoiler isMadeUpOf  [MixerMechanism, Heating Element, InsulationSleeve] (and extends this with property TargetTemperature)
  """
  isMadeUpOf(filter: PhysicalAssetFilter, first: Int, offset: Int, order: PhysicalAssetOrder): [PhysicalAsset]
  ""
  isMadeUpOfAggregate(filter: PhysicalAssetFilter): PhysicalAssetAggregateResult
  " Aggregation hierarchy (Has A) "
  isPartOf(filter: PhysicalAssetFilter, first: Int, offset: Int, order: PhysicalAssetOrder): [PhysicalAsset]
  ""
  isPartOfAggregate(filter: PhysicalAssetFilter): PhysicalAssetAggregateResult
  " Defines a unique identification of a physical asset. "
  label: String!
  " Identifies any material lot(s) stored at this physical asset. "
  materialLots(filter: MaterialLotFilter, first: Int, offset: Int, order: MaterialLotOrder): [MaterialLot]
  ""
  materialLotsAggregate(filter: MaterialLotFilter): MaterialLotAggregateResult
  " Identifies any material sublot(s) stored at this physical asset. "
  materialSubLots(filter: MaterialSubLotFilter, first: Int, offset: Int, order: MaterialSubLotOrder): [MaterialSubLot]
  ""
  materialSubLotsAggregate(filter: MaterialSubLotFilter): MaterialSubLotAggregateResult
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  " The physical asset actual(s) that map to this physical asset class. "
  physicalAssetActual(filter: PhysicalAssetActualFilter, first: Int, offset: Int, order: PhysicalAssetActualOrder): [PhysicalAssetActual]
  ""
  physicalAssetActualAggregate(filter: PhysicalAssetActualFilter): PhysicalAssetActualAggregateResult
  " The physical asset requirements(s) that map to this physical asset. "
  physicalAssetRequirements(filter: PhysicalAssetRequirementFilter, first: Int, offset: Int, order: PhysicalAssetRequirementOrder): [PhysicalAssetRequirement]
  ""
  physicalAssetRequirementsAggregate(filter: PhysicalAssetRequirementFilter): PhysicalAssetRequirementAggregateResult
  " The physical asset specification(s) that map to this physical asset. "
  physicalAssetSpecifications(filter: PhysicalAssetSpecificationFilter, first: Int, offset: Int, order: PhysicalAssetSpecificationOrder): [PhysicalAssetSpecification]
  ""
  physicalAssetSpecificationsAggregate(filter: PhysicalAssetSpecificationFilter): PhysicalAssetSpecificationAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " The test specification(s) used to evaluate this testable object. "
  specifiesTests(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  specifiesTestsAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " State Model Instances record the current state and history of state transitions "
  stateModelInstances(filter: StateModelInstanceFilter, first: Int, offset: Int, order: StateModelInstanceOrder): [StateModelInstance]
  ""
  stateModelInstancesAggregate(filter: StateModelInstanceFilter): StateModelInstanceAggregateResult
  " The test result records the evaluated criterion result attribute and property measurement for this testable object. "
  testResults(filter: TestResultFilter, first: Int, offset: Int, order: TestResultOrder): [TestResult]
  ""
  testResultsAggregate(filter: TestResultFilter): TestResultAggregateResult
  " The ID of this testable object ID(s) evaluated by the test specification. "
  testedBy(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  testedByAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " The icon for the menu in the libre admin UI menu. "
  uiSortIndex: Int
  " Link to all available versions for this entity. "
  versions(filter: PhysicalAssetVersionFilter, first: Int, offset: Int, order: PhysicalAssetVersionOrder): [PhysicalAssetVersion]
  ""
  versionsAggregate(filter: PhysicalAssetVersionFilter): PhysicalAssetVersionAggregateResult
}
"""
An identification of a physical asset capability used during a specified segment shall be presented 
as a physical asset actual.

Physical asset actual shall include the identification of the physical asset used, usually identifying 
a specific piece of physical asset.

Specific information about physical asset actuals shall be presented in physical asset actual properties.
"""
type PhysicalAssetActual {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The related object(s) makes up part of this physical asset actual as the whole. "
  children(filter: PhysicalAssetActualFilter, first: Int, offset: Int, order: PhysicalAssetActualOrder): [PhysicalAssetActual]
  ""
  childrenAggregate(filter: PhysicalAssetActualFilter): PhysicalAssetActualAggregateResult
  " Defines a comment on physical asset actual. "
  comments(filter: CommentFilter, first: Int, offset: Int, order: CommentOrder): [Comment]
  ""
  commentsAggregate(filter: CommentFilter): CommentAggregateResult
  " Contains additional information and descriptions of the physical asset actual. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " Defines a unique identification of a physical asset actual. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " Job response this physical asset actual relates to. "
  jobResponse(filter: JobResponseFilter): JobResponse
  " The related object(s) this physical asset actual makes up part of as the whole. "
  parent(filter: PhysicalAssetActualFilter): PhysicalAssetActual
  " Identifies the associated physical asset(s) actually used for a specific segment response. "
  physicalAsset(filter: PhysicalAssetFilter): PhysicalAsset
  " Identifies the associated physical asset class(s) actually used for a specific segment response. "
  physicalAssetClass(filter: PhysicalAssetClassFilter): PhysicalAssetClass
  " Defines the actual use of the physical asset class or physical asset.. "
  physicalAssetUse: String
  " Identifies the associated physical asset(s) actually used for a specific segment response. "
  physicalAssetVersion(filter: PhysicalAssetVersionFilter): PhysicalAssetVersion
  " Identifies the physical location of the physical asset(s) specified by this physical asset actual.. "
  physicalLocation(filter: OperationalLocationFilter): OperationalLocation
  " The values in the physical asset actual property are for this physical asset actual. "
  properties(filter: PhysicalAssetActualPropertyFilter, first: Int, offset: Int, order: PhysicalAssetActualPropertyOrder): [PhysicalAssetActualProperty]
  ""
  propertiesAggregate(filter: PhysicalAssetActualPropertyFilter): PhysicalAssetActualPropertyAggregateResult
  " Specifies the amount of equipment resources used in parent segment. "
  quantity: Float
  " Identifies the unit of measure of the quantity. "
  quantityUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The segment response as whole defined in part by this physical asset actual. "
  segmentResponse(filter: SegmentResponseFilter): SegmentResponse
  " Can have electronic Signature. "
  signatures(filter: SignatureFilter, first: Int, offset: Int, order: SignatureOrder): [Signature]
  ""
  signaturesAggregate(filter: SignatureFilter): SignatureAggregateResult
  " Spatially defines the physical asset(s) specified by this physical asset actual. "
  spatialDefinition(filter: SpatialDefinitionFilter): SpatialDefinition
  " The test result records the evaluated criterion result attribute and property measurement for this testable object. "
  testResults(filter: TestResultFilter, first: Int, offset: Int, order: TestResultOrder): [TestResult]
  ""
  testResultsAggregate(filter: TestResultFilter): TestResultAggregateResult
}
""
type PhysicalAssetActualAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  physicalAssetUseMax: String
  ""
  physicalAssetUseMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
}
"""
Specific properties that are required for a physical asset actual shall be presented as physical 
asset actual properties. Physical asset actual properties may contain nested physical asset actual 
properties.
"""
type PhysicalAssetActualProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The values in the child physical asset actual property for this physical asset actual. "
  children(filter: PhysicalAssetActualPropertyFilter, first: Int, offset: Int, order: PhysicalAssetActualPropertyOrder): [PhysicalAssetActualProperty]
  ""
  childrenAggregate(filter: PhysicalAssetActualPropertyFilter): PhysicalAssetActualPropertyAggregateResult
  " Contains additional information and descriptions of the physical asset actual property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " An identification of the associated physical asset property or class property for a specific segment response. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " The values in this child physical asset actual property make up part of the physical asset actual. "
  parent(filter: PhysicalAssetActualPropertyFilter): PhysicalAssetActualProperty
  " The values for this physical asset actual property in part are for the physical asset actual. "
  physicalAssetActual(filter: PhysicalAssetActualFilter): PhysicalAssetActual!
  " A cross-model dependency to element in the physical asset model. "
  physicalAssetClassProperty(filter: PhysicalAssetClassPropertyFilter): PhysicalAssetClassProperty
  " A cross-model dependency to element in the physical asset model. "
  physicalAssetProperty(filter: PhysicalAssetPropertyFilter): PhysicalAssetProperty
  " Specifies the amount of physical asset resources used in parent segment. "
  quantity: Float!
  " Identifies the unit of measure of the quantity. "
  quantityUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The value or set of values for the associated property. "
  value: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type PhysicalAssetActualPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
  ""
  valueMax: String
  ""
  valueMin: String
}
""
type PhysicalAssetAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  nextVersionMax: String
  ""
  nextVersionMin: String
  ""
  uiSortIndexAvg: Float
  ""
  uiSortIndexMax: Int
  ""
  uiSortIndexMin: Int
  ""
  uiSortIndexSum: Int
}
"""
A representation of a grouping of physical assets with similar characteristics for purposes of repair
and replacement shall be presented as a physical asset class. Any physical asset shall be a member of
one physical asset class. A physical asset class may be defined as a derived class specialization of
zero or more base physical asset classes. A physical asset class may be made up of zero or more physical
asset classes.

A physical asset class may be tested by evaluating the test specification criteria in the test specification
that references the evaluated property and may be recorded in an evaluated criterion result attribute in
the test result.
"""
type PhysicalAssetClass {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The currently active version. To find a version that was active at a point in time, use versions with a filter. "
  activeVersion(filter: PhysicalAssetClassVersionFilter): PhysicalAssetClassVersion
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The manufacture's identification of the specific physical asset class. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  "Association relationship (Is A):"
  isIncludedIn(filter: PhysicalAssetClassVersionFilter, first: Int, offset: Int, order: PhysicalAssetClassVersionOrder): [PhysicalAssetClassVersion]
  ""
  isIncludedInAggregate(filter: PhysicalAssetClassVersionFilter): PhysicalAssetClassVersionAggregateResult
  """
   Aggregation hierarchy (Has A):
    - This object can include the properties of zero or many objects of the same type
    - this object's properties can be included in zero or many objects of the same type
    - This relationship intent is to create subordinate classes can be contained within various superordinate classes
    in the same way that a component may be made up of subcomponents
  
    Example:
  
    MixerMechanism properties: HeadShape, Type
    InsulationSleeve properties:  Density, Colour
    HeatingElement properties:  Power, Length
    Boiler isMadeUpOf  [MixerMechanism, Heating Element] (and extends this with property TargetTemperature)
    InsulatedBoiler isMadeUpOf  [MixerMechanism, Heating Element, InsulationSleeve] (and extends this with property TargetTemperature)
  """
  isMadeUpOf(filter: PhysicalAssetClassFilter, first: Int, offset: Int, order: PhysicalAssetClassOrder): [PhysicalAssetClass]
  ""
  isMadeUpOfAggregate(filter: PhysicalAssetClassFilter): PhysicalAssetClassAggregateResult
  " Aggregation hierarchy (Has A) "
  isPartOf(filter: PhysicalAssetClassFilter, first: Int, offset: Int, order: PhysicalAssetClassOrder): [PhysicalAssetClass]
  ""
  isPartOfAggregate(filter: PhysicalAssetClassFilter): PhysicalAssetClassAggregateResult
  " The last node in the fully qualified id "
  label: String!
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  " The physical asset actual(s) that map to this physical asset class. "
  physicalAssetActual(filter: PhysicalAssetActualFilter, first: Int, offset: Int, order: PhysicalAssetActualOrder): [PhysicalAssetActual]
  ""
  physicalAssetActualAggregate(filter: PhysicalAssetActualFilter): PhysicalAssetActualAggregateResult
  " The physical asset requirement(s) that map to this physical asset class. "
  physicalAssetRequirements(filter: PhysicalAssetRequirementFilter, first: Int, offset: Int, order: PhysicalAssetRequirementOrder): [PhysicalAssetRequirement]
  ""
  physicalAssetRequirementsAggregate(filter: PhysicalAssetRequirementFilter): PhysicalAssetRequirementAggregateResult
  " The physical asset specification(s) that map to this physical asset class. "
  physicalAssetSpecifications(filter: PhysicalAssetSpecificationFilter, first: Int, offset: Int, order: PhysicalAssetSpecificationOrder): [PhysicalAssetSpecification]
  ""
  physicalAssetSpecificationsAggregate(filter: PhysicalAssetSpecificationFilter): PhysicalAssetSpecificationAggregateResult
  " The physical asset objects support this physical asset class. The physical asset objects support the physical asset class property(s) associated with this physical asset class. "
  physicalAssetVersions(filter: PhysicalAssetVersionFilter, first: Int, offset: Int, order: PhysicalAssetVersionOrder): [PhysicalAssetVersion]
  ""
  physicalAssetVersionsAggregate(filter: PhysicalAssetVersionFilter): PhysicalAssetVersionAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " The test specification(s) used to evaluate this testable object. "
  specifiesTests(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  specifiesTestsAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " The test result records the evaluated criterion result attribute and property measurement for this testable object. "
  testResults(filter: TestResultFilter, first: Int, offset: Int, order: TestResultOrder): [TestResult]
  ""
  testResultsAggregate(filter: TestResultFilter): TestResultAggregateResult
  " The ID of this testable object ID(s) evaluated by the test specification. "
  testedBy(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  testedByAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " The icon for the menu in the libre admin UI menu. "
  uiSortIndex: Int
  " Link to all available versions for this entity. "
  versions(filter: PhysicalAssetClassVersionFilter, first: Int, offset: Int, order: PhysicalAssetClassVersionOrder): [PhysicalAssetClassVersion]
  ""
  versionsAggregate(filter: PhysicalAssetClassVersionFilter): PhysicalAssetClassVersionAggregateResult
}
""
type PhysicalAssetClassAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  nextVersionMax: String
  ""
  nextVersionMin: String
  ""
  uiSortIndexAvg: Float
  ""
  uiSortIndexMax: Int
  ""
  uiSortIndexMin: Int
  ""
  uiSortIndexSum: Int
}
"""
Properties of a physical asset class shall be presented as physical asset class properties. Each may 
have zero or more recognized properties.

A physical asset class property may be tested to the evaluated property in a test specification where 
the measured results may be recorded in a property measurement attribute in a test result. The measured 
results may also be evaluated to the test specification criteria in the test specification that references 
the evaluated property where they may be recorded in an evaluated criterion result attribute in the test result.

Physical asset class property(s) may contain nested physical asset class property(s).
"""
type PhysicalAssetClassProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The nested physical asset class property(s) makes up part of this physical asset class property as the whole. "
  children(filter: PhysicalAssetClassPropertyFilter, first: Int, offset: Int, order: PhysicalAssetClassPropertyOrder): [PhysicalAssetClassProperty]
  ""
  childrenAggregate(filter: PhysicalAssetClassPropertyFilter): PhysicalAssetClassPropertyAggregateResult
  " This testable object property is measured to the test specification containing the evaluated property. "
  correspondsTo(filter: EvaluatedPropertyFilter): EvaluatedProperty
  " Additional information about the property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " An identification of the specific property. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " The physical asset class property that this nested physical asset class property makes up part of as the whole. "
  parent(filter: PhysicalAssetClassPropertyFilter): PhysicalAssetClassProperty
  " Physical asset actual property(s) mapped to this physical asset class property. "
  physicalAssetActualProperties(filter: PhysicalAssetActualPropertyFilter, first: Int, offset: Int, order: PhysicalAssetActualPropertyOrder): [PhysicalAssetActualProperty]
  ""
  physicalAssetActualPropertiesAggregate(filter: PhysicalAssetActualPropertyFilter): PhysicalAssetActualPropertyAggregateResult
  " These physical asset class property values in part define the physical asset class. "
  physicalAssetClassVersion(filter: PhysicalAssetClassVersionFilter): PhysicalAssetClassVersion!
  " If the parent physical asset supports a physical asset class, this physical asset class property(s) is applied to the physical asset property(s). "
  physicalAssetProperty(filter: PhysicalAssetPropertyFilter): PhysicalAssetProperty
  " Physical asset requirement property(s) mapped to this physical asset class property. "
  physicalAssetRequirementProperties(filter: PhysicalAssetRequirementPropertyFilter, first: Int, offset: Int, order: PhysicalAssetRequirementPropertyOrder): [PhysicalAssetRequirementProperty]
  ""
  physicalAssetRequirementPropertiesAggregate(filter: PhysicalAssetRequirementPropertyFilter): PhysicalAssetRequirementPropertyAggregateResult
  " Physical asset specification property(s) mapped to this physical asset class property. "
  physicalAssetSpecificationProperties(filter: PhysicalAssetSpecificationPropertyFilter, first: Int, offset: Int, order: PhysicalAssetSpecificationPropertyOrder): [PhysicalAssetSpecificationProperty]
  ""
  physicalAssetSpecificationPropertiesAggregate(filter: PhysicalAssetSpecificationPropertyFilter): PhysicalAssetSpecificationPropertyAggregateResult
  " Defines the type of the property. "
  propertyType: Isa95PropertyType!
  " The property measurement records the measurement result for this testable object property. "
  recordsMeasurementOf(filter: PropertyMeasurementFilter, first: Int, offset: Int, order: PropertyMeasurementOrder): [PropertyMeasurement]
  ""
  recordsMeasurementOfAggregate(filter: PropertyMeasurementFilter): PropertyMeasurementAggregateResult
  " The value, set of values, or range of the property. "
  value: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type PhysicalAssetClassPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  valueMax: String
  ""
  valueMin: String
}
"""
A representation of a grouping of physical assets with similar characteristics for purposes of repair
and replacement shall be presented as a physical asset class. Any physical asset shall be a member of
one physical asset class. A physical asset class may be defined as a derived class specialization of
zero or more base physical asset classes. A physical asset class may be made up of zero or more physical
asset classes.

A physical asset class may be tested by evaluating the test specification criteria in the test specification
that references the evaluated property and may be recorded in an evaluated criterion result attribute in
the test result.
"""
type PhysicalAssetClassVersion {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Additional information about the physical asset class. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " The manufacture's identification of the specific physical asset class. "
  id: String!
  ""
  id_version: String!
  " Unique internal database identifier. "
  iid: ID!
  """
   Association relationship (Is A):
    - This object can include the properties of zero or many objects of the same type
    - This object's properties can be included in zero or many objects of the same type
    - This relationship intent is to create subordinate classes which are a specialisation of the superordinate class
  
    Example:
    FluidTank properties: Capacity, Temperature
    MixerTank includesPropertiesOf FluidTank (and extends this with property MixerSpeed)
    Boiler includesPropertiesOf FluidTank (and extends this with property TargetTemperature)
    InsulatedBoiler includesPropertiesOf Boiler (and extends this with property InsulationRating)
  
    MixerTank properties:  Capacity, Temperature, MixerSpeed
    Boiler properties:  Capacity, Temperature, TargetTemperature
    InsulatedBoiler properties:  Capacity, Temperature, TargetTemperature, InsulationRating
  
    FluidTank isIncludedIn [MixerTank, Boiler, InsulatedBoiler]
    Boiler isIncludedIn [InsulatedBoiler]
  """
  includesPropertiesOf(filter: PhysicalAssetClassFilter, first: Int, offset: Int, order: PhysicalAssetClassOrder): [PhysicalAssetClass]
  ""
  includesPropertiesOfAggregate(filter: PhysicalAssetClassFilter): PhysicalAssetClassAggregateResult
  " The physical asset class that uses this physical asset class version as it's active version. "
  isActiveVersionOf(filter: PhysicalAssetClassFilter): PhysicalAssetClass
  " An identification of the manufacturer. "
  manufacturer: String
  " The physical asset class that this physical asset class version relates to. "
  physicalAssetClass(filter: PhysicalAssetClassFilter): PhysicalAssetClass!
  " The physical asset class property(s) of this physical asset class. "
  properties(filter: PhysicalAssetClassPropertyFilter, first: Int, offset: Int, order: PhysicalAssetClassPropertyOrder): [PhysicalAssetClassProperty]
  ""
  propertiesAggregate(filter: PhysicalAssetClassPropertyFilter): PhysicalAssetClassPropertyAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " State Model Definitions define the allowed states and transitions between states "
  stateModels(filter: StateModelDefinitionFilter, first: Int, offset: Int, order: StateModelDefinitionOrder): [StateModelDefinition]
  ""
  stateModelsAggregate(filter: StateModelDefinitionFilter): StateModelDefinitionAggregateResult
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
type PhysicalAssetClassVersionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  manufacturerMax: String
  ""
  manufacturerMin: String
  ""
  versionMax: String
  ""
  versionMin: String
}
""
type PhysicalAssetDataSource {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The external data provider details "
  dataSourceVersion(filter: DataSourceVersionFilter): DataSourceVersion
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Unique internal database identifier. "
  iid: ID!
  ""
  physicalAssetVersion(filter: PhysicalAssetVersionFilter): PhysicalAssetVersion!
  " This JSONata transform resolves the data source topic id for the properties of the equipment"
  topicTemplate: String
}
""
type PhysicalAssetDataSourceAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  topicTemplateMax: String
  ""
  topicTemplateMin: String
}
"""
Properties of physical assets shall be presented as physical asset properties. A physical asset shall 
have zero or more physical asset properties. These specify the current property values of the physical 
asset for the associated physical asset class property. Physical asset properties may include a unit of measure.

A physical asset property may be tested to the evaluated property in a test specification where the 
measured results may be recorded in a property measurement attribute in a test result. The measured 
results may also be evaluated to the test specification criteria in the test specification that references 
the evaluated property where they may be recorded in an evaluated criterion result attribute in the test result.

Physical asset property(s) may contain nested physical asset property(s).
"""
type PhysicalAssetProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The nested physical asset property(s) makes up part of this physical asset property as the whole. "
  children(filter: PhysicalAssetPropertyFilter, first: Int, offset: Int, order: PhysicalAssetPropertyOrder): [PhysicalAssetProperty]
  ""
  childrenAggregate(filter: PhysicalAssetPropertyFilter): PhysicalAssetPropertyAggregateResult
  " This testable object property is measured to the test specification containing the evaluated property. "
  correspondsTo(filter: EvaluatedPropertyFilter): EvaluatedProperty
  " Additional information about the asset property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " An identification of the specific property. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " The nested physical asset property(s) makes up part of this physical asset property as the whole. "
  parent(filter: PhysicalAssetPropertyFilter): PhysicalAssetProperty
  " Physical asset actual property(s) mapped to this physical asset property. "
  physicalAssetActualProperties(filter: PhysicalAssetActualPropertyFilter, first: Int, offset: Int, order: PhysicalAssetActualPropertyOrder): [PhysicalAssetActualProperty]
  ""
  physicalAssetActualPropertiesAggregate(filter: PhysicalAssetActualPropertyFilter): PhysicalAssetActualPropertyAggregateResult
  " If the parent physical asset supports a physical asset class, the physical asset class property(s) is applied in this physical asset property(s). "
  physicalAssetClassProperty(filter: PhysicalAssetClassPropertyFilter): PhysicalAssetClassProperty
  " Physical asset requirement property(s) mapped to this physical asset property. "
  physicalAssetRequirementProperties(filter: PhysicalAssetRequirementPropertyFilter, first: Int, offset: Int, order: PhysicalAssetRequirementPropertyOrder): [PhysicalAssetRequirementProperty]
  ""
  physicalAssetRequirementPropertiesAggregate(filter: PhysicalAssetRequirementPropertyFilter): PhysicalAssetRequirementPropertyAggregateResult
  " Physical asset specification property(s) mapped to this physical asset property. "
  physicalAssetSpecificationProperties(filter: PhysicalAssetSpecificationPropertyFilter, first: Int, offset: Int, order: PhysicalAssetSpecificationPropertyOrder): [PhysicalAssetSpecificationProperty]
  ""
  physicalAssetSpecificationPropertiesAggregate(filter: PhysicalAssetSpecificationPropertyFilter): PhysicalAssetSpecificationPropertyAggregateResult
  " These physical asset property values in part for the physical asset. "
  physicalAssetVersion(filter: PhysicalAssetVersionFilter): PhysicalAssetVersion!
  " The property measurement records the measurement result for this testable object property. "
  recordsMeasurementOf(filter: PropertyMeasurementFilter, first: Int, offset: Int, order: PropertyMeasurementOrder): [PropertyMeasurement]
  ""
  recordsMeasurementOfAggregate(filter: PropertyMeasurementFilter): PropertyMeasurementAggregateResult
  " The value, set of values, or range of the property. "
  value: String
  " The lower limit that would trigger an alert. "
  valueLowerControlLimit: Float
  " The lower limit that impacts the quality of the product. "
  valueLowerSpecLimit: Float
  " Target value. "
  valueSetPoint: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The upper limit that would trigger an alert. "
  valueUpperControlLimit: Float
  " The upper limit that impacts the quality of the product. "
  valueUpperSpecLimit: Float
}
""
type PhysicalAssetPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  valueLowerControlLimitAvg: Float
  ""
  valueLowerControlLimitMax: Float
  ""
  valueLowerControlLimitMin: Float
  ""
  valueLowerControlLimitSum: Float
  ""
  valueLowerSpecLimitAvg: Float
  ""
  valueLowerSpecLimitMax: Float
  ""
  valueLowerSpecLimitMin: Float
  ""
  valueLowerSpecLimitSum: Float
  ""
  valueMax: String
  ""
  valueMin: String
  ""
  valueSetPointMax: String
  ""
  valueSetPointMin: String
  ""
  valueUpperControlLimitAvg: Float
  ""
  valueUpperControlLimitMax: Float
  ""
  valueUpperControlLimitMin: Float
  ""
  valueUpperControlLimitSum: Float
  ""
  valueUpperSpecLimitAvg: Float
  ""
  valueUpperSpecLimitMax: Float
  ""
  valueUpperSpecLimitMin: Float
  ""
  valueUpperSpecLimitSum: Float
}
"""
The identification of the number, type, duration, and scheduling of specific physical assets and physical 
asset class constraints needed to support the current operations request shall be presented as a physical 
asset requirement. The operations request may include one or more physical asset requirements. Requirements 
can be as generic as materials of construction, or as specific as a particular piece of physical asset. 
Each of these requirements shall be an instance of a physical asset requirement.

Properties of the physical asset requirement shall be presented as physical asset requirement properties. 
A physical asset requirement shall include the identification of the physical asset needed, such as milling 
machine serial number #345334; and the quantity of physical asset needed. Specific elements associated with 
each physical asset requirement may be included in one or more physical asset requirement properties.
"""
type PhysicalAssetRequirement {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The related object(s) makes up part of this physical asset requirement as the whole. "
  children(filter: PhysicalAssetRequirementFilter, first: Int, offset: Int, order: PhysicalAssetRequirementOrder): [PhysicalAssetRequirement]
  ""
  childrenAggregate(filter: PhysicalAssetRequirementFilter): PhysicalAssetRequirementAggregateResult
  " Defines a comment on the physical asset requirement. "
  comments(filter: CommentFilter, first: Int, offset: Int, order: CommentOrder): [Comment]
  ""
  commentsAggregate(filter: CommentFilter): CommentAggregateResult
  " Contains additional information and descriptions of the physical asset requirement. "
  description: String
  " A level definition for the associated element in the hierarchy of the physical asset model "
  equipmentLevel: EquipmentElementLevel
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " Defines a unique identification of a physical asset requirement. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " Job order associated with this physical asset requirement. "
  jobOrder(filter: JobOrderFilter): JobOrder
  " The related object(s) made up in part by this physical asset requirement as the whole. "
  parent(filter: PhysicalAssetRequirementFilter): PhysicalAssetRequirement
  " Identifies the associated physical asset(s) of the physical asset requirement for a specific segment requirement. "
  physicalAsset(filter: PhysicalAssetFilter): PhysicalAsset
  " Identifies the associated physical asset model(s) of the physical asset requirement for a specific segment requirement. "
  physicalAssetClass(filter: PhysicalAssetClassFilter): PhysicalAssetClass
  " Identifies the physical location of the physical asset(s) specified by this physical asset requirement. "
  physicalLocation(filter: OperationalLocationFilter): OperationalLocation
  " The values in the physical asset requirement property are for this physical asset requirement. "
  properties(filter: PhysicalAssetRequirementPropertyFilter, first: Int, offset: Int, order: PhysicalAssetRequirementPropertyOrder): [PhysicalAssetRequirementProperty]
  ""
  propertiesAggregate(filter: PhysicalAssetRequirementPropertyFilter): PhysicalAssetRequirementPropertyAggregateResult
  " Specifies the amount of equipment resources required for the parent segment. "
  quantity: Float
  " The unit of measure of the associated quantity. "
  quantityUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The segment requirement defined in part by this physical asset requirement. "
  segmentRequirement(filter: SegmentRequirementFilter): SegmentRequirement
  " Can have electronic Signature. "
  signatures(filter: SignatureFilter, first: Int, offset: Int, order: SignatureOrder): [Signature]
  ""
  signaturesAggregate(filter: SignatureFilter): SignatureAggregateResult
  " The test specification(s) used to evaluate this testable object. "
  specifiesTests(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  specifiesTestsAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " The test result records the evaluated criterion result attribute and property measurement for this testable object. "
  testResults(filter: TestResultFilter, first: Int, offset: Int, order: TestResultOrder): [TestResult]
  ""
  testResultsAggregate(filter: TestResultFilter): TestResultAggregateResult
  " The ID of this testable object ID(s) evaluated by the test specification. "
  testedBy(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  testedByAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  " Defines the expected use of the physical asset class or physical asset. "
  use: String
}
""
type PhysicalAssetRequirementAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
  ""
  useMax: String
  ""
  useMin: String
}
"""
Specific properties that are required for physical asset requirements shall be presented as physical 
asset requirement properties. Physical asset requirement properties may contain nested physical asset 
requirement properties.
"""
type PhysicalAssetRequirementProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The values in the child physical asset requirement property for this physical asset requirement. "
  children(filter: PhysicalAssetRequirementPropertyFilter, first: Int, offset: Int, order: PhysicalAssetRequirementPropertyOrder): [PhysicalAssetRequirementProperty]
  ""
  childrenAggregate(filter: PhysicalAssetRequirementPropertyFilter): PhysicalAssetRequirementPropertyAggregateResult
  " Contains additional information and descriptions of the equipment requirement property definition. "
  description: String
  " An identification of the associated equipment property or equipment class property for a specific segment requirement. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " The partent physical asset requirement property this physical asset requirement has values for. "
  parent(filter: PhysicalAssetRequirementPropertyFilter): PhysicalAssetRequirementProperty
  " A cross-model dependency to element in the physical asset model. "
  physicalAssetClassProperty(filter: PhysicalAssetClassPropertyFilter): PhysicalAssetClassProperty
  " A cross-model dependency to element in the physical asset model. "
  physicalAssetProperty(filter: PhysicalAssetPropertyFilter): PhysicalAssetProperty
  " The values for this physical asset requirement property in part are for the physical asset requirement. "
  physicalAssetRequirement(filter: PhysicalAssetRequirementFilter): PhysicalAssetRequirement!
  " Specifies the amount of physical asset requirement property required for the parent physical asset. "
  quantity: Float
  " The unit of measure of the associated quantity. "
  quantityUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The value, set of values, or range of the associated property. "
  value: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type PhysicalAssetRequirementPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
  ""
  valueMax: String
  ""
  valueMin: String
}
"""
An identification, reference, or correspondence to a physical asset capability shall be presented as 
a physical asset specification. A physical asset specification may specify either a physical asset or 
a physical asset class. A physical asset specification identifies the specific physical asset capability 
that is associated with the segment.

Specific elements associated with a physical asset specification may be included in one or more physical 
asset specification properties.
"""
type PhysicalAssetSpecification {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The related object(s) makes up part of this physicalAsset specification as the whole. "
  children(filter: PhysicalAssetSpecificationFilter, first: Int, offset: Int, order: PhysicalAssetSpecificationOrder): [PhysicalAssetSpecification]
  ""
  childrenAggregate(filter: PhysicalAssetSpecificationFilter): PhysicalAssetSpecificationAggregateResult
  " Contains additional information of the physical asset specification. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Identifies where the exchanged information fits within the role-based physical asset hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of a specific physical asset segment specification. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " The operations segment that is in part defined by this physical asset specification. "
  operationsSegment(filter: OperationsSegmentFilter): OperationsSegment
  " The related object that this this physicalAsset specification makes up part of as the whole. "
  parent(filter: PhysicalAssetSpecificationFilter): PhysicalAssetSpecification
  " A cross-model association to element in the physical asset model. "
  physicalAsset(filter: PhysicalAssetFilter): PhysicalAsset
  " A cross-model association to element in the physical asset model. "
  physicalAssetClass(filter: PhysicalAssetClassFilter): PhysicalAssetClass
  " Defines the expected use of the physical asset class or physical asset in the context of the operations segment. "
  physicalAssetUse: String
  " Identifies the physical location of the physical asset(s) specified by this physical asset specification. "
  physicalLocation(filter: OperationalLocationFilter): OperationalLocation
  " The process segment version that is in part defined by this physical asset specification. "
  processSegmentVersion(filter: ProcessSegmentVersionFilter): ProcessSegmentVersion
  " The physicalAsset specification property(s) of this physicalAsset specification. "
  properties(filter: PhysicalAssetSpecificationPropertyFilter, first: Int, offset: Int, order: PhysicalAssetSpecificationPropertyOrder): [PhysicalAssetSpecificationProperty]
  ""
  propertiesAggregate(filter: PhysicalAssetSpecificationPropertyFilter): PhysicalAssetSpecificationPropertyAggregateResult
  " Specifies the amount of physical asset resources required for the parent segment. "
  quantity: Float
  " The unit of measure of the associated quantity. "
  quantityUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " Spatially defines the physical asset(s) specified by this physical asset specification. "
  spatialDefinition(filter: SpatialDefinitionFilter): SpatialDefinition
  " The resources and instructions required to perform a unit of work for a specific job order. "
  workDirective(filter: WorkDirectiveFilter): WorkDirective
  " The resources and instructions required to perform a unit of work without reference to a specific job order. "
  workMaster(filter: WorkMasterFilter): WorkMaster
}
""
type PhysicalAssetSpecificationAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  physicalAssetUseMax: String
  ""
  physicalAssetUseMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
}
"""
Specific properties that are required for physical asset specifications shall be presented as physical 
asset specification properties. Physical asset specification properties may contain nested physical 
asset specification properties.
"""
type PhysicalAssetSpecificationProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " This child physical asset specification property(s) of the parent physical asset specification property. "
  children(filter: PhysicalAssetSpecificationPropertyFilter, first: Int, offset: Int, order: PhysicalAssetSpecificationPropertyOrder): [PhysicalAssetSpecificationProperty]
  ""
  childrenAggregate(filter: PhysicalAssetSpecificationPropertyFilter): PhysicalAssetSpecificationPropertyAggregateResult
  " Contains additional information and descriptions of the physical asset specification property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " An identification of a property of the associated physical asset property or physical asset class property for a specific segment. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " This parent physical asset specification property of this parent physical asset specification property. "
  parent(filter: PhysicalAssetSpecificationPropertyFilter): PhysicalAssetSpecificationProperty
  " A cross-model dependency to element in the physical asset model. "
  physicalAssetClassProperty(filter: PhysicalAssetClassPropertyFilter): PhysicalAssetClassProperty
  " A cross-model dependency to element in the physical asset model. "
  physicalAssetProperty(filter: PhysicalAssetPropertyFilter): PhysicalAssetProperty
  " The physical asset specification property(s) of this physical asset specification property. "
  physicalAssetSpecification(filter: PhysicalAssetSpecificationFilter): PhysicalAssetSpecification!
  " Specifies the amount of physical asset resources required for the parent segment. "
  quantity: Float
  " The unit of measure of the associated quantity. "
  quantityUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The value, set of values, or range of the property. "
  value: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type PhysicalAssetSpecificationPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
  ""
  valueMax: String
  ""
  valueMin: String
}
"""
A physical piece of equipment shall be presented as a physical asset.

A physical asset may be tested by the evaluation of the test specification criteria in the test specification
that references the evaluated property and may be recorded in an evaluated criterion result attribute
in the test result.

Physical assets may be made up of other physical assets.

Example: A packaging line can be made up of conveyor sections, motors and sensors.
"""
type PhysicalAssetVersion {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The data source for properties of this physical asset. "
  dataSources(filter: PhysicalAssetDataSourceFilter, first: Int, offset: Int, order: PhysicalAssetDataSourceOrder): [PhysicalAssetDataSource]
  ""
  dataSourcesAggregate(filter: PhysicalAssetDataSourceFilter): PhysicalAssetDataSourceAggregateResult
  " Contains additional information and descriptions of the physical asset. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " Contains a unique identification for financial tracking as required by laws or regulations. "
  fixedAssetID: String
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " Defines a unique identification of a physical asset. "
  id: String!
  ""
  id_version: String!
  " Unique internal database identifier. "
  iid: ID!
  " The physical asset that uses this physical asset version as it's active version. "
  isActiveVersionOf(filter: PhysicalAssetFilter): PhysicalAsset
  " The physical asset that this physical asset version relates to. "
  physicalAsset(filter: PhysicalAssetFilter): PhysicalAsset!
  " The physical asset actual(s) that map to this physical asset class. "
  physicalAssetActual(filter: PhysicalAssetActualFilter, first: Int, offset: Int, order: PhysicalAssetActualOrder): [PhysicalAssetActual]
  ""
  physicalAssetActualAggregate(filter: PhysicalAssetActualFilter): PhysicalAssetActualAggregateResult
  " This physical asset supports the physical asset class property(s) associated with the physical asset class. "
  physicalAssetClasses(filter: PhysicalAssetClassFilter, first: Int, offset: Int, order: PhysicalAssetClassOrder): [PhysicalAssetClass]
  ""
  physicalAssetClassesAggregate(filter: PhysicalAssetClassFilter): PhysicalAssetClassAggregateResult
  " Identifies the physical location of the physical asset. "
  physicalLocation(filter: OperationalLocationFilter): OperationalLocation
  " Identifies the physical location of the physical asset. "
  physicalLocationDescription: String
  " The physical asset properties values of this physical asset. "
  properties(filter: PhysicalAssetPropertyFilter, first: Int, offset: Int, order: PhysicalAssetPropertyOrder): [PhysicalAssetProperty]
  ""
  propertiesAggregate(filter: PhysicalAssetPropertyFilter): PhysicalAssetPropertyAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " Spatially defines the physical asset. "
  spatialDefinition(filter: SpatialDefinitionFilter): SpatialDefinition
  " State Model Definitions define the allowed states and transitions between states "
  stateModels(filter: StateModelDefinitionFilter, first: Int, offset: Int, order: StateModelDefinitionOrder): [StateModelDefinition]
  ""
  stateModelsAggregate(filter: StateModelDefinitionFilter): StateModelDefinitionAggregateResult
  " Contains a vendor's serial number. "
  vendorID: String
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
type PhysicalAssetVersionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  fixedAssetIDMax: String
  ""
  fixedAssetIDMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  physicalLocationDescriptionMax: String
  ""
  physicalLocationDescriptionMin: String
  ""
  vendorIDMax: String
  ""
  vendorIDMin: String
  ""
  versionMax: String
  ""
  versionMin: String
}
""
type Point {
  ""
  latitude: Float!
  ""
  longitude: Float!
}
""
type PointList {
  ""
  points: [Point!]!
}
""
type Polygon {
  ""
  coordinates: [PointList!]!
}
"""
A process segment lists the classes of personnel, equipment, physical assets, and material needed, 
and/or it may present specific resources, such as specific equipment needed for the process segment. 
A process segment may list the quantity of the resource needed. These values are stored in process 
segment versions.

Process segments may contain specifications of specific resources required by the process segment. 
Process segments may contain parameters that can be listed in specific operations requests.

A process segment may be a exclusive specialization of another process segment. A process segment 
shall be defined as a 'pattern' or an 'instance'. A pattern process segment defines a 'template', 
upon which other pattern or instance process segments may be based. In the specialization association 
relationship, 'defined by', on the process segment object, a process segment instance or child pattern 
may be defined by a parent pattern. Unlike instance process segments, pattern process segments shall 
not be directly scheduled or tracked. Therefore, segment requirements, segment responses and process 
segment capabilities shall not reference pattern process segments.

Where a process segment references a work master, the definition type (pattern or instance) of the 
referenced work master shall have the same value as that of the process segment.

The parameter, personnel, equipment, physical asset and material specifications of a process segment 
may map to those of any pattern process segment upon which the process segment is based.
"""
type ProcessSegment {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The currently active version. To find a version that was active at a point in time, use versions with a filter. "
  activeVersion(filter: ProcessSegmentVersionFilter): ProcessSegmentVersion
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " A unique identification of a process segment, within the scope of the information exchanged. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " This process segment node(s) to the process segment dependency(s). "
  inflows(filter: ProcessSegmentDependencyFilter, first: Int, offset: Int, order: ProcessSegmentDependencyOrder): [ProcessSegmentDependency]
  ""
  inflowsAggregate(filter: ProcessSegmentDependencyFilter): ProcessSegmentDependencyAggregateResult
  " This parent process segment is whole of the child process segment(s) as the part. "
  isMadeUpOf(filter: ProcessSegmentFilter, first: Int, offset: Int, order: ProcessSegmentOrder): [ProcessSegment]
  ""
  isMadeUpOfAggregate(filter: ProcessSegmentFilter): ProcessSegmentAggregateResult
  " This child process segment makes up part of the parent process segment of the whole. "
  isPartOf(filter: ProcessSegmentFilter): ProcessSegment
  " A user-friendly identifier for this entity "
  label: String!
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  " The operations segment(s) applying this process segment(s) in the segment requirement for an operations request. "
  operationsSegments(filter: OperationsSegmentFilter, first: Int, offset: Int, order: OperationsSegmentOrder): [OperationsSegment]
  ""
  operationsSegmentsAggregate(filter: OperationsSegmentFilter): OperationsSegmentAggregateResult
  " The process segment dependency(s) from this process segment node. "
  outflows(filter: ProcessSegmentDependencyFilter, first: Int, offset: Int, order: ProcessSegmentDependencyOrder): [ProcessSegmentDependency]
  ""
  outflowsAggregate(filter: ProcessSegmentDependencyFilter): ProcessSegmentDependencyAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " The segment requirement(s) applying this process segment in the operations segment for an operations request. "
  segmentRequirements(filter: SegmentRequirementFilter, first: Int, offset: Int, order: SegmentRequirementOrder): [SegmentRequirement]
  ""
  segmentRequirementsAggregate(filter: SegmentRequirementFilter): SegmentRequirementAggregateResult
  " The segment response(s) corresponding to this process segment. "
  segmentResponses(filter: SegmentResponseFilter, first: Int, offset: Int, order: SegmentResponseOrder): [SegmentResponse]
  ""
  segmentResponsesAggregate(filter: SegmentResponseFilter): SegmentResponseAggregateResult
  " Link to all available versions for this entity. "
  versions(filter: ProcessSegmentVersionFilter, first: Int, offset: Int, order: ProcessSegmentVersionOrder): [ProcessSegmentVersion]
  ""
  versionsAggregate(filter: ProcessSegmentVersionFilter): ProcessSegmentVersionAggregateResult
  " This process segment is applied in zero to many work master(s). "
  workMasters(filter: WorkMasterFilter, first: Int, offset: Int, order: WorkMasterOrder): [WorkMaster]
  ""
  workMastersAggregate(filter: WorkMasterFilter): WorkMasterAggregateResult
}
""
type ProcessSegmentAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  nextVersionMax: String
  ""
  nextVersionMin: String
}
"""
Process dependencies that are independent of any particular product or operations task shall be 
presented as segment dependencies.
"""
type ProcessSegmentDependency {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " A condition required to transition between process segments. Expressed as JSONata expression. "
  condition: String
  " Factor used by dependency. "
  dependencyFactor: Float
  " Defines the execution dependency constraints of one segment to another segment. "
  dependencyType: DependencyType
  " Contains additional information and descriptions of the segment dependency definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The units of measure of the dependency factor. "
  factorUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The process segment connected from this process segment dependency. "
  from(filter: ProcessSegmentFilter): ProcessSegment!
  " The identification of the unique instance of the process segment dependency. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " A set of expressions that if evaluate to true trigger or create an instance of a workflow. "
  rules(filter: RuleFilter, first: Int, offset: Int, order: RuleOrder): [Rule]
  ""
  rulesAggregate(filter: RuleFilter): RuleAggregateResult
  " The process segment connected to this segment dependency. "
  to(filter: ProcessSegmentFilter): ProcessSegment!
}
""
type ProcessSegmentDependencyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  conditionMax: String
  ""
  conditionMin: String
  ""
  count: Int
  ""
  dependencyFactorAvg: Float
  ""
  dependencyFactorMax: Float
  ""
  dependencyFactorMin: Float
  ""
  dependencyFactorSum: Float
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
}
"""
Specific parameters required for a process segment shall be presented as process segment parameters. 
Process segment parameters may contain nested process segment parameters.
"""
type ProcessSegmentParameter {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " This parent process segment parameter is whole of the child process segment parameter(s) as the part. "
  children(filter: ProcessSegmentParameterFilter, first: Int, offset: Int, order: ProcessSegmentParameterOrder): [ProcessSegmentParameter]
  ""
  childrenAggregate(filter: ProcessSegmentParameterFilter): ProcessSegmentParameterAggregateResult
  " Contains additional information. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " Identification of the process segment parameter. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The job order parameter(s) corresponding with this process segment parameter. "
  jobOrderParameter(filter: JobOrderParameterFilter): JobOrderParameter
  " The label is last node in the fully qualified name. "
  label: String!
  " This child process segment parameter makes up part of the parent process segment parameter of the whole. "
  parent(filter: ProcessSegmentParameterFilter): ProcessSegmentParameter
  " The process segment defined in part by this physical asset segment specification. "
  processSegmentVersion(filter: ProcessSegmentVersionFilter): ProcessSegmentVersion!
  " The segment parameter(s) related to this process segment parameter. "
  segmentParameters(filter: SegmentParameterFilter, first: Int, offset: Int, order: SegmentParameterOrder): [SegmentParameter]
  ""
  segmentParametersAggregate(filter: SegmentParameterFilter): SegmentParameterAggregateResult
  " The value, set of values, or range of acceptable values. "
  value: String
  " Unit of measure of the values. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type ProcessSegmentParameterAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  valueMax: String
  ""
  valueMin: String
}
"""
A specific version of a process segment that contains certain values.

A process segment version lists the classes of personnel, equipment, physical assets, and material 
needed, and/or it may present specific resources, such as specific equipment needed for the process 
segment. A process segment version may list the quantity of the resource needed.

The parameter, personnel, equipment, physical asset and material specifications of a process segment 
version may map to those of any pattern process segment upon which the process segment is based.
"""
type ProcessSegmentVersion {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Defines the type of the process segment. "
  definitionType: DefinitionType
  " Description of the process segment"
  description: String
  " Duration of process segment. "
  duration: Float
  " The units of measure of the duration. "
  durationUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " The equipment specification(s) defining part of this process segment version. "
  equipmentSpecifications(filter: EquipmentSpecificationFilter, first: Int, offset: Int, order: EquipmentSpecificationOrder): [EquipmentSpecification]
  ""
  equipmentSpecificationsAggregate(filter: EquipmentSpecificationFilter): EquipmentSpecificationAggregateResult
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of a process segment version, within the scope of the information exchanged. "
  id: String!
  ""
  id_version: String!
  " Unique internal database identifier. "
  iid: ID!
  " The process segment that uses this process segment version as it's active version. "
  isActiveVersionOf(filter: ProcessSegmentFilter): ProcessSegment
  " The material specification(s) defining part of this process segment. "
  materialSpecifications(filter: MaterialSpecificationFilter, first: Int, offset: Int, order: MaterialSpecificationOrder): [MaterialSpecification]
  ""
  materialSpecificationsAggregate(filter: MaterialSpecificationFilter): MaterialSpecificationAggregateResult
  " Describes the category of the activity. "
  operationsType: WorkType!
  " The personnel specification(s) defining part of this process segment version. "
  personnelSpecifications(filter: PersonnelSpecificationFilter, first: Int, offset: Int, order: PersonnelSpecificationOrder): [PersonnelSpecification]
  ""
  personnelSpecificationsAggregate(filter: PersonnelSpecificationFilter): PersonnelSpecificationAggregateResult
  " The physical asset specification(s) defining part of this process segment version. "
  physicalAssetSpecifications(filter: PhysicalAssetSpecificationFilter, first: Int, offset: Int, order: PhysicalAssetSpecificationOrder): [PhysicalAssetSpecification]
  ""
  physicalAssetSpecificationsAggregate(filter: PhysicalAssetSpecificationFilter): PhysicalAssetSpecificationAggregateResult
  " The process segment that this process segment version relates to. "
  processSegment(filter: ProcessSegmentFilter): ProcessSegment!
  " The process parameter specifications related to this process segment version. "
  processSegmentParameters(filter: ProcessSegmentParameterFilter, first: Int, offset: Int, order: ProcessSegmentParameterOrder): [ProcessSegmentParameter]
  ""
  processSegmentParametersAggregate(filter: ProcessSegmentParameterFilter): ProcessSegmentParameterAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
type ProcessSegmentVersionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  durationAvg: Float
  ""
  durationMax: Float
  ""
  durationMin: Float
  ""
  durationSum: Float
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  versionMax: String
  ""
  versionMin: String
}
"""
The measurement obtained during execution of work master (defined in Part 4 of this standard) shall be 
presented as a property measurement. A property measurement reports the measurement obtained for a single 
testable object property corresponding to an evaluated property of a test specification for a specific 
person, equipment, physical asset, material lot or material sublot.
"""
type PropertyMeasurement {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Additional information about the property measurement. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The EquipmentClassProperty ID for which this property measurement is records the measurement result. "
  equipmentClassProperty(filter: EquipmentClassPropertyFilter): EquipmentClassProperty
  " The EquipmentProperty ID for which this property measurement is records the measurement result. "
  equipmentProperty(filter: EquipmentPropertyFilter): EquipmentProperty
  " The date of the expiration of the property measurement. "
  expiration: DateTime
  " An identification of the specific property measurement. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The MaterialClassProperty ID for which this property measurement is records the measurement result. "
  materialClassProperty(filter: MaterialClassPropertyFilter): MaterialClassProperty
  " The MaterialDefinitionProperty ID for which this property measurement is records the measurement result. "
  materialDefinitionProperty(filter: MaterialDefinitionPropertyFilter): MaterialDefinitionProperty
  " The MaterialLotProperty ID for which this property measurement is records the measurement result. "
  materialLotProperty(filter: MaterialLotPropertyFilter): MaterialLotProperty
  " The date and time when the measurement was obtained. "
  measurementDate: DateTime
  " The PersonProperty ID for which this property measurement is records the measurement result. "
  personProperty(filter: PersonPropertyFilter): PersonProperty
  " The PersonnelClassProperty ID for which this property measurement is records the measurement result. "
  personnelClassProperty(filter: PersonnelClassPropertyFilter): PersonnelClassProperty
  " The PhysicalAssetClassProperty ID for which this property measurement is records the measurement result. "
  physicalAssetClassProperty(filter: PhysicalAssetClassPropertyFilter): PhysicalAssetClassProperty
  " The PhysicalAssetProperty ID for which this property measurement is records the measurement result. "
  physicalAssetProperty(filter: PhysicalAssetPropertyFilter): PhysicalAssetProperty
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " This property measurement obtained for each testable object property in the test result. "
  testResult(filter: TestResultFilter): TestResult!
  " The measured value for the testable object property. "
  value: String
  " The unit of measure of the measured value, if applicable. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The work directive this property measurement is measured with method of. "
  workDirective(filter: WorkDirectiveFilter): WorkDirective
  " The work master this property measurement is measured with method of. "
  workMaster(filter: WorkMasterFilter): WorkMaster
}
""
type PropertyMeasurementAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  expirationMax: DateTime
  ""
  expirationMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  measurementDateMax: DateTime
  ""
  measurementDateMin: DateTime
  ""
  valueMax: String
  ""
  valueMin: String
}
""
type PropertyNameAlias {
  ""
  dataSource(filter: DataSourceFilter): DataSource
  ""
  dataSourceTopic(filter: DataSourceTopicFilter): DataSourceTopic @deprecated(reason: "use dataSourceTopicLabel instead")
  ""
  dataSourceTopicLabel: String
  ""
  equipmentVersion(filter: EquipmentVersionFilter): EquipmentVersion!
  ""
  expression: String
  ""
  iid: ID!
  ""
  propertyLabel: String!
}
""
type PropertyNameAliasAggregateResult {
  ""
  count: Int
  ""
  dataSourceTopicLabelMax: String
  ""
  dataSourceTopicLabelMin: String
  ""
  expressionMax: String
  ""
  expressionMin: String
  ""
  propertyLabelMax: String
  ""
  propertyLabelMin: String
}
""
type PropertyValueAlias {
  ""
  alias: String!
  ""
  iid: ID!
  ""
  property(filter: EquipmentClassPropertyFilter): EquipmentClassProperty!
  ""
  system: String!
  ""
  value: String!
}
""
type PropertyValueAliasAggregateResult {
  ""
  aliasMax: String
  ""
  aliasMin: String
  ""
  count: Int
  ""
  systemMax: String
  ""
  systemMin: String
  ""
  valueMax: String
  ""
  valueMin: String
}
""
type Query {
  ""
  _entities(representations: [_Any!]!): [_Entity]!
  ""
  _service: _Service!
  ""
  aggregateAccessPermission(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  ""
  aggregateAlarmEvent(filter: AlarmEventFilter): AlarmEventAggregateResult
  ""
  aggregateComment(filter: CommentFilter): CommentAggregateResult
  ""
  aggregateDataSource(filter: DataSourceFilter): DataSourceAggregateResult
  ""
  aggregateDataSourceMethod(filter: DataSourceMethodFilter): DataSourceMethodAggregateResult
  ""
  aggregateDataSourceMethodArgument(filter: DataSourceMethodArgumentFilter): DataSourceMethodArgumentAggregateResult
  ""
  aggregateDataSourceTopic(filter: DataSourceTopicFilter): DataSourceTopicAggregateResult
  ""
  aggregateDataSourceVersion(filter: DataSourceVersionFilter): DataSourceVersionAggregateResult
  ""
  aggregateDataSubscription(filter: DataSubscriptionFilter): DataSubscriptionAggregateResult
  ""
  aggregateEnvironmentalVariable(filter: EnvironmentalVariableFilter): EnvironmentalVariableAggregateResult
  ""
  aggregateEnvironmentalVariableVersion(filter: EnvironmentalVariableVersionFilter): EnvironmentalVariableVersionAggregateResult
  ""
  aggregateEquipment(filter: EquipmentFilter): EquipmentAggregateResult
  ""
  aggregateEquipmentActual(filter: EquipmentActualFilter): EquipmentActualAggregateResult
  ""
  aggregateEquipmentActualProperty(filter: EquipmentActualPropertyFilter): EquipmentActualPropertyAggregateResult
  ""
  aggregateEquipmentAssetMapping(filter: EquipmentAssetMappingFilter): EquipmentAssetMappingAggregateResult
  ""
  aggregateEquipmentClass(filter: EquipmentClassFilter): EquipmentClassAggregateResult
  ""
  aggregateEquipmentClassProperty(filter: EquipmentClassPropertyFilter): EquipmentClassPropertyAggregateResult
  ""
  aggregateEquipmentClassVersion(filter: EquipmentClassVersionFilter): EquipmentClassVersionAggregateResult
  ""
  aggregateEquipmentDataSource(filter: EquipmentDataSourceFilter): EquipmentDataSourceAggregateResult
  ""
  aggregateEquipmentNameAlias(filter: EquipmentNameAliasFilter): EquipmentNameAliasAggregateResult
  ""
  aggregateEquipmentProperty(filter: EquipmentPropertyFilter): EquipmentPropertyAggregateResult
  ""
  aggregateEquipmentPropertyOverride(filter: EquipmentPropertyOverrideFilter): EquipmentPropertyOverrideAggregateResult
  ""
  aggregateEquipmentRequirement(filter: EquipmentRequirementFilter): EquipmentRequirementAggregateResult
  ""
  aggregateEquipmentRequirementProperty(filter: EquipmentRequirementPropertyFilter): EquipmentRequirementPropertyAggregateResult
  ""
  aggregateEquipmentSpecification(filter: EquipmentSpecificationFilter): EquipmentSpecificationAggregateResult
  ""
  aggregateEquipmentSpecificationProperty(filter: EquipmentSpecificationPropertyFilter): EquipmentSpecificationPropertyAggregateResult
  ""
  aggregateEquipmentVersion(filter: EquipmentVersionFilter): EquipmentVersionAggregateResult
  ""
  aggregateEvaluatedProperty(filter: EvaluatedPropertyFilter): EvaluatedPropertyAggregateResult
  ""
  aggregateEvent(filter: EventFilter): EventAggregateResult
  ""
  aggregateEventAssociation(filter: EventAssociationFilter): EventAssociationAggregateResult
  ""
  aggregateEventProperty(filter: EventPropertyFilter): EventPropertyAggregateResult
  ""
  aggregateEventSubtype(filter: EventSubtypeFilter): EventSubtypeAggregateResult
  ""
  aggregateEventType(filter: EventTypeFilter): EventTypeAggregateResult
  ""
  aggregateForm(filter: FormFilter): FormAggregateResult
  ""
  aggregateHierarchyScope(filter: HierarchyScopeFilter): HierarchyScopeAggregateResult
  ""
  aggregateInformationObject(filter: InformationObjectFilter): InformationObjectAggregateResult
  ""
  aggregateJobList(filter: JobListFilter): JobListAggregateResult
  ""
  aggregateJobOrder(filter: JobOrderFilter): JobOrderAggregateResult
  ""
  aggregateJobOrderParameter(filter: JobOrderParameterFilter): JobOrderParameterAggregateResult
  ""
  aggregateJobResponse(filter: JobResponseFilter): JobResponseAggregateResult
  ""
  aggregateJobResponseData(filter: JobResponseDataFilter): JobResponseDataAggregateResult
  ""
  aggregateJobResponseList(filter: JobResponseListFilter): JobResponseListAggregateResult
  ""
  aggregateLibreService(filter: LibreServiceFilter): LibreServiceAggregateResult
  ""
  aggregateMaterialActual(filter: MaterialActualFilter): MaterialActualAggregateResult
  ""
  aggregateMaterialActualProperty(filter: MaterialActualPropertyFilter): MaterialActualPropertyAggregateResult
  ""
  aggregateMaterialAlternate(filter: MaterialAlternateFilter): MaterialAlternateAggregateResult
  ""
  aggregateMaterialClass(filter: MaterialClassFilter): MaterialClassAggregateResult
  ""
  aggregateMaterialClassProperty(filter: MaterialClassPropertyFilter): MaterialClassPropertyAggregateResult
  ""
  aggregateMaterialClassVersion(filter: MaterialClassVersionFilter): MaterialClassVersionAggregateResult
  ""
  aggregateMaterialDefinition(filter: MaterialDefinitionFilter): MaterialDefinitionAggregateResult
  ""
  aggregateMaterialDefinitionProperty(filter: MaterialDefinitionPropertyFilter): MaterialDefinitionPropertyAggregateResult
  ""
  aggregateMaterialDefinitionVersion(filter: MaterialDefinitionVersionFilter): MaterialDefinitionVersionAggregateResult
  ""
  aggregateMaterialLot(filter: MaterialLotFilter): MaterialLotAggregateResult
  ""
  aggregateMaterialLotProperty(filter: MaterialLotPropertyFilter): MaterialLotPropertyAggregateResult
  ""
  aggregateMaterialRequirement(filter: MaterialRequirementFilter): MaterialRequirementAggregateResult
  ""
  aggregateMaterialRequirementProperty(filter: MaterialRequirementPropertyFilter): MaterialRequirementPropertyAggregateResult
  ""
  aggregateMaterialSpecification(filter: MaterialSpecificationFilter): MaterialSpecificationAggregateResult
  ""
  aggregateMaterialSpecificationProperty(filter: MaterialSpecificationPropertyFilter): MaterialSpecificationPropertyAggregateResult
  ""
  aggregateMaterialSubLot(filter: MaterialSubLotFilter): MaterialSubLotAggregateResult
  ""
  aggregateMenu(filter: MenuFilter): MenuAggregateResult
  ""
  aggregateMultiplicity(filter: MultiplicityFilter): MultiplicityAggregateResult
  ""
  aggregateOperationalLocation(filter: OperationalLocationFilter): OperationalLocationAggregateResult
  ""
  aggregateOperationalLocationClass(filter: OperationalLocationClassFilter): OperationalLocationClassAggregateResult
  ""
  aggregateOperationalLocationClassProperty(filter: OperationalLocationClassPropertyFilter): OperationalLocationClassPropertyAggregateResult
  ""
  aggregateOperationalLocationClassVersion(filter: OperationalLocationClassVersionFilter): OperationalLocationClassVersionAggregateResult
  ""
  aggregateOperationalLocationProperty(filter: OperationalLocationPropertyFilter): OperationalLocationPropertyAggregateResult
  ""
  aggregateOperationalLocationVersion(filter: OperationalLocationVersionFilter): OperationalLocationVersionAggregateResult
  ""
  aggregateOperationsDefinition(filter: OperationsDefinitionFilter): OperationsDefinitionAggregateResult
  ""
  aggregateOperationsDefinitionVersion(filter: OperationsDefinitionVersionFilter): OperationsDefinitionVersionAggregateResult
  ""
  aggregateOperationsEvent(filter: OperationsEventFilter): OperationsEventAggregateResult
  ""
  aggregateOperationsEventClass(filter: OperationsEventClassFilter): OperationsEventClassAggregateResult
  ""
  aggregateOperationsEventClassProperty(filter: OperationsEventClassPropertyFilter): OperationsEventClassPropertyAggregateResult
  ""
  aggregateOperationsEventClassRecordSpecification(filter: OperationsEventClassRecordSpecificationFilter): OperationsEventClassRecordSpecificationAggregateResult
  ""
  aggregateOperationsEventClassVersion(filter: OperationsEventClassVersionFilter): OperationsEventClassVersionAggregateResult
  ""
  aggregateOperationsEventDefinition(filter: OperationsEventDefinitionFilter): OperationsEventDefinitionAggregateResult
  ""
  aggregateOperationsEventDefinitionProperty(filter: OperationsEventDefinitionPropertyFilter): OperationsEventDefinitionPropertyAggregateResult
  ""
  aggregateOperationsEventDefinitionRecordSpecification(filter: OperationsEventDefinitionRecordSpecificationFilter): OperationsEventDefinitionRecordSpecificationAggregateResult
  ""
  aggregateOperationsEventDefinitionVersion(filter: OperationsEventDefinitionVersionFilter): OperationsEventDefinitionVersionAggregateResult
  ""
  aggregateOperationsEventProperty(filter: OperationsEventPropertyFilter): OperationsEventPropertyAggregateResult
  ""
  aggregateOperationsEventRecord(filter: OperationsEventRecordFilter): OperationsEventRecordAggregateResult
  ""
  aggregateOperationsEventRecordEntry(filter: OperationsEventRecordEntryFilter): OperationsEventRecordEntryAggregateResult
  ""
  aggregateOperationsMaterialBill(filter: OperationsMaterialBillFilter): OperationsMaterialBillAggregateResult
  ""
  aggregateOperationsPerformance(filter: OperationsPerformanceFilter): OperationsPerformanceAggregateResult
  ""
  aggregateOperationsRequest(filter: OperationsRequestFilter): OperationsRequestAggregateResult
  ""
  aggregateOperationsResponse(filter: OperationsResponseFilter): OperationsResponseAggregateResult
  ""
  aggregateOperationsResponseProperty(filter: OperationsResponsePropertyFilter): OperationsResponsePropertyAggregateResult
  ""
  aggregateOperationsSchedule(filter: OperationsScheduleFilter): OperationsScheduleAggregateResult
  ""
  aggregateOperationsSegment(filter: OperationsSegmentFilter): OperationsSegmentAggregateResult
  ""
  aggregateOperationsSegmentDependency(filter: OperationsSegmentDependencyFilter): OperationsSegmentDependencyAggregateResult
  ""
  aggregateParameterSpecification(filter: ParameterSpecificationFilter): ParameterSpecificationAggregateResult
  ""
  aggregatePayloadFieldDefinition(filter: PayloadFieldDefinitionFilter): PayloadFieldDefinitionAggregateResult
  ""
  aggregatePerson(filter: PersonFilter): PersonAggregateResult
  ""
  aggregatePersonProperty(filter: PersonPropertyFilter): PersonPropertyAggregateResult
  ""
  aggregatePersonVersion(filter: PersonVersionFilter): PersonVersionAggregateResult
  ""
  aggregatePersonnelActual(filter: PersonnelActualFilter): PersonnelActualAggregateResult
  ""
  aggregatePersonnelActualProperty(filter: PersonnelActualPropertyFilter): PersonnelActualPropertyAggregateResult
  ""
  aggregatePersonnelClass(filter: PersonnelClassFilter): PersonnelClassAggregateResult
  ""
  aggregatePersonnelClassProperty(filter: PersonnelClassPropertyFilter): PersonnelClassPropertyAggregateResult
  ""
  aggregatePersonnelClassVersion(filter: PersonnelClassVersionFilter): PersonnelClassVersionAggregateResult
  ""
  aggregatePersonnelRequirement(filter: PersonnelRequirementFilter): PersonnelRequirementAggregateResult
  ""
  aggregatePersonnelRequirementProperty(filter: PersonnelRequirementPropertyFilter): PersonnelRequirementPropertyAggregateResult
  ""
  aggregatePersonnelSpecification(filter: PersonnelSpecificationFilter): PersonnelSpecificationAggregateResult
  ""
  aggregatePersonnelSpecificationProperty(filter: PersonnelSpecificationPropertyFilter): PersonnelSpecificationPropertyAggregateResult
  ""
  aggregatePhysicalAsset(filter: PhysicalAssetFilter): PhysicalAssetAggregateResult
  ""
  aggregatePhysicalAssetActual(filter: PhysicalAssetActualFilter): PhysicalAssetActualAggregateResult
  ""
  aggregatePhysicalAssetActualProperty(filter: PhysicalAssetActualPropertyFilter): PhysicalAssetActualPropertyAggregateResult
  ""
  aggregatePhysicalAssetClass(filter: PhysicalAssetClassFilter): PhysicalAssetClassAggregateResult
  ""
  aggregatePhysicalAssetClassProperty(filter: PhysicalAssetClassPropertyFilter): PhysicalAssetClassPropertyAggregateResult
  ""
  aggregatePhysicalAssetClassVersion(filter: PhysicalAssetClassVersionFilter): PhysicalAssetClassVersionAggregateResult
  ""
  aggregatePhysicalAssetDataSource(filter: PhysicalAssetDataSourceFilter): PhysicalAssetDataSourceAggregateResult
  ""
  aggregatePhysicalAssetProperty(filter: PhysicalAssetPropertyFilter): PhysicalAssetPropertyAggregateResult
  ""
  aggregatePhysicalAssetRequirement(filter: PhysicalAssetRequirementFilter): PhysicalAssetRequirementAggregateResult
  ""
  aggregatePhysicalAssetRequirementProperty(filter: PhysicalAssetRequirementPropertyFilter): PhysicalAssetRequirementPropertyAggregateResult
  ""
  aggregatePhysicalAssetSpecification(filter: PhysicalAssetSpecificationFilter): PhysicalAssetSpecificationAggregateResult
  ""
  aggregatePhysicalAssetSpecificationProperty(filter: PhysicalAssetSpecificationPropertyFilter): PhysicalAssetSpecificationPropertyAggregateResult
  ""
  aggregatePhysicalAssetVersion(filter: PhysicalAssetVersionFilter): PhysicalAssetVersionAggregateResult
  ""
  aggregateProcessSegment(filter: ProcessSegmentFilter): ProcessSegmentAggregateResult
  ""
  aggregateProcessSegmentDependency(filter: ProcessSegmentDependencyFilter): ProcessSegmentDependencyAggregateResult
  ""
  aggregateProcessSegmentParameter(filter: ProcessSegmentParameterFilter): ProcessSegmentParameterAggregateResult
  ""
  aggregateProcessSegmentVersion(filter: ProcessSegmentVersionFilter): ProcessSegmentVersionAggregateResult
  ""
  aggregatePropertyMeasurement(filter: PropertyMeasurementFilter): PropertyMeasurementAggregateResult
  ""
  aggregatePropertyNameAlias(filter: PropertyNameAliasFilter): PropertyNameAliasAggregateResult
  ""
  aggregatePropertyValueAlias(filter: PropertyValueAliasFilter): PropertyValueAliasAggregateResult
  ""
  aggregateRule(filter: RuleFilter): RuleAggregateResult
  ""
  aggregateSecret(filter: SecretFilter): SecretAggregateResult
  ""
  aggregateSecretVersion(filter: SecretVersionFilter): SecretVersionAggregateResult
  ""
  aggregateSegmentData(filter: SegmentDataFilter): SegmentDataAggregateResult
  ""
  aggregateSegmentParameter(filter: SegmentParameterFilter): SegmentParameterAggregateResult
  ""
  aggregateSegmentRequirement(filter: SegmentRequirementFilter): SegmentRequirementAggregateResult
  ""
  aggregateSegmentResponse(filter: SegmentResponseFilter): SegmentResponseAggregateResult
  ""
  aggregateSignature(filter: SignatureFilter): SignatureAggregateResult
  ""
  aggregateSignatureReason(filter: SignatureReasonFilter): SignatureReasonAggregateResult
  ""
  aggregateSpatialDefinition(filter: SpatialDefinitionFilter): SpatialDefinitionAggregateResult
  ""
  aggregateStateModelAction(filter: StateModelActionFilter): StateModelActionAggregateResult
  ""
  aggregateStateModelDefinition(filter: StateModelDefinitionFilter): StateModelDefinitionAggregateResult
  ""
  aggregateStateModelEvent(filter: StateModelEventFilter): StateModelEventAggregateResult
  ""
  aggregateStateModelInstance(filter: StateModelInstanceFilter): StateModelInstanceAggregateResult
  ""
  aggregateStateModelProperty(filter: StateModelPropertyFilter): StateModelPropertyAggregateResult
  ""
  aggregateStateModelState(filter: StateModelStateFilter): StateModelStateAggregateResult
  ""
  aggregateStateModelTransition(filter: StateModelTransitionFilter): StateModelTransitionAggregateResult
  ""
  aggregateStateTransitionInstance(filter: StateTransitionInstanceFilter): StateTransitionInstanceAggregateResult
  ""
  aggregateTestResult(filter: TestResultFilter): TestResultAggregateResult
  ""
  aggregateTestSpecification(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  ""
  aggregateTestSpecificationCriteria(filter: TestSpecificationCriteriaFilter): TestSpecificationCriteriaAggregateResult
  ""
  aggregateTestSpecificationProperty(filter: TestSpecificationPropertyFilter): TestSpecificationPropertyAggregateResult
  ""
  aggregateUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasureAggregateResult
  ""
  aggregateUnitOfMeasureConversion(filter: UnitOfMeasureConversionFilter): UnitOfMeasureConversionAggregateResult
  ""
  aggregateWorkCalendar(filter: WorkCalendarFilter): WorkCalendarAggregateResult
  ""
  aggregateWorkCalendarDefinitionEntry(filter: WorkCalendarDefinitionEntryFilter): WorkCalendarDefinitionEntryAggregateResult
  ""
  aggregateWorkCalendarDefinitionEntryProperty(filter: WorkCalendarDefinitionEntryPropertyFilter): WorkCalendarDefinitionEntryPropertyAggregateResult
  ""
  aggregateWorkCalendarEntry(filter: WorkCalendarEntryFilter): WorkCalendarEntryAggregateResult
  ""
  aggregateWorkCalendarEntryProperty(filter: WorkCalendarEntryPropertyFilter): WorkCalendarEntryPropertyAggregateResult
  ""
  aggregateWorkDirective(filter: WorkDirectiveFilter): WorkDirectiveAggregateResult
  ""
  aggregateWorkMaster(filter: WorkMasterFilter): WorkMasterAggregateResult
  ""
  aggregateWorkPerformance(filter: WorkPerformanceFilter): WorkPerformanceAggregateResult
  ""
  aggregateWorkRequest(filter: WorkRequestFilter): WorkRequestAggregateResult
  ""
  aggregateWorkResponse(filter: WorkResponseFilter): WorkResponseAggregateResult
  ""
  aggregateWorkSchedule(filter: WorkScheduleFilter): WorkScheduleAggregateResult
  ""
  aggregateWorkflowError(filter: WorkflowErrorFilter): WorkflowErrorAggregateResult
  ""
  aggregateWorkflowMessage(filter: WorkflowMessageFilter): WorkflowMessageAggregateResult
  ""
  aggregateWorkflowShape(filter: WorkflowShapeFilter): WorkflowShapeAggregateResult
  ""
  aggregateWorkflowSpecification(filter: WorkflowSpecificationFilter): WorkflowSpecificationAggregateResult
  ""
  aggregateWorkflowSpecificationConnection(filter: WorkflowSpecificationConnectionFilter): WorkflowSpecificationConnectionAggregateResult
  ""
  aggregateWorkflowSpecificationConnectionProperty(filter: WorkflowSpecificationConnectionPropertyFilter): WorkflowSpecificationConnectionPropertyAggregateResult
  ""
  aggregateWorkflowSpecificationConnectionType(filter: WorkflowSpecificationConnectionTypeFilter): WorkflowSpecificationConnectionTypeAggregateResult
  ""
  aggregateWorkflowSpecificationConnectionTypeProperty(filter: WorkflowSpecificationConnectionTypePropertyFilter): WorkflowSpecificationConnectionTypePropertyAggregateResult
  ""
  aggregateWorkflowSpecificationNode(filter: WorkflowSpecificationNodeFilter): WorkflowSpecificationNodeAggregateResult
  ""
  aggregateWorkflowSpecificationNodeProperty(filter: WorkflowSpecificationNodePropertyFilter): WorkflowSpecificationNodePropertyAggregateResult
  ""
  aggregateWorkflowSpecificationNodeTestCase(filter: WorkflowSpecificationNodeTestCaseFilter): WorkflowSpecificationNodeTestCaseAggregateResult
  ""
  aggregateWorkflowSpecificationNodeType(filter: WorkflowSpecificationNodeTypeFilter): WorkflowSpecificationNodeTypeAggregateResult
  ""
  aggregateWorkflowSpecificationNodeTypeProperty(filter: WorkflowSpecificationNodeTypePropertyFilter): WorkflowSpecificationNodeTypePropertyAggregateResult
  ""
  aggregateWorkflowSpecificationNodeVariable(filter: WorkflowSpecificationNodeVariableFilter): WorkflowSpecificationNodeVariableAggregateResult
  ""
  aggregateWorkflowSpecificationProperty(filter: WorkflowSpecificationPropertyFilter): WorkflowSpecificationPropertyAggregateResult
  ""
  aggregateWorkflowSpecificationVersion(filter: WorkflowSpecificationVersionFilter): WorkflowSpecificationVersionAggregateResult
  ""
  aggregateWorkflowTimer(filter: WorkflowTimerFilter): WorkflowTimerAggregateResult
  ""
  aggregateWorkflowWaypoint(filter: WorkflowWaypointFilter): WorkflowWaypointAggregateResult
  ""
  getAccessPermission(iid: ID!): AccessPermission
  ""
  getAlarmEvent(iid: ID!): AlarmEvent
  ""
  getComment(id: String, iid: ID): Comment
  ""
  getDataSource(id: String, iid: ID): DataSource
  ""
  getDataSourceMethod(id: String, iid: ID): DataSourceMethod
  ""
  getDataSourceMethodArgument(id: String, iid: ID): DataSourceMethodArgument
  ""
  getDataSourceTopic(id: String, iid: ID): DataSourceTopic
  ""
  getDataSourceVersion(id: String, iid: ID, version: String): DataSourceVersion
  ""
  getDataSubscription(id: ID, name: String): DataSubscription
  ""
  getEnvironmentalVariable(id: String, iid: ID): EnvironmentalVariable
  ""
  getEnvironmentalVariableVersion(id: String, iid: ID, version: String): EnvironmentalVariableVersion
  ""
  getEquipment(id: String, iid: ID): Equipment
  ""
  getEquipmentActual(id: String, iid: ID): EquipmentActual
  ""
  getEquipmentActualProperty(id: String, iid: ID): EquipmentActualProperty
  ""
  getEquipmentAssetMapping(id: String, iid: ID): EquipmentAssetMapping
  ""
  getEquipmentClass(id: String, iid: ID): EquipmentClass
  ""
  getEquipmentClassProperty(id: String, iid: ID): EquipmentClassProperty
  ""
  getEquipmentClassVersion(id: String, iid: ID, version: String): EquipmentClassVersion
  ""
  getEquipmentDataSource(iid: ID!): EquipmentDataSource
  ""
  getEquipmentNameAlias(iid: ID!): EquipmentNameAlias
  ""
  getEquipmentProperty(id: String, iid: ID): EquipmentProperty
  ""
  getEquipmentPropertyOverride(id: String, iid: ID): EquipmentPropertyOverride
  ""
  getEquipmentRequirement(id: String, iid: ID): EquipmentRequirement
  ""
  getEquipmentRequirementProperty(id: String, iid: ID): EquipmentRequirementProperty
  ""
  getEquipmentSpecification(id: String, iid: ID): EquipmentSpecification
  ""
  getEquipmentSpecificationProperty(id: String, iid: ID): EquipmentSpecificationProperty
  ""
  getEquipmentVersion(id: String, iid: ID, version: String): EquipmentVersion
  ""
  getEvaluatedProperty(id: String, iid: ID): EvaluatedProperty
  ""
  getEvent(iid: ID!): Event
  ""
  getEventAssociation(id: String, iid: ID): EventAssociation
  ""
  getEventProperty(id: String, iid: ID): EventProperty
  ""
  getEventSubtype(id: String, iid: ID): EventSubtype
  ""
  getEventType(id: String, iid: ID): EventType
  ""
  getForm(id: String, iid: ID): Form
  ""
  getHierarchyScope(id: String, iid: ID): HierarchyScope
  ""
  getInformationObject(iid: ID!): InformationObject
  ""
  getJobList(id: String, iid: ID): JobList
  ""
  getJobOrder(id: String, iid: ID): JobOrder
  ""
  getJobOrderParameter(id: String, iid: ID): JobOrderParameter
  ""
  getJobResponse(id: String, iid: ID): JobResponse
  ""
  getJobResponseData(id: String, iid: ID): JobResponseData
  ""
  getJobResponseList(id: String, iid: ID): JobResponseList
  ""
  getLibreService(id: ID, name: String): LibreService
  ""
  getMaterialActual(id: String, iid: ID): MaterialActual
  ""
  getMaterialActualProperty(id: String, iid: ID): MaterialActualProperty
  ""
  getMaterialAlternate(iid: ID!): MaterialAlternate
  ""
  getMaterialClass(id: String, iid: ID): MaterialClass
  ""
  getMaterialClassProperty(id: String, iid: ID): MaterialClassProperty
  ""
  getMaterialClassVersion(id: String, iid: ID, version: String): MaterialClassVersion
  ""
  getMaterialDefinition(id: String, iid: ID): MaterialDefinition
  ""
  getMaterialDefinitionProperty(id: String, iid: ID): MaterialDefinitionProperty
  ""
  getMaterialDefinitionVersion(id: String, iid: ID, version: String): MaterialDefinitionVersion
  ""
  getMaterialLot(id: String, iid: ID): MaterialLot
  ""
  getMaterialLotProperty(id: String, iid: ID): MaterialLotProperty
  ""
  getMaterialRequirement(id: String, iid: ID): MaterialRequirement
  ""
  getMaterialRequirementProperty(id: String, iid: ID): MaterialRequirementProperty
  ""
  getMaterialSpecification(id: String, iid: ID): MaterialSpecification
  ""
  getMaterialSpecificationProperty(id: String, iid: ID): MaterialSpecificationProperty
  ""
  getMaterialSubLot(id: String, iid: ID): MaterialSubLot
  ""
  getMenu(iid: ID!): Menu
  ""
  getOperationalLocation(id: String, iid: ID): OperationalLocation
  ""
  getOperationalLocationClass(id: String, iid: ID): OperationalLocationClass
  ""
  getOperationalLocationClassProperty(id: String, iid: ID): OperationalLocationClassProperty
  ""
  getOperationalLocationClassVersion(id: String, iid: ID, version: String): OperationalLocationClassVersion
  ""
  getOperationalLocationProperty(id: String, iid: ID): OperationalLocationProperty
  ""
  getOperationalLocationVersion(id: String, iid: ID, version: String): OperationalLocationVersion
  ""
  getOperationsDefinition(id: String, iid: ID): OperationsDefinition
  ""
  getOperationsDefinitionVersion(id: String, iid: ID, version: String): OperationsDefinitionVersion
  ""
  getOperationsEvent(id: String, iid: ID): OperationsEvent
  ""
  getOperationsEventClass(id: String, iid: ID): OperationsEventClass
  ""
  getOperationsEventClassProperty(id: String, iid: ID): OperationsEventClassProperty
  ""
  getOperationsEventClassRecordSpecification(iid: ID!): OperationsEventClassRecordSpecification
  ""
  getOperationsEventClassVersion(id: String, iid: ID, version: String): OperationsEventClassVersion
  ""
  getOperationsEventDefinition(id: String, iid: ID): OperationsEventDefinition
  ""
  getOperationsEventDefinitionProperty(iid: ID!): OperationsEventDefinitionProperty
  ""
  getOperationsEventDefinitionRecordSpecification(iid: ID!): OperationsEventDefinitionRecordSpecification
  ""
  getOperationsEventDefinitionVersion(id: String, iid: ID, version: String): OperationsEventDefinitionVersion
  ""
  getOperationsEventProperty(id: String, iid: ID): OperationsEventProperty
  ""
  getOperationsEventRecord(id: String, iid: ID): OperationsEventRecord
  ""
  getOperationsEventRecordEntry(id: String, iid: ID, recordId: String): OperationsEventRecordEntry
  ""
  getOperationsMaterialBill(id: String, iid: ID): OperationsMaterialBill
  ""
  getOperationsPerformance(id: String, iid: ID): OperationsPerformance
  ""
  getOperationsRequest(id: String, iid: ID): OperationsRequest
  ""
  getOperationsResponse(id: String, iid: ID): OperationsResponse
  ""
  getOperationsResponseProperty(id: String, iid: ID): OperationsResponseProperty
  ""
  getOperationsSchedule(id: String, iid: ID): OperationsSchedule
  ""
  getOperationsSegment(id: String, iid: ID): OperationsSegment
  ""
  getOperationsSegmentDependency(id: String, iid: ID): OperationsSegmentDependency
  ""
  getParameterSpecification(id: String, iid: ID): ParameterSpecification
  ""
  getPayloadFieldDefinition(iid: ID!): PayloadFieldDefinition
  ""
  getPerson(id: String, iid: ID): Person
  ""
  getPersonProperty(id: String, iid: ID): PersonProperty
  ""
  getPersonVersion(id: String, iid: ID, version: String): PersonVersion
  ""
  getPersonnelActual(id: String, iid: ID): PersonnelActual
  ""
  getPersonnelActualProperty(id: String, iid: ID): PersonnelActualProperty
  ""
  getPersonnelClass(id: String, iid: ID): PersonnelClass
  ""
  getPersonnelClassProperty(id: String, iid: ID): PersonnelClassProperty
  ""
  getPersonnelClassVersion(id: String, iid: ID, version: String): PersonnelClassVersion
  ""
  getPersonnelRequirement(id: String, iid: ID): PersonnelRequirement
  ""
  getPersonnelRequirementProperty(id: String, iid: ID): PersonnelRequirementProperty
  ""
  getPersonnelSpecification(id: String, iid: ID): PersonnelSpecification
  ""
  getPersonnelSpecificationProperty(id: String, iid: ID): PersonnelSpecificationProperty
  ""
  getPhysicalAsset(id: String, iid: ID): PhysicalAsset
  ""
  getPhysicalAssetActual(id: String, iid: ID): PhysicalAssetActual
  ""
  getPhysicalAssetActualProperty(id: String, iid: ID): PhysicalAssetActualProperty
  ""
  getPhysicalAssetClass(id: String, iid: ID): PhysicalAssetClass
  ""
  getPhysicalAssetClassProperty(id: String, iid: ID): PhysicalAssetClassProperty
  ""
  getPhysicalAssetClassVersion(id: String, iid: ID, version: String): PhysicalAssetClassVersion
  ""
  getPhysicalAssetDataSource(iid: ID!): PhysicalAssetDataSource
  ""
  getPhysicalAssetProperty(id: String, iid: ID): PhysicalAssetProperty
  ""
  getPhysicalAssetRequirement(id: String, iid: ID): PhysicalAssetRequirement
  ""
  getPhysicalAssetRequirementProperty(id: String, iid: ID): PhysicalAssetRequirementProperty
  ""
  getPhysicalAssetSpecification(id: String, iid: ID): PhysicalAssetSpecification
  ""
  getPhysicalAssetSpecificationProperty(id: String, iid: ID): PhysicalAssetSpecificationProperty
  ""
  getPhysicalAssetVersion(id: String, iid: ID, version: String): PhysicalAssetVersion
  ""
  getProcessSegment(id: String, iid: ID): ProcessSegment
  ""
  getProcessSegmentDependency(id: String, iid: ID): ProcessSegmentDependency
  ""
  getProcessSegmentParameter(id: String, iid: ID): ProcessSegmentParameter
  ""
  getProcessSegmentVersion(id: String, iid: ID, version: String): ProcessSegmentVersion
  ""
  getPropertyMeasurement(id: String, iid: ID): PropertyMeasurement
  ""
  getPropertyNameAlias(iid: ID!): PropertyNameAlias
  ""
  getPropertyValueAlias(iid: ID!): PropertyValueAlias
  ""
  getRule(id: String, iid: ID): Rule
  ""
  getSecret(id: String, iid: ID): Secret
  ""
  getSecretVersion(id: String, iid: ID, version: String): SecretVersion
  ""
  getSegmentData(id: String, iid: ID): SegmentData
  ""
  getSegmentParameter(id: String, iid: ID): SegmentParameter
  ""
  getSegmentRequirement(id: String, iid: ID): SegmentRequirement
  ""
  getSegmentResponse(id: String, iid: ID): SegmentResponse
  ""
  getSignature(iid: ID!): Signature
  ""
  getSignatureReason(id: String, iid: ID): SignatureReason
  ""
  getSpatialDefinition(id: String, iid: ID): SpatialDefinition
  ""
  getStateModelAction(id: String, iid: ID): StateModelAction
  ""
  getStateModelDefinition(id: String, iid: ID): StateModelDefinition
  ""
  getStateModelEvent(id: String, iid: ID): StateModelEvent
  ""
  getStateModelInstance(id: String, iid: ID): StateModelInstance
  ""
  getStateModelProperty(id: String, iid: ID): StateModelProperty
  ""
  getStateModelState(id: String, iid: ID): StateModelState
  ""
  getStateModelTransition(id: String, iid: ID): StateModelTransition
  ""
  getStateTransitionInstance(iid: ID!): StateTransitionInstance
  ""
  getTestResult(id: String, iid: ID): TestResult
  ""
  getTestSpecification(id: String, iid: ID, key: String): TestSpecification
  ""
  getTestSpecificationCriteria(id: String, iid: ID): TestSpecificationCriteria
  ""
  getTestSpecificationProperty(id: String, iid: ID): TestSpecificationProperty
  ""
  getUnitOfMeasure(id: String, iid: ID): UnitOfMeasure
  ""
  getUnitOfMeasureConversion(iid: ID!): UnitOfMeasureConversion
  ""
  getWorkCalendar(iid: ID, name: String): WorkCalendar
  ""
  getWorkCalendarDefinitionEntry(iid: ID!): WorkCalendarDefinitionEntry
  ""
  getWorkCalendarDefinitionEntryProperty(id: String, iid: ID): WorkCalendarDefinitionEntryProperty
  ""
  getWorkCalendarEntry(iid: ID!): WorkCalendarEntry
  ""
  getWorkCalendarEntryProperty(id: String, iid: ID): WorkCalendarEntryProperty
  ""
  getWorkDirective(id: String, iid: ID, version: String): WorkDirective
  ""
  getWorkMaster(id: String, iid: ID, version: String): WorkMaster
  ""
  getWorkPerformance(id: String, iid: ID): WorkPerformance
  ""
  getWorkRequest(id: String, iid: ID): WorkRequest
  ""
  getWorkResponse(id: String, iid: ID): WorkResponse
  ""
  getWorkSchedule(id: String, iid: ID): WorkSchedule
  ""
  getWorkflowError(id: String, iid: ID): WorkflowError
  ""
  getWorkflowMessage(id: String, iid: ID): WorkflowMessage
  ""
  getWorkflowShape(id: String, iid: ID): WorkflowShape
  ""
  getWorkflowSpecification(id: String, iid: ID): WorkflowSpecification
  ""
  getWorkflowSpecificationConnection(id: String, iid: ID): WorkflowSpecificationConnection
  ""
  getWorkflowSpecificationConnectionProperty(id: String, iid: ID): WorkflowSpecificationConnectionProperty
  ""
  getWorkflowSpecificationConnectionType(id: String, iid: ID): WorkflowSpecificationConnectionType
  ""
  getWorkflowSpecificationConnectionTypeProperty(id: String, iid: ID): WorkflowSpecificationConnectionTypeProperty
  ""
  getWorkflowSpecificationNode(id: String, iid: ID): WorkflowSpecificationNode
  ""
  getWorkflowSpecificationNodeProperty(id: String, iid: ID): WorkflowSpecificationNodeProperty
  ""
  getWorkflowSpecificationNodeTestCase(id: String, iid: ID): WorkflowSpecificationNodeTestCase
  ""
  getWorkflowSpecificationNodeType(id: String, iid: ID): WorkflowSpecificationNodeType
  ""
  getWorkflowSpecificationNodeTypeProperty(id: String, iid: ID): WorkflowSpecificationNodeTypeProperty
  ""
  getWorkflowSpecificationNodeVariable(iid: ID!): WorkflowSpecificationNodeVariable
  ""
  getWorkflowSpecificationProperty(id: String, iid: ID): WorkflowSpecificationProperty
  ""
  getWorkflowSpecificationVersion(id: String, iid: ID, version: String): WorkflowSpecificationVersion
  ""
  getWorkflowTimer(id: String, iid: ID): WorkflowTimer
  ""
  getWorkflowWaypoint(iid: ID!): WorkflowWaypoint
  ""
  queryAccessPermission(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  queryAlarmEvent(filter: AlarmEventFilter, first: Int, offset: Int, order: AlarmEventOrder): [AlarmEvent]
  ""
  queryComment(filter: CommentFilter, first: Int, offset: Int, order: CommentOrder): [Comment]
  ""
  queryDataSource(filter: DataSourceFilter, first: Int, offset: Int, order: DataSourceOrder): [DataSource]
  ""
  queryDataSourceMethod(filter: DataSourceMethodFilter, first: Int, offset: Int, order: DataSourceMethodOrder): [DataSourceMethod]
  ""
  queryDataSourceMethodArgument(filter: DataSourceMethodArgumentFilter, first: Int, offset: Int, order: DataSourceMethodArgumentOrder): [DataSourceMethodArgument]
  ""
  queryDataSourceTopic(filter: DataSourceTopicFilter, first: Int, offset: Int, order: DataSourceTopicOrder): [DataSourceTopic]
  ""
  queryDataSourceVersion(filter: DataSourceVersionFilter, first: Int, offset: Int, order: DataSourceVersionOrder): [DataSourceVersion]
  ""
  queryDataSubscription(filter: DataSubscriptionFilter, first: Int, offset: Int, order: DataSubscriptionOrder): [DataSubscription]
  ""
  queryEnvironmentalVariable(filter: EnvironmentalVariableFilter, first: Int, offset: Int, order: EnvironmentalVariableOrder): [EnvironmentalVariable]
  ""
  queryEnvironmentalVariableVersion(filter: EnvironmentalVariableVersionFilter, first: Int, offset: Int, order: EnvironmentalVariableVersionOrder): [EnvironmentalVariableVersion]
  ""
  queryEquipment(filter: EquipmentFilter, first: Int, offset: Int, order: EquipmentOrder): [Equipment]
  ""
  queryEquipmentActual(filter: EquipmentActualFilter, first: Int, offset: Int, order: EquipmentActualOrder): [EquipmentActual]
  ""
  queryEquipmentActualProperty(filter: EquipmentActualPropertyFilter, first: Int, offset: Int, order: EquipmentActualPropertyOrder): [EquipmentActualProperty]
  ""
  queryEquipmentAssetMapping(filter: EquipmentAssetMappingFilter, first: Int, offset: Int, order: EquipmentAssetMappingOrder): [EquipmentAssetMapping]
  ""
  queryEquipmentClass(filter: EquipmentClassFilter, first: Int, offset: Int, order: EquipmentClassOrder): [EquipmentClass]
  ""
  queryEquipmentClassProperty(filter: EquipmentClassPropertyFilter, first: Int, offset: Int, order: EquipmentClassPropertyOrder): [EquipmentClassProperty]
  ""
  queryEquipmentClassVersion(filter: EquipmentClassVersionFilter, first: Int, offset: Int, order: EquipmentClassVersionOrder): [EquipmentClassVersion]
  ""
  queryEquipmentDataSource(filter: EquipmentDataSourceFilter, first: Int, offset: Int, order: EquipmentDataSourceOrder): [EquipmentDataSource]
  ""
  queryEquipmentNameAlias(filter: EquipmentNameAliasFilter, first: Int, offset: Int, order: EquipmentNameAliasOrder): [EquipmentNameAlias]
  ""
  queryEquipmentProperty(filter: EquipmentPropertyFilter, first: Int, offset: Int, order: EquipmentPropertyOrder): [EquipmentProperty]
  ""
  queryEquipmentPropertyOverride(filter: EquipmentPropertyOverrideFilter, first: Int, offset: Int, order: EquipmentPropertyOverrideOrder): [EquipmentPropertyOverride]
  ""
  queryEquipmentRequirement(filter: EquipmentRequirementFilter, first: Int, offset: Int, order: EquipmentRequirementOrder): [EquipmentRequirement]
  ""
  queryEquipmentRequirementProperty(filter: EquipmentRequirementPropertyFilter, first: Int, offset: Int, order: EquipmentRequirementPropertyOrder): [EquipmentRequirementProperty]
  ""
  queryEquipmentSpecification(filter: EquipmentSpecificationFilter, first: Int, offset: Int, order: EquipmentSpecificationOrder): [EquipmentSpecification]
  ""
  queryEquipmentSpecificationProperty(filter: EquipmentSpecificationPropertyFilter, first: Int, offset: Int, order: EquipmentSpecificationPropertyOrder): [EquipmentSpecificationProperty]
  ""
  queryEquipmentVersion(filter: EquipmentVersionFilter, first: Int, offset: Int, order: EquipmentVersionOrder): [EquipmentVersion]
  ""
  queryEvaluatedProperty(filter: EvaluatedPropertyFilter, first: Int, offset: Int, order: EvaluatedPropertyOrder): [EvaluatedProperty]
  ""
  queryEvent(filter: EventFilter, first: Int, offset: Int, order: EventOrder): [Event]
  ""
  queryEventAssociation(filter: EventAssociationFilter, first: Int, offset: Int, order: EventAssociationOrder): [EventAssociation]
  ""
  queryEventProperty(filter: EventPropertyFilter, first: Int, offset: Int, order: EventPropertyOrder): [EventProperty]
  ""
  queryEventSubtype(filter: EventSubtypeFilter, first: Int, offset: Int, order: EventSubtypeOrder): [EventSubtype]
  ""
  queryEventType(filter: EventTypeFilter, first: Int, offset: Int, order: EventTypeOrder): [EventType]
  ""
  queryForm(filter: FormFilter, first: Int, offset: Int, order: FormOrder): [Form]
  ""
  queryHierarchyScope(filter: HierarchyScopeFilter, first: Int, offset: Int, order: HierarchyScopeOrder): [HierarchyScope]
  ""
  queryInformationObject(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  queryJobList(filter: JobListFilter, first: Int, offset: Int, order: JobListOrder): [JobList]
  ""
  queryJobOrder(filter: JobOrderFilter, first: Int, offset: Int, order: JobOrderOrder): [JobOrder]
  ""
  queryJobOrderParameter(filter: JobOrderParameterFilter, first: Int, offset: Int, order: JobOrderParameterOrder): [JobOrderParameter]
  ""
  queryJobResponse(filter: JobResponseFilter, first: Int, offset: Int, order: JobResponseOrder): [JobResponse]
  ""
  queryJobResponseData(filter: JobResponseDataFilter, first: Int, offset: Int, order: JobResponseDataOrder): [JobResponseData]
  ""
  queryJobResponseList(filter: JobResponseListFilter, first: Int, offset: Int, order: JobResponseListOrder): [JobResponseList]
  ""
  queryLibreService(filter: LibreServiceFilter, first: Int, offset: Int, order: LibreServiceOrder): [LibreService]
  ""
  queryMaterialActual(filter: MaterialActualFilter, first: Int, offset: Int, order: MaterialActualOrder): [MaterialActual]
  ""
  queryMaterialActualProperty(filter: MaterialActualPropertyFilter, first: Int, offset: Int, order: MaterialActualPropertyOrder): [MaterialActualProperty]
  ""
  queryMaterialAlternate(filter: MaterialAlternateFilter, first: Int, offset: Int, order: MaterialAlternateOrder): [MaterialAlternate]
  ""
  queryMaterialClass(filter: MaterialClassFilter, first: Int, offset: Int, order: MaterialClassOrder): [MaterialClass]
  ""
  queryMaterialClassProperty(filter: MaterialClassPropertyFilter, first: Int, offset: Int, order: MaterialClassPropertyOrder): [MaterialClassProperty]
  ""
  queryMaterialClassVersion(filter: MaterialClassVersionFilter, first: Int, offset: Int, order: MaterialClassVersionOrder): [MaterialClassVersion]
  ""
  queryMaterialDefinition(filter: MaterialDefinitionFilter, first: Int, offset: Int, order: MaterialDefinitionOrder): [MaterialDefinition]
  ""
  queryMaterialDefinitionProperty(filter: MaterialDefinitionPropertyFilter, first: Int, offset: Int, order: MaterialDefinitionPropertyOrder): [MaterialDefinitionProperty]
  ""
  queryMaterialDefinitionVersion(filter: MaterialDefinitionVersionFilter, first: Int, offset: Int, order: MaterialDefinitionVersionOrder): [MaterialDefinitionVersion]
  ""
  queryMaterialLot(filter: MaterialLotFilter, first: Int, offset: Int, order: MaterialLotOrder): [MaterialLot]
  ""
  queryMaterialLotProperty(filter: MaterialLotPropertyFilter, first: Int, offset: Int, order: MaterialLotPropertyOrder): [MaterialLotProperty]
  ""
  queryMaterialRequirement(filter: MaterialRequirementFilter, first: Int, offset: Int, order: MaterialRequirementOrder): [MaterialRequirement]
  ""
  queryMaterialRequirementProperty(filter: MaterialRequirementPropertyFilter, first: Int, offset: Int, order: MaterialRequirementPropertyOrder): [MaterialRequirementProperty]
  ""
  queryMaterialSpecification(filter: MaterialSpecificationFilter, first: Int, offset: Int, order: MaterialSpecificationOrder): [MaterialSpecification]
  ""
  queryMaterialSpecificationProperty(filter: MaterialSpecificationPropertyFilter, first: Int, offset: Int, order: MaterialSpecificationPropertyOrder): [MaterialSpecificationProperty]
  ""
  queryMaterialSubLot(filter: MaterialSubLotFilter, first: Int, offset: Int, order: MaterialSubLotOrder): [MaterialSubLot]
  ""
  queryMenu(filter: MenuFilter, first: Int, offset: Int, order: MenuOrder): [Menu]
  ""
  queryMultiplicity(filter: MultiplicityFilter, first: Int, offset: Int, order: MultiplicityOrder): [Multiplicity]
  ""
  queryOperationalLocation(filter: OperationalLocationFilter, first: Int, offset: Int, order: OperationalLocationOrder): [OperationalLocation]
  ""
  queryOperationalLocationClass(filter: OperationalLocationClassFilter, first: Int, offset: Int, order: OperationalLocationClassOrder): [OperationalLocationClass]
  ""
  queryOperationalLocationClassProperty(filter: OperationalLocationClassPropertyFilter, first: Int, offset: Int, order: OperationalLocationClassPropertyOrder): [OperationalLocationClassProperty]
  ""
  queryOperationalLocationClassVersion(filter: OperationalLocationClassVersionFilter, first: Int, offset: Int, order: OperationalLocationClassVersionOrder): [OperationalLocationClassVersion]
  ""
  queryOperationalLocationProperty(filter: OperationalLocationPropertyFilter, first: Int, offset: Int, order: OperationalLocationPropertyOrder): [OperationalLocationProperty]
  ""
  queryOperationalLocationVersion(filter: OperationalLocationVersionFilter, first: Int, offset: Int, order: OperationalLocationVersionOrder): [OperationalLocationVersion]
  ""
  queryOperationsDefinition(filter: OperationsDefinitionFilter, first: Int, offset: Int, order: OperationsDefinitionOrder): [OperationsDefinition]
  ""
  queryOperationsDefinitionVersion(filter: OperationsDefinitionVersionFilter, first: Int, offset: Int, order: OperationsDefinitionVersionOrder): [OperationsDefinitionVersion]
  ""
  queryOperationsEvent(filter: OperationsEventFilter, first: Int, offset: Int, order: OperationsEventOrder): [OperationsEvent]
  ""
  queryOperationsEventClass(filter: OperationsEventClassFilter, first: Int, offset: Int, order: OperationsEventClassOrder): [OperationsEventClass]
  ""
  queryOperationsEventClassProperty(filter: OperationsEventClassPropertyFilter, first: Int, offset: Int, order: OperationsEventClassPropertyOrder): [OperationsEventClassProperty]
  ""
  queryOperationsEventClassRecordSpecification(filter: OperationsEventClassRecordSpecificationFilter, first: Int, offset: Int, order: OperationsEventClassRecordSpecificationOrder): [OperationsEventClassRecordSpecification]
  ""
  queryOperationsEventClassVersion(filter: OperationsEventClassVersionFilter, first: Int, offset: Int, order: OperationsEventClassVersionOrder): [OperationsEventClassVersion]
  ""
  queryOperationsEventDefinition(filter: OperationsEventDefinitionFilter, first: Int, offset: Int, order: OperationsEventDefinitionOrder): [OperationsEventDefinition]
  ""
  queryOperationsEventDefinitionProperty(filter: OperationsEventDefinitionPropertyFilter, first: Int, offset: Int, order: OperationsEventDefinitionPropertyOrder): [OperationsEventDefinitionProperty]
  ""
  queryOperationsEventDefinitionRecordSpecification(filter: OperationsEventDefinitionRecordSpecificationFilter, first: Int, offset: Int, order: OperationsEventDefinitionRecordSpecificationOrder): [OperationsEventDefinitionRecordSpecification]
  ""
  queryOperationsEventDefinitionVersion(filter: OperationsEventDefinitionVersionFilter, first: Int, offset: Int, order: OperationsEventDefinitionVersionOrder): [OperationsEventDefinitionVersion]
  ""
  queryOperationsEventProperty(filter: OperationsEventPropertyFilter, first: Int, offset: Int, order: OperationsEventPropertyOrder): [OperationsEventProperty]
  ""
  queryOperationsEventRecord(filter: OperationsEventRecordFilter, first: Int, offset: Int, order: OperationsEventRecordOrder): [OperationsEventRecord]
  ""
  queryOperationsEventRecordEntry(filter: OperationsEventRecordEntryFilter, first: Int, offset: Int, order: OperationsEventRecordEntryOrder): [OperationsEventRecordEntry]
  ""
  queryOperationsMaterialBill(filter: OperationsMaterialBillFilter, first: Int, offset: Int, order: OperationsMaterialBillOrder): [OperationsMaterialBill]
  ""
  queryOperationsPerformance(filter: OperationsPerformanceFilter, first: Int, offset: Int, order: OperationsPerformanceOrder): [OperationsPerformance]
  ""
  queryOperationsRequest(filter: OperationsRequestFilter, first: Int, offset: Int, order: OperationsRequestOrder): [OperationsRequest]
  ""
  queryOperationsResponse(filter: OperationsResponseFilter, first: Int, offset: Int, order: OperationsResponseOrder): [OperationsResponse]
  ""
  queryOperationsResponseProperty(filter: OperationsResponsePropertyFilter, first: Int, offset: Int, order: OperationsResponsePropertyOrder): [OperationsResponseProperty]
  ""
  queryOperationsSchedule(filter: OperationsScheduleFilter, first: Int, offset: Int, order: OperationsScheduleOrder): [OperationsSchedule]
  ""
  queryOperationsSegment(filter: OperationsSegmentFilter, first: Int, offset: Int, order: OperationsSegmentOrder): [OperationsSegment]
  ""
  queryOperationsSegmentDependency(filter: OperationsSegmentDependencyFilter, first: Int, offset: Int, order: OperationsSegmentDependencyOrder): [OperationsSegmentDependency]
  ""
  queryParameterSpecification(filter: ParameterSpecificationFilter, first: Int, offset: Int, order: ParameterSpecificationOrder): [ParameterSpecification]
  ""
  queryPayloadFieldDefinition(filter: PayloadFieldDefinitionFilter, first: Int, offset: Int, order: PayloadFieldDefinitionOrder): [PayloadFieldDefinition]
  ""
  queryPerson(filter: PersonFilter, first: Int, offset: Int, order: PersonOrder): [Person]
  ""
  queryPersonProperty(filter: PersonPropertyFilter, first: Int, offset: Int, order: PersonPropertyOrder): [PersonProperty]
  ""
  queryPersonVersion(filter: PersonVersionFilter, first: Int, offset: Int, order: PersonVersionOrder): [PersonVersion]
  ""
  queryPersonnelActual(filter: PersonnelActualFilter, first: Int, offset: Int, order: PersonnelActualOrder): [PersonnelActual]
  ""
  queryPersonnelActualProperty(filter: PersonnelActualPropertyFilter, first: Int, offset: Int, order: PersonnelActualPropertyOrder): [PersonnelActualProperty]
  ""
  queryPersonnelClass(filter: PersonnelClassFilter, first: Int, offset: Int, order: PersonnelClassOrder): [PersonnelClass]
  ""
  queryPersonnelClassProperty(filter: PersonnelClassPropertyFilter, first: Int, offset: Int, order: PersonnelClassPropertyOrder): [PersonnelClassProperty]
  ""
  queryPersonnelClassVersion(filter: PersonnelClassVersionFilter, first: Int, offset: Int, order: PersonnelClassVersionOrder): [PersonnelClassVersion]
  ""
  queryPersonnelRequirement(filter: PersonnelRequirementFilter, first: Int, offset: Int, order: PersonnelRequirementOrder): [PersonnelRequirement]
  ""
  queryPersonnelRequirementProperty(filter: PersonnelRequirementPropertyFilter, first: Int, offset: Int, order: PersonnelRequirementPropertyOrder): [PersonnelRequirementProperty]
  ""
  queryPersonnelSpecification(filter: PersonnelSpecificationFilter, first: Int, offset: Int, order: PersonnelSpecificationOrder): [PersonnelSpecification]
  ""
  queryPersonnelSpecificationProperty(filter: PersonnelSpecificationPropertyFilter, first: Int, offset: Int, order: PersonnelSpecificationPropertyOrder): [PersonnelSpecificationProperty]
  ""
  queryPhysicalAsset(filter: PhysicalAssetFilter, first: Int, offset: Int, order: PhysicalAssetOrder): [PhysicalAsset]
  ""
  queryPhysicalAssetActual(filter: PhysicalAssetActualFilter, first: Int, offset: Int, order: PhysicalAssetActualOrder): [PhysicalAssetActual]
  ""
  queryPhysicalAssetActualProperty(filter: PhysicalAssetActualPropertyFilter, first: Int, offset: Int, order: PhysicalAssetActualPropertyOrder): [PhysicalAssetActualProperty]
  ""
  queryPhysicalAssetClass(filter: PhysicalAssetClassFilter, first: Int, offset: Int, order: PhysicalAssetClassOrder): [PhysicalAssetClass]
  ""
  queryPhysicalAssetClassProperty(filter: PhysicalAssetClassPropertyFilter, first: Int, offset: Int, order: PhysicalAssetClassPropertyOrder): [PhysicalAssetClassProperty]
  ""
  queryPhysicalAssetClassVersion(filter: PhysicalAssetClassVersionFilter, first: Int, offset: Int, order: PhysicalAssetClassVersionOrder): [PhysicalAssetClassVersion]
  ""
  queryPhysicalAssetDataSource(filter: PhysicalAssetDataSourceFilter, first: Int, offset: Int, order: PhysicalAssetDataSourceOrder): [PhysicalAssetDataSource]
  ""
  queryPhysicalAssetProperty(filter: PhysicalAssetPropertyFilter, first: Int, offset: Int, order: PhysicalAssetPropertyOrder): [PhysicalAssetProperty]
  ""
  queryPhysicalAssetRequirement(filter: PhysicalAssetRequirementFilter, first: Int, offset: Int, order: PhysicalAssetRequirementOrder): [PhysicalAssetRequirement]
  ""
  queryPhysicalAssetRequirementProperty(filter: PhysicalAssetRequirementPropertyFilter, first: Int, offset: Int, order: PhysicalAssetRequirementPropertyOrder): [PhysicalAssetRequirementProperty]
  ""
  queryPhysicalAssetSpecification(filter: PhysicalAssetSpecificationFilter, first: Int, offset: Int, order: PhysicalAssetSpecificationOrder): [PhysicalAssetSpecification]
  ""
  queryPhysicalAssetSpecificationProperty(filter: PhysicalAssetSpecificationPropertyFilter, first: Int, offset: Int, order: PhysicalAssetSpecificationPropertyOrder): [PhysicalAssetSpecificationProperty]
  ""
  queryPhysicalAssetVersion(filter: PhysicalAssetVersionFilter, first: Int, offset: Int, order: PhysicalAssetVersionOrder): [PhysicalAssetVersion]
  ""
  queryProcessSegment(filter: ProcessSegmentFilter, first: Int, offset: Int, order: ProcessSegmentOrder): [ProcessSegment]
  ""
  queryProcessSegmentDependency(filter: ProcessSegmentDependencyFilter, first: Int, offset: Int, order: ProcessSegmentDependencyOrder): [ProcessSegmentDependency]
  ""
  queryProcessSegmentParameter(filter: ProcessSegmentParameterFilter, first: Int, offset: Int, order: ProcessSegmentParameterOrder): [ProcessSegmentParameter]
  ""
  queryProcessSegmentVersion(filter: ProcessSegmentVersionFilter, first: Int, offset: Int, order: ProcessSegmentVersionOrder): [ProcessSegmentVersion]
  ""
  queryPropertyMeasurement(filter: PropertyMeasurementFilter, first: Int, offset: Int, order: PropertyMeasurementOrder): [PropertyMeasurement]
  ""
  queryPropertyNameAlias(filter: PropertyNameAliasFilter, first: Int, offset: Int, order: PropertyNameAliasOrder): [PropertyNameAlias]
  ""
  queryPropertyValueAlias(filter: PropertyValueAliasFilter, first: Int, offset: Int, order: PropertyValueAliasOrder): [PropertyValueAlias]
  ""
  queryRule(filter: RuleFilter, first: Int, offset: Int, order: RuleOrder): [Rule]
  ""
  querySecret(filter: SecretFilter, first: Int, offset: Int, order: SecretOrder): [Secret]
  ""
  querySecretVersion(filter: SecretVersionFilter, first: Int, offset: Int, order: SecretVersionOrder): [SecretVersion]
  ""
  querySegmentData(filter: SegmentDataFilter, first: Int, offset: Int, order: SegmentDataOrder): [SegmentData]
  ""
  querySegmentParameter(filter: SegmentParameterFilter, first: Int, offset: Int, order: SegmentParameterOrder): [SegmentParameter]
  ""
  querySegmentRequirement(filter: SegmentRequirementFilter, first: Int, offset: Int, order: SegmentRequirementOrder): [SegmentRequirement]
  ""
  querySegmentResponse(filter: SegmentResponseFilter, first: Int, offset: Int, order: SegmentResponseOrder): [SegmentResponse]
  ""
  querySignature(filter: SignatureFilter, first: Int, offset: Int, order: SignatureOrder): [Signature]
  ""
  querySignatureReason(filter: SignatureReasonFilter, first: Int, offset: Int, order: SignatureReasonOrder): [SignatureReason]
  ""
  querySpatialDefinition(filter: SpatialDefinitionFilter, first: Int, offset: Int, order: SpatialDefinitionOrder): [SpatialDefinition]
  ""
  queryStateModelAction(filter: StateModelActionFilter, first: Int, offset: Int, order: StateModelActionOrder): [StateModelAction]
  ""
  queryStateModelDefinition(filter: StateModelDefinitionFilter, first: Int, offset: Int, order: StateModelDefinitionOrder): [StateModelDefinition]
  ""
  queryStateModelEvent(filter: StateModelEventFilter, first: Int, offset: Int, order: StateModelEventOrder): [StateModelEvent]
  ""
  queryStateModelInstance(filter: StateModelInstanceFilter, first: Int, offset: Int, order: StateModelInstanceOrder): [StateModelInstance]
  ""
  queryStateModelProperty(filter: StateModelPropertyFilter, first: Int, offset: Int, order: StateModelPropertyOrder): [StateModelProperty]
  ""
  queryStateModelState(filter: StateModelStateFilter, first: Int, offset: Int, order: StateModelStateOrder): [StateModelState]
  ""
  queryStateModelTransition(filter: StateModelTransitionFilter, first: Int, offset: Int, order: StateModelTransitionOrder): [StateModelTransition]
  ""
  queryStateTransitionInstance(filter: StateTransitionInstanceFilter, first: Int, offset: Int, order: StateTransitionInstanceOrder): [StateTransitionInstance]
  ""
  queryTestResult(filter: TestResultFilter, first: Int, offset: Int, order: TestResultOrder): [TestResult]
  ""
  queryTestSpecification(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  queryTestSpecificationCriteria(filter: TestSpecificationCriteriaFilter, first: Int, offset: Int, order: TestSpecificationCriteriaOrder): [TestSpecificationCriteria]
  ""
  queryTestSpecificationProperty(filter: TestSpecificationPropertyFilter, first: Int, offset: Int, order: TestSpecificationPropertyOrder): [TestSpecificationProperty]
  ""
  queryUnitOfMeasure(filter: UnitOfMeasureFilter, first: Int, offset: Int, order: UnitOfMeasureOrder): [UnitOfMeasure]
  ""
  queryUnitOfMeasureConversion(filter: UnitOfMeasureConversionFilter, first: Int, offset: Int, order: UnitOfMeasureConversionOrder): [UnitOfMeasureConversion]
  ""
  queryWorkCalendar(filter: WorkCalendarFilter, first: Int, offset: Int, order: WorkCalendarOrder): [WorkCalendar]
  ""
  queryWorkCalendarDefinitionEntry(filter: WorkCalendarDefinitionEntryFilter, first: Int, offset: Int, order: WorkCalendarDefinitionEntryOrder): [WorkCalendarDefinitionEntry]
  ""
  queryWorkCalendarDefinitionEntryProperty(filter: WorkCalendarDefinitionEntryPropertyFilter, first: Int, offset: Int, order: WorkCalendarDefinitionEntryPropertyOrder): [WorkCalendarDefinitionEntryProperty]
  ""
  queryWorkCalendarEntry(filter: WorkCalendarEntryFilter, first: Int, offset: Int, order: WorkCalendarEntryOrder): [WorkCalendarEntry]
  ""
  queryWorkCalendarEntryProperty(filter: WorkCalendarEntryPropertyFilter, first: Int, offset: Int, order: WorkCalendarEntryPropertyOrder): [WorkCalendarEntryProperty]
  ""
  queryWorkDirective(filter: WorkDirectiveFilter, first: Int, offset: Int, order: WorkDirectiveOrder): [WorkDirective]
  ""
  queryWorkMaster(filter: WorkMasterFilter, first: Int, offset: Int, order: WorkMasterOrder): [WorkMaster]
  ""
  queryWorkPerformance(filter: WorkPerformanceFilter, first: Int, offset: Int, order: WorkPerformanceOrder): [WorkPerformance]
  ""
  queryWorkRequest(filter: WorkRequestFilter, first: Int, offset: Int, order: WorkRequestOrder): [WorkRequest]
  ""
  queryWorkResponse(filter: WorkResponseFilter, first: Int, offset: Int, order: WorkResponseOrder): [WorkResponse]
  ""
  queryWorkSchedule(filter: WorkScheduleFilter, first: Int, offset: Int, order: WorkScheduleOrder): [WorkSchedule]
  ""
  queryWorkflowError(filter: WorkflowErrorFilter, first: Int, offset: Int, order: WorkflowErrorOrder): [WorkflowError]
  ""
  queryWorkflowMessage(filter: WorkflowMessageFilter, first: Int, offset: Int, order: WorkflowMessageOrder): [WorkflowMessage]
  ""
  queryWorkflowShape(filter: WorkflowShapeFilter, first: Int, offset: Int, order: WorkflowShapeOrder): [WorkflowShape]
  ""
  queryWorkflowSpecification(filter: WorkflowSpecificationFilter, first: Int, offset: Int, order: WorkflowSpecificationOrder): [WorkflowSpecification]
  ""
  queryWorkflowSpecificationConnection(filter: WorkflowSpecificationConnectionFilter, first: Int, offset: Int, order: WorkflowSpecificationConnectionOrder): [WorkflowSpecificationConnection]
  ""
  queryWorkflowSpecificationConnectionProperty(filter: WorkflowSpecificationConnectionPropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationConnectionPropertyOrder): [WorkflowSpecificationConnectionProperty]
  ""
  queryWorkflowSpecificationConnectionType(filter: WorkflowSpecificationConnectionTypeFilter, first: Int, offset: Int, order: WorkflowSpecificationConnectionTypeOrder): [WorkflowSpecificationConnectionType]
  ""
  queryWorkflowSpecificationConnectionTypeProperty(filter: WorkflowSpecificationConnectionTypePropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationConnectionTypePropertyOrder): [WorkflowSpecificationConnectionTypeProperty]
  ""
  queryWorkflowSpecificationNode(filter: WorkflowSpecificationNodeFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeOrder): [WorkflowSpecificationNode]
  ""
  queryWorkflowSpecificationNodeProperty(filter: WorkflowSpecificationNodePropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationNodePropertyOrder): [WorkflowSpecificationNodeProperty]
  ""
  queryWorkflowSpecificationNodeTestCase(filter: WorkflowSpecificationNodeTestCaseFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeTestCaseOrder): [WorkflowSpecificationNodeTestCase]
  ""
  queryWorkflowSpecificationNodeType(filter: WorkflowSpecificationNodeTypeFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeTypeOrder): [WorkflowSpecificationNodeType]
  ""
  queryWorkflowSpecificationNodeTypeProperty(filter: WorkflowSpecificationNodeTypePropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeTypePropertyOrder): [WorkflowSpecificationNodeTypeProperty]
  ""
  queryWorkflowSpecificationNodeVariable(filter: WorkflowSpecificationNodeVariableFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeVariableOrder): [WorkflowSpecificationNodeVariable]
  ""
  queryWorkflowSpecificationProperty(filter: WorkflowSpecificationPropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationPropertyOrder): [WorkflowSpecificationProperty]
  ""
  queryWorkflowSpecificationVersion(filter: WorkflowSpecificationVersionFilter, first: Int, offset: Int, order: WorkflowSpecificationVersionOrder): [WorkflowSpecificationVersion]
  ""
  queryWorkflowTimer(filter: WorkflowTimerFilter, first: Int, offset: Int, order: WorkflowTimerOrder): [WorkflowTimer]
  ""
  queryWorkflowWaypoint(filter: WorkflowWaypointFilter, first: Int, offset: Int, order: WorkflowWaypointOrder): [WorkflowWaypoint]
}
"A rule is an expression that if it evaluates to true, triggers or creates an instance of a workflow."
type Rule {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " If True, delays the rule triggering. "
  delayOption: Boolean
  " The amount of time the rule is delayed by if DelayOption true. "
  delayTime: Int
  " Additional information about the rule. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The equipment class version related to this rule. "
  equipmentClassVersion(filter: EquipmentClassVersionFilter): EquipmentClassVersion
  " A unique identification of a rule. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " Label is the name of the rule the client sees on the front end. "
  label: String!
  " The operations segment related to this rule. "
  operationsSegment(filter: OperationsSegmentFilter): OperationsSegment
  " The operations segment dependency related to this rule. "
  operationsSegmentDependency(filter: OperationsSegmentDependencyFilter): OperationsSegmentDependency
  " The payload definition related to this rule. "
  payloadFields(filter: PayloadFieldDefinitionFilter, first: Int, offset: Int, order: PayloadFieldDefinitionOrder): [PayloadFieldDefinition]
  ""
  payloadFieldsAggregate(filter: PayloadFieldDefinitionFilter): PayloadFieldDefinitionAggregateResult
  " The process location related to this rule. "
  processLocation: ProcessLocation
  " The process segment dependency related to this rule. "
  processSegmentDependency(filter: ProcessSegmentDependencyFilter): ProcessSegmentDependency
  " The expression if true triggers the rule. "
  triggerExpression: String!
  " The properties that trigger this rule. "
  triggerProperties(filter: EquipmentClassPropertyFilter, first: Int, offset: Int, order: EquipmentClassPropertyOrder): [EquipmentClassProperty]
  ""
  triggerPropertiesAggregate(filter: EquipmentClassPropertyFilter): EquipmentClassPropertyAggregateResult
  " The workflow specification related to this rule. "
  workflowSpecification(filter: WorkflowSpecificationFilter): WorkflowSpecification!
}
""
type RuleAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  delayTimeAvg: Float
  ""
  delayTimeMax: Int
  ""
  delayTimeMin: Int
  ""
  delayTimeSum: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  triggerExpressionMax: String
  ""
  triggerExpressionMin: String
}
"""
Represents a protected key/value pair that can be substuted into more generic interfaces.
Secrets are like environmental variables except they are stored encrypted and cannot be
read from the UI.
An example secret might be the login password a server accessed in a BPMN REST API node
"""
type Secret {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The currently active version. To find a version that was active at a point in time, use versions with a filter. "
  activeVersion(filter: SecretVersionFilter): SecretVersion
  " Uniquely identifies the environmental variable. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  " Link to all available versions for this entity. "
  versions(filter: SecretVersionFilter, first: Int, offset: Int, order: SecretVersionOrder): [SecretVersion]
  ""
  versionsAggregate(filter: SecretVersionFilter): SecretVersionAggregateResult
}
""
type SecretAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  idMax: String
  ""
  idMin: String
  ""
  nextVersionMax: String
  ""
  nextVersionMin: String
}
"Represents a specific version of a secret that can be substuted into more generic interfaces."
type SecretVersion {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  """
  Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. 
  Note: having access to a secret implies access to the encrypted value, not the secret content itself.
  """
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Uniquely identifies the environmental variable with the version. "
  id: String!
  ""
  id_version: String!
  " Unique internal database identifier. "
  iid: ID!
  " The secret that uses this secret version as it's active version. "
  isActiveVersionOf(filter: SecretFilter): Secret
  " The secret that this secret version relates to. "
  secret(filter: SecretFilter): Secret!
  " The value is decrypted then substuted into any templates in place of the variable's id. "
  value: String!
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
type SecretVersionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  valueMax: String
  ""
  valueMin: String
  ""
  versionMax: String
  ""
  versionMin: String
}
"""
Other information related to the actual operations made shall be presented as segment data. 
Segment data may contain nested segment data.
"""
type SegmentData {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The segment data(s) that is part of this segment data as the whole. "
  children(filter: SegmentDataFilter, first: Int, offset: Int, order: SegmentDataOrder): [SegmentData]
  ""
  childrenAggregate(filter: SegmentDataFilter): SegmentDataAggregateResult
  " Contains additional information and descriptions of the segment data. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " The identification of the segment data. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " The segment data(s) that this segment data is part of as the whole. "
  parent(filter: SegmentDataFilter): SegmentData
  " The segment response defined in part by this segment data. "
  segmentResponse(filter: SegmentResponseFilter): SegmentResponse
  " The value or set of values of the segment data. "
  value: String
  " The engineering units in which the value is defined. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type SegmentDataAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  valueMax: String
  ""
  valueMin: String
}
"""
Specific parameters required for a segment requirement shall be presented as segment parameters.

A segment parameter shall include an identification of the parameter that matches parameter 
specification of the operations definition, such as target acidity; a value for the parameter, 
such as 3,4; and the unit of measure of the parameter, such as pH.

A segment parameter should include a set of limits that apply to any change to the value, such as 
quality limits and safety limits. 

Segment parameters may contain nested segment parameters.
"""
type SegmentParameter {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The segment parameter(s) that are part of this segment parameter. "
  children(filter: SegmentParameterFilter, first: Int, offset: Int, order: SegmentParameterOrder): [SegmentParameter]
  ""
  childrenAggregate(filter: SegmentParameterFilter): SegmentParameterAggregateResult
  " Defines a comment on the segment parameter. "
  comments(filter: CommentFilter, first: Int, offset: Int, order: CommentOrder): [Comment]
  ""
  commentsAggregate(filter: CommentFilter): CommentAggregateResult
  " Contains additional information and descriptions of the segment parameter. "
  description: String
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " The identification of the segment parameter. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " This segment parameter(s) corresponds to the parameter specification(s) in the operations definition. "
  parameterSpecification(filter: ParameterSpecificationFilter): ParameterSpecification
  " The segment parameter that this segment parameter is part of. "
  parent(filter: SegmentParameterFilter): SegmentParameter
  " This segment parameter(s) corresponds to the process segment parameter(s) in the process segment. "
  processSegmentParameter(filter: ProcessSegmentParameterFilter): ProcessSegmentParameter
  " The segment requirement containing this segment parameter. "
  segmentRequirement(filter: SegmentRequirementFilter): SegmentRequirement!
  " The value, set of values, or range of the value to be used for this parameter. "
  value: String
  " The engineering units in which the value is defined. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type SegmentParameterAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  valueMax: String
  ""
  valueMin: String
}
"""
An operations request shall be made up of one or more segment requirements. Each segment requirement 
shall correspond to, or reference, an identified operations definition, operations segment or process 
segment. The segment requirement identifies or references the segment capability to which the associated 
personnel, equipment, physical assets, materials, and segment parameters correspond.

The segment requirement properties and segment parameters shall align with the parameters sent as part 
of an operations request.
"""
type SegmentRequirement {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The related object(s) makes up part of this segment requirement as the whole. "
  children(filter: SegmentRequirementFilter, first: Int, offset: Int, order: SegmentRequirementOrder): [SegmentRequirement]
  ""
  childrenAggregate(filter: SegmentRequirementFilter): SegmentRequirementAggregateResult
  " Contains additional information and descriptions of the segment requirement. "
  description: String
  " The expected duration of this segment requirement. "
  duration: Float
  " The unit of measure of the duration. "
  durationUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The expected earliest start time of this segment requirement. "
  earliestStartDate: DateTime
  " The equipment requirements related to this segment requirement. "
  equipmentRequirements(filter: EquipmentRequirementFilter, first: Int, offset: Int, order: EquipmentRequirementOrder): [EquipmentRequirement]
  ""
  equipmentRequirementsAggregate(filter: EquipmentRequirementFilter): EquipmentRequirementAggregateResult
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of the segment requirement within the scope of an operations request. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The job order(s) related to this segment requirement(s). "
  jobOrders(filter: JobOrderFilter, first: Int, offset: Int, order: JobOrderOrder): [JobOrder]
  ""
  jobOrdersAggregate(filter: JobOrderFilter): JobOrderAggregateResult
  " The expected latest ending time of this segment requirement. "
  latestEndDate: DateTime
  " The material requirements related to this segment requirement. "
  materialRequirements(filter: MaterialRequirementFilter, first: Int, offset: Int, order: MaterialRequirementOrder): [MaterialRequirement]
  ""
  materialRequirementsAggregate(filter: MaterialRequirementFilter): MaterialRequirementAggregateResult
  " Notes about this segment requirement. "
  notes: String
  " The operations definition reference that corresponds to this segment requirement. "
  operationsDefinition(filter: OperationsDefinitionFilter): OperationsDefinition
  " The operations request is defined in part by this segment requirement. "
  operationsRequest(filter: OperationsRequestFilter): OperationsRequest!
  " The operations response(s) related to this segment requirement(s). "
  operationsResponses(filter: OperationsResponseFilter, first: Int, offset: Int, order: OperationsResponseOrder): [OperationsResponse]
  ""
  operationsResponsesAggregate(filter: OperationsResponseFilter): OperationsResponseAggregateResult
  " The associated operations segments that corresponds to this segment requirement. "
  operationsSegment(filter: OperationsSegmentFilter): OperationsSegment
  " Describes the category of operation. "
  operationsType: WorkType!
  " The segment parameters related to this segment requirement. "
  parameters(filter: SegmentParameterFilter, first: Int, offset: Int, order: SegmentParameterOrder): [SegmentParameter]
  ""
  parametersAggregate(filter: SegmentParameterFilter): SegmentParameterAggregateResult
  " The related object(s) that this segment requirement makes up part of as the whole. "
  parent(filter: SegmentRequirementFilter): SegmentRequirement
  " The personnel requirements related to this segment requirement. "
  personnelRequirements(filter: PersonnelRequirementFilter, first: Int, offset: Int, order: PersonnelRequirementOrder): [PersonnelRequirement]
  ""
  personnelRequirementsAggregate(filter: PersonnelRequirementFilter): PersonnelRequirementAggregateResult
  " The physical asset requirements related to this segment requirement. "
  physicalAssetRequirements(filter: PhysicalAssetRequirementFilter, first: Int, offset: Int, order: PhysicalAssetRequirementOrder): [PhysicalAssetRequirement]
  ""
  physicalAssetRequirementsAggregate(filter: PhysicalAssetRequirementFilter): PhysicalAssetRequirementAggregateResult
  " An identification of the process segment associated with this segment requirement. "
  processSegment(filter: ProcessSegmentFilter): ProcessSegment
  " The segment response(s) related to this segment requirement(s). "
  segmentResponses(filter: SegmentResponseFilter, first: Int, offset: Int, order: SegmentResponseOrder): [SegmentResponse]
  ""
  segmentResponsesAggregate(filter: SegmentResponseFilter): SegmentResponseAggregateResult
  " Indicates the state of the segment requirement. "
  segmentState: ScheduleState!
  " The work request(s) related to this segment requirement(s). "
  workRequests(filter: WorkRequestFilter, first: Int, offset: Int, order: WorkRequestOrder): [WorkRequest]
  ""
  workRequestsAggregate(filter: WorkRequestFilter): WorkRequestAggregateResult
}
""
type SegmentRequirementAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  durationAvg: Float
  ""
  durationMax: Float
  ""
  durationMin: Float
  ""
  durationSum: Float
  ""
  earliestStartDateMax: DateTime
  ""
  earliestStartDateMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  latestEndDateMax: DateTime
  ""
  latestEndDateMin: DateTime
  ""
  notesMax: String
  ""
  notesMin: String
}
"""
Information on a segment of an operations response shall be presented as a segment response. A segment 
response shall be made up of zero or more sets of information on segment data, personnel actual, equipment 
actual, physical asset actual, and material actual. There may be one or more segment responses for a 
single segment request if the manufacturing facility needs to split the segment requirement into smaller 
elements.

An operations response shall be made up of one or more segment responses. Each segment response shall 
correspond to, or reference, an identified operations segment or process segment. The segment response 
identifies or references the segment capability to which the associated personnel, equipment, materials, 
and segment parameters correspond.

A segment response shall include an identification of the associated operations segment or process 
segment; the actual starting time; and the actual stopping time.
"""
type SegmentResponse {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The actual end time of this segment response. "
  actualEndDateTime: DateTime
  " The actual start time of this segment response. "
  actualStartDateTime: DateTime
  " The related object(s) makes up part of this segment response as the whole. "
  children(filter: SegmentResponseFilter, first: Int, offset: Int, order: SegmentResponseOrder): [SegmentResponse]
  ""
  childrenAggregate(filter: SegmentResponseFilter): SegmentResponseAggregateResult
  " Contains additional information and descriptions of the segment response. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The equipment actuals related to this segment response. "
  equipmentActual(filter: EquipmentActualFilter, first: Int, offset: Int, order: EquipmentActualOrder): [EquipmentActual]
  ""
  equipmentActualAggregate(filter: EquipmentActualFilter): EquipmentActualAggregateResult
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " Uniquely identifies an instance of a segment response executed. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The job response(s) corresponds to this segment response. "
  jobResponses(filter: JobResponseFilter): JobResponse
  " The material actuals related to this segment response. "
  materialActual(filter: MaterialActualFilter, first: Int, offset: Int, order: MaterialActualOrder): [MaterialActual]
  ""
  materialActualAggregate(filter: MaterialActualFilter): MaterialActualAggregateResult
  " The operations definition(s) corresponds to this segment response. "
  operationsDefinitions(filter: OperationsDefinitionFilter, first: Int, offset: Int, order: OperationsDefinitionOrder): [OperationsDefinition]
  ""
  operationsDefinitionsAggregate(filter: OperationsDefinitionFilter): OperationsDefinitionAggregateResult
  " The operations request(s) corresponds to this segment response. "
  operationsRequests(filter: OperationsRequestFilter, first: Int, offset: Int, order: OperationsRequestOrder): [OperationsRequest]
  ""
  operationsRequestsAggregate(filter: OperationsRequestFilter): OperationsRequestAggregateResult
  " This segment response is a part of the operations response as the whole. "
  operationsResponse(filter: OperationsResponseFilter): OperationsResponse!
  " The operations segment(s) corresponds to this segment response. "
  operationsSegments(filter: OperationsSegmentFilter, first: Int, offset: Int, order: OperationsSegmentOrder): [OperationsSegment]
  ""
  operationsSegmentsAggregate(filter: OperationsSegmentFilter): OperationsSegmentAggregateResult
  " Describes the category of operations. "
  operationsType: WorkType!
  " The related object(s) this segment response makes up part of as the whole. "
  parent(filter: SegmentResponseFilter): SegmentResponse
  " The personnel actuals related to this segment response. "
  personnelActual(filter: PersonnelActualFilter, first: Int, offset: Int, order: PersonnelActualOrder): [PersonnelActual]
  ""
  personnelActualAggregate(filter: PersonnelActualFilter): PersonnelActualAggregateResult
  " The physical asset actuals related to this segment response. "
  physicalAssetActual(filter: PhysicalAssetActualFilter, first: Int, offset: Int, order: PhysicalAssetActualOrder): [PhysicalAssetActual]
  ""
  physicalAssetActualAggregate(filter: PhysicalAssetActualFilter): PhysicalAssetActualAggregateResult
  " The date and time used for posting resource actuals to supporting applications. "
  postingDateTime: DateTime
  " The process segment corresponds to this segment response. "
  processSegment(filter: ProcessSegmentFilter): ProcessSegment
  " The segment data related to this segment response. "
  segmentData(filter: SegmentDataFilter, first: Int, offset: Int, order: SegmentDataOrder): [SegmentData]
  ""
  segmentDataAggregate(filter: SegmentDataFilter): SegmentDataAggregateResult
  " The segment requirement(s) corresponds to this segment response. "
  segmentRequirements(filter: SegmentRequirementFilter, first: Int, offset: Int, order: SegmentRequirementOrder): [SegmentRequirement]
  ""
  segmentRequirementsAggregate(filter: SegmentRequirementFilter): SegmentRequirementAggregateResult
  " Indicates the state of the segment response. "
  segmentState: JobState
  " The work response(s) corresponds to this segment response. "
  workResponses(filter: WorkResponseFilter): WorkResponse
}
""
type SegmentResponseAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  actualEndDateTimeMax: DateTime
  ""
  actualEndDateTimeMin: DateTime
  ""
  actualStartDateTimeMax: DateTime
  ""
  actualStartDateTimeMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  postingDateTimeMax: DateTime
  ""
  postingDateTimeMin: DateTime
}
"Represents a Signature used for Electronic Signature Generation"
type Signature {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  """
  Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. 
  Note: having access to a secret implies access to the encrypted value, not the secret content itself.
  """
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The AlarmEvent entity the signature references. "
  alarmEvent(filter: AlarmEventFilter): AlarmEvent
  " An indication enabling detection that the signature has not been altered. The change indication enables detection that the record has been altered, although it may not identify the specific alterations. "
  changeIndication: String!
  " Defines a Comment on the signature. "
  comment(filter: CommentFilter): Comment
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The equipmentActual entity the signature references. "
  equipmentActual(filter: EquipmentActualFilter): EquipmentActual
  " The equipmentRequirement entity the signature references. "
  equipmentRequirement(filter: EquipmentRequirementFilter): EquipmentRequirement
  " The event entity the signature references. "
  event(filter: EventFilter): Event
  " Unique internal database identifier. "
  iid: ID!
  " The jobOrder entity the signature references. "
  jobOrder(filter: JobOrderFilter): JobOrder
  " The jobResponse entity the signature references. "
  jobResponse(filter: JobResponseFilter): JobResponse
  " The jobResponseData entity the signature references. "
  jobResponseData(filter: JobResponseDataFilter): JobResponseData
  " The materialActual entity the signature references. "
  materialActual(filter: MaterialActualFilter): MaterialActual
  " The materialRequirement entity the signature references. "
  materialRequirement(filter: MaterialRequirementFilter): MaterialRequirement
  " The Person who made the signature. "
  personVersion(filter: PersonVersionFilter): PersonVersion!
  " The personnelActual entity the signature references. "
  personnelActual(filter: PersonnelActualFilter): PersonnelActual
  " The personnelRequirement entity the signature references. "
  personnelRequirement(filter: PersonnelRequirementFilter): PersonnelRequirement
  " The physicalAssetActual entity the signature references. "
  physicalAssetActual(filter: PhysicalAssetActualFilter): PhysicalAssetActual
  " The physicalAssetRequirement entity the signature references. "
  physicalAssetRequirement(filter: PhysicalAssetRequirementFilter): PhysicalAssetRequirement
  " Electronic signature for Comment. "
  signatureForAComment(filter: CommentFilter): Comment
  " Reason for Signature i.e. (Done By, Reviewed by, Approved by) "
  signatureReason(filter: SignatureReasonFilter): SignatureReason!
  " Timestamps the signature signing. "
  timestamp: DateTime!
  " The workDirective entity the signature references. "
  workDirective(filter: WorkDirectiveFilter): WorkDirective
  " The workMaster entity the signature references. "
  workMaster(filter: WorkMasterFilter): WorkMaster
  " The workRequest entity the signature references. "
  workRequest(filter: WorkRequestFilter): WorkRequest
  " The workResponse entity the signature references. "
  workResponse(filter: WorkResponseFilter): WorkResponse
}
""
type SignatureAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  changeIndicationMax: String
  ""
  changeIndicationMin: String
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  timestampMax: DateTime
  ""
  timestampMin: DateTime
}
"Represents a signature reason used for Electronic Signature Generation Required for 21 CFR 11 Compliance."
type SignatureReason {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  """
  Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. 
  Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open.
  Note: having access to a secret implies access to the encrypted value, not the secret content itself.
  """
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Uniquely identifies the signature reason. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The signature instance related to signature reason. "
  signatures(filter: SignatureFilter, first: Int, offset: Int, order: SignatureOrder): [Signature]
  ""
  signaturesAggregate(filter: SignatureFilter): SignatureAggregateResult
}
""
type SignatureReasonAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
}
"""
The spatial definition provides a means of communicating zero-dimensional point, one-dimensional line 
or two-dimensional shape or three-dimensional solid geo-spatial location data for planning/scheduling, 
actuals, resources, and analytics. Spatial definition identifies a value and the predefined coordinate 
reference system using following attributes.

    a) value;
    b) format;
    c) spatial reference identifier (SRID); and
    d) SRID sridAuthority

A fully qualified spatial definition exchange has all four attributes as a minimum. In some information 
exchanges, sending and receiving applications may have a specified agreement on format, SRID, and SRID 
authority. 

Spatial definition is distinct from and separate to storage location and physical location. Storage 
location attribute is defined for material lots and material sublots as a nonspatial definition of 
location. The physical location attribute logically identifies a 'place' which is actual physical 
location of the physical asset.
"""
type SpatialDefinition {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " A string to uniquely identify a spatial definition. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " Holds multiple Polygon values. "
  multiPolygonValue: MultiPolygon
  " Holds values for Latitude and Longitude. "
  pointValue: Point
  " Holds multiple Point values to make a polygon. "
  polygonValue: Polygon
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  """
  SRID is the Spatial Reference Identifier which identifies the coordinate reference system to identify 
  a predefined coordinate reference system (pre-configured into communication systems).
  """
  srid: String
  """
  The SRID authority identifies the authority that defines the coordinate reference system identified 
  by the SRID.
  """
  sridAuthority: String
}
""
type SpatialDefinitionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  sridAuthorityMax: String
  ""
  sridAuthorityMin: String
  ""
  sridMax: String
  ""
  sridMin: String
}
""
type StateModelAction {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  ""
  actionType: StateModelActionType
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " A unique identification of a specific operational location class version. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  ""
  isEntryActionForState(filter: StateModelStateFilter): StateModelState
  ""
  isExitActionForState(filter: StateModelStateFilter): StateModelState
  " The label is last node in the fully qualified name. "
  label: String!
  ""
  transition(filter: StateModelTransitionFilter): StateModelTransition
  " Variable Context to pass into the Workflow. stringified json or jsonata expression "
  variables: String
  ""
  workflowSpecification(filter: WorkflowSpecificationFilter): WorkflowSpecification
}
""
type StateModelActionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  variablesMax: String
  ""
  variablesMin: String
}
""
type StateModelDefinition {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Contains the base64 encoded XML that this StateModelDefinition was generated from. "
  bpmnXMLEncoded: String!
  " Contains additional information and descriptions of the operational location. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  ""
  equipmentClassVersion(filter: EquipmentClassVersionFilter): EquipmentClassVersion
  ""
  equipmentVersion(filter: EquipmentVersionFilter): EquipmentVersion
  ""
  events(filter: StateModelEventFilter, first: Int, offset: Int, order: StateModelEventOrder): [StateModelEvent]
  ""
  eventsAggregate(filter: StateModelEventFilter): StateModelEventAggregateResult
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of a specific operational location class version. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  ""
  instances(filter: StateModelInstanceFilter, first: Int, offset: Int, order: StateModelInstanceOrder): [StateModelInstance]
  ""
  instancesAggregate(filter: StateModelInstanceFilter): StateModelInstanceAggregateResult
  " The label is last node in the fully qualified name. "
  label: String!
  ""
  materialClassVersion(filter: MaterialClassVersionFilter): MaterialClassVersion
  ""
  materialDefinitionVersion(filter: MaterialDefinitionVersionFilter): MaterialDefinitionVersion
  ""
  personVersion(filter: PersonVersionFilter): PersonVersion
  ""
  personnelClassVersion(filter: PersonnelClassVersionFilter): PersonnelClassVersion
  ""
  physicalAssetClassVersion(filter: PhysicalAssetClassVersionFilter): PhysicalAssetClassVersion
  ""
  physicalAssetVersion(filter: PhysicalAssetVersionFilter): PhysicalAssetVersion
  ""
  properties(filter: StateModelPropertyFilter, first: Int, offset: Int, order: StateModelPropertyOrder): [StateModelProperty]
  ""
  propertiesAggregate(filter: StateModelPropertyFilter): StateModelPropertyAggregateResult
  ""
  states(filter: StateModelStateFilter, first: Int, offset: Int, order: StateModelStateOrder): [StateModelState]
  ""
  statesAggregate(filter: StateModelStateFilter): StateModelStateAggregateResult
  ""
  transitions(filter: StateModelTransitionFilter, first: Int, offset: Int, order: StateModelTransitionOrder): [StateModelTransition]
  ""
  transitionsAggregate(filter: StateModelTransitionFilter): StateModelTransitionAggregateResult
}
""
type StateModelDefinitionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  bpmnXMLEncodedMax: String
  ""
  bpmnXMLEncodedMin: String
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
}
""
type StateModelEvent {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " A unique identification of a specific operational location class version. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " The State Model Definition to which this connection belongs "
  stateModelDefinition(filter: StateModelDefinitionFilter): StateModelDefinition!
  " Transitions triggered by this event "
  transitions(filter: StateModelTransitionFilter, first: Int, offset: Int, order: StateModelTransitionOrder): [StateModelTransition]
  ""
  transitionsAggregate(filter: StateModelTransitionFilter): StateModelTransitionAggregateResult
}
""
type StateModelEventAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
}
""
type StateModelInstance {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Contains additional information and descriptions of the operational location. "
  description: String
  ""
  equipment(filter: EquipmentFilter): Equipment
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of a specific operational location class version. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  ""
  materialDefinition(filter: MaterialDefinitionFilter): MaterialDefinition
  ""
  materialLot(filter: MaterialLotFilter): MaterialLot
  ""
  materialSubLot(filter: MaterialSubLotFilter): MaterialSubLot
  ""
  person(filter: PersonFilter): Person
  ""
  physicalAsset(filter: PhysicalAssetFilter): PhysicalAsset
  " The current state of the StateModelInstance "
  state: String
  " State Model Definition for the instance "
  stateModelDefinition(filter: StateModelDefinitionFilter): StateModelDefinition
  " History of transitions between states for this instance "
  transitions(filter: StateTransitionInstanceFilter, first: Int, offset: Int, order: StateTransitionInstanceOrder): [StateTransitionInstance]
  ""
  transitionsAggregate(filter: StateTransitionInstanceFilter): StateTransitionInstanceAggregateResult
}
""
type StateModelInstanceAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  stateMax: String
  ""
  stateMin: String
}
"""
A property of a state model shall be defined as a state model property
A state model property may contain nested state model property(s).
"""
type StateModelProperty {
  ""
  StateModel(filter: StateModelDefinitionFilter): StateModelDefinition!
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The nested StateModelProperty(s) makes up part of this equipment property as the whole. "
  children(filter: StateModelPropertyFilter, first: Int, offset: Int, order: StateModelPropertyOrder): [StateModelProperty]
  ""
  childrenAggregate(filter: StateModelPropertyFilter): StateModelPropertyAggregateResult
  ""
  dataType: DataType
  ""
  definitionType: DefinitionType!
  " Additional information about the StateModelProperty. "
  description: String
  " Uniquely identifies the state model property. Fully Qualified identifier that is unique in the database. Required attribute."
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " Uniquely identifies the state model property. Required attribute."
  name: String!
  " The StateModelProperty that this nested equipment property makes up part of as the whole. "
  parent(filter: StateModelPropertyFilter): StateModelProperty
  " The value, set of values, or range of the property. "
  value: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type StateModelPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  nameMax: String
  ""
  nameMin: String
  ""
  valueMax: String
  ""
  valueMin: String
}
""
type StateModelState {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  ""
  children(filter: StateModelStateFilter, first: Int, offset: Int, order: StateModelStateOrder): [StateModelState]
  ""
  childrenAggregate(filter: StateModelStateFilter): StateModelStateAggregateResult
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " A unique identification of a specific operational location class version. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " Connections to this Node "
  inflows(filter: StateModelTransitionFilter, first: Int, offset: Int, order: StateModelTransitionOrder): [StateModelTransition]
  ""
  inflowsAggregate(filter: StateModelTransitionFilter): StateModelTransitionAggregateResult
  " This state machine terminates when it reaches this state "
  isFinalState: Boolean
  " This state is active when the state machine is initiated "
  isInitialState: Boolean
  " The label is last node in the fully qualified name. "
  label: String!
  " Actions that are triggered on entry to this state. "
  onEntry(filter: StateModelActionFilter, first: Int, offset: Int, order: StateModelActionOrder): [StateModelAction]
  ""
  onEntryAggregate(filter: StateModelActionFilter): StateModelActionAggregateResult
  " Actions that are triggered prior to exiting this state. "
  onExit(filter: StateModelActionFilter, first: Int, offset: Int, order: StateModelActionOrder): [StateModelAction]
  ""
  onExitAggregate(filter: StateModelActionFilter): StateModelActionAggregateResult
  " Connections from this node "
  outflows(filter: StateModelTransitionFilter, first: Int, offset: Int, order: StateModelTransitionOrder): [StateModelTransition]
  ""
  outflowsAggregate(filter: StateModelTransitionFilter): StateModelTransitionAggregateResult
  ""
  parent(filter: StateModelStateFilter): StateModelState
  " The State Model Definition to which this node belongs "
  stateModelDefinition(filter: StateModelDefinitionFilter): StateModelDefinition
}
""
type StateModelStateAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
}
""
type StateModelTransition {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " jsonata expression to determine if the transition should proceed or not "
  condition: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " The State Model State at the start of this transition "
  from(filter: StateModelStateFilter): StateModelState!
  " A unique identification of a specific operational location class version. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  ""
  stateModelActions(filter: StateModelActionFilter, first: Int, offset: Int, order: StateModelActionOrder): [StateModelAction]
  ""
  stateModelActionsAggregate(filter: StateModelActionFilter): StateModelActionAggregateResult
  " The State Model Definition to which this connection belongs "
  stateModelDefinition(filter: StateModelDefinitionFilter): StateModelDefinition!
  " The Events that trigger this transition "
  stateModelEvents(filter: StateModelEventFilter, first: Int, offset: Int, order: StateModelEventOrder): [StateModelEvent]
  ""
  stateModelEventsAggregate(filter: StateModelEventFilter): StateModelEventAggregateResult
  " The State Model State at the end of this transition "
  to(filter: StateModelStateFilter): StateModelState!
}
""
type StateModelTransitionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  conditionMax: String
  ""
  conditionMin: String
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
}
""
type StateTransitionInstance {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  ""
  fromState: String
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  stateModelInstance(filter: StateModelInstanceFilter): StateModelInstance!
  ""
  timestamp: DateTime!
  ""
  toState: String!
}
""
type StateTransitionInstanceAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  fromStateMax: String
  ""
  fromStateMin: String
  ""
  timestampMax: DateTime
  ""
  timestampMin: DateTime
  ""
  toStateMax: String
  ""
  toStateMin: String
}
""
type Subscription {
  ""
  aggregateAlarmEvent(filter: AlarmEventFilter): AlarmEventAggregateResult
  ""
  aggregateComment(filter: CommentFilter): CommentAggregateResult
  ""
  aggregateDataSource(filter: DataSourceFilter): DataSourceAggregateResult
  ""
  aggregateDataSourceMethod(filter: DataSourceMethodFilter): DataSourceMethodAggregateResult
  ""
  aggregateDataSourceMethodArgument(filter: DataSourceMethodArgumentFilter): DataSourceMethodArgumentAggregateResult
  ""
  aggregateDataSourceTopic(filter: DataSourceTopicFilter): DataSourceTopicAggregateResult
  ""
  aggregateDataSourceVersion(filter: DataSourceVersionFilter): DataSourceVersionAggregateResult
  ""
  aggregateDataSubscription(filter: DataSubscriptionFilter): DataSubscriptionAggregateResult
  ""
  aggregateEnvironmentalVariable(filter: EnvironmentalVariableFilter): EnvironmentalVariableAggregateResult
  ""
  aggregateEnvironmentalVariableVersion(filter: EnvironmentalVariableVersionFilter): EnvironmentalVariableVersionAggregateResult
  ""
  aggregateEquipment(filter: EquipmentFilter): EquipmentAggregateResult
  ""
  aggregateEquipmentActual(filter: EquipmentActualFilter): EquipmentActualAggregateResult
  ""
  aggregateEquipmentActualProperty(filter: EquipmentActualPropertyFilter): EquipmentActualPropertyAggregateResult
  ""
  aggregateEquipmentAssetMapping(filter: EquipmentAssetMappingFilter): EquipmentAssetMappingAggregateResult
  ""
  aggregateEquipmentClass(filter: EquipmentClassFilter): EquipmentClassAggregateResult
  ""
  aggregateEquipmentClassProperty(filter: EquipmentClassPropertyFilter): EquipmentClassPropertyAggregateResult
  ""
  aggregateEquipmentClassVersion(filter: EquipmentClassVersionFilter): EquipmentClassVersionAggregateResult
  ""
  aggregateEquipmentDataSource(filter: EquipmentDataSourceFilter): EquipmentDataSourceAggregateResult
  ""
  aggregateEquipmentNameAlias(filter: EquipmentNameAliasFilter): EquipmentNameAliasAggregateResult
  ""
  aggregateEquipmentProperty(filter: EquipmentPropertyFilter): EquipmentPropertyAggregateResult
  ""
  aggregateEquipmentPropertyOverride(filter: EquipmentPropertyOverrideFilter): EquipmentPropertyOverrideAggregateResult
  ""
  aggregateEquipmentRequirement(filter: EquipmentRequirementFilter): EquipmentRequirementAggregateResult
  ""
  aggregateEquipmentRequirementProperty(filter: EquipmentRequirementPropertyFilter): EquipmentRequirementPropertyAggregateResult
  ""
  aggregateEquipmentSpecification(filter: EquipmentSpecificationFilter): EquipmentSpecificationAggregateResult
  ""
  aggregateEquipmentSpecificationProperty(filter: EquipmentSpecificationPropertyFilter): EquipmentSpecificationPropertyAggregateResult
  ""
  aggregateEquipmentVersion(filter: EquipmentVersionFilter): EquipmentVersionAggregateResult
  ""
  aggregateEvent(filter: EventFilter): EventAggregateResult
  ""
  aggregateEventAssociation(filter: EventAssociationFilter): EventAssociationAggregateResult
  ""
  aggregateEventProperty(filter: EventPropertyFilter): EventPropertyAggregateResult
  ""
  aggregateEventSubtype(filter: EventSubtypeFilter): EventSubtypeAggregateResult
  ""
  aggregateEventType(filter: EventTypeFilter): EventTypeAggregateResult
  ""
  aggregateForm(filter: FormFilter): FormAggregateResult
  ""
  aggregateHierarchyScope(filter: HierarchyScopeFilter): HierarchyScopeAggregateResult
  ""
  aggregateInformationObject(filter: InformationObjectFilter): InformationObjectAggregateResult
  ""
  aggregateJobList(filter: JobListFilter): JobListAggregateResult
  ""
  aggregateJobOrder(filter: JobOrderFilter): JobOrderAggregateResult
  ""
  aggregateJobOrderParameter(filter: JobOrderParameterFilter): JobOrderParameterAggregateResult
  ""
  aggregateJobResponse(filter: JobResponseFilter): JobResponseAggregateResult
  ""
  aggregateJobResponseData(filter: JobResponseDataFilter): JobResponseDataAggregateResult
  ""
  aggregateJobResponseList(filter: JobResponseListFilter): JobResponseListAggregateResult
  ""
  aggregateLibreService(filter: LibreServiceFilter): LibreServiceAggregateResult
  ""
  aggregateMaterialActual(filter: MaterialActualFilter): MaterialActualAggregateResult
  ""
  aggregateMaterialActualProperty(filter: MaterialActualPropertyFilter): MaterialActualPropertyAggregateResult
  ""
  aggregateMaterialClass(filter: MaterialClassFilter): MaterialClassAggregateResult
  ""
  aggregateMaterialClassProperty(filter: MaterialClassPropertyFilter): MaterialClassPropertyAggregateResult
  ""
  aggregateMaterialClassVersion(filter: MaterialClassVersionFilter): MaterialClassVersionAggregateResult
  ""
  aggregateMaterialDefinition(filter: MaterialDefinitionFilter): MaterialDefinitionAggregateResult
  ""
  aggregateMaterialDefinitionProperty(filter: MaterialDefinitionPropertyFilter): MaterialDefinitionPropertyAggregateResult
  ""
  aggregateMaterialDefinitionVersion(filter: MaterialDefinitionVersionFilter): MaterialDefinitionVersionAggregateResult
  ""
  aggregateMaterialLot(filter: MaterialLotFilter): MaterialLotAggregateResult
  ""
  aggregateMaterialLotProperty(filter: MaterialLotPropertyFilter): MaterialLotPropertyAggregateResult
  ""
  aggregateMaterialRequirement(filter: MaterialRequirementFilter): MaterialRequirementAggregateResult
  ""
  aggregateMaterialRequirementProperty(filter: MaterialRequirementPropertyFilter): MaterialRequirementPropertyAggregateResult
  ""
  aggregateMaterialSpecification(filter: MaterialSpecificationFilter): MaterialSpecificationAggregateResult
  ""
  aggregateMaterialSpecificationProperty(filter: MaterialSpecificationPropertyFilter): MaterialSpecificationPropertyAggregateResult
  ""
  aggregateMaterialSubLot(filter: MaterialSubLotFilter): MaterialSubLotAggregateResult
  ""
  aggregateOperationalLocation(filter: OperationalLocationFilter): OperationalLocationAggregateResult
  ""
  aggregateOperationalLocationClass(filter: OperationalLocationClassFilter): OperationalLocationClassAggregateResult
  ""
  aggregateOperationalLocationClassProperty(filter: OperationalLocationClassPropertyFilter): OperationalLocationClassPropertyAggregateResult
  ""
  aggregateOperationalLocationClassVersion(filter: OperationalLocationClassVersionFilter): OperationalLocationClassVersionAggregateResult
  ""
  aggregateOperationalLocationProperty(filter: OperationalLocationPropertyFilter): OperationalLocationPropertyAggregateResult
  ""
  aggregateOperationsDefinition(filter: OperationsDefinitionFilter): OperationsDefinitionAggregateResult
  ""
  aggregateOperationsDefinitionVersion(filter: OperationsDefinitionVersionFilter): OperationsDefinitionVersionAggregateResult
  ""
  aggregateOperationsEvent(filter: OperationsEventFilter): OperationsEventAggregateResult
  ""
  aggregateOperationsEventClass(filter: OperationsEventClassFilter): OperationsEventClassAggregateResult
  ""
  aggregateOperationsEventClassProperty(filter: OperationsEventClassPropertyFilter): OperationsEventClassPropertyAggregateResult
  ""
  aggregateOperationsEventClassRecordSpecification(filter: OperationsEventClassRecordSpecificationFilter): OperationsEventClassRecordSpecificationAggregateResult
  ""
  aggregateOperationsEventClassVersion(filter: OperationsEventClassVersionFilter): OperationsEventClassVersionAggregateResult
  ""
  aggregateOperationsEventDefinition(filter: OperationsEventDefinitionFilter): OperationsEventDefinitionAggregateResult
  ""
  aggregateOperationsEventDefinitionProperty(filter: OperationsEventDefinitionPropertyFilter): OperationsEventDefinitionPropertyAggregateResult
  ""
  aggregateOperationsEventDefinitionRecordSpecification(filter: OperationsEventDefinitionRecordSpecificationFilter): OperationsEventDefinitionRecordSpecificationAggregateResult
  ""
  aggregateOperationsEventDefinitionVersion(filter: OperationsEventDefinitionVersionFilter): OperationsEventDefinitionVersionAggregateResult
  ""
  aggregateOperationsEventProperty(filter: OperationsEventPropertyFilter): OperationsEventPropertyAggregateResult
  ""
  aggregateOperationsEventRecord(filter: OperationsEventRecordFilter): OperationsEventRecordAggregateResult
  ""
  aggregateOperationsEventRecordEntry(filter: OperationsEventRecordEntryFilter): OperationsEventRecordEntryAggregateResult
  ""
  aggregateOperationsMaterialBill(filter: OperationsMaterialBillFilter): OperationsMaterialBillAggregateResult
  ""
  aggregateOperationsPerformance(filter: OperationsPerformanceFilter): OperationsPerformanceAggregateResult
  ""
  aggregateOperationsRequest(filter: OperationsRequestFilter): OperationsRequestAggregateResult
  ""
  aggregateOperationsResponse(filter: OperationsResponseFilter): OperationsResponseAggregateResult
  ""
  aggregateOperationsResponseProperty(filter: OperationsResponsePropertyFilter): OperationsResponsePropertyAggregateResult
  ""
  aggregateOperationsSchedule(filter: OperationsScheduleFilter): OperationsScheduleAggregateResult
  ""
  aggregateOperationsSegment(filter: OperationsSegmentFilter): OperationsSegmentAggregateResult
  ""
  aggregateOperationsSegmentDependency(filter: OperationsSegmentDependencyFilter): OperationsSegmentDependencyAggregateResult
  ""
  aggregateParameterSpecification(filter: ParameterSpecificationFilter): ParameterSpecificationAggregateResult
  ""
  aggregatePayloadFieldDefinition(filter: PayloadFieldDefinitionFilter): PayloadFieldDefinitionAggregateResult
  ""
  aggregatePerson(filter: PersonFilter): PersonAggregateResult
  ""
  aggregatePersonProperty(filter: PersonPropertyFilter): PersonPropertyAggregateResult
  ""
  aggregatePersonVersion(filter: PersonVersionFilter): PersonVersionAggregateResult
  ""
  aggregatePersonnelActual(filter: PersonnelActualFilter): PersonnelActualAggregateResult
  ""
  aggregatePersonnelActualProperty(filter: PersonnelActualPropertyFilter): PersonnelActualPropertyAggregateResult
  ""
  aggregatePersonnelClass(filter: PersonnelClassFilter): PersonnelClassAggregateResult
  ""
  aggregatePersonnelClassProperty(filter: PersonnelClassPropertyFilter): PersonnelClassPropertyAggregateResult
  ""
  aggregatePersonnelClassVersion(filter: PersonnelClassVersionFilter): PersonnelClassVersionAggregateResult
  ""
  aggregatePersonnelRequirement(filter: PersonnelRequirementFilter): PersonnelRequirementAggregateResult
  ""
  aggregatePersonnelRequirementProperty(filter: PersonnelRequirementPropertyFilter): PersonnelRequirementPropertyAggregateResult
  ""
  aggregatePersonnelSpecification(filter: PersonnelSpecificationFilter): PersonnelSpecificationAggregateResult
  ""
  aggregatePersonnelSpecificationProperty(filter: PersonnelSpecificationPropertyFilter): PersonnelSpecificationPropertyAggregateResult
  ""
  aggregatePhysicalAsset(filter: PhysicalAssetFilter): PhysicalAssetAggregateResult
  ""
  aggregatePhysicalAssetActual(filter: PhysicalAssetActualFilter): PhysicalAssetActualAggregateResult
  ""
  aggregatePhysicalAssetActualProperty(filter: PhysicalAssetActualPropertyFilter): PhysicalAssetActualPropertyAggregateResult
  ""
  aggregatePhysicalAssetClass(filter: PhysicalAssetClassFilter): PhysicalAssetClassAggregateResult
  ""
  aggregatePhysicalAssetClassProperty(filter: PhysicalAssetClassPropertyFilter): PhysicalAssetClassPropertyAggregateResult
  ""
  aggregatePhysicalAssetClassVersion(filter: PhysicalAssetClassVersionFilter): PhysicalAssetClassVersionAggregateResult
  ""
  aggregatePhysicalAssetDataSource(filter: PhysicalAssetDataSourceFilter): PhysicalAssetDataSourceAggregateResult
  ""
  aggregatePhysicalAssetProperty(filter: PhysicalAssetPropertyFilter): PhysicalAssetPropertyAggregateResult
  ""
  aggregatePhysicalAssetRequirement(filter: PhysicalAssetRequirementFilter): PhysicalAssetRequirementAggregateResult
  ""
  aggregatePhysicalAssetRequirementProperty(filter: PhysicalAssetRequirementPropertyFilter): PhysicalAssetRequirementPropertyAggregateResult
  ""
  aggregatePhysicalAssetSpecification(filter: PhysicalAssetSpecificationFilter): PhysicalAssetSpecificationAggregateResult
  ""
  aggregatePhysicalAssetSpecificationProperty(filter: PhysicalAssetSpecificationPropertyFilter): PhysicalAssetSpecificationPropertyAggregateResult
  ""
  aggregatePhysicalAssetVersion(filter: PhysicalAssetVersionFilter): PhysicalAssetVersionAggregateResult
  ""
  aggregateProcessSegment(filter: ProcessSegmentFilter): ProcessSegmentAggregateResult
  ""
  aggregateProcessSegmentDependency(filter: ProcessSegmentDependencyFilter): ProcessSegmentDependencyAggregateResult
  ""
  aggregateProcessSegmentParameter(filter: ProcessSegmentParameterFilter): ProcessSegmentParameterAggregateResult
  ""
  aggregateProcessSegmentVersion(filter: ProcessSegmentVersionFilter): ProcessSegmentVersionAggregateResult
  ""
  aggregatePropertyNameAlias(filter: PropertyNameAliasFilter): PropertyNameAliasAggregateResult
  ""
  aggregatePropertyValueAlias(filter: PropertyValueAliasFilter): PropertyValueAliasAggregateResult
  ""
  aggregateSecret(filter: SecretFilter): SecretAggregateResult
  ""
  aggregateSecretVersion(filter: SecretVersionFilter): SecretVersionAggregateResult
  ""
  aggregateSegmentData(filter: SegmentDataFilter): SegmentDataAggregateResult
  ""
  aggregateSegmentParameter(filter: SegmentParameterFilter): SegmentParameterAggregateResult
  ""
  aggregateSegmentRequirement(filter: SegmentRequirementFilter): SegmentRequirementAggregateResult
  ""
  aggregateSegmentResponse(filter: SegmentResponseFilter): SegmentResponseAggregateResult
  ""
  aggregateSignature(filter: SignatureFilter): SignatureAggregateResult
  ""
  aggregateSignatureReason(filter: SignatureReasonFilter): SignatureReasonAggregateResult
  ""
  aggregateSpatialDefinition(filter: SpatialDefinitionFilter): SpatialDefinitionAggregateResult
  ""
  aggregateStateModelProperty(filter: StateModelPropertyFilter): StateModelPropertyAggregateResult
  ""
  aggregateTestSpecification(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  ""
  aggregateUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasureAggregateResult
  ""
  aggregateUnitOfMeasureConversion(filter: UnitOfMeasureConversionFilter): UnitOfMeasureConversionAggregateResult
  ""
  aggregateWorkCalendar(filter: WorkCalendarFilter): WorkCalendarAggregateResult
  ""
  aggregateWorkCalendarDefinitionEntry(filter: WorkCalendarDefinitionEntryFilter): WorkCalendarDefinitionEntryAggregateResult
  ""
  aggregateWorkCalendarDefinitionEntryProperty(filter: WorkCalendarDefinitionEntryPropertyFilter): WorkCalendarDefinitionEntryPropertyAggregateResult
  ""
  aggregateWorkCalendarEntry(filter: WorkCalendarEntryFilter): WorkCalendarEntryAggregateResult
  ""
  aggregateWorkCalendarEntryProperty(filter: WorkCalendarEntryPropertyFilter): WorkCalendarEntryPropertyAggregateResult
  ""
  aggregateWorkDirective(filter: WorkDirectiveFilter): WorkDirectiveAggregateResult
  ""
  aggregateWorkMaster(filter: WorkMasterFilter): WorkMasterAggregateResult
  ""
  aggregateWorkPerformance(filter: WorkPerformanceFilter): WorkPerformanceAggregateResult
  ""
  aggregateWorkRequest(filter: WorkRequestFilter): WorkRequestAggregateResult
  ""
  aggregateWorkResponse(filter: WorkResponseFilter): WorkResponseAggregateResult
  ""
  aggregateWorkSchedule(filter: WorkScheduleFilter): WorkScheduleAggregateResult
  ""
  aggregateWorkflowSpecification(filter: WorkflowSpecificationFilter): WorkflowSpecificationAggregateResult
  ""
  aggregateWorkflowSpecificationConnection(filter: WorkflowSpecificationConnectionFilter): WorkflowSpecificationConnectionAggregateResult
  ""
  aggregateWorkflowSpecificationConnectionProperty(filter: WorkflowSpecificationConnectionPropertyFilter): WorkflowSpecificationConnectionPropertyAggregateResult
  ""
  aggregateWorkflowSpecificationConnectionTypeProperty(filter: WorkflowSpecificationConnectionTypePropertyFilter): WorkflowSpecificationConnectionTypePropertyAggregateResult
  ""
  aggregateWorkflowSpecificationNodeProperty(filter: WorkflowSpecificationNodePropertyFilter): WorkflowSpecificationNodePropertyAggregateResult
  ""
  aggregateWorkflowSpecificationNodeTypeProperty(filter: WorkflowSpecificationNodeTypePropertyFilter): WorkflowSpecificationNodeTypePropertyAggregateResult
  ""
  aggregateWorkflowSpecificationProperty(filter: WorkflowSpecificationPropertyFilter): WorkflowSpecificationPropertyAggregateResult
  ""
  aggregateWorkflowSpecificationVersion(filter: WorkflowSpecificationVersionFilter): WorkflowSpecificationVersionAggregateResult
  ""
  aggregateWorkflowWaypoint(filter: WorkflowWaypointFilter): WorkflowWaypointAggregateResult
  ""
  getAlarmEvent(iid: ID!): AlarmEvent
  ""
  getComment(id: String, iid: ID): Comment
  ""
  getDataSource(id: String, iid: ID): DataSource
  ""
  getDataSourceMethod(id: String, iid: ID): DataSourceMethod
  ""
  getDataSourceMethodArgument(id: String, iid: ID): DataSourceMethodArgument
  ""
  getDataSourceTopic(id: String, iid: ID): DataSourceTopic
  ""
  getDataSourceVersion(id: String, iid: ID, version: String): DataSourceVersion
  ""
  getDataSubscription(id: ID, name: String): DataSubscription
  ""
  getEnvironmentalVariable(id: String, iid: ID): EnvironmentalVariable
  ""
  getEnvironmentalVariableVersion(id: String, iid: ID, version: String): EnvironmentalVariableVersion
  ""
  getEquipment(id: String, iid: ID): Equipment
  ""
  getEquipmentActual(id: String, iid: ID): EquipmentActual
  ""
  getEquipmentActualProperty(id: String, iid: ID): EquipmentActualProperty
  ""
  getEquipmentAssetMapping(id: String, iid: ID): EquipmentAssetMapping
  ""
  getEquipmentClass(id: String, iid: ID): EquipmentClass
  ""
  getEquipmentClassProperty(id: String, iid: ID): EquipmentClassProperty
  ""
  getEquipmentClassVersion(id: String, iid: ID, version: String): EquipmentClassVersion
  ""
  getEquipmentDataSource(iid: ID!): EquipmentDataSource
  ""
  getEquipmentNameAlias(iid: ID!): EquipmentNameAlias
  ""
  getEquipmentProperty(id: String, iid: ID): EquipmentProperty
  ""
  getEquipmentPropertyOverride(id: String, iid: ID): EquipmentPropertyOverride
  ""
  getEquipmentRequirement(id: String, iid: ID): EquipmentRequirement
  ""
  getEquipmentRequirementProperty(id: String, iid: ID): EquipmentRequirementProperty
  ""
  getEquipmentSpecification(id: String, iid: ID): EquipmentSpecification
  ""
  getEquipmentSpecificationProperty(id: String, iid: ID): EquipmentSpecificationProperty
  ""
  getEquipmentVersion(id: String, iid: ID, version: String): EquipmentVersion
  ""
  getEvent(iid: ID!): Event
  ""
  getEventAssociation(id: String, iid: ID): EventAssociation
  ""
  getEventProperty(id: String, iid: ID): EventProperty
  ""
  getEventSubtype(id: String, iid: ID): EventSubtype
  ""
  getEventType(id: String, iid: ID): EventType
  ""
  getForm(id: String, iid: ID): Form
  ""
  getHierarchyScope(id: String, iid: ID): HierarchyScope
  ""
  getInformationObject(iid: ID!): InformationObject
  ""
  getJobList(id: String, iid: ID): JobList
  ""
  getJobOrder(id: String, iid: ID): JobOrder
  ""
  getJobOrderParameter(id: String, iid: ID): JobOrderParameter
  ""
  getJobResponse(id: String, iid: ID): JobResponse
  ""
  getJobResponseData(id: String, iid: ID): JobResponseData
  ""
  getJobResponseList(id: String, iid: ID): JobResponseList
  ""
  getLibreService(id: ID, name: String): LibreService
  ""
  getMaterialActual(id: String, iid: ID): MaterialActual
  ""
  getMaterialActualProperty(id: String, iid: ID): MaterialActualProperty
  ""
  getMaterialClass(id: String, iid: ID): MaterialClass
  ""
  getMaterialClassProperty(id: String, iid: ID): MaterialClassProperty
  ""
  getMaterialClassVersion(id: String, iid: ID, version: String): MaterialClassVersion
  ""
  getMaterialDefinition(id: String, iid: ID): MaterialDefinition
  ""
  getMaterialDefinitionProperty(id: String, iid: ID): MaterialDefinitionProperty
  ""
  getMaterialDefinitionVersion(id: String, iid: ID, version: String): MaterialDefinitionVersion
  ""
  getMaterialLot(id: String, iid: ID): MaterialLot
  ""
  getMaterialLotProperty(id: String, iid: ID): MaterialLotProperty
  ""
  getMaterialRequirement(id: String, iid: ID): MaterialRequirement
  ""
  getMaterialRequirementProperty(id: String, iid: ID): MaterialRequirementProperty
  ""
  getMaterialSpecification(id: String, iid: ID): MaterialSpecification
  ""
  getMaterialSpecificationProperty(id: String, iid: ID): MaterialSpecificationProperty
  ""
  getMaterialSubLot(id: String, iid: ID): MaterialSubLot
  ""
  getOperationalLocation(id: String, iid: ID): OperationalLocation
  ""
  getOperationalLocationClass(id: String, iid: ID): OperationalLocationClass
  ""
  getOperationalLocationClassProperty(id: String, iid: ID): OperationalLocationClassProperty
  ""
  getOperationalLocationClassVersion(id: String, iid: ID, version: String): OperationalLocationClassVersion
  ""
  getOperationalLocationProperty(id: String, iid: ID): OperationalLocationProperty
  ""
  getOperationsDefinition(id: String, iid: ID): OperationsDefinition
  ""
  getOperationsDefinitionVersion(id: String, iid: ID, version: String): OperationsDefinitionVersion
  ""
  getOperationsEvent(id: String, iid: ID): OperationsEvent
  ""
  getOperationsEventClass(id: String, iid: ID): OperationsEventClass
  ""
  getOperationsEventClassProperty(id: String, iid: ID): OperationsEventClassProperty
  ""
  getOperationsEventClassRecordSpecification(iid: ID!): OperationsEventClassRecordSpecification
  ""
  getOperationsEventClassVersion(id: String, iid: ID, version: String): OperationsEventClassVersion
  ""
  getOperationsEventDefinition(id: String, iid: ID): OperationsEventDefinition
  ""
  getOperationsEventDefinitionProperty(iid: ID!): OperationsEventDefinitionProperty
  ""
  getOperationsEventDefinitionRecordSpecification(iid: ID!): OperationsEventDefinitionRecordSpecification
  ""
  getOperationsEventDefinitionVersion(id: String, iid: ID, version: String): OperationsEventDefinitionVersion
  ""
  getOperationsEventProperty(id: String, iid: ID): OperationsEventProperty
  ""
  getOperationsEventRecord(id: String, iid: ID): OperationsEventRecord
  ""
  getOperationsEventRecordEntry(id: String, iid: ID, recordId: String): OperationsEventRecordEntry
  ""
  getOperationsMaterialBill(id: String, iid: ID): OperationsMaterialBill
  ""
  getOperationsPerformance(id: String, iid: ID): OperationsPerformance
  ""
  getOperationsRequest(id: String, iid: ID): OperationsRequest
  ""
  getOperationsResponse(id: String, iid: ID): OperationsResponse
  ""
  getOperationsResponseProperty(id: String, iid: ID): OperationsResponseProperty
  ""
  getOperationsSchedule(id: String, iid: ID): OperationsSchedule
  ""
  getOperationsSegment(id: String, iid: ID): OperationsSegment
  ""
  getOperationsSegmentDependency(id: String, iid: ID): OperationsSegmentDependency
  ""
  getParameterSpecification(id: String, iid: ID): ParameterSpecification
  ""
  getPayloadFieldDefinition(iid: ID!): PayloadFieldDefinition
  ""
  getPerson(id: String, iid: ID): Person
  ""
  getPersonProperty(id: String, iid: ID): PersonProperty
  ""
  getPersonVersion(id: String, iid: ID, version: String): PersonVersion
  ""
  getPersonnelActual(id: String, iid: ID): PersonnelActual
  ""
  getPersonnelActualProperty(id: String, iid: ID): PersonnelActualProperty
  ""
  getPersonnelClass(id: String, iid: ID): PersonnelClass
  ""
  getPersonnelClassProperty(id: String, iid: ID): PersonnelClassProperty
  ""
  getPersonnelClassVersion(id: String, iid: ID, version: String): PersonnelClassVersion
  ""
  getPersonnelRequirement(id: String, iid: ID): PersonnelRequirement
  ""
  getPersonnelRequirementProperty(id: String, iid: ID): PersonnelRequirementProperty
  ""
  getPersonnelSpecification(id: String, iid: ID): PersonnelSpecification
  ""
  getPersonnelSpecificationProperty(id: String, iid: ID): PersonnelSpecificationProperty
  ""
  getPhysicalAsset(id: String, iid: ID): PhysicalAsset
  ""
  getPhysicalAssetActual(id: String, iid: ID): PhysicalAssetActual
  ""
  getPhysicalAssetActualProperty(id: String, iid: ID): PhysicalAssetActualProperty
  ""
  getPhysicalAssetClass(id: String, iid: ID): PhysicalAssetClass
  ""
  getPhysicalAssetClassProperty(id: String, iid: ID): PhysicalAssetClassProperty
  ""
  getPhysicalAssetClassVersion(id: String, iid: ID, version: String): PhysicalAssetClassVersion
  ""
  getPhysicalAssetDataSource(iid: ID!): PhysicalAssetDataSource
  ""
  getPhysicalAssetProperty(id: String, iid: ID): PhysicalAssetProperty
  ""
  getPhysicalAssetRequirement(id: String, iid: ID): PhysicalAssetRequirement
  ""
  getPhysicalAssetRequirementProperty(id: String, iid: ID): PhysicalAssetRequirementProperty
  ""
  getPhysicalAssetSpecification(id: String, iid: ID): PhysicalAssetSpecification
  ""
  getPhysicalAssetSpecificationProperty(id: String, iid: ID): PhysicalAssetSpecificationProperty
  ""
  getPhysicalAssetVersion(id: String, iid: ID, version: String): PhysicalAssetVersion
  ""
  getProcessSegment(id: String, iid: ID): ProcessSegment
  ""
  getProcessSegmentDependency(id: String, iid: ID): ProcessSegmentDependency
  ""
  getProcessSegmentParameter(id: String, iid: ID): ProcessSegmentParameter
  ""
  getProcessSegmentVersion(id: String, iid: ID, version: String): ProcessSegmentVersion
  ""
  getPropertyNameAlias(iid: ID!): PropertyNameAlias
  ""
  getPropertyValueAlias(iid: ID!): PropertyValueAlias
  ""
  getSecret(id: String, iid: ID): Secret
  ""
  getSecretVersion(id: String, iid: ID, version: String): SecretVersion
  ""
  getSegmentData(id: String, iid: ID): SegmentData
  ""
  getSegmentParameter(id: String, iid: ID): SegmentParameter
  ""
  getSegmentRequirement(id: String, iid: ID): SegmentRequirement
  ""
  getSegmentResponse(id: String, iid: ID): SegmentResponse
  ""
  getSignature(iid: ID!): Signature
  ""
  getSignatureReason(id: String, iid: ID): SignatureReason
  ""
  getSpatialDefinition(id: String, iid: ID): SpatialDefinition
  ""
  getStateModelProperty(id: String, iid: ID): StateModelProperty
  ""
  getTestSpecification(id: String, iid: ID, key: String): TestSpecification
  ""
  getUnitOfMeasure(id: String, iid: ID): UnitOfMeasure
  ""
  getUnitOfMeasureConversion(iid: ID!): UnitOfMeasureConversion
  ""
  getWorkCalendar(iid: ID, name: String): WorkCalendar
  ""
  getWorkCalendarDefinitionEntry(iid: ID!): WorkCalendarDefinitionEntry
  ""
  getWorkCalendarDefinitionEntryProperty(id: String, iid: ID): WorkCalendarDefinitionEntryProperty
  ""
  getWorkCalendarEntry(iid: ID!): WorkCalendarEntry
  ""
  getWorkCalendarEntryProperty(id: String, iid: ID): WorkCalendarEntryProperty
  ""
  getWorkDirective(id: String, iid: ID, version: String): WorkDirective
  ""
  getWorkMaster(id: String, iid: ID, version: String): WorkMaster
  ""
  getWorkPerformance(id: String, iid: ID): WorkPerformance
  ""
  getWorkRequest(id: String, iid: ID): WorkRequest
  ""
  getWorkResponse(id: String, iid: ID): WorkResponse
  ""
  getWorkSchedule(id: String, iid: ID): WorkSchedule
  ""
  getWorkflowSpecification(id: String, iid: ID): WorkflowSpecification
  ""
  getWorkflowSpecificationConnection(id: String, iid: ID): WorkflowSpecificationConnection
  ""
  getWorkflowSpecificationConnectionProperty(id: String, iid: ID): WorkflowSpecificationConnectionProperty
  ""
  getWorkflowSpecificationConnectionTypeProperty(id: String, iid: ID): WorkflowSpecificationConnectionTypeProperty
  ""
  getWorkflowSpecificationNodeProperty(id: String, iid: ID): WorkflowSpecificationNodeProperty
  ""
  getWorkflowSpecificationNodeTypeProperty(id: String, iid: ID): WorkflowSpecificationNodeTypeProperty
  ""
  getWorkflowSpecificationProperty(id: String, iid: ID): WorkflowSpecificationProperty
  ""
  getWorkflowSpecificationVersion(id: String, iid: ID, version: String): WorkflowSpecificationVersion
  ""
  getWorkflowWaypoint(iid: ID!): WorkflowWaypoint
  ""
  queryAlarmEvent(filter: AlarmEventFilter, first: Int, offset: Int, order: AlarmEventOrder): [AlarmEvent]
  ""
  queryComment(filter: CommentFilter, first: Int, offset: Int, order: CommentOrder): [Comment]
  ""
  queryDataSource(filter: DataSourceFilter, first: Int, offset: Int, order: DataSourceOrder): [DataSource]
  ""
  queryDataSourceMethod(filter: DataSourceMethodFilter, first: Int, offset: Int, order: DataSourceMethodOrder): [DataSourceMethod]
  ""
  queryDataSourceMethodArgument(filter: DataSourceMethodArgumentFilter, first: Int, offset: Int, order: DataSourceMethodArgumentOrder): [DataSourceMethodArgument]
  ""
  queryDataSourceTopic(filter: DataSourceTopicFilter, first: Int, offset: Int, order: DataSourceTopicOrder): [DataSourceTopic]
  ""
  queryDataSourceVersion(filter: DataSourceVersionFilter, first: Int, offset: Int, order: DataSourceVersionOrder): [DataSourceVersion]
  ""
  queryDataSubscription(filter: DataSubscriptionFilter, first: Int, offset: Int, order: DataSubscriptionOrder): [DataSubscription]
  ""
  queryEnvironmentalVariable(filter: EnvironmentalVariableFilter, first: Int, offset: Int, order: EnvironmentalVariableOrder): [EnvironmentalVariable]
  ""
  queryEnvironmentalVariableVersion(filter: EnvironmentalVariableVersionFilter, first: Int, offset: Int, order: EnvironmentalVariableVersionOrder): [EnvironmentalVariableVersion]
  ""
  queryEquipment(filter: EquipmentFilter, first: Int, offset: Int, order: EquipmentOrder): [Equipment]
  ""
  queryEquipmentActual(filter: EquipmentActualFilter, first: Int, offset: Int, order: EquipmentActualOrder): [EquipmentActual]
  ""
  queryEquipmentActualProperty(filter: EquipmentActualPropertyFilter, first: Int, offset: Int, order: EquipmentActualPropertyOrder): [EquipmentActualProperty]
  ""
  queryEquipmentAssetMapping(filter: EquipmentAssetMappingFilter, first: Int, offset: Int, order: EquipmentAssetMappingOrder): [EquipmentAssetMapping]
  ""
  queryEquipmentClass(filter: EquipmentClassFilter, first: Int, offset: Int, order: EquipmentClassOrder): [EquipmentClass]
  ""
  queryEquipmentClassProperty(filter: EquipmentClassPropertyFilter, first: Int, offset: Int, order: EquipmentClassPropertyOrder): [EquipmentClassProperty]
  ""
  queryEquipmentClassVersion(filter: EquipmentClassVersionFilter, first: Int, offset: Int, order: EquipmentClassVersionOrder): [EquipmentClassVersion]
  ""
  queryEquipmentDataSource(filter: EquipmentDataSourceFilter, first: Int, offset: Int, order: EquipmentDataSourceOrder): [EquipmentDataSource]
  ""
  queryEquipmentNameAlias(filter: EquipmentNameAliasFilter, first: Int, offset: Int, order: EquipmentNameAliasOrder): [EquipmentNameAlias]
  ""
  queryEquipmentProperty(filter: EquipmentPropertyFilter, first: Int, offset: Int, order: EquipmentPropertyOrder): [EquipmentProperty]
  ""
  queryEquipmentPropertyOverride(filter: EquipmentPropertyOverrideFilter, first: Int, offset: Int, order: EquipmentPropertyOverrideOrder): [EquipmentPropertyOverride]
  ""
  queryEquipmentRequirement(filter: EquipmentRequirementFilter, first: Int, offset: Int, order: EquipmentRequirementOrder): [EquipmentRequirement]
  ""
  queryEquipmentRequirementProperty(filter: EquipmentRequirementPropertyFilter, first: Int, offset: Int, order: EquipmentRequirementPropertyOrder): [EquipmentRequirementProperty]
  ""
  queryEquipmentSpecification(filter: EquipmentSpecificationFilter, first: Int, offset: Int, order: EquipmentSpecificationOrder): [EquipmentSpecification]
  ""
  queryEquipmentSpecificationProperty(filter: EquipmentSpecificationPropertyFilter, first: Int, offset: Int, order: EquipmentSpecificationPropertyOrder): [EquipmentSpecificationProperty]
  ""
  queryEquipmentVersion(filter: EquipmentVersionFilter, first: Int, offset: Int, order: EquipmentVersionOrder): [EquipmentVersion]
  ""
  queryEvent(filter: EventFilter, first: Int, offset: Int, order: EventOrder): [Event]
  ""
  queryEventAssociation(filter: EventAssociationFilter, first: Int, offset: Int, order: EventAssociationOrder): [EventAssociation]
  ""
  queryEventProperty(filter: EventPropertyFilter, first: Int, offset: Int, order: EventPropertyOrder): [EventProperty]
  ""
  queryEventSubtype(filter: EventSubtypeFilter, first: Int, offset: Int, order: EventSubtypeOrder): [EventSubtype]
  ""
  queryEventType(filter: EventTypeFilter, first: Int, offset: Int, order: EventTypeOrder): [EventType]
  ""
  queryForm(filter: FormFilter, first: Int, offset: Int, order: FormOrder): [Form]
  ""
  queryHierarchyScope(filter: HierarchyScopeFilter, first: Int, offset: Int, order: HierarchyScopeOrder): [HierarchyScope]
  ""
  queryInformationObject(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  queryJobList(filter: JobListFilter, first: Int, offset: Int, order: JobListOrder): [JobList]
  ""
  queryJobOrder(filter: JobOrderFilter, first: Int, offset: Int, order: JobOrderOrder): [JobOrder]
  ""
  queryJobOrderParameter(filter: JobOrderParameterFilter, first: Int, offset: Int, order: JobOrderParameterOrder): [JobOrderParameter]
  ""
  queryJobResponse(filter: JobResponseFilter, first: Int, offset: Int, order: JobResponseOrder): [JobResponse]
  ""
  queryJobResponseData(filter: JobResponseDataFilter, first: Int, offset: Int, order: JobResponseDataOrder): [JobResponseData]
  ""
  queryJobResponseList(filter: JobResponseListFilter, first: Int, offset: Int, order: JobResponseListOrder): [JobResponseList]
  ""
  queryLibreService(filter: LibreServiceFilter, first: Int, offset: Int, order: LibreServiceOrder): [LibreService]
  ""
  queryMaterialActual(filter: MaterialActualFilter, first: Int, offset: Int, order: MaterialActualOrder): [MaterialActual]
  ""
  queryMaterialActualProperty(filter: MaterialActualPropertyFilter, first: Int, offset: Int, order: MaterialActualPropertyOrder): [MaterialActualProperty]
  ""
  queryMaterialClass(filter: MaterialClassFilter, first: Int, offset: Int, order: MaterialClassOrder): [MaterialClass]
  ""
  queryMaterialClassProperty(filter: MaterialClassPropertyFilter, first: Int, offset: Int, order: MaterialClassPropertyOrder): [MaterialClassProperty]
  ""
  queryMaterialClassVersion(filter: MaterialClassVersionFilter, first: Int, offset: Int, order: MaterialClassVersionOrder): [MaterialClassVersion]
  ""
  queryMaterialDefinition(filter: MaterialDefinitionFilter, first: Int, offset: Int, order: MaterialDefinitionOrder): [MaterialDefinition]
  ""
  queryMaterialDefinitionProperty(filter: MaterialDefinitionPropertyFilter, first: Int, offset: Int, order: MaterialDefinitionPropertyOrder): [MaterialDefinitionProperty]
  ""
  queryMaterialDefinitionVersion(filter: MaterialDefinitionVersionFilter, first: Int, offset: Int, order: MaterialDefinitionVersionOrder): [MaterialDefinitionVersion]
  ""
  queryMaterialLot(filter: MaterialLotFilter, first: Int, offset: Int, order: MaterialLotOrder): [MaterialLot]
  ""
  queryMaterialLotProperty(filter: MaterialLotPropertyFilter, first: Int, offset: Int, order: MaterialLotPropertyOrder): [MaterialLotProperty]
  ""
  queryMaterialRequirement(filter: MaterialRequirementFilter, first: Int, offset: Int, order: MaterialRequirementOrder): [MaterialRequirement]
  ""
  queryMaterialRequirementProperty(filter: MaterialRequirementPropertyFilter, first: Int, offset: Int, order: MaterialRequirementPropertyOrder): [MaterialRequirementProperty]
  ""
  queryMaterialSpecification(filter: MaterialSpecificationFilter, first: Int, offset: Int, order: MaterialSpecificationOrder): [MaterialSpecification]
  ""
  queryMaterialSpecificationProperty(filter: MaterialSpecificationPropertyFilter, first: Int, offset: Int, order: MaterialSpecificationPropertyOrder): [MaterialSpecificationProperty]
  ""
  queryMaterialSubLot(filter: MaterialSubLotFilter, first: Int, offset: Int, order: MaterialSubLotOrder): [MaterialSubLot]
  ""
  queryOperationalLocation(filter: OperationalLocationFilter, first: Int, offset: Int, order: OperationalLocationOrder): [OperationalLocation]
  ""
  queryOperationalLocationClass(filter: OperationalLocationClassFilter, first: Int, offset: Int, order: OperationalLocationClassOrder): [OperationalLocationClass]
  ""
  queryOperationalLocationClassProperty(filter: OperationalLocationClassPropertyFilter, first: Int, offset: Int, order: OperationalLocationClassPropertyOrder): [OperationalLocationClassProperty]
  ""
  queryOperationalLocationClassVersion(filter: OperationalLocationClassVersionFilter, first: Int, offset: Int, order: OperationalLocationClassVersionOrder): [OperationalLocationClassVersion]
  ""
  queryOperationalLocationProperty(filter: OperationalLocationPropertyFilter, first: Int, offset: Int, order: OperationalLocationPropertyOrder): [OperationalLocationProperty]
  ""
  queryOperationsDefinition(filter: OperationsDefinitionFilter, first: Int, offset: Int, order: OperationsDefinitionOrder): [OperationsDefinition]
  ""
  queryOperationsDefinitionVersion(filter: OperationsDefinitionVersionFilter, first: Int, offset: Int, order: OperationsDefinitionVersionOrder): [OperationsDefinitionVersion]
  ""
  queryOperationsEvent(filter: OperationsEventFilter, first: Int, offset: Int, order: OperationsEventOrder): [OperationsEvent]
  ""
  queryOperationsEventClass(filter: OperationsEventClassFilter, first: Int, offset: Int, order: OperationsEventClassOrder): [OperationsEventClass]
  ""
  queryOperationsEventClassProperty(filter: OperationsEventClassPropertyFilter, first: Int, offset: Int, order: OperationsEventClassPropertyOrder): [OperationsEventClassProperty]
  ""
  queryOperationsEventClassRecordSpecification(filter: OperationsEventClassRecordSpecificationFilter, first: Int, offset: Int, order: OperationsEventClassRecordSpecificationOrder): [OperationsEventClassRecordSpecification]
  ""
  queryOperationsEventClassVersion(filter: OperationsEventClassVersionFilter, first: Int, offset: Int, order: OperationsEventClassVersionOrder): [OperationsEventClassVersion]
  ""
  queryOperationsEventDefinition(filter: OperationsEventDefinitionFilter, first: Int, offset: Int, order: OperationsEventDefinitionOrder): [OperationsEventDefinition]
  ""
  queryOperationsEventDefinitionProperty(filter: OperationsEventDefinitionPropertyFilter, first: Int, offset: Int, order: OperationsEventDefinitionPropertyOrder): [OperationsEventDefinitionProperty]
  ""
  queryOperationsEventDefinitionRecordSpecification(filter: OperationsEventDefinitionRecordSpecificationFilter, first: Int, offset: Int, order: OperationsEventDefinitionRecordSpecificationOrder): [OperationsEventDefinitionRecordSpecification]
  ""
  queryOperationsEventDefinitionVersion(filter: OperationsEventDefinitionVersionFilter, first: Int, offset: Int, order: OperationsEventDefinitionVersionOrder): [OperationsEventDefinitionVersion]
  ""
  queryOperationsEventProperty(filter: OperationsEventPropertyFilter, first: Int, offset: Int, order: OperationsEventPropertyOrder): [OperationsEventProperty]
  ""
  queryOperationsEventRecord(filter: OperationsEventRecordFilter, first: Int, offset: Int, order: OperationsEventRecordOrder): [OperationsEventRecord]
  ""
  queryOperationsEventRecordEntry(filter: OperationsEventRecordEntryFilter, first: Int, offset: Int, order: OperationsEventRecordEntryOrder): [OperationsEventRecordEntry]
  ""
  queryOperationsMaterialBill(filter: OperationsMaterialBillFilter, first: Int, offset: Int, order: OperationsMaterialBillOrder): [OperationsMaterialBill]
  ""
  queryOperationsPerformance(filter: OperationsPerformanceFilter, first: Int, offset: Int, order: OperationsPerformanceOrder): [OperationsPerformance]
  ""
  queryOperationsRequest(filter: OperationsRequestFilter, first: Int, offset: Int, order: OperationsRequestOrder): [OperationsRequest]
  ""
  queryOperationsResponse(filter: OperationsResponseFilter, first: Int, offset: Int, order: OperationsResponseOrder): [OperationsResponse]
  ""
  queryOperationsResponseProperty(filter: OperationsResponsePropertyFilter, first: Int, offset: Int, order: OperationsResponsePropertyOrder): [OperationsResponseProperty]
  ""
  queryOperationsSchedule(filter: OperationsScheduleFilter, first: Int, offset: Int, order: OperationsScheduleOrder): [OperationsSchedule]
  ""
  queryOperationsSegment(filter: OperationsSegmentFilter, first: Int, offset: Int, order: OperationsSegmentOrder): [OperationsSegment]
  ""
  queryOperationsSegmentDependency(filter: OperationsSegmentDependencyFilter, first: Int, offset: Int, order: OperationsSegmentDependencyOrder): [OperationsSegmentDependency]
  ""
  queryParameterSpecification(filter: ParameterSpecificationFilter, first: Int, offset: Int, order: ParameterSpecificationOrder): [ParameterSpecification]
  ""
  queryPayloadFieldDefinition(filter: PayloadFieldDefinitionFilter, first: Int, offset: Int, order: PayloadFieldDefinitionOrder): [PayloadFieldDefinition]
  ""
  queryPerson(filter: PersonFilter, first: Int, offset: Int, order: PersonOrder): [Person]
  ""
  queryPersonProperty(filter: PersonPropertyFilter, first: Int, offset: Int, order: PersonPropertyOrder): [PersonProperty]
  ""
  queryPersonVersion(filter: PersonVersionFilter, first: Int, offset: Int, order: PersonVersionOrder): [PersonVersion]
  ""
  queryPersonnelActual(filter: PersonnelActualFilter, first: Int, offset: Int, order: PersonnelActualOrder): [PersonnelActual]
  ""
  queryPersonnelActualProperty(filter: PersonnelActualPropertyFilter, first: Int, offset: Int, order: PersonnelActualPropertyOrder): [PersonnelActualProperty]
  ""
  queryPersonnelClass(filter: PersonnelClassFilter, first: Int, offset: Int, order: PersonnelClassOrder): [PersonnelClass]
  ""
  queryPersonnelClassProperty(filter: PersonnelClassPropertyFilter, first: Int, offset: Int, order: PersonnelClassPropertyOrder): [PersonnelClassProperty]
  ""
  queryPersonnelClassVersion(filter: PersonnelClassVersionFilter, first: Int, offset: Int, order: PersonnelClassVersionOrder): [PersonnelClassVersion]
  ""
  queryPersonnelRequirement(filter: PersonnelRequirementFilter, first: Int, offset: Int, order: PersonnelRequirementOrder): [PersonnelRequirement]
  ""
  queryPersonnelRequirementProperty(filter: PersonnelRequirementPropertyFilter, first: Int, offset: Int, order: PersonnelRequirementPropertyOrder): [PersonnelRequirementProperty]
  ""
  queryPersonnelSpecification(filter: PersonnelSpecificationFilter, first: Int, offset: Int, order: PersonnelSpecificationOrder): [PersonnelSpecification]
  ""
  queryPersonnelSpecificationProperty(filter: PersonnelSpecificationPropertyFilter, first: Int, offset: Int, order: PersonnelSpecificationPropertyOrder): [PersonnelSpecificationProperty]
  ""
  queryPhysicalAsset(filter: PhysicalAssetFilter, first: Int, offset: Int, order: PhysicalAssetOrder): [PhysicalAsset]
  ""
  queryPhysicalAssetActual(filter: PhysicalAssetActualFilter, first: Int, offset: Int, order: PhysicalAssetActualOrder): [PhysicalAssetActual]
  ""
  queryPhysicalAssetActualProperty(filter: PhysicalAssetActualPropertyFilter, first: Int, offset: Int, order: PhysicalAssetActualPropertyOrder): [PhysicalAssetActualProperty]
  ""
  queryPhysicalAssetClass(filter: PhysicalAssetClassFilter, first: Int, offset: Int, order: PhysicalAssetClassOrder): [PhysicalAssetClass]
  ""
  queryPhysicalAssetClassProperty(filter: PhysicalAssetClassPropertyFilter, first: Int, offset: Int, order: PhysicalAssetClassPropertyOrder): [PhysicalAssetClassProperty]
  ""
  queryPhysicalAssetClassVersion(filter: PhysicalAssetClassVersionFilter, first: Int, offset: Int, order: PhysicalAssetClassVersionOrder): [PhysicalAssetClassVersion]
  ""
  queryPhysicalAssetDataSource(filter: PhysicalAssetDataSourceFilter, first: Int, offset: Int, order: PhysicalAssetDataSourceOrder): [PhysicalAssetDataSource]
  ""
  queryPhysicalAssetProperty(filter: PhysicalAssetPropertyFilter, first: Int, offset: Int, order: PhysicalAssetPropertyOrder): [PhysicalAssetProperty]
  ""
  queryPhysicalAssetRequirement(filter: PhysicalAssetRequirementFilter, first: Int, offset: Int, order: PhysicalAssetRequirementOrder): [PhysicalAssetRequirement]
  ""
  queryPhysicalAssetRequirementProperty(filter: PhysicalAssetRequirementPropertyFilter, first: Int, offset: Int, order: PhysicalAssetRequirementPropertyOrder): [PhysicalAssetRequirementProperty]
  ""
  queryPhysicalAssetSpecification(filter: PhysicalAssetSpecificationFilter, first: Int, offset: Int, order: PhysicalAssetSpecificationOrder): [PhysicalAssetSpecification]
  ""
  queryPhysicalAssetSpecificationProperty(filter: PhysicalAssetSpecificationPropertyFilter, first: Int, offset: Int, order: PhysicalAssetSpecificationPropertyOrder): [PhysicalAssetSpecificationProperty]
  ""
  queryPhysicalAssetVersion(filter: PhysicalAssetVersionFilter, first: Int, offset: Int, order: PhysicalAssetVersionOrder): [PhysicalAssetVersion]
  ""
  queryProcessSegment(filter: ProcessSegmentFilter, first: Int, offset: Int, order: ProcessSegmentOrder): [ProcessSegment]
  ""
  queryProcessSegmentDependency(filter: ProcessSegmentDependencyFilter, first: Int, offset: Int, order: ProcessSegmentDependencyOrder): [ProcessSegmentDependency]
  ""
  queryProcessSegmentParameter(filter: ProcessSegmentParameterFilter, first: Int, offset: Int, order: ProcessSegmentParameterOrder): [ProcessSegmentParameter]
  ""
  queryProcessSegmentVersion(filter: ProcessSegmentVersionFilter, first: Int, offset: Int, order: ProcessSegmentVersionOrder): [ProcessSegmentVersion]
  ""
  queryPropertyNameAlias(filter: PropertyNameAliasFilter, first: Int, offset: Int, order: PropertyNameAliasOrder): [PropertyNameAlias]
  ""
  queryPropertyValueAlias(filter: PropertyValueAliasFilter, first: Int, offset: Int, order: PropertyValueAliasOrder): [PropertyValueAlias]
  ""
  querySecret(filter: SecretFilter, first: Int, offset: Int, order: SecretOrder): [Secret]
  ""
  querySecretVersion(filter: SecretVersionFilter, first: Int, offset: Int, order: SecretVersionOrder): [SecretVersion]
  ""
  querySegmentData(filter: SegmentDataFilter, first: Int, offset: Int, order: SegmentDataOrder): [SegmentData]
  ""
  querySegmentParameter(filter: SegmentParameterFilter, first: Int, offset: Int, order: SegmentParameterOrder): [SegmentParameter]
  ""
  querySegmentRequirement(filter: SegmentRequirementFilter, first: Int, offset: Int, order: SegmentRequirementOrder): [SegmentRequirement]
  ""
  querySegmentResponse(filter: SegmentResponseFilter, first: Int, offset: Int, order: SegmentResponseOrder): [SegmentResponse]
  ""
  querySignature(filter: SignatureFilter, first: Int, offset: Int, order: SignatureOrder): [Signature]
  ""
  querySignatureReason(filter: SignatureReasonFilter, first: Int, offset: Int, order: SignatureReasonOrder): [SignatureReason]
  ""
  querySpatialDefinition(filter: SpatialDefinitionFilter, first: Int, offset: Int, order: SpatialDefinitionOrder): [SpatialDefinition]
  ""
  queryStateModelProperty(filter: StateModelPropertyFilter, first: Int, offset: Int, order: StateModelPropertyOrder): [StateModelProperty]
  ""
  queryTestSpecification(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  queryUnitOfMeasure(filter: UnitOfMeasureFilter, first: Int, offset: Int, order: UnitOfMeasureOrder): [UnitOfMeasure]
  ""
  queryUnitOfMeasureConversion(filter: UnitOfMeasureConversionFilter, first: Int, offset: Int, order: UnitOfMeasureConversionOrder): [UnitOfMeasureConversion]
  ""
  queryWorkCalendar(filter: WorkCalendarFilter, first: Int, offset: Int, order: WorkCalendarOrder): [WorkCalendar]
  ""
  queryWorkCalendarDefinitionEntry(filter: WorkCalendarDefinitionEntryFilter, first: Int, offset: Int, order: WorkCalendarDefinitionEntryOrder): [WorkCalendarDefinitionEntry]
  ""
  queryWorkCalendarDefinitionEntryProperty(filter: WorkCalendarDefinitionEntryPropertyFilter, first: Int, offset: Int, order: WorkCalendarDefinitionEntryPropertyOrder): [WorkCalendarDefinitionEntryProperty]
  ""
  queryWorkCalendarEntry(filter: WorkCalendarEntryFilter, first: Int, offset: Int, order: WorkCalendarEntryOrder): [WorkCalendarEntry]
  ""
  queryWorkCalendarEntryProperty(filter: WorkCalendarEntryPropertyFilter, first: Int, offset: Int, order: WorkCalendarEntryPropertyOrder): [WorkCalendarEntryProperty]
  ""
  queryWorkDirective(filter: WorkDirectiveFilter, first: Int, offset: Int, order: WorkDirectiveOrder): [WorkDirective]
  ""
  queryWorkMaster(filter: WorkMasterFilter, first: Int, offset: Int, order: WorkMasterOrder): [WorkMaster]
  ""
  queryWorkPerformance(filter: WorkPerformanceFilter, first: Int, offset: Int, order: WorkPerformanceOrder): [WorkPerformance]
  ""
  queryWorkRequest(filter: WorkRequestFilter, first: Int, offset: Int, order: WorkRequestOrder): [WorkRequest]
  ""
  queryWorkResponse(filter: WorkResponseFilter, first: Int, offset: Int, order: WorkResponseOrder): [WorkResponse]
  ""
  queryWorkSchedule(filter: WorkScheduleFilter, first: Int, offset: Int, order: WorkScheduleOrder): [WorkSchedule]
  ""
  queryWorkflowSpecification(filter: WorkflowSpecificationFilter, first: Int, offset: Int, order: WorkflowSpecificationOrder): [WorkflowSpecification]
  ""
  queryWorkflowSpecificationConnection(filter: WorkflowSpecificationConnectionFilter, first: Int, offset: Int, order: WorkflowSpecificationConnectionOrder): [WorkflowSpecificationConnection]
  ""
  queryWorkflowSpecificationConnectionProperty(filter: WorkflowSpecificationConnectionPropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationConnectionPropertyOrder): [WorkflowSpecificationConnectionProperty]
  ""
  queryWorkflowSpecificationConnectionTypeProperty(filter: WorkflowSpecificationConnectionTypePropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationConnectionTypePropertyOrder): [WorkflowSpecificationConnectionTypeProperty]
  ""
  queryWorkflowSpecificationNodeProperty(filter: WorkflowSpecificationNodePropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationNodePropertyOrder): [WorkflowSpecificationNodeProperty]
  ""
  queryWorkflowSpecificationNodeTypeProperty(filter: WorkflowSpecificationNodeTypePropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeTypePropertyOrder): [WorkflowSpecificationNodeTypeProperty]
  ""
  queryWorkflowSpecificationProperty(filter: WorkflowSpecificationPropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationPropertyOrder): [WorkflowSpecificationProperty]
  ""
  queryWorkflowSpecificationVersion(filter: WorkflowSpecificationVersionFilter, first: Int, offset: Int, order: WorkflowSpecificationVersionOrder): [WorkflowSpecificationVersion]
  ""
  queryWorkflowWaypoint(filter: WorkflowWaypointFilter, first: Int, offset: Int, order: WorkflowWaypointOrder): [WorkflowWaypoint]
}
"""
The results from the test evaluation of property measurement of the testable object property of the 
testable object per the test specifications shall be presented as test results. A test result reports 
the measured results and evaluation of test specification criteria from a test for a specific person, 
piece of equipment, physical asset, material lot or material sublot.
"""
type TestResult {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " The child test result(s) of this test result. "
  children(filter: TestResultFilter, first: Int, offset: Int, order: TestResultOrder): [TestResult]
  ""
  childrenAggregate(filter: TestResultFilter): TestResultAggregateResult
  " Additional information about the test result. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The Equipment object recorded by this test result. "
  equipment(filter: EquipmentFilter): Equipment
  " The EquipmentActual reports this test result in a segment response or job response. "
  equipmentActual(filter: EquipmentActualFilter): EquipmentActual
  " The EquipmentClass object recorded by this test result. "
  equipmentClass(filter: EquipmentClassFilter): EquipmentClass
  " The EquipmentRequirement object applied to execute the test and generate the test result. "
  equipmentRequirement(filter: EquipmentRequirementFilter): EquipmentRequirement
  " The EquipmentSpecification object applied to execute the test and generate the test result. "
  equipmentSpecification(filter: EquipmentSpecificationFilter): EquipmentSpecification
  " Result obtained from evaluation of the associated test specification criteria. "
  evaluationCriterionResult: String
  " Date and time of evaluation of the test result. "
  evaluationDate: DateTime
  " Date of the expiration of the test result criteria. "
  expiration: DateTime
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " An identification of the specific test result. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The MaterialActual reports this test result in a segment response or job response. "
  materialActual(filter: MaterialActualFilter): MaterialActual
  " The MaterialClass object recorded by this test result. "
  materialClass(filter: MaterialClassFilter): MaterialClass
  " The MaterialDefinition object recorded by this test result. "
  materialDefinition(filter: MaterialDefinitionFilter): MaterialDefinition
  " The MaterialLot object recorded by this test result. "
  materialLot(filter: MaterialLotFilter): MaterialLot
  " The MaterialRequirement object applied to execute the test and generate the test result. "
  materialRequirement(filter: MaterialRequirementFilter): MaterialRequirement
  " The MaterialSpecification object applied to execute the test and generate the test result. "
  materialSpecification(filter: MaterialSpecificationFilter): MaterialSpecification
  " The MaterialSubLot object recorded by this test result. "
  materialSubLot(filter: MaterialSubLotFilter): MaterialSubLot
  " The parent test result of this test result. "
  parent(filter: TestResultFilter): TestResult
  " The Person object recorded by this test result. "
  person(filter: PersonFilter): Person
  " The PersonnelActual reports this test result in a segment response or job response. "
  personnelActual(filter: PersonnelActualFilter): PersonnelActual
  " The PersonnelClass object recorded by this test result. "
  personnelClass(filter: PersonnelClassFilter): PersonnelClass
  " The PersonnelRequirement object applied to execute the test and generate the test result. "
  personnelRequirement(filter: PersonnelRequirementFilter): PersonnelRequirement
  " The PersonnelSpecification object applied to execute the test and generate the test result. "
  personnelSpecification(filter: PersonnelSpecificationFilter): PersonnelSpecification
  " The PhysicalAsset object recorded by this test result. "
  physicalAsset(filter: PhysicalAssetFilter): PhysicalAsset
  " The PhysicalAssetActual reports this test result in a segment response or job response. "
  physicalAssetActual(filter: PhysicalAssetActualFilter): PhysicalAssetActual
  " The PhysicalAssetClass object recorded by this test result. "
  physicalAssetClass(filter: PhysicalAssetClassFilter): PhysicalAssetClass
  " The PhysicalAssetRequirement object applied to execute the test and generate the test result. "
  physicalAssetRequirement(filter: PhysicalAssetRequirementFilter): PhysicalAssetRequirement
  " The measurement obtained for each testable object property. "
  propertyMeasurements(filter: PropertyMeasurementFilter, first: Int, offset: Int, order: PropertyMeasurementOrder): [PropertyMeasurement]
  ""
  propertyMeasurementsAggregate(filter: PropertyMeasurementFilter): PropertyMeasurementAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
}
""
type TestResultAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  evaluationCriterionResultMax: String
  ""
  evaluationCriterionResultMin: String
  ""
  evaluationDateMax: DateTime
  ""
  evaluationDateMin: DateTime
  ""
  expirationMax: DateTime
  ""
  expirationMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
}
"""
The test specification details the test specification criteria and the tested evaluated property(s) required 
for a testable object to match the quality or performance requirements of the business or particular customers.

A test specification may contain other test specifications to form a hierarchy of test specifications. When 
a hierarchy of test specifications are used, the result of the parent object in the hierarchy shall be the 
worst-case result of all the respective child object results.
"""
type TestSpecification {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " The child test specification(s) of this test specification. "
  children(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
  ""
  childrenAggregate(filter: TestSpecificationFilter): TestSpecificationAggregateResult
  """
  The test specification criteria which is to be applied to determine the test outcome upon evaluation 
  of the test specification. 
  """
  criteria(filter: TestSpecificationCriteriaFilter, first: Int, offset: Int, order: TestSpecificationCriteriaOrder): [TestSpecificationCriteria]
  ""
  criteriaAggregate(filter: TestSpecificationCriteriaFilter): TestSpecificationCriteriaAggregateResult
  " A description of the test specification. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The evaluated property(s) measured and evaluated by this test specification. "
  evaluatedProperties(filter: EvaluatedPropertyFilter, first: Int, offset: Int, order: EvaluatedPropertyOrder): [EvaluatedProperty]
  ""
  evaluatedPropertiesAggregate(filter: EvaluatedPropertyFilter): EvaluatedPropertyAggregateResult
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " An identification of a test for certifying one or more values. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  """
  A named unique instance of the entity. Note that this attribute is subject to change, based on 
  the implementation timeline of composite keys within dgraph.
  """
  key: String!
  " The label is last node in the fully qualified name. "
  label: String!
  " The parent test specification of this test specification. "
  parent(filter: TestSpecificationFilter): TestSpecification
  " Defines whether physical sampling is required to perform the test. "
  physicalSample: Boolean
  " The test specification property values of this test specification. "
  properties(filter: TestSpecificationPropertyFilter, first: Int, offset: Int, order: TestSpecificationPropertyOrder): [TestSpecificationProperty]
  ""
  propertiesAggregate(filter: TestSpecificationPropertyFilter): TestSpecificationPropertyAggregateResult
  " The date and time on which the test specification was published or generated. "
  publishedDate: DateTime
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " The amount of operations activity required between samples. "
  recurrenceQuantity: String
  " The duration of operational activity required between samples. "
  recurrenceTimeInterval: String
  " This test specification(s) is used to evaluate the Equipment object. "
  requiredByEquipment(filter: EquipmentFilter): Equipment
  " This test specification(s) is used to evaluate the EquipmentClass object. "
  requiredByEquipmentClass(filter: EquipmentClassFilter): EquipmentClass
  " This test specification(s) is used to evaluate the EquipmentRequirement. "
  requiredByEquipmentRequirement(filter: EquipmentRequirementFilter): EquipmentRequirement
  " This test specification(s) is used to evaluate the EquipmentSpecification. "
  requiredByEquipmentSpecification(filter: EquipmentSpecificationFilter): EquipmentSpecification
  " This test specification(s) is used to evaluate the MaterialClass object. "
  requiredByMaterialClass(filter: MaterialClassFilter): MaterialClass
  " This test specification(s) is used to evaluate the MaterialDefinition object. "
  requiredByMaterialDefinition(filter: MaterialDefinitionFilter): MaterialDefinition
  " This test specification(s) is used to evaluate the MaterialLot object. "
  requiredByMaterialLot(filter: MaterialLotFilter): MaterialLot
  " This test specification(s) is used to evaluate the MaterialRequirement. "
  requiredByMaterialRequirement(filter: MaterialRequirementFilter): MaterialRequirement
  " This test specification(s) is used to evaluate the MaterialSpecification. "
  requiredByMaterialSpecification(filter: MaterialSpecificationFilter): MaterialSpecification
  " This test specification(s) is used to evaluate the MaterialSubLot object. "
  requiredByMaterialSubLot(filter: MaterialSubLotFilter): MaterialSubLot
  " This test specification(s) is used to evaluate the Person object. "
  requiredByPerson(filter: PersonFilter): Person
  " This test specification(s) is used to evaluate the PersonnelClass object. "
  requiredByPersonnelClass(filter: PersonnelClassFilter): PersonnelClass
  " This test specification(s) is used to evaluate the PersonnelRequirement. "
  requiredByPersonnelRequirement(filter: PersonnelRequirementFilter): PersonnelRequirement
  " This test specification(s) is used to evaluate the PersonnelSpecification. "
  requiredByPersonnelSpecification(filter: PersonnelSpecificationFilter): PersonnelSpecification
  " This test specification(s) is used to evaluate the PhysicalAsset object. "
  requiredByPhysicalAsset(filter: PhysicalAssetFilter): PhysicalAsset
  " This test specification(s) is used to evaluate the PhysicalAssetClass object. "
  requiredByPhysicalAssetClass(filter: PhysicalAssetClassFilter): PhysicalAssetClass
  " This test specification(s) is used to evaluate the PhysicalAssetRequirement. "
  requiredByPhysicalAssetRequirement(filter: PhysicalAssetRequirementFilter): PhysicalAssetRequirement
  " Sample size required to perform the test. "
  testSampleSize: String
  " The ID of the Equipment object tested by this test specification. "
  testsEquipment(filter: EquipmentFilter, first: Int, offset: Int, order: EquipmentOrder): [Equipment]
  ""
  testsEquipmentAggregate(filter: EquipmentFilter): EquipmentAggregateResult
  " The ID of the EquipmentClass object tested by this test specification. "
  testsEquipmentClass(filter: EquipmentClassFilter, first: Int, offset: Int, order: EquipmentClassOrder): [EquipmentClass]
  ""
  testsEquipmentClassAggregate(filter: EquipmentClassFilter): EquipmentClassAggregateResult
  " The EquipmentRequirement ID(s) evaluated by this test specification. "
  testsEquipmentRequirements(filter: EquipmentRequirementFilter, first: Int, offset: Int, order: EquipmentRequirementOrder): [EquipmentRequirement]
  ""
  testsEquipmentRequirementsAggregate(filter: EquipmentRequirementFilter): EquipmentRequirementAggregateResult
  " The EquipmentSpecification ID(s) evaluated by this test specification. "
  testsEquipmentSpecifications(filter: EquipmentSpecificationFilter, first: Int, offset: Int, order: EquipmentSpecificationOrder): [EquipmentSpecification]
  ""
  testsEquipmentSpecificationsAggregate(filter: EquipmentSpecificationFilter): EquipmentSpecificationAggregateResult
  " The ID of the MaterialClass object tested by this test specification. "
  testsMaterialClass(filter: MaterialClassFilter, first: Int, offset: Int, order: MaterialClassOrder): [MaterialClass]
  ""
  testsMaterialClassAggregate(filter: MaterialClassFilter): MaterialClassAggregateResult
  " The ID of the MaterialDefinition object tested by this test specification. "
  testsMaterialDefinition(filter: MaterialDefinitionFilter, first: Int, offset: Int, order: MaterialDefinitionOrder): [MaterialDefinition]
  ""
  testsMaterialDefinitionAggregate(filter: MaterialDefinitionFilter): MaterialDefinitionAggregateResult
  " The ID of the MaterialLot object tested by this test specification. "
  testsMaterialLot(filter: MaterialLotFilter, first: Int, offset: Int, order: MaterialLotOrder): [MaterialLot]
  ""
  testsMaterialLotAggregate(filter: MaterialLotFilter): MaterialLotAggregateResult
  " The MaterialRequirement ID(s) evaluated by this test specification. "
  testsMaterialRequirements(filter: MaterialRequirementFilter, first: Int, offset: Int, order: MaterialRequirementOrder): [MaterialRequirement]
  ""
  testsMaterialRequirementsAggregate(filter: MaterialRequirementFilter): MaterialRequirementAggregateResult
  " The MaterialSpecification ID(s) evaluated by this test specification. "
  testsMaterialSpecifications(filter: MaterialSpecificationFilter, first: Int, offset: Int, order: MaterialSpecificationOrder): [MaterialSpecification]
  ""
  testsMaterialSpecificationsAggregate(filter: MaterialSpecificationFilter): MaterialSpecificationAggregateResult
  " The ID of the MaterialSubLot object tested by this test specification. "
  testsMaterialSubLot(filter: MaterialSubLotFilter, first: Int, offset: Int, order: MaterialSubLotOrder): [MaterialSubLot]
  ""
  testsMaterialSubLotAggregate(filter: MaterialSubLotFilter): MaterialSubLotAggregateResult
  " The ID of the Person object tested by this test specification. "
  testsPerson(filter: PersonFilter, first: Int, offset: Int, order: PersonOrder): [Person]
  ""
  testsPersonAggregate(filter: PersonFilter): PersonAggregateResult
  " The ID of the PersonnelClass object tested by this test specification. "
  testsPersonnelClass(filter: PersonnelClassFilter, first: Int, offset: Int, order: PersonnelClassOrder): [PersonnelClass]
  ""
  testsPersonnelClassAggregate(filter: PersonnelClassFilter): PersonnelClassAggregateResult
  " The PersonnelRequirement ID(s) evaluated by this test specification. "
  testsPersonnelRequirements(filter: PersonnelRequirementFilter, first: Int, offset: Int, order: PersonnelRequirementOrder): [PersonnelRequirement]
  ""
  testsPersonnelRequirementsAggregate(filter: PersonnelRequirementFilter): PersonnelRequirementAggregateResult
  " The PersonnelSpecification ID(s) evaluated by this test specification. "
  testsPersonnelSpecifications(filter: PersonnelSpecificationFilter, first: Int, offset: Int, order: PersonnelSpecificationOrder): [PersonnelSpecification]
  ""
  testsPersonnelSpecificationsAggregate(filter: PersonnelSpecificationFilter): PersonnelSpecificationAggregateResult
  " The ID of the PhysicalAsset object tested by this test specification. "
  testsPhysicalAsset(filter: PhysicalAssetFilter, first: Int, offset: Int, order: PhysicalAssetOrder): [PhysicalAsset]
  ""
  testsPhysicalAssetAggregate(filter: PhysicalAssetFilter): PhysicalAssetAggregateResult
  " The ID of the PhysicalAssetClass object tested by this test specification. "
  testsPhysicalAssetClass(filter: PhysicalAssetClassFilter, first: Int, offset: Int, order: PhysicalAssetClassOrder): [PhysicalAssetClass]
  ""
  testsPhysicalAssetClassAggregate(filter: PhysicalAssetClassFilter): PhysicalAssetClassAggregateResult
  " The PhysicalAssetRequirement ID(s) evaluated by this test specification. "
  testsPhysicalAssetRequirements(filter: PhysicalAssetRequirementFilter, first: Int, offset: Int, order: PhysicalAssetRequirementOrder): [PhysicalAssetRequirement]
  ""
  testsPhysicalAssetRequirementsAggregate(filter: PhysicalAssetRequirementFilter): PhysicalAssetRequirementAggregateResult
  " An identification of the version of the test specification. "
  version: String!
}
""
type TestSpecificationAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  keyMax: String
  ""
  keyMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  publishedDateMax: DateTime
  ""
  publishedDateMin: DateTime
  ""
  recurrenceQuantityMax: String
  ""
  recurrenceQuantityMin: String
  ""
  recurrenceTimeIntervalMax: String
  ""
  recurrenceTimeIntervalMin: String
  ""
  testSampleSizeMax: String
  ""
  testSampleSizeMin: String
  ""
  versionMax: String
  ""
  versionMin: String
}
"""
The test specification criteria object defines the set of criterion to evaluate and the test result 
to be reported when a testable object satisfies those criteria.
"""
type TestSpecificationCriteria {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Description of the test specification criteria. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " This test specification criteria used to evaluate the evaluated property of a testable object property. "
  evaluatedProperties(filter: EvaluatedPropertyFilter, first: Int, offset: Int, order: EvaluatedPropertyOrder): [EvaluatedProperty]
  ""
  evaluatedPropertiesAggregate(filter: EvaluatedPropertyFilter): EvaluatedPropertyAggregateResult
  """
  An expression of the test specification criteria to be evaluated. If the expression is empty, 
  then the test specification criteria represents the else criterion. 
  """
  expression: String
  " Identification of the test specification criteria. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  """
  The value to be given to the result of the test if the test specification criteria expression is 
  evaluated as true.
  """
  result: String
  """
  Specifies the sequence of evaluation of test specification criteria. The sequence shall be executed 
  lowest first. Duplicate sequence values shall be executed in parallel with worst case result 
  reported if both criteria are evaluated as true. 
  """
  sequence: Int
  " This test specification criteria determine the test outcome upon evaluation of the test specification. "
  testSpecification(filter: TestSpecificationFilter): TestSpecification!
}
""
type TestSpecificationCriteriaAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  expressionMax: String
  ""
  expressionMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  resultMax: String
  ""
  resultMin: String
  ""
  sequenceAvg: Float
  ""
  sequenceMax: Int
  ""
  sequenceMin: Int
  ""
  sequenceSum: Int
}
"""
The test specification property object defines properties of the test specification. These properties 
are not the characteristics to be tested.
"""
type TestSpecificationProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " The child test specification property(s) of this test specification property. "
  children(filter: TestSpecificationPropertyFilter, first: Int, offset: Int, order: TestSpecificationPropertyOrder): [TestSpecificationProperty]
  ""
  childrenAggregate(filter: TestSpecificationPropertyFilter): TestSpecificationPropertyAggregateResult
  " Description of the test specification property "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Identification of the test specification property. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The label is last node in the fully qualified name. "
  label: String!
  " The parent test specification property(s) of this test specification property. "
  parent(filter: TestSpecificationPropertyFilter): TestSpecificationProperty
  " These test specification property values are for the test specification. "
  testSpecification(filter: TestSpecificationFilter): TestSpecification!
  " The value, set of values, or range of the property. "
  value: String
  " The unit of measure of the associated property values, if applicable. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type TestSpecificationPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  labelMax: String
  ""
  labelMin: String
  ""
  valueMax: String
  ""
  valueMin: String
}
" The ISA 95 standard defines attributes for value, quantity, and duration where each has corresponding unit of measure attribute.  "
type UnitOfMeasure {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Enumeration: The data type of the stored values associated with this Unit of Measure: BOOL; INT; INT32; FLOAT64; FLOAT; STRING "
  dataType: DataType
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The actual unit associated with the values measured. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
}
""
type UnitOfMeasureAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
}
" Unit Of Measure Conversion Type holds data required to convert values between two units of measure fpr a given material.  "
type UnitOfMeasureConversion {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Numberator and Denominator are used to convert the UoM value:  toUnitOfMeasure Value = fromUnitOfMeasure Value * (numerator/denominator)"
  denominator: Float!
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The unit of measure being converted from. "
  fromUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure!
  " Unique internal database identifier. "
  iid: ID!
  " Material definition version to which this unit of measure conversion applies"
  materialDefinitionVersion(filter: MaterialDefinitionVersionFilter): MaterialDefinitionVersion!
  " Numberator and Denominator are used to convert the UoM value:  toUnitOfMeasure Value = fromUnitOfMeasure Value * (numerator/denominator)"
  numerator: Float!
  " The unit of measure to convert to. "
  toUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure!
}
""
type UnitOfMeasureConversionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  denominatorAvg: Float
  ""
  denominatorMax: Float
  ""
  denominatorMin: Float
  ""
  denominatorSum: Float
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  numeratorAvg: Float
  ""
  numeratorMax: Float
  ""
  numeratorMin: Float
  ""
  numeratorSum: Float
}
""
type UpdateAccessPermissionPayload {
  ""
  accessPermission(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  numUids: Int
}
""
type UpdateAlarmEventPayload {
  ""
  alarmEvent(filter: AlarmEventFilter, first: Int, offset: Int, order: AlarmEventOrder): [AlarmEvent]
  ""
  numUids: Int
}
""
type UpdateCommentPayload {
  ""
  comment(filter: CommentFilter, first: Int, offset: Int, order: CommentOrder): [Comment]
  ""
  numUids: Int
}
""
type UpdateDataSourceMethodArgumentPayload {
  ""
  dataSourceMethodArgument(filter: DataSourceMethodArgumentFilter, first: Int, offset: Int, order: DataSourceMethodArgumentOrder): [DataSourceMethodArgument]
  ""
  numUids: Int
}
""
type UpdateDataSourceMethodPayload {
  ""
  dataSourceMethod(filter: DataSourceMethodFilter, first: Int, offset: Int, order: DataSourceMethodOrder): [DataSourceMethod]
  ""
  numUids: Int
}
""
type UpdateDataSourcePayload {
  ""
  dataSource(filter: DataSourceFilter, first: Int, offset: Int, order: DataSourceOrder): [DataSource]
  ""
  numUids: Int
}
""
type UpdateDataSourceTopicPayload {
  ""
  dataSourceTopic(filter: DataSourceTopicFilter, first: Int, offset: Int, order: DataSourceTopicOrder): [DataSourceTopic]
  ""
  numUids: Int
}
""
type UpdateDataSourceVersionPayload {
  ""
  dataSourceVersion(filter: DataSourceVersionFilter, first: Int, offset: Int, order: DataSourceVersionOrder): [DataSourceVersion]
  ""
  numUids: Int
}
""
type UpdateDataSubscriptionPayload {
  ""
  dataSubscription(filter: DataSubscriptionFilter, first: Int, offset: Int, order: DataSubscriptionOrder): [DataSubscription]
  ""
  numUids: Int
}
""
type UpdateEnvironmentalVariablePayload {
  ""
  environmentalVariable(filter: EnvironmentalVariableFilter, first: Int, offset: Int, order: EnvironmentalVariableOrder): [EnvironmentalVariable]
  ""
  numUids: Int
}
""
type UpdateEnvironmentalVariableVersionPayload {
  ""
  environmentalVariableVersion(filter: EnvironmentalVariableVersionFilter, first: Int, offset: Int, order: EnvironmentalVariableVersionOrder): [EnvironmentalVariableVersion]
  ""
  numUids: Int
}
""
type UpdateEquipmentActualPayload {
  ""
  equipmentActual(filter: EquipmentActualFilter, first: Int, offset: Int, order: EquipmentActualOrder): [EquipmentActual]
  ""
  numUids: Int
}
""
type UpdateEquipmentActualPropertyPayload {
  ""
  equipmentActualProperty(filter: EquipmentActualPropertyFilter, first: Int, offset: Int, order: EquipmentActualPropertyOrder): [EquipmentActualProperty]
  ""
  numUids: Int
}
""
type UpdateEquipmentAssetMappingPayload {
  ""
  equipmentAssetMapping(filter: EquipmentAssetMappingFilter, first: Int, offset: Int, order: EquipmentAssetMappingOrder): [EquipmentAssetMapping]
  ""
  numUids: Int
}
""
type UpdateEquipmentClassPayload {
  ""
  equipmentClass(filter: EquipmentClassFilter, first: Int, offset: Int, order: EquipmentClassOrder): [EquipmentClass]
  ""
  numUids: Int
}
""
type UpdateEquipmentClassPropertyPayload {
  ""
  equipmentClassProperty(filter: EquipmentClassPropertyFilter, first: Int, offset: Int, order: EquipmentClassPropertyOrder): [EquipmentClassProperty]
  ""
  numUids: Int
}
""
type UpdateEquipmentClassVersionPayload {
  ""
  equipmentClassVersion(filter: EquipmentClassVersionFilter, first: Int, offset: Int, order: EquipmentClassVersionOrder): [EquipmentClassVersion]
  ""
  numUids: Int
}
""
type UpdateEquipmentDataSourcePayload {
  ""
  equipmentDataSource(filter: EquipmentDataSourceFilter, first: Int, offset: Int, order: EquipmentDataSourceOrder): [EquipmentDataSource]
  ""
  numUids: Int
}
""
type UpdateEquipmentNameAliasPayload {
  ""
  equipmentNameAlias(filter: EquipmentNameAliasFilter, first: Int, offset: Int, order: EquipmentNameAliasOrder): [EquipmentNameAlias]
  ""
  numUids: Int
}
""
type UpdateEquipmentPayload {
  ""
  equipment(filter: EquipmentFilter, first: Int, offset: Int, order: EquipmentOrder): [Equipment]
  ""
  numUids: Int
}
""
type UpdateEquipmentPropertyOverridePayload {
  ""
  equipmentPropertyOverride(filter: EquipmentPropertyOverrideFilter, first: Int, offset: Int, order: EquipmentPropertyOverrideOrder): [EquipmentPropertyOverride]
  ""
  numUids: Int
}
""
type UpdateEquipmentPropertyPayload {
  ""
  equipmentProperty(filter: EquipmentPropertyFilter, first: Int, offset: Int, order: EquipmentPropertyOrder): [EquipmentProperty]
  ""
  numUids: Int
}
""
type UpdateEquipmentRequirementPayload {
  ""
  equipmentRequirement(filter: EquipmentRequirementFilter, first: Int, offset: Int, order: EquipmentRequirementOrder): [EquipmentRequirement]
  ""
  numUids: Int
}
""
type UpdateEquipmentRequirementPropertyPayload {
  ""
  equipmentRequirementProperty(filter: EquipmentRequirementPropertyFilter, first: Int, offset: Int, order: EquipmentRequirementPropertyOrder): [EquipmentRequirementProperty]
  ""
  numUids: Int
}
""
type UpdateEquipmentSpecificationPayload {
  ""
  equipmentSpecification(filter: EquipmentSpecificationFilter, first: Int, offset: Int, order: EquipmentSpecificationOrder): [EquipmentSpecification]
  ""
  numUids: Int
}
""
type UpdateEquipmentSpecificationPropertyPayload {
  ""
  equipmentSpecificationProperty(filter: EquipmentSpecificationPropertyFilter, first: Int, offset: Int, order: EquipmentSpecificationPropertyOrder): [EquipmentSpecificationProperty]
  ""
  numUids: Int
}
""
type UpdateEquipmentVersionPayload {
  ""
  equipmentVersion(filter: EquipmentVersionFilter, first: Int, offset: Int, order: EquipmentVersionOrder): [EquipmentVersion]
  ""
  numUids: Int
}
""
type UpdateEvaluatedPropertyPayload {
  ""
  evaluatedProperty(filter: EvaluatedPropertyFilter, first: Int, offset: Int, order: EvaluatedPropertyOrder): [EvaluatedProperty]
  ""
  numUids: Int
}
""
type UpdateEventAssociationPayload {
  ""
  eventAssociation(filter: EventAssociationFilter, first: Int, offset: Int, order: EventAssociationOrder): [EventAssociation]
  ""
  numUids: Int
}
""
type UpdateEventPayload {
  ""
  event(filter: EventFilter, first: Int, offset: Int, order: EventOrder): [Event]
  ""
  numUids: Int
}
""
type UpdateEventPropertyPayload {
  ""
  eventProperty(filter: EventPropertyFilter, first: Int, offset: Int, order: EventPropertyOrder): [EventProperty]
  ""
  numUids: Int
}
""
type UpdateEventSubtypePayload {
  ""
  eventSubtype(filter: EventSubtypeFilter, first: Int, offset: Int, order: EventSubtypeOrder): [EventSubtype]
  ""
  numUids: Int
}
""
type UpdateEventTypePayload {
  ""
  eventType(filter: EventTypeFilter, first: Int, offset: Int, order: EventTypeOrder): [EventType]
  ""
  numUids: Int
}
""
type UpdateFormPayload {
  ""
  form(filter: FormFilter, first: Int, offset: Int, order: FormOrder): [Form]
  ""
  numUids: Int
}
""
type UpdateHierarchyScopePayload {
  ""
  hierarchyScope(filter: HierarchyScopeFilter, first: Int, offset: Int, order: HierarchyScopeOrder): [HierarchyScope]
  ""
  numUids: Int
}
""
type UpdateInformationObjectPayload {
  ""
  informationObject(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  numUids: Int
}
""
type UpdateJobListPayload {
  ""
  jobList(filter: JobListFilter, first: Int, offset: Int, order: JobListOrder): [JobList]
  ""
  numUids: Int
}
""
type UpdateJobOrderParameterPayload {
  ""
  jobOrderParameter(filter: JobOrderParameterFilter, first: Int, offset: Int, order: JobOrderParameterOrder): [JobOrderParameter]
  ""
  numUids: Int
}
""
type UpdateJobOrderPayload {
  ""
  jobOrder(filter: JobOrderFilter, first: Int, offset: Int, order: JobOrderOrder): [JobOrder]
  ""
  numUids: Int
}
""
type UpdateJobResponseDataPayload {
  ""
  jobResponseData(filter: JobResponseDataFilter, first: Int, offset: Int, order: JobResponseDataOrder): [JobResponseData]
  ""
  numUids: Int
}
""
type UpdateJobResponseListPayload {
  ""
  jobResponseList(filter: JobResponseListFilter, first: Int, offset: Int, order: JobResponseListOrder): [JobResponseList]
  ""
  numUids: Int
}
""
type UpdateJobResponsePayload {
  ""
  jobResponse(filter: JobResponseFilter, first: Int, offset: Int, order: JobResponseOrder): [JobResponse]
  ""
  numUids: Int
}
""
type UpdateLibreServicePayload {
  ""
  libreService(filter: LibreServiceFilter, first: Int, offset: Int, order: LibreServiceOrder): [LibreService]
  ""
  numUids: Int
}
""
type UpdateMaterialActualPayload {
  ""
  materialActual(filter: MaterialActualFilter, first: Int, offset: Int, order: MaterialActualOrder): [MaterialActual]
  ""
  numUids: Int
}
""
type UpdateMaterialActualPropertyPayload {
  ""
  materialActualProperty(filter: MaterialActualPropertyFilter, first: Int, offset: Int, order: MaterialActualPropertyOrder): [MaterialActualProperty]
  ""
  numUids: Int
}
""
type UpdateMaterialAlternatePayload {
  ""
  materialAlternate(filter: MaterialAlternateFilter, first: Int, offset: Int, order: MaterialAlternateOrder): [MaterialAlternate]
  ""
  numUids: Int
}
""
type UpdateMaterialClassPayload {
  ""
  materialClass(filter: MaterialClassFilter, first: Int, offset: Int, order: MaterialClassOrder): [MaterialClass]
  ""
  numUids: Int
}
""
type UpdateMaterialClassPropertyPayload {
  ""
  materialClassProperty(filter: MaterialClassPropertyFilter, first: Int, offset: Int, order: MaterialClassPropertyOrder): [MaterialClassProperty]
  ""
  numUids: Int
}
""
type UpdateMaterialClassVersionPayload {
  ""
  materialClassVersion(filter: MaterialClassVersionFilter, first: Int, offset: Int, order: MaterialClassVersionOrder): [MaterialClassVersion]
  ""
  numUids: Int
}
""
type UpdateMaterialDefinitionPayload {
  ""
  materialDefinition(filter: MaterialDefinitionFilter, first: Int, offset: Int, order: MaterialDefinitionOrder): [MaterialDefinition]
  ""
  numUids: Int
}
""
type UpdateMaterialDefinitionPropertyPayload {
  ""
  materialDefinitionProperty(filter: MaterialDefinitionPropertyFilter, first: Int, offset: Int, order: MaterialDefinitionPropertyOrder): [MaterialDefinitionProperty]
  ""
  numUids: Int
}
""
type UpdateMaterialDefinitionVersionPayload {
  ""
  materialDefinitionVersion(filter: MaterialDefinitionVersionFilter, first: Int, offset: Int, order: MaterialDefinitionVersionOrder): [MaterialDefinitionVersion]
  ""
  numUids: Int
}
""
type UpdateMaterialLotPayload {
  ""
  materialLot(filter: MaterialLotFilter, first: Int, offset: Int, order: MaterialLotOrder): [MaterialLot]
  ""
  numUids: Int
}
""
type UpdateMaterialLotPropertyPayload {
  ""
  materialLotProperty(filter: MaterialLotPropertyFilter, first: Int, offset: Int, order: MaterialLotPropertyOrder): [MaterialLotProperty]
  ""
  numUids: Int
}
""
type UpdateMaterialRequirementPayload {
  ""
  materialRequirement(filter: MaterialRequirementFilter, first: Int, offset: Int, order: MaterialRequirementOrder): [MaterialRequirement]
  ""
  numUids: Int
}
""
type UpdateMaterialRequirementPropertyPayload {
  ""
  materialRequirementProperty(filter: MaterialRequirementPropertyFilter, first: Int, offset: Int, order: MaterialRequirementPropertyOrder): [MaterialRequirementProperty]
  ""
  numUids: Int
}
""
type UpdateMaterialSpecificationPayload {
  ""
  materialSpecification(filter: MaterialSpecificationFilter, first: Int, offset: Int, order: MaterialSpecificationOrder): [MaterialSpecification]
  ""
  numUids: Int
}
""
type UpdateMaterialSpecificationPropertyPayload {
  ""
  materialSpecificationProperty(filter: MaterialSpecificationPropertyFilter, first: Int, offset: Int, order: MaterialSpecificationPropertyOrder): [MaterialSpecificationProperty]
  ""
  numUids: Int
}
""
type UpdateMaterialSubLotPayload {
  ""
  materialSubLot(filter: MaterialSubLotFilter, first: Int, offset: Int, order: MaterialSubLotOrder): [MaterialSubLot]
  ""
  numUids: Int
}
""
type UpdateMenuPayload {
  ""
  menu(filter: MenuFilter, first: Int, offset: Int, order: MenuOrder): [Menu]
  ""
  numUids: Int
}
""
type UpdateMultiplicityPayload {
  ""
  multiplicity(filter: MultiplicityFilter, first: Int, offset: Int, order: MultiplicityOrder): [Multiplicity]
  ""
  numUids: Int
}
""
type UpdateOperationalLocationClassPayload {
  ""
  numUids: Int
  ""
  operationalLocationClass(filter: OperationalLocationClassFilter, first: Int, offset: Int, order: OperationalLocationClassOrder): [OperationalLocationClass]
}
""
type UpdateOperationalLocationClassPropertyPayload {
  ""
  numUids: Int
  ""
  operationalLocationClassProperty(filter: OperationalLocationClassPropertyFilter, first: Int, offset: Int, order: OperationalLocationClassPropertyOrder): [OperationalLocationClassProperty]
}
""
type UpdateOperationalLocationClassVersionPayload {
  ""
  numUids: Int
  ""
  operationalLocationClassVersion(filter: OperationalLocationClassVersionFilter, first: Int, offset: Int, order: OperationalLocationClassVersionOrder): [OperationalLocationClassVersion]
}
""
type UpdateOperationalLocationPayload {
  ""
  numUids: Int
  ""
  operationalLocation(filter: OperationalLocationFilter, first: Int, offset: Int, order: OperationalLocationOrder): [OperationalLocation]
}
""
type UpdateOperationalLocationPropertyPayload {
  ""
  numUids: Int
  ""
  operationalLocationProperty(filter: OperationalLocationPropertyFilter, first: Int, offset: Int, order: OperationalLocationPropertyOrder): [OperationalLocationProperty]
}
""
type UpdateOperationalLocationVersionPayload {
  ""
  numUids: Int
  ""
  operationalLocationVersion(filter: OperationalLocationVersionFilter, first: Int, offset: Int, order: OperationalLocationVersionOrder): [OperationalLocationVersion]
}
""
type UpdateOperationsDefinitionPayload {
  ""
  numUids: Int
  ""
  operationsDefinition(filter: OperationsDefinitionFilter, first: Int, offset: Int, order: OperationsDefinitionOrder): [OperationsDefinition]
}
""
type UpdateOperationsDefinitionVersionPayload {
  ""
  numUids: Int
  ""
  operationsDefinitionVersion(filter: OperationsDefinitionVersionFilter, first: Int, offset: Int, order: OperationsDefinitionVersionOrder): [OperationsDefinitionVersion]
}
""
type UpdateOperationsEventClassPayload {
  ""
  numUids: Int
  ""
  operationsEventClass(filter: OperationsEventClassFilter, first: Int, offset: Int, order: OperationsEventClassOrder): [OperationsEventClass]
}
""
type UpdateOperationsEventClassPropertyPayload {
  ""
  numUids: Int
  ""
  operationsEventClassProperty(filter: OperationsEventClassPropertyFilter, first: Int, offset: Int, order: OperationsEventClassPropertyOrder): [OperationsEventClassProperty]
}
""
type UpdateOperationsEventClassRecordSpecificationPayload {
  ""
  numUids: Int
  ""
  operationsEventClassRecordSpecification(filter: OperationsEventClassRecordSpecificationFilter, first: Int, offset: Int, order: OperationsEventClassRecordSpecificationOrder): [OperationsEventClassRecordSpecification]
}
""
type UpdateOperationsEventClassVersionPayload {
  ""
  numUids: Int
  ""
  operationsEventClassVersion(filter: OperationsEventClassVersionFilter, first: Int, offset: Int, order: OperationsEventClassVersionOrder): [OperationsEventClassVersion]
}
""
type UpdateOperationsEventDefinitionPayload {
  ""
  numUids: Int
  ""
  operationsEventDefinition(filter: OperationsEventDefinitionFilter, first: Int, offset: Int, order: OperationsEventDefinitionOrder): [OperationsEventDefinition]
}
""
type UpdateOperationsEventDefinitionPropertyPayload {
  ""
  numUids: Int
  ""
  operationsEventDefinitionProperty(filter: OperationsEventDefinitionPropertyFilter, first: Int, offset: Int, order: OperationsEventDefinitionPropertyOrder): [OperationsEventDefinitionProperty]
}
""
type UpdateOperationsEventDefinitionRecordSpecificationPayload {
  ""
  numUids: Int
  ""
  operationsEventDefinitionRecordSpecification(filter: OperationsEventDefinitionRecordSpecificationFilter, first: Int, offset: Int, order: OperationsEventDefinitionRecordSpecificationOrder): [OperationsEventDefinitionRecordSpecification]
}
""
type UpdateOperationsEventDefinitionVersionPayload {
  ""
  numUids: Int
  ""
  operationsEventDefinitionVersion(filter: OperationsEventDefinitionVersionFilter, first: Int, offset: Int, order: OperationsEventDefinitionVersionOrder): [OperationsEventDefinitionVersion]
}
""
type UpdateOperationsEventPayload {
  ""
  numUids: Int
  ""
  operationsEvent(filter: OperationsEventFilter, first: Int, offset: Int, order: OperationsEventOrder): [OperationsEvent]
}
""
type UpdateOperationsEventPropertyPayload {
  ""
  numUids: Int
  ""
  operationsEventProperty(filter: OperationsEventPropertyFilter, first: Int, offset: Int, order: OperationsEventPropertyOrder): [OperationsEventProperty]
}
""
type UpdateOperationsEventRecordEntryPayload {
  ""
  numUids: Int
  ""
  operationsEventRecordEntry(filter: OperationsEventRecordEntryFilter, first: Int, offset: Int, order: OperationsEventRecordEntryOrder): [OperationsEventRecordEntry]
}
""
type UpdateOperationsEventRecordPayload {
  ""
  numUids: Int
  ""
  operationsEventRecord(filter: OperationsEventRecordFilter, first: Int, offset: Int, order: OperationsEventRecordOrder): [OperationsEventRecord]
}
""
type UpdateOperationsMaterialBillPayload {
  ""
  numUids: Int
  ""
  operationsMaterialBill(filter: OperationsMaterialBillFilter, first: Int, offset: Int, order: OperationsMaterialBillOrder): [OperationsMaterialBill]
}
""
type UpdateOperationsPerformancePayload {
  ""
  numUids: Int
  ""
  operationsPerformance(filter: OperationsPerformanceFilter, first: Int, offset: Int, order: OperationsPerformanceOrder): [OperationsPerformance]
}
""
type UpdateOperationsRequestPayload {
  ""
  numUids: Int
  ""
  operationsRequest(filter: OperationsRequestFilter, first: Int, offset: Int, order: OperationsRequestOrder): [OperationsRequest]
}
""
type UpdateOperationsResponsePayload {
  ""
  numUids: Int
  ""
  operationsResponse(filter: OperationsResponseFilter, first: Int, offset: Int, order: OperationsResponseOrder): [OperationsResponse]
}
""
type UpdateOperationsResponsePropertyPayload {
  ""
  numUids: Int
  ""
  operationsResponseProperty(filter: OperationsResponsePropertyFilter, first: Int, offset: Int, order: OperationsResponsePropertyOrder): [OperationsResponseProperty]
}
""
type UpdateOperationsSchedulePayload {
  ""
  numUids: Int
  ""
  operationsSchedule(filter: OperationsScheduleFilter, first: Int, offset: Int, order: OperationsScheduleOrder): [OperationsSchedule]
}
""
type UpdateOperationsSegmentDependencyPayload {
  ""
  numUids: Int
  ""
  operationsSegmentDependency(filter: OperationsSegmentDependencyFilter, first: Int, offset: Int, order: OperationsSegmentDependencyOrder): [OperationsSegmentDependency]
}
""
type UpdateOperationsSegmentPayload {
  ""
  numUids: Int
  ""
  operationsSegment(filter: OperationsSegmentFilter, first: Int, offset: Int, order: OperationsSegmentOrder): [OperationsSegment]
}
""
type UpdateParameterSpecificationPayload {
  ""
  numUids: Int
  ""
  parameterSpecification(filter: ParameterSpecificationFilter, first: Int, offset: Int, order: ParameterSpecificationOrder): [ParameterSpecification]
}
""
type UpdatePayloadFieldDefinitionPayload {
  ""
  numUids: Int
  ""
  payloadFieldDefinition(filter: PayloadFieldDefinitionFilter, first: Int, offset: Int, order: PayloadFieldDefinitionOrder): [PayloadFieldDefinition]
}
""
type UpdatePersonPayload {
  ""
  numUids: Int
  ""
  person(filter: PersonFilter, first: Int, offset: Int, order: PersonOrder): [Person]
}
""
type UpdatePersonPropertyPayload {
  ""
  numUids: Int
  ""
  personProperty(filter: PersonPropertyFilter, first: Int, offset: Int, order: PersonPropertyOrder): [PersonProperty]
}
""
type UpdatePersonVersionPayload {
  ""
  numUids: Int
  ""
  personVersion(filter: PersonVersionFilter, first: Int, offset: Int, order: PersonVersionOrder): [PersonVersion]
}
""
type UpdatePersonnelActualPayload {
  ""
  numUids: Int
  ""
  personnelActual(filter: PersonnelActualFilter, first: Int, offset: Int, order: PersonnelActualOrder): [PersonnelActual]
}
""
type UpdatePersonnelActualPropertyPayload {
  ""
  numUids: Int
  ""
  personnelActualProperty(filter: PersonnelActualPropertyFilter, first: Int, offset: Int, order: PersonnelActualPropertyOrder): [PersonnelActualProperty]
}
""
type UpdatePersonnelClassPayload {
  ""
  numUids: Int
  ""
  personnelClass(filter: PersonnelClassFilter, first: Int, offset: Int, order: PersonnelClassOrder): [PersonnelClass]
}
""
type UpdatePersonnelClassPropertyPayload {
  ""
  numUids: Int
  ""
  personnelClassProperty(filter: PersonnelClassPropertyFilter, first: Int, offset: Int, order: PersonnelClassPropertyOrder): [PersonnelClassProperty]
}
""
type UpdatePersonnelClassVersionPayload {
  ""
  numUids: Int
  ""
  personnelClassVersion(filter: PersonnelClassVersionFilter, first: Int, offset: Int, order: PersonnelClassVersionOrder): [PersonnelClassVersion]
}
""
type UpdatePersonnelRequirementPayload {
  ""
  numUids: Int
  ""
  personnelRequirement(filter: PersonnelRequirementFilter, first: Int, offset: Int, order: PersonnelRequirementOrder): [PersonnelRequirement]
}
""
type UpdatePersonnelRequirementPropertyPayload {
  ""
  numUids: Int
  ""
  personnelRequirementProperty(filter: PersonnelRequirementPropertyFilter, first: Int, offset: Int, order: PersonnelRequirementPropertyOrder): [PersonnelRequirementProperty]
}
""
type UpdatePersonnelSpecificationPayload {
  ""
  numUids: Int
  ""
  personnelSpecification(filter: PersonnelSpecificationFilter, first: Int, offset: Int, order: PersonnelSpecificationOrder): [PersonnelSpecification]
}
""
type UpdatePersonnelSpecificationPropertyPayload {
  ""
  numUids: Int
  ""
  personnelSpecificationProperty(filter: PersonnelSpecificationPropertyFilter, first: Int, offset: Int, order: PersonnelSpecificationPropertyOrder): [PersonnelSpecificationProperty]
}
""
type UpdatePhysicalAssetActualPayload {
  ""
  numUids: Int
  ""
  physicalAssetActual(filter: PhysicalAssetActualFilter, first: Int, offset: Int, order: PhysicalAssetActualOrder): [PhysicalAssetActual]
}
""
type UpdatePhysicalAssetActualPropertyPayload {
  ""
  numUids: Int
  ""
  physicalAssetActualProperty(filter: PhysicalAssetActualPropertyFilter, first: Int, offset: Int, order: PhysicalAssetActualPropertyOrder): [PhysicalAssetActualProperty]
}
""
type UpdatePhysicalAssetClassPayload {
  ""
  numUids: Int
  ""
  physicalAssetClass(filter: PhysicalAssetClassFilter, first: Int, offset: Int, order: PhysicalAssetClassOrder): [PhysicalAssetClass]
}
""
type UpdatePhysicalAssetClassPropertyPayload {
  ""
  numUids: Int
  ""
  physicalAssetClassProperty(filter: PhysicalAssetClassPropertyFilter, first: Int, offset: Int, order: PhysicalAssetClassPropertyOrder): [PhysicalAssetClassProperty]
}
""
type UpdatePhysicalAssetClassVersionPayload {
  ""
  numUids: Int
  ""
  physicalAssetClassVersion(filter: PhysicalAssetClassVersionFilter, first: Int, offset: Int, order: PhysicalAssetClassVersionOrder): [PhysicalAssetClassVersion]
}
""
type UpdatePhysicalAssetDataSourcePayload {
  ""
  numUids: Int
  ""
  physicalAssetDataSource(filter: PhysicalAssetDataSourceFilter, first: Int, offset: Int, order: PhysicalAssetDataSourceOrder): [PhysicalAssetDataSource]
}
""
type UpdatePhysicalAssetPayload {
  ""
  numUids: Int
  ""
  physicalAsset(filter: PhysicalAssetFilter, first: Int, offset: Int, order: PhysicalAssetOrder): [PhysicalAsset]
}
""
type UpdatePhysicalAssetPropertyPayload {
  ""
  numUids: Int
  ""
  physicalAssetProperty(filter: PhysicalAssetPropertyFilter, first: Int, offset: Int, order: PhysicalAssetPropertyOrder): [PhysicalAssetProperty]
}
""
type UpdatePhysicalAssetRequirementPayload {
  ""
  numUids: Int
  ""
  physicalAssetRequirement(filter: PhysicalAssetRequirementFilter, first: Int, offset: Int, order: PhysicalAssetRequirementOrder): [PhysicalAssetRequirement]
}
""
type UpdatePhysicalAssetRequirementPropertyPayload {
  ""
  numUids: Int
  ""
  physicalAssetRequirementProperty(filter: PhysicalAssetRequirementPropertyFilter, first: Int, offset: Int, order: PhysicalAssetRequirementPropertyOrder): [PhysicalAssetRequirementProperty]
}
""
type UpdatePhysicalAssetSpecificationPayload {
  ""
  numUids: Int
  ""
  physicalAssetSpecification(filter: PhysicalAssetSpecificationFilter, first: Int, offset: Int, order: PhysicalAssetSpecificationOrder): [PhysicalAssetSpecification]
}
""
type UpdatePhysicalAssetSpecificationPropertyPayload {
  ""
  numUids: Int
  ""
  physicalAssetSpecificationProperty(filter: PhysicalAssetSpecificationPropertyFilter, first: Int, offset: Int, order: PhysicalAssetSpecificationPropertyOrder): [PhysicalAssetSpecificationProperty]
}
""
type UpdatePhysicalAssetVersionPayload {
  ""
  numUids: Int
  ""
  physicalAssetVersion(filter: PhysicalAssetVersionFilter, first: Int, offset: Int, order: PhysicalAssetVersionOrder): [PhysicalAssetVersion]
}
""
type UpdateProcessSegmentDependencyPayload {
  ""
  numUids: Int
  ""
  processSegmentDependency(filter: ProcessSegmentDependencyFilter, first: Int, offset: Int, order: ProcessSegmentDependencyOrder): [ProcessSegmentDependency]
}
""
type UpdateProcessSegmentParameterPayload {
  ""
  numUids: Int
  ""
  processSegmentParameter(filter: ProcessSegmentParameterFilter, first: Int, offset: Int, order: ProcessSegmentParameterOrder): [ProcessSegmentParameter]
}
""
type UpdateProcessSegmentPayload {
  ""
  numUids: Int
  ""
  processSegment(filter: ProcessSegmentFilter, first: Int, offset: Int, order: ProcessSegmentOrder): [ProcessSegment]
}
""
type UpdateProcessSegmentVersionPayload {
  ""
  numUids: Int
  ""
  processSegmentVersion(filter: ProcessSegmentVersionFilter, first: Int, offset: Int, order: ProcessSegmentVersionOrder): [ProcessSegmentVersion]
}
""
type UpdatePropertyMeasurementPayload {
  ""
  numUids: Int
  ""
  propertyMeasurement(filter: PropertyMeasurementFilter, first: Int, offset: Int, order: PropertyMeasurementOrder): [PropertyMeasurement]
}
""
type UpdatePropertyNameAliasPayload {
  ""
  numUids: Int
  ""
  propertyNameAlias(filter: PropertyNameAliasFilter, first: Int, offset: Int, order: PropertyNameAliasOrder): [PropertyNameAlias]
}
""
type UpdatePropertyValueAliasPayload {
  ""
  numUids: Int
  ""
  propertyValueAlias(filter: PropertyValueAliasFilter, first: Int, offset: Int, order: PropertyValueAliasOrder): [PropertyValueAlias]
}
""
type UpdateRulePayload {
  ""
  numUids: Int
  ""
  rule(filter: RuleFilter, first: Int, offset: Int, order: RuleOrder): [Rule]
}
""
type UpdateSecretPayload {
  ""
  numUids: Int
  ""
  secret(filter: SecretFilter, first: Int, offset: Int, order: SecretOrder): [Secret]
}
""
type UpdateSecretVersionPayload {
  ""
  numUids: Int
  ""
  secretVersion(filter: SecretVersionFilter, first: Int, offset: Int, order: SecretVersionOrder): [SecretVersion]
}
""
type UpdateSegmentDataPayload {
  ""
  numUids: Int
  ""
  segmentData(filter: SegmentDataFilter, first: Int, offset: Int, order: SegmentDataOrder): [SegmentData]
}
""
type UpdateSegmentParameterPayload {
  ""
  numUids: Int
  ""
  segmentParameter(filter: SegmentParameterFilter, first: Int, offset: Int, order: SegmentParameterOrder): [SegmentParameter]
}
""
type UpdateSegmentRequirementPayload {
  ""
  numUids: Int
  ""
  segmentRequirement(filter: SegmentRequirementFilter, first: Int, offset: Int, order: SegmentRequirementOrder): [SegmentRequirement]
}
""
type UpdateSegmentResponsePayload {
  ""
  numUids: Int
  ""
  segmentResponse(filter: SegmentResponseFilter, first: Int, offset: Int, order: SegmentResponseOrder): [SegmentResponse]
}
""
type UpdateSignaturePayload {
  ""
  numUids: Int
  ""
  signature(filter: SignatureFilter, first: Int, offset: Int, order: SignatureOrder): [Signature]
}
""
type UpdateSignatureReasonPayload {
  ""
  numUids: Int
  ""
  signatureReason(filter: SignatureReasonFilter, first: Int, offset: Int, order: SignatureReasonOrder): [SignatureReason]
}
""
type UpdateSpatialDefinitionPayload {
  ""
  numUids: Int
  ""
  spatialDefinition(filter: SpatialDefinitionFilter, first: Int, offset: Int, order: SpatialDefinitionOrder): [SpatialDefinition]
}
""
type UpdateStateModelActionPayload {
  ""
  numUids: Int
  ""
  stateModelAction(filter: StateModelActionFilter, first: Int, offset: Int, order: StateModelActionOrder): [StateModelAction]
}
""
type UpdateStateModelDefinitionPayload {
  ""
  numUids: Int
  ""
  stateModelDefinition(filter: StateModelDefinitionFilter, first: Int, offset: Int, order: StateModelDefinitionOrder): [StateModelDefinition]
}
""
type UpdateStateModelEventPayload {
  ""
  numUids: Int
  ""
  stateModelEvent(filter: StateModelEventFilter, first: Int, offset: Int, order: StateModelEventOrder): [StateModelEvent]
}
""
type UpdateStateModelInstancePayload {
  ""
  numUids: Int
  ""
  stateModelInstance(filter: StateModelInstanceFilter, first: Int, offset: Int, order: StateModelInstanceOrder): [StateModelInstance]
}
""
type UpdateStateModelPropertyPayload {
  ""
  numUids: Int
  ""
  stateModelProperty(filter: StateModelPropertyFilter, first: Int, offset: Int, order: StateModelPropertyOrder): [StateModelProperty]
}
""
type UpdateStateModelStatePayload {
  ""
  numUids: Int
  ""
  stateModelState(filter: StateModelStateFilter, first: Int, offset: Int, order: StateModelStateOrder): [StateModelState]
}
""
type UpdateStateModelTransitionPayload {
  ""
  numUids: Int
  ""
  stateModelTransition(filter: StateModelTransitionFilter, first: Int, offset: Int, order: StateModelTransitionOrder): [StateModelTransition]
}
""
type UpdateStateTransitionInstancePayload {
  ""
  numUids: Int
  ""
  stateTransitionInstance(filter: StateTransitionInstanceFilter, first: Int, offset: Int, order: StateTransitionInstanceOrder): [StateTransitionInstance]
}
""
type UpdateTestResultPayload {
  ""
  numUids: Int
  ""
  testResult(filter: TestResultFilter, first: Int, offset: Int, order: TestResultOrder): [TestResult]
}
""
type UpdateTestSpecificationCriteriaPayload {
  ""
  numUids: Int
  ""
  testSpecificationCriteria(filter: TestSpecificationCriteriaFilter, first: Int, offset: Int, order: TestSpecificationCriteriaOrder): [TestSpecificationCriteria]
}
""
type UpdateTestSpecificationPayload {
  ""
  numUids: Int
  ""
  testSpecification(filter: TestSpecificationFilter, first: Int, offset: Int, order: TestSpecificationOrder): [TestSpecification]
}
""
type UpdateTestSpecificationPropertyPayload {
  ""
  numUids: Int
  ""
  testSpecificationProperty(filter: TestSpecificationPropertyFilter, first: Int, offset: Int, order: TestSpecificationPropertyOrder): [TestSpecificationProperty]
}
""
type UpdateUnitOfMeasureConversionPayload {
  ""
  numUids: Int
  ""
  unitOfMeasureConversion(filter: UnitOfMeasureConversionFilter, first: Int, offset: Int, order: UnitOfMeasureConversionOrder): [UnitOfMeasureConversion]
}
""
type UpdateUnitOfMeasurePayload {
  ""
  numUids: Int
  ""
  unitOfMeasure(filter: UnitOfMeasureFilter, first: Int, offset: Int, order: UnitOfMeasureOrder): [UnitOfMeasure]
}
""
type UpdateWorkCalendarDefinitionEntryPayload {
  ""
  numUids: Int
  ""
  workCalendarDefinitionEntry(filter: WorkCalendarDefinitionEntryFilter, first: Int, offset: Int, order: WorkCalendarDefinitionEntryOrder): [WorkCalendarDefinitionEntry]
}
""
type UpdateWorkCalendarDefinitionEntryPropertyPayload {
  ""
  numUids: Int
  ""
  workCalendarDefinitionEntryProperty(filter: WorkCalendarDefinitionEntryPropertyFilter, first: Int, offset: Int, order: WorkCalendarDefinitionEntryPropertyOrder): [WorkCalendarDefinitionEntryProperty]
}
""
type UpdateWorkCalendarEntryPayload {
  ""
  numUids: Int
  ""
  workCalendarEntry(filter: WorkCalendarEntryFilter, first: Int, offset: Int, order: WorkCalendarEntryOrder): [WorkCalendarEntry]
}
""
type UpdateWorkCalendarEntryPropertyPayload {
  ""
  numUids: Int
  ""
  workCalendarEntryProperty(filter: WorkCalendarEntryPropertyFilter, first: Int, offset: Int, order: WorkCalendarEntryPropertyOrder): [WorkCalendarEntryProperty]
}
""
type UpdateWorkCalendarPayload {
  ""
  numUids: Int
  ""
  workCalendar(filter: WorkCalendarFilter, first: Int, offset: Int, order: WorkCalendarOrder): [WorkCalendar]
}
""
type UpdateWorkDirectivePayload {
  ""
  numUids: Int
  ""
  workDirective(filter: WorkDirectiveFilter, first: Int, offset: Int, order: WorkDirectiveOrder): [WorkDirective]
}
""
type UpdateWorkMasterPayload {
  ""
  numUids: Int
  ""
  workMaster(filter: WorkMasterFilter, first: Int, offset: Int, order: WorkMasterOrder): [WorkMaster]
}
""
type UpdateWorkPerformancePayload {
  ""
  numUids: Int
  ""
  workPerformance(filter: WorkPerformanceFilter, first: Int, offset: Int, order: WorkPerformanceOrder): [WorkPerformance]
}
""
type UpdateWorkRequestPayload {
  ""
  numUids: Int
  ""
  workRequest(filter: WorkRequestFilter, first: Int, offset: Int, order: WorkRequestOrder): [WorkRequest]
}
""
type UpdateWorkResponsePayload {
  ""
  numUids: Int
  ""
  workResponse(filter: WorkResponseFilter, first: Int, offset: Int, order: WorkResponseOrder): [WorkResponse]
}
""
type UpdateWorkSchedulePayload {
  ""
  numUids: Int
  ""
  workSchedule(filter: WorkScheduleFilter, first: Int, offset: Int, order: WorkScheduleOrder): [WorkSchedule]
}
""
type UpdateWorkflowErrorPayload {
  ""
  numUids: Int
  ""
  workflowError(filter: WorkflowErrorFilter, first: Int, offset: Int, order: WorkflowErrorOrder): [WorkflowError]
}
""
type UpdateWorkflowMessagePayload {
  ""
  numUids: Int
  ""
  workflowMessage(filter: WorkflowMessageFilter, first: Int, offset: Int, order: WorkflowMessageOrder): [WorkflowMessage]
}
""
type UpdateWorkflowShapePayload {
  ""
  numUids: Int
  ""
  workflowShape(filter: WorkflowShapeFilter, first: Int, offset: Int, order: WorkflowShapeOrder): [WorkflowShape]
}
""
type UpdateWorkflowSpecificationConnectionPayload {
  ""
  numUids: Int
  ""
  workflowSpecificationConnection(filter: WorkflowSpecificationConnectionFilter, first: Int, offset: Int, order: WorkflowSpecificationConnectionOrder): [WorkflowSpecificationConnection]
}
""
type UpdateWorkflowSpecificationConnectionPropertyPayload {
  ""
  numUids: Int
  ""
  workflowSpecificationConnectionProperty(filter: WorkflowSpecificationConnectionPropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationConnectionPropertyOrder): [WorkflowSpecificationConnectionProperty]
}
""
type UpdateWorkflowSpecificationConnectionTypePayload {
  ""
  numUids: Int
  ""
  workflowSpecificationConnectionType(filter: WorkflowSpecificationConnectionTypeFilter, first: Int, offset: Int, order: WorkflowSpecificationConnectionTypeOrder): [WorkflowSpecificationConnectionType]
}
""
type UpdateWorkflowSpecificationConnectionTypePropertyPayload {
  ""
  numUids: Int
  ""
  workflowSpecificationConnectionTypeProperty(filter: WorkflowSpecificationConnectionTypePropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationConnectionTypePropertyOrder): [WorkflowSpecificationConnectionTypeProperty]
}
""
type UpdateWorkflowSpecificationNodePayload {
  ""
  numUids: Int
  ""
  workflowSpecificationNode(filter: WorkflowSpecificationNodeFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeOrder): [WorkflowSpecificationNode]
}
""
type UpdateWorkflowSpecificationNodePropertyPayload {
  ""
  numUids: Int
  ""
  workflowSpecificationNodeProperty(filter: WorkflowSpecificationNodePropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationNodePropertyOrder): [WorkflowSpecificationNodeProperty]
}
""
type UpdateWorkflowSpecificationNodeTestCasePayload {
  ""
  numUids: Int
  ""
  workflowSpecificationNodeTestCase(filter: WorkflowSpecificationNodeTestCaseFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeTestCaseOrder): [WorkflowSpecificationNodeTestCase]
}
""
type UpdateWorkflowSpecificationNodeTypePayload {
  ""
  numUids: Int
  ""
  workflowSpecificationNodeType(filter: WorkflowSpecificationNodeTypeFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeTypeOrder): [WorkflowSpecificationNodeType]
}
""
type UpdateWorkflowSpecificationNodeTypePropertyPayload {
  ""
  numUids: Int
  ""
  workflowSpecificationNodeTypeProperty(filter: WorkflowSpecificationNodeTypePropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeTypePropertyOrder): [WorkflowSpecificationNodeTypeProperty]
}
""
type UpdateWorkflowSpecificationNodeVariablePayload {
  ""
  numUids: Int
  ""
  workflowSpecificationNodeVariable(filter: WorkflowSpecificationNodeVariableFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeVariableOrder): [WorkflowSpecificationNodeVariable]
}
""
type UpdateWorkflowSpecificationPayload {
  ""
  numUids: Int
  ""
  workflowSpecification(filter: WorkflowSpecificationFilter, first: Int, offset: Int, order: WorkflowSpecificationOrder): [WorkflowSpecification]
}
""
type UpdateWorkflowSpecificationPropertyPayload {
  ""
  numUids: Int
  ""
  workflowSpecificationProperty(filter: WorkflowSpecificationPropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationPropertyOrder): [WorkflowSpecificationProperty]
}
""
type UpdateWorkflowSpecificationVersionPayload {
  ""
  numUids: Int
  ""
  workflowSpecificationVersion(filter: WorkflowSpecificationVersionFilter, first: Int, offset: Int, order: WorkflowSpecificationVersionOrder): [WorkflowSpecificationVersion]
}
""
type UpdateWorkflowTimerPayload {
  ""
  numUids: Int
  ""
  workflowTimer(filter: WorkflowTimerFilter, first: Int, offset: Int, order: WorkflowTimerOrder): [WorkflowTimer]
}
""
type UpdateWorkflowWaypointPayload {
  ""
  numUids: Int
  ""
  workflowWaypoint(filter: WorkflowWaypointFilter, first: Int, offset: Int, order: WorkflowWaypointOrder): [WorkflowWaypoint]
}
"The work calendar shall be defined as a collection of work calendar entries."
type WorkCalendar {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The associated work calendar definition entry. "
  definition(filter: WorkCalendarDefinitionEntryFilter, first: Int, offset: Int, order: WorkCalendarDefinitionEntryOrder): [WorkCalendarDefinitionEntry]
  ""
  definitionAggregate(filter: WorkCalendarDefinitionEntryFilter): WorkCalendarDefinitionEntryAggregateResult
  " The description of the work calendar. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The associated work calendar entries. "
  entries(filter: WorkCalendarEntryFilter, first: Int, offset: Int, order: WorkCalendarEntryOrder): [WorkCalendarEntry]
  ""
  entriesAggregate(filter: WorkCalendarEntryFilter): WorkCalendarEntryAggregateResult
  " The equipment version(s) associated with the work calendar. "
  equipmentVersions(filter: EquipmentVersionFilter, first: Int, offset: Int, order: EquipmentVersionOrder): [EquipmentVersion]
  ""
  equipmentVersionsAggregate(filter: EquipmentVersionFilter): EquipmentVersionAggregateResult
  " Unique internal database identifier. "
  iid: ID!
  " The name of the work calendar. "
  name: String!
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
}
""
type WorkCalendarAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  nameMax: String
  ""
  nameMin: String
}
"""
Work Calendar domain describes the definition of shift patterns and non-working days
The Work Calendar Definition defines the rule used to determine work calendar entries.
It contains the recurrence time for the rule, the duration of the entry, the entry type, and properties associated with the entry.
Standard Entry Types include Working Time and Non-Working Time. The entry may include property definitions.
The definition uses the rrule.js library to generate calendar events, and the fields available match
the configuration fields required by rrule.js
"""
type WorkCalendarDefinitionEntry {
  " The hour in which the work calendar definition entry recurs. "
  byHour: [Int]
  " The minute in which the work calendar definition entry recurs. "
  byMinute: [Int]
  " The month in which the work calendar definition entry recurs. "
  byMonth: [Int]
  " The month day in which the work calendar definition entry recurs. "
  byMonthDay: [Int]
  " The second in which the work calendar definition entry recurs. "
  bySecond: [Int]
  " The set position in which the work calendar definition entry recurs. "
  bySetPos: [Int]
  " The day on which the work calendar definition entry recurs. "
  byWeekDay: [Weekday]
  " The week number in which the work calendar definition entry recurs. "
  byWeekNo: [Int]
  " The day of the year in which the work calendar definition entry recurs. "
  byYearDay: [Int]
  " The Work Calendar Entries associated with the definition entry. "
  calendarEntries(filter: WorkCalendarEntryFilter, first: Int, offset: Int, order: WorkCalendarEntryOrder): [WorkCalendarEntry]
  ""
  calendarEntriesAggregate(filter: WorkCalendarEntryFilter): WorkCalendarEntryAggregateResult
  " Describes the number of repititions of the event. "
  count: Int
  " Description of the workCalendarDefinitionEntry. "
  description: String
  " The duration of the work calendar definition entry. "
  duration: String
  " Describes the end date/time of the work calendar entry. "
  endDateTime: DateTime
  " Defines the type of work calendar definition entry. "
  entryType: WorkCalendarEntryType!
  "  Describes how often the work calendar Entry repeats. "
  freq: Frequency!
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: EquipmentFilter): Equipment
  "A unique identification of a specific work calendar."
  iid: ID!
  " Describes the interval between calendar events. "
  interval: Int
  " Boolean denoting whether the WorkCalendarDefinitionEntry is active. "
  isActive: Boolean
  " The Work Calendar Definition Properties related to the entry. "
  properties(filter: WorkCalendarDefinitionEntryPropertyFilter, first: Int, offset: Int, order: WorkCalendarDefinitionEntryPropertyOrder): [WorkCalendarDefinitionEntryProperty]
  ""
  propertiesAggregate(filter: WorkCalendarDefinitionEntryPropertyFilter): WorkCalendarDefinitionEntryPropertyAggregateResult
  " Describes the start date/time of the work calendar entry. "
  startDateTime: DateTime!
  " Describes the week start. "
  wkst: Weekday
  " The Work Calendar associated with the entry. "
  workCalendar(filter: WorkCalendarFilter): WorkCalendar
}
""
type WorkCalendarDefinitionEntryAggregateResult {
  ""
  count: Int
  ""
  countAvg: Float
  ""
  countMax: Int
  ""
  countMin: Int
  ""
  countSum: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  durationMax: String
  ""
  durationMin: String
  ""
  endDateTimeMax: DateTime
  ""
  endDateTimeMin: DateTime
  ""
  intervalAvg: Float
  ""
  intervalMax: Int
  ""
  intervalMin: Int
  ""
  intervalSum: Int
  ""
  startDateTimeMax: DateTime
  ""
  startDateTimeMin: DateTime
}
"""
The work calendar definition entry property shall be defined as property on a work calendar definition entry.
A work calendar definition entry property may contain nested work calendar definition entry property(s).
"""
type WorkCalendarDefinitionEntryProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The child properties associated with the property. "
  children(filter: WorkCalendarDefinitionEntryPropertyFilter, first: Int, offset: Int, order: WorkCalendarDefinitionEntryPropertyOrder): [WorkCalendarDefinitionEntryProperty]
  ""
  childrenAggregate(filter: WorkCalendarDefinitionEntryPropertyFilter): WorkCalendarDefinitionEntryPropertyAggregateResult
  " Description of the workCalendarDefinitionEntryProperty. "
  description: String
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  "A unique identification of a specific work calendar."
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The operational location associated with the property. "
  operationalLocation(filter: OperationalLocationFilter): OperationalLocation
  " The parent property associated with the property. "
  parent(filter: WorkCalendarDefinitionEntryPropertyFilter): WorkCalendarDefinitionEntryProperty
  " The default value, set of values, or range of the property. "
  quantity: Float!
  " The unit of measure of the associated property value. "
  quantityUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The Spatial Definition associated with the property. "
  spatialDefinition(filter: SpatialDefinitionFilter): SpatialDefinition
  " The use of the property. "
  use: String
  " The work calendar defintion entry associated with the property. "
  workCalendarDefinitionEntry(filter: WorkCalendarDefinitionEntryFilter): WorkCalendarDefinitionEntry!
}
""
type WorkCalendarDefinitionEntryPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
  ""
  useMax: String
  ""
  useMin: String
}
"""
The work calendar entry shall be defined as a calendar entry with a start date and time, a finish date and time, and an entry type.
A work calendar entry may be made up of zero or more nested work calendar entries.
"""
type WorkCalendarEntry {
  " The work calendar definition entry associated. "
  definition(filter: WorkCalendarDefinitionEntryFilter): WorkCalendarDefinitionEntry
  " The description of the work calendar entry. "
  description: String
  " The entry type of the calendar entry. "
  entryType: WorkCalendarEntryType!
  " The end time of the work calendar entry. "
  finishDateTime: DateTime!
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: EquipmentFilter): Equipment
  "A unique identification of a specific work calendar."
  iid: ID!
  " The boolean to define whether the entry is active. "
  isActive: Boolean
  " The properties associated with the entry. "
  properties(filter: WorkCalendarEntryPropertyFilter, first: Int, offset: Int, order: WorkCalendarEntryPropertyOrder): [WorkCalendarEntryProperty]
  ""
  propertiesAggregate(filter: WorkCalendarEntryPropertyFilter): WorkCalendarEntryPropertyAggregateResult
  " The start time of the work calendar entry. "
  startDateTime: DateTime!
  " The work calendar associated with the entry. "
  workCalendar(filter: WorkCalendarFilter): WorkCalendar
}
""
type WorkCalendarEntryAggregateResult {
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  finishDateTimeMax: DateTime
  ""
  finishDateTimeMin: DateTime
  ""
  startDateTimeMax: DateTime
  ""
  startDateTimeMin: DateTime
}
"""
The work calendar entry property shall be defined as a property on a work calendar entry. 
A work calendar entry property may contain nested work calendar entry property(s).
"""
type WorkCalendarEntryProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The child properties of the associated property. "
  children(filter: WorkCalendarEntryPropertyFilter, first: Int, offset: Int, order: WorkCalendarEntryPropertyOrder): [WorkCalendarEntryProperty]
  ""
  childrenAggregate(filter: WorkCalendarEntryPropertyFilter): WorkCalendarEntryPropertyAggregateResult
  " The description of the work calendar entry property. "
  description: String
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  "A unique identification of a specific work calendar."
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The operational location associated with the work calendar entry property. "
  operationalLocation(filter: OperationalLocationFilter): OperationalLocation
  " The parent property of this property. "
  parent(filter: WorkCalendarEntryPropertyFilter): WorkCalendarEntryProperty
  " The quantity associated with the work calendar entry property. "
  quantity: Float!
  " The Unit of Measure associated with the value. "
  quantityUoM(filter: UnitOfMeasureFilter): UnitOfMeasure
  " The spatial definition associated with the work calendar entry property. "
  spatialDefinition(filter: SpatialDefinitionFilter): SpatialDefinition
  " The use associated with the work calendar entry property. "
  use: String
  " The work calendar entry associated with the property. "
  workCalendarEntry(filter: WorkCalendarEntryFilter): WorkCalendarEntry!
}
""
type WorkCalendarEntryPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  quantityAvg: Float
  ""
  quantityMax: Float
  ""
  quantityMin: Float
  ""
  quantitySum: Float
  ""
  useMax: String
  ""
  useMin: String
}
"""
The resources and instructions required to perform a unit of work for a specific job order shall be defined as a work directive.
A work directive may contain zero or more work directives, defining a hierarchy of work directives with the hierarchy defined through workflow specification nodes in the workflow specification.
There is one work directive for each job order.
It contains the specific information required to perform the job order and the workflow specification associated with the job order.
"""
type WorkDirective {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The related object(s), work directive, makes up part of this work directive as the whole. "
  children(filter: WorkDirectiveFilter, first: Int, offset: Int, order: WorkDirectiveOrder): [WorkDirective]
  ""
  childrenAggregate(filter: WorkDirectiveFilter): WorkDirectiveAggregateResult
  " Defines a comment on the work directive. "
  comments(filter: CommentFilter, first: Int, offset: Int, order: CommentOrder): [Comment]
  ""
  commentsAggregate(filter: CommentFilter): CommentAggregateResult
  " Contains additional information and descriptions of the work directive. "
  description: String
  " Duration, if known. "
  duration: Float
  " The units of measure of the duration, if defined. "
  durationUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The equipment specifications related to this work definition. "
  equipmentSpecifications(filter: EquipmentSpecificationFilter, first: Int, offset: Int, order: EquipmentSpecificationOrder): [EquipmentSpecification]
  ""
  equipmentSpecificationsAggregate(filter: EquipmentSpecificationFilter): EquipmentSpecificationAggregateResult
  """
   This work directive ID which is applied test method to obtain the measurement of the evaluated property 
    for test specification of the testable object property ID. 
  """
  evaluatedProperties(filter: EvaluatedPropertyFilter, first: Int, offset: Int, order: EvaluatedPropertyOrder): [EvaluatedProperty]
  ""
  evaluatedPropertiesAggregate(filter: EvaluatedPropertyFilter): EvaluatedPropertyAggregateResult
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification as the work directive ID. "
  id: String!
  ""
  id_version: String!
  " Unique internal database identifier. "
  iid: ID!
  " A unique identification of the job order associated with this work directive. "
  jobOrders(filter: JobOrderFilter, first: Int, offset: Int, order: JobOrderOrder): [JobOrder]
  ""
  jobOrdersAggregate(filter: JobOrderFilter): JobOrderAggregateResult
  " Job response(s) corresponding to this work directive. "
  jobResponses(filter: JobResponseFilter, first: Int, offset: Int, order: JobResponseOrder): [JobResponse]
  ""
  jobResponsesAggregate(filter: JobResponseFilter): JobResponseAggregateResult
  " The material specifications related to this work definition. "
  materialSpecifications(filter: MaterialSpecificationFilter, first: Int, offset: Int, order: MaterialSpecificationOrder): [MaterialSpecification]
  ""
  materialSpecificationsAggregate(filter: MaterialSpecificationFilter): MaterialSpecificationAggregateResult
  " The parameter specifications related to this work definition. "
  parameterSpecifications(filter: ParameterSpecificationFilter, first: Int, offset: Int, order: ParameterSpecificationOrder): [ParameterSpecification]
  ""
  parameterSpecificationsAggregate(filter: ParameterSpecificationFilter): ParameterSpecificationAggregateResult
  " The related object, work directive, this work directive makes up part of as the whole."
  parent(filter: WorkDirectiveFilter): WorkDirective
  " The personnel specifications related to this work definition. "
  personnelSpecifications(filter: PersonnelSpecificationFilter, first: Int, offset: Int, order: PersonnelSpecificationOrder): [PersonnelSpecification]
  ""
  personnelSpecificationsAggregate(filter: PersonnelSpecificationFilter): PersonnelSpecificationAggregateResult
  " The physical asset specifications related to this work definition. "
  physicalAssetSpecifications(filter: PhysicalAssetSpecificationFilter, first: Int, offset: Int, order: PhysicalAssetSpecificationOrder): [PhysicalAssetSpecification]
  ""
  physicalAssetSpecificationsAggregate(filter: PhysicalAssetSpecificationFilter): PhysicalAssetSpecificationAggregateResult
  """
   This work directive ID which is applied test method to obtain the measurement of the property measurement 
    for test specification of the testable object property ID. 
  """
  propertyMeasurements(filter: PropertyMeasurementFilter, first: Int, offset: Int, order: PropertyMeasurementOrder): [PropertyMeasurement]
  ""
  propertyMeasurementsAggregate(filter: PropertyMeasurementFilter): PropertyMeasurementAggregateResult
  " The date and time on which the work directive was published or generated. "
  publishedDate: DateTime
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " Can have electronic Signature. "
  signatures(filter: SignatureFilter, first: Int, offset: Int, order: SignatureOrder): [Signature]
  ""
  signaturesAggregate(filter: SignatureFilter): SignatureAggregateResult
  " Indicates the state of the job response. "
  state: WorkDirectiveState
  " An identification of the version of the work directive version. "
  version: String!
  " The work master used to create this work directive. "
  workMaster(filter: WorkMasterFilter): WorkMaster
  " Describes the category of work. "
  workType: WorkType
  " This work directive defined in part by the workflow specification(s). "
  workflowSpecification(filter: WorkflowSpecificationFilter): WorkflowSpecification
}
""
type WorkDirectiveAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  durationAvg: Float
  ""
  durationMax: Float
  ""
  durationMin: Float
  ""
  durationSum: Float
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  publishedDateMax: DateTime
  ""
  publishedDateMin: DateTime
  ""
  versionMax: String
  ""
  versionMin: String
}
"""
Work masters are template information not associated with any specific job order.
Work directives start as copies of work masters and are augmented with information for a specific job order.
A work master may have a reference to one or more operations definitions or operations segments.
In this situation, the work master defines the detailed steps needed to accomplish all or part of the operation.
"""
type WorkMaster {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The related object(s) makes up part of this work master as the whole. "
  children(filter: WorkMasterFilter, first: Int, offset: Int, order: WorkMasterOrder): [WorkMaster]
  ""
  childrenAggregate(filter: WorkMasterFilter): WorkMasterAggregateResult
  " Defines a comment on the work master. "
  comments(filter: CommentFilter, first: Int, offset: Int, order: CommentOrder): [Comment]
  ""
  commentsAggregate(filter: CommentFilter): CommentAggregateResult
  " This parent work master is defined by the child work master(s) including objects, relationships, and properties. "
  definedBy(filter: WorkMasterFilter, first: Int, offset: Int, order: WorkMasterOrder): [WorkMaster]
  ""
  definedByAggregate(filter: WorkMasterFilter): WorkMasterAggregateResult
  " This child pattern work master includes objects, relationships and properties of the parent pattern work master. "
  defines(filter: WorkMasterFilter): WorkMaster
  " Defines the type of the work master. "
  definitionType: DefinitionType!
  " Contains additional information and descriptions of the work master. "
  description: String
  " Duration, if known. "
  duration: Float
  " The units of measure of the duration, if defined. "
  durationUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The equipment specifications related to this work definition. "
  equipmentSpecifications(filter: EquipmentSpecificationFilter, first: Int, offset: Int, order: EquipmentSpecificationOrder): [EquipmentSpecification]
  ""
  equipmentSpecificationsAggregate(filter: EquipmentSpecificationFilter): EquipmentSpecificationAggregateResult
  """
   This work master ID which is applied test method to obtain the measurement of the evaluated property 
    for test specification of the testable object property ID. 
  """
  evaluatedProperties(filter: EvaluatedPropertyFilter, first: Int, offset: Int, order: EvaluatedPropertyOrder): [EvaluatedProperty]
  ""
  evaluatedPropertiesAggregate(filter: EvaluatedPropertyFilter): EvaluatedPropertyAggregateResult
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification as the work master ID. "
  id: String!
  ""
  id_version: String!
  " Unique internal database identifier. "
  iid: ID!
  " A unique identification of the job order associated with this work master. "
  jobOrders(filter: JobOrderFilter, first: Int, offset: Int, order: JobOrderOrder): [JobOrder]
  ""
  jobOrdersAggregate(filter: JobOrderFilter): JobOrderAggregateResult
  " Job response(s) corresponding to this work master. "
  jobResponses(filter: JobResponseFilter, first: Int, offset: Int, order: JobResponseOrder): [JobResponse]
  ""
  jobResponsesAggregate(filter: JobResponseFilter): JobResponseAggregateResult
  " The material specifications related to this work definition. "
  materialSpecifications(filter: MaterialSpecificationFilter, first: Int, offset: Int, order: MaterialSpecificationOrder): [MaterialSpecification]
  ""
  materialSpecificationsAggregate(filter: MaterialSpecificationFilter): MaterialSpecificationAggregateResult
  " The operations definition associated to this work master. "
  operationsDefinition(filter: OperationsDefinitionFilter): OperationsDefinition
  " The operations segment associated to this work master. "
  operationsSegment(filter: OperationsSegmentFilter): OperationsSegment
  " The parameter specifications related to this work definition. "
  parameterSpecifications(filter: ParameterSpecificationFilter, first: Int, offset: Int, order: ParameterSpecificationOrder): [ParameterSpecification]
  ""
  parameterSpecificationsAggregate(filter: ParameterSpecificationFilter): ParameterSpecificationAggregateResult
  " The related object this work master makes up part of as the whole. "
  parent(filter: WorkMasterFilter): WorkMaster
  " The personnel specifications related to this work definition. "
  personnelSpecifications(filter: PersonnelSpecificationFilter, first: Int, offset: Int, order: PersonnelSpecificationOrder): [PersonnelSpecification]
  ""
  personnelSpecificationsAggregate(filter: PersonnelSpecificationFilter): PersonnelSpecificationAggregateResult
  " The physical asset specifications related to this work definition. "
  physicalAssetSpecifications(filter: PhysicalAssetSpecificationFilter, first: Int, offset: Int, order: PhysicalAssetSpecificationOrder): [PhysicalAssetSpecification]
  ""
  physicalAssetSpecificationsAggregate(filter: PhysicalAssetSpecificationFilter): PhysicalAssetSpecificationAggregateResult
  " The process segment associated to this work master. "
  processSegment(filter: ProcessSegmentFilter): ProcessSegment
  """
   This work master ID which is applied test method to obtain the measurement of the property measurement 
    for test specification of the testable object property ID. 
  """
  propertyMeasurements(filter: PropertyMeasurementFilter, first: Int, offset: Int, order: PropertyMeasurementOrder): [PropertyMeasurement]
  ""
  propertyMeasurementsAggregate(filter: PropertyMeasurementFilter): PropertyMeasurementAggregateResult
  " The date and time on which the work master was published or generated. "
  publishedDate: DateTime
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " Can have electronic Signature. "
  signatures(filter: SignatureFilter, first: Int, offset: Int, order: SignatureOrder): [Signature]
  ""
  signaturesAggregate(filter: SignatureFilter): SignatureAggregateResult
  " An identification of the version of the work master version. "
  version: String!
  " The work directive(s) created from this work master. "
  workDirectives(filter: WorkDirectiveFilter, first: Int, offset: Int, order: WorkDirectiveOrder): [WorkDirective]
  ""
  workDirectivesAggregate(filter: WorkDirectiveFilter): WorkDirectiveAggregateResult
  " Describes the category of work. "
  workType: WorkType
  " This work master defined in part by the workflow specification(s). "
  workflowSpecification(filter: WorkflowSpecificationFilter): WorkflowSpecification
}
""
type WorkMasterAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  durationAvg: Float
  ""
  durationMax: Float
  ""
  durationMin: Float
  ""
  durationSum: Float
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  publishedDateMax: DateTime
  ""
  publishedDateMin: DateTime
  ""
  versionMax: String
  ""
  versionMin: String
}
"""
Work performance shall be defined as a collection of work responses that is a report on requested 
manufacturing information. Work responses are responses from manufacturing that are associated with 
a work request. There may be one or more work responses for a single work request if the manufacturing 
facility needs to split the work request into smaller elements.

A work performance may be made up of zero or more nested work performances.
"""
type WorkPerformance {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The related object(s) makes up part of this work performance as the whole. "
  children(filter: WorkPerformanceFilter, first: Int, offset: Int, order: WorkPerformanceOrder): [WorkPerformance]
  ""
  childrenAggregate(filter: WorkPerformanceFilter): WorkPerformanceAggregateResult
  " Contains additional information and descriptions of the work performance. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The ending time of the associated work performance. "
  endDateTime: DateTime
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of the work performance and could include version and revision identification. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The related object this work performance makes up part of as the whole. "
  parent(filter: WorkPerformanceFilter): WorkPerformance
  " The date and time in which the work performance was published or generated. "
  publishedDate: DateTime
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " The starting time of the associated work performance. "
  startDateTime: DateTime
  " The work response(s) related to this work performance. "
  workResponses(filter: WorkResponseFilter, first: Int, offset: Int, order: WorkResponseOrder): [WorkResponse!]!
  ""
  workResponsesAggregate(filter: WorkResponseFilter): WorkResponseAggregateResult
  " An identification of the associated work schedule. "
  workSchedule(filter: WorkScheduleFilter): WorkSchedule
  " Indicates the state of the work performance. "
  workState: JobState
  " Describes the category of work. "
  workType: WorkType
}
""
type WorkPerformanceAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  endDateTimeMax: DateTime
  ""
  endDateTimeMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  publishedDateMax: DateTime
  ""
  publishedDateMin: DateTime
  ""
  startDateTimeMax: DateTime
  ""
  startDateTimeMin: DateTime
}
"""
A request for work defined by a set of job orders shall be defined as a work request. A work request 
contains the information required by manufacturing to fulfill scheduled work. This may be a subset of 
the business information, or it may contain additional information not normally used by the business system. 

A work request shall contain at least one job order. A work request may include when to start work, 
typically used if a scheduling system controls the schedule; when the work is to be finished, typically 
used if the manufacturing operations system controls its internal schedule to meet deadlines; the priority 
of the request, typically used if exact ordering of production is not externally scheduled.

Additional information may be described in the associated job order's parameters, personnel requirements, 
equipment requirements, and material requirements. A work request may be made up of zero or more nested 
work requests. A work request may be reported on by one or more work responses.
"""
type WorkRequest {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The related object(s), work request, makes up part of this work request as the whole. "
  children(filter: WorkRequestFilter, first: Int, offset: Int, order: WorkRequestOrder): [WorkRequest]
  ""
  childrenAggregate(filter: WorkRequestFilter): WorkRequestAggregateResult
  " Defines a comment on the work request. "
  comments(filter: CommentFilter, first: Int, offset: Int, order: CommentOrder): [Comment]
  ""
  commentsAggregate(filter: CommentFilter): CommentAggregateResult
  " Contains additional information and descriptions of the work request. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of the work request. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The related object(s) job order makes up part of this work request as the whole. "
  jobOrders(filter: JobOrderFilter, first: Int, offset: Int, order: JobOrderOrder): [JobOrder!]!
  ""
  jobOrdersAggregate(filter: JobOrderFilter): JobOrderAggregateResult
  " The operations request(s) related to this work request. "
  operationsRequest(filter: OperationsRequestFilter): OperationsRequest
  " The related object, work request, this work request makes up part of as the whole. "
  parent(filter: WorkRequestFilter): WorkRequest
  " When work is to be completed. "
  plannedEndDateTime: DateTime
  " When work is to be started. "
  plannedStartDateTime: DateTime
  " The priority of the work request. "
  priority: String
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " Indicates the state of the work request. "
  requestState: ScheduleState!
  " The segment requirement(s) related to this work request. "
  segmentRequirement(filter: SegmentRequirementFilter): SegmentRequirement
  " Can have electronic Signature. "
  signatures(filter: SignatureFilter, first: Int, offset: Int, order: SignatureOrder): [Signature]
  ""
  signaturesAggregate(filter: SignatureFilter): SignatureAggregateResult
  " The work response(s) related to this work request. "
  workResponses(filter: WorkResponseFilter, first: Int, offset: Int, order: WorkResponseOrder): [WorkResponse]
  ""
  workResponsesAggregate(filter: WorkResponseFilter): WorkResponseAggregateResult
  " The work schedule defined in part by this work request. "
  workSchedule(filter: WorkScheduleFilter): WorkSchedule!
  " Describes the category of work. "
  workType: WorkType!
}
""
type WorkRequestAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  plannedEndDateTimeMax: DateTime
  ""
  plannedEndDateTimeMin: DateTime
  ""
  plannedStartDateTimeMax: DateTime
  ""
  plannedStartDateTimeMin: DateTime
  ""
  priorityMax: String
  ""
  priorityMin: String
}
"""
The responses from manufacturing that are associated with a work request shall be defined as work 
responses. There may be one or more work responses for a single work request if the manufacturing 
facility needs to split the work request into smaller elements of work. 

A work response may include the status of the request, such as the percentage complete, a finished 
status, or an aborted status.

A work response may be made up of zero or more nested work responses.
"""
type WorkResponse {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The related object(s) makes up part of this work response as the whole. "
  children(filter: WorkResponseFilter, first: Int, offset: Int, order: WorkResponseOrder): [WorkResponse]
  ""
  childrenAggregate(filter: WorkResponseFilter): WorkResponseAggregateResult
  " Defines a comment on the work response. "
  comments(filter: CommentFilter, first: Int, offset: Int, order: CommentOrder): [Comment]
  ""
  commentsAggregate(filter: CommentFilter): CommentAggregateResult
  " Contains additional information and descriptions of the work response. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The ending time of this work response. "
  endDateTime: DateTime
  " The events associated with this work response. "
  events(filter: EventFilter, first: Int, offset: Int, order: EventOrder): [Event]
  ""
  eventsAggregate(filter: EventFilter): EventAggregateResult
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " An identification within the associated work performance. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The job responses that make up this work response. "
  jobResponses(filter: JobResponseFilter, first: Int, offset: Int, order: JobResponseOrder): [JobResponse!]!
  ""
  jobResponsesAggregate(filter: JobResponseFilter): JobResponseAggregateResult
  " The related object this work response makes up part of as the whole. "
  parent(filter: WorkResponseFilter): WorkResponse
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " Indicates the state of the work response. "
  responseState: JobState
  " The segment response contains in part this work response. "
  segmentResponse(filter: SegmentResponseFilter): SegmentResponse
  " Can have electronic Signature. "
  signatures(filter: SignatureFilter, first: Int, offset: Int, order: SignatureOrder): [Signature]
  ""
  signaturesAggregate(filter: SignatureFilter): SignatureAggregateResult
  " The starting time of this work response. "
  startDateTime: DateTime
  " The work performance contains in part this work response. "
  workPerformance(filter: WorkPerformanceFilter): WorkPerformance!
  " An identification of the associated work request. "
  workRequest(filter: WorkRequestFilter): WorkRequest
  " Describes the category of work. "
  workType: WorkType
}
""
type WorkResponseAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  endDateTimeMax: DateTime
  ""
  endDateTimeMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  startDateTimeMax: DateTime
  ""
  startDateTimeMin: DateTime
}
"A request for work shall be listed as a work schedule. A work schedule shall be made up of one or more work requests"
type WorkSchedule {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The related object(s), work schedule, makes up part of this work schedule as the whole. "
  children(filter: WorkScheduleFilter, first: Int, offset: Int, order: WorkScheduleOrder): [WorkSchedule]
  ""
  childrenAggregate(filter: WorkScheduleFilter): WorkScheduleAggregateResult
  " Contains additional information and descriptions of the work schedule. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  " A unique identification of the work schedule and could include version and revision identification. "
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " The related object, work schedule, this work schedule makes up part of as the whole. "
  parent(filter: WorkScheduleFilter): WorkSchedule
  " The date and time on which the work schedule was published or generated. "
  publishedDate: DateTime
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " Indicates the state of the work schedule. "
  scheduleState: ScheduleState
  " The ending time for the associated work schedule. "
  scheduledEndDate: DateTime
  " The starting time for the associated work schedule. "
  scheduledStartDate: DateTime
  " The work performance(s) correspinding to this work schedule. "
  workPerformances(filter: WorkPerformanceFilter, first: Int, offset: Int, order: WorkPerformanceOrder): [WorkPerformance]
  ""
  workPerformancesAggregate(filter: WorkPerformanceFilter): WorkPerformanceAggregateResult
  " The work request(s) that make up this work schedule. "
  workRequests(filter: WorkRequestFilter, first: Int, offset: Int, order: WorkRequestOrder): [WorkRequest]
  ""
  workRequestsAggregate(filter: WorkRequestFilter): WorkRequestAggregateResult
  " Describes the category of work. "
  workType: WorkType
}
""
type WorkScheduleAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  publishedDateMax: DateTime
  ""
  publishedDateMin: DateTime
  ""
  scheduledEndDateMax: DateTime
  ""
  scheduledEndDateMin: DateTime
  ""
  scheduledStartDateMax: DateTime
  ""
  scheduledStartDateMin: DateTime
}
"""
WorkflowError: Extension of ISA95 Standard to accommodate BPMN2.0. Sooner or
later, most processes require error handling, which can be represented in BPMN 
by means of the message event. You’ll recognize it as the small lightning bolt.
"""
type WorkflowError {
  ""
  code: String
  ""
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  ""
  node(filter: WorkflowSpecificationNodeFilter): WorkflowSpecificationNode
  ""
  reference: String
  ""
  workflowSpecificationVersion(filter: WorkflowSpecificationVersionFilter): WorkflowSpecificationVersion
}
""
type WorkflowErrorAggregateResult {
  ""
  codeMax: String
  ""
  codeMin: String
  ""
  count: Int
  ""
  idMax: String
  ""
  idMin: String
  ""
  referenceMax: String
  ""
  referenceMin: String
}
"""
WorkflowMessage: Extension of ISA95 Standard to accommodate BPMN2.0. Sooner or
later, most processes require communication, which can be represented in BPMN 
by means of the message event. You’ll recognize it as the small envelope. The 
meaning of “message” in BPMN is not restricted to letters, e-mails, or calls.
Any action that refers to a specific addressee and represents or contains
information for the addressee is a message.
"""
type WorkflowMessage {
  ""
  enabled: Boolean!
  ""
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  ""
  node(filter: WorkflowSpecificationNodeFilter): WorkflowSpecificationNode
  ""
  reference: String
  ""
  workflowSpecificationVersion(filter: WorkflowSpecificationVersionFilter): WorkflowSpecificationVersion
}
""
type WorkflowMessageAggregateResult {
  ""
  count: Int
  ""
  idMax: String
  ""
  idMin: String
  ""
  referenceMax: String
  ""
  referenceMin: String
}
"""
WorkflowShape: Extension of ISA95 Standard to accommodate BPMN2.0. The shape 
stores the information needed to display the action in a BPMN diagram.
"""
type WorkflowShape {
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  ""
  height: String!
  ""
  icon: String
  """
  In combination with the Version field, the id is a unique identification of a specific workflow specification that is consistent outside the scope of this database.
  The ID and Version are used in other parts of the model when the workflow specification needs to be identified.
  """
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  ""
  node(filter: WorkflowSpecificationNodeFilter): WorkflowSpecificationNode!
  ""
  width: String!
  ""
  x: String!
  ""
  y: String!
}
""
type WorkflowShapeAggregateResult {
  ""
  count: Int
  ""
  heightMax: String
  ""
  heightMin: String
  ""
  iconMax: String
  ""
  iconMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  widthMax: String
  ""
  widthMin: String
  ""
  xMax: String
  ""
  xMin: String
  ""
  yMax: String
  ""
  yMin: String
}
"""
A workflow specification is represented as a collection of nodes and 
connections. Each node is defined by a type definition, and each connection is
defined by a type definition. A node may contain a reference to a work 
definition. Execution of a Workflow Specification my be requested by a 
JobOrder, and be recorded as a JobResponse
"""
type WorkflowSpecification {
  ""
  _createdBy: String
  ""
  _createdDateTime: DateTime
  ""
  _modifiedBy: String
  ""
  _modifiedDateTime: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " the currently active version. to find a version that was active at a point in time, use versions with a filter "
  activeVersion(filter: WorkflowSpecificationVersionFilter): WorkflowSpecificationVersion
  " this workflow specification is called by the listed workflowSpecification nodes "
  calledByNodes(filter: WorkflowSpecificationNodeFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeOrder): [WorkflowSpecificationNode]
  ""
  calledByNodesAggregate(filter: WorkflowSpecificationNodeFilter): WorkflowSpecificationNodeAggregateResult
  ""
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  ""
  includedIn(filter: WorkflowSpecificationVersionFilter, first: Int, offset: Int, order: WorkflowSpecificationVersionOrder): [WorkflowSpecificationVersion]
  ""
  includedInAggregate(filter: WorkflowSpecificationVersionFilter): WorkflowSpecificationVersionAggregateResult
  ""
  jobOrders(filter: JobOrderFilter, first: Int, offset: Int, order: JobOrderOrder): [JobOrder]
  ""
  jobOrdersAggregate(filter: JobOrderFilter): JobOrderAggregateResult
  ""
  jobResponses(filter: JobResponseFilter, first: Int, offset: Int, order: JobResponseOrder): [JobResponse]
  ""
  jobResponsesAggregate(filter: JobResponseFilter): JobResponseAggregateResult
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  ""
  rules(filter: RuleFilter, first: Int, offset: Int, order: RuleOrder): [Rule]
  ""
  rulesAggregate(filter: RuleFilter): RuleAggregateResult
  ""
  stateModelActions(filter: StateModelActionFilter, first: Int, offset: Int, order: StateModelActionOrder): [StateModelAction]
  ""
  stateModelActionsAggregate(filter: StateModelActionFilter): StateModelActionAggregateResult
  " link to all available versions for this EquipmentClass "
  versions(filter: WorkflowSpecificationVersionFilter, first: Int, offset: Int, order: WorkflowSpecificationVersionOrder): [WorkflowSpecificationVersion]
  ""
  versionsAggregate(filter: WorkflowSpecificationVersionFilter): WorkflowSpecificationVersionAggregateResult
  ""
  workDirectives(filter: WorkDirectiveFilter, first: Int, offset: Int, order: WorkDirectiveOrder): [WorkDirective]
  ""
  workDirectivesAggregate(filter: WorkDirectiveFilter): WorkDirectiveAggregateResult
  ""
  workMasters(filter: WorkMasterFilter, first: Int, offset: Int, order: WorkMasterOrder): [WorkMaster]
  ""
  workMastersAggregate(filter: WorkMasterFilter): WorkMasterAggregateResult
}
""
type WorkflowSpecificationAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdDateTimeMax: DateTime
  ""
  _createdDateTimeMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedDateTimeMax: DateTime
  ""
  _modifiedDateTimeMin: DateTime
  ""
  count: Int
  ""
  idMax: String
  ""
  idMin: String
  ""
  nextVersionMax: String
  ""
  nextVersionMin: String
}
"""
A workflow specification connection represents a many-to-many link between 
workflow specification nodes. The workflow specification connection type 
defines the allowed multiplicity of the "connects to" and "connects from"
relationships.
"""
type WorkflowSpecificationConnection {
  ""
  _createdBy: String
  ""
  _createdDateTime: DateTime
  ""
  _modifiedBy: String
  ""
  _modifiedDateTime: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  ""
  condition: String
  "The workflow specification connection defined by this workflow specification connection type."
  connectionType(filter: WorkflowSpecificationConnectionTypeFilter): WorkflowSpecificationConnectionType!
  "Contains additional information and descriptions of the workflow specification connection."
  description: String
  "The workflow specification node connected from this workflow specification connection."
  from(filter: WorkflowSpecificationNodeFilter): WorkflowSpecificationNode!
  ""
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  ""
  name: String
  "The workflow specification connection property(s) defines in part of this workflow specification connection."
  properties(filter: WorkflowSpecificationConnectionPropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationConnectionPropertyOrder): [WorkflowSpecificationConnectionProperty]
  ""
  propertiesAggregate(filter: WorkflowSpecificationConnectionPropertyFilter): WorkflowSpecificationConnectionPropertyAggregateResult
  "The workflow specification node connected to this workflow specification connection."
  to(filter: WorkflowSpecificationNodeFilter): WorkflowSpecificationNode!
  ""
  waypoints(filter: WorkflowWaypointFilter, first: Int, offset: Int, order: WorkflowWaypointOrder): [WorkflowWaypoint]
  ""
  waypointsAggregate(filter: WorkflowWaypointFilter): WorkflowWaypointAggregateResult
  "The workflow specification defined in part by this workflow specification connection."
  workflowSpecificationVersion(filter: WorkflowSpecificationVersionFilter): WorkflowSpecificationVersion!
}
""
type WorkflowSpecificationConnectionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdDateTimeMax: DateTime
  ""
  _createdDateTimeMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedDateTimeMax: DateTime
  ""
  _modifiedDateTimeMin: DateTime
  ""
  conditionMax: String
  ""
  conditionMin: String
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  nameMax: String
  ""
  nameMin: String
}
"""
A property of a workflow specification connection shall be defined as a 
workflow specification connection property.

A workflow specification connection property may contain nested workflow 
specification connection property(s).

Workflow specification connection property(s) may be used to specify the 
defined properties that can be associated with the specific connection.
"""
type WorkflowSpecificationConnectionProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The nested WorkflowSpecificationProperty(s) makes up part of this equipment property as the whole. "
  children(filter: WorkflowSpecificationConnectionPropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationConnectionPropertyOrder): [WorkflowSpecificationConnectionProperty]
  ""
  childrenAggregate(filter: WorkflowSpecificationConnectionPropertyFilter): WorkflowSpecificationConnectionPropertyAggregateResult
  ""
  connection(filter: WorkflowSpecificationConnectionFilter): WorkflowSpecificationConnection!
  ""
  dataType: DataType
  ""
  definitionType: DefinitionType!
  " Additional information about the WorkflowSpecificationProperty. "
  description: String
  " Uniquely identifies the workflow specification property. Fully Qualified identifier that is unique in the database. Required attribute."
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " Uniquely identifies the workflow specification property. Required attribute."
  name: String!
  " The WorkflowSpecificationProperty that this nested equipment property makes up part of as the whole. "
  parent(filter: WorkflowSpecificationConnectionPropertyFilter): WorkflowSpecificationConnectionProperty
  " The value, set of values, or range of the property. "
  value: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type WorkflowSpecificationConnectionPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  nameMax: String
  ""
  nameMin: String
  ""
  valueMax: String
  ""
  valueMin: String
}
"""
A workflow specification connection type specifies the permissible information
on a connection.
"""
type WorkflowSpecificationConnectionType {
  ""
  _createdBy: String
  ""
  _createdDateTime: DateTime
  ""
  _modifiedBy: String
  ""
  _modifiedDateTime: DateTime
  ""
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  "The workflow specification connection(s) defined in part by this workflow specification connection type."
  connections(filter: WorkflowSpecificationConnectionFilter, first: Int, offset: Int, order: WorkflowSpecificationConnectionOrder): [WorkflowSpecificationConnection]
  ""
  connectionsAggregate(filter: WorkflowSpecificationConnectionFilter): WorkflowSpecificationConnectionAggregateResult
  "Contains additional information and descriptions of the workflow specification connection."
  description: String
  "Identifies where the exchanged information fits within the role based equipment hierarchy."
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  ""
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  "The workflow specification connection type property(s) defines in part this workflow specification connection type."
  properties(filter: WorkflowSpecificationConnectionTypePropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationConnectionTypePropertyOrder): [WorkflowSpecificationConnectionTypeProperty]
  ""
  propertiesAggregate(filter: WorkflowSpecificationConnectionTypePropertyFilter): WorkflowSpecificationConnectionTypePropertyAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
}
""
type WorkflowSpecificationConnectionTypeAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdDateTimeMax: DateTime
  ""
  _createdDateTimeMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedDateTimeMax: DateTime
  ""
  _modifiedDateTimeMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  idMax: String
  ""
  idMin: String
}
"""
A property of a workflow specification connection type shall be defined as a workflow specification connection type property.

A workflow specification connection type property(s) specifies the allowed properties that can be associated with specific workflow specification connections.
"""
type WorkflowSpecificationConnectionTypeProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The nested WorkflowSpecificationProperty(s) makes up part of this equipment property as the whole. "
  children(filter: WorkflowSpecificationConnectionTypePropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationConnectionTypePropertyOrder): [WorkflowSpecificationConnectionTypeProperty]
  ""
  childrenAggregate(filter: WorkflowSpecificationConnectionTypePropertyFilter): WorkflowSpecificationConnectionTypePropertyAggregateResult
  ""
  connectionType(filter: WorkflowSpecificationConnectionTypeFilter): WorkflowSpecificationConnectionType!
  ""
  dataType: DataType
  ""
  definitionType: DefinitionType!
  " Additional information about the WorkflowSpecificationProperty. "
  description: String
  " Uniquely identifies the workflow specification property. Fully Qualified identifier that is unique in the database. Required attribute."
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " Uniquely identifies the workflow specification property. Required attribute."
  name: String!
  " The WorkflowSpecificationProperty that this nested equipment property makes up part of as the whole. "
  parent(filter: WorkflowSpecificationConnectionTypePropertyFilter): WorkflowSpecificationConnectionTypeProperty
  " The value, set of values, or range of the property. "
  value: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type WorkflowSpecificationConnectionTypePropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  nameMax: String
  ""
  nameMin: String
  ""
  valueMax: String
  ""
  valueMin: String
}
"""
A workflow specification node is a step in a workflow. It may have a reference
to an activity executed in Level 2, a reference to a work definition, a nested
workflow specification, or an entity used in the represented format (such as a
decision element, transition condition, or starting point).

NOTE:
Nested workflow specifications, such as the ISA-88.00.03 recipe hierarchy, can 
be represented through workflow specification nodes that contain other workflow
specifications (a unit procedure contains the operation definition).
"""
type WorkflowSpecificationNode {
  ""
  _createdBy: String
  ""
  _createdDateTime: DateTime
  ""
  _modifiedBy: String
  ""
  _modifiedDateTime: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The Node that this node is attached to if it is a boundary event "
  attachedTo(filter: WorkflowSpecificationNodeFilter): WorkflowSpecificationNode
  " The Boundary Event nodes that are attached to this node "
  boundaryEvents(filter: WorkflowSpecificationNodeFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeOrder): [WorkflowSpecificationNode]
  ""
  boundaryEventsAggregate(filter: WorkflowSpecificationNodeFilter): WorkflowSpecificationNodeAggregateResult
  " This node is a call activity, and calls the workflow specification "
  containsWorkflowSpecification(filter: WorkflowSpecificationFilter): WorkflowSpecification
  " Contains additional information and descriptions of the workflow specification node. "
  description: String
  " The error definition that is linked to this node. "
  error(filter: WorkflowErrorFilter): WorkflowError
  " User Activities may have UI Forms that define how the user needs to respond to the activity."
  form(filter: FormFilter): Form
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  """
   Id is a unique identification of a specific workflow specification node that is consistent outside the scope of this database.
  The ID and Version are used in other parts of the model when the workflow specification needs to be identified. 
  """
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " This workflow specification node(s) to the workflow specification connection(s). "
  inflows(filter: WorkflowSpecificationConnectionFilter, first: Int, offset: Int, order: WorkflowSpecificationConnectionOrder): [WorkflowSpecificationConnection]
  ""
  inflowsAggregate(filter: WorkflowSpecificationConnectionFilter): WorkflowSpecificationConnectionAggregateResult
  " the values that are passed from the workflow instance variable context into the node for execution"
  inputs(filter: WorkflowSpecificationNodeVariableFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeVariableOrder): [WorkflowSpecificationNodeVariable]
  ""
  inputsAggregate(filter: WorkflowSpecificationNodeVariableFilter): WorkflowSpecificationNodeVariableAggregateResult
  " The workflow specification node related to this job response. "
  jobOrders(filter: JobOrderFilter, first: Int, offset: Int, order: JobOrderOrder): [JobOrder]
  ""
  jobOrdersAggregate(filter: JobOrderFilter): JobOrderAggregateResult
  " The workflow specification node related to this job response. "
  jobResponses(filter: JobResponseFilter, first: Int, offset: Int, order: JobResponseOrder): [JobResponse]
  ""
  jobResponsesAggregate(filter: JobResponseFilter): JobResponseAggregateResult
  " The message definition that is linked to this node. The way that the message is used depends on the node type"
  message(filter: WorkflowMessageFilter): WorkflowMessage
  ""
  nodeType(filter: WorkflowSpecificationNodeTypeFilter): WorkflowSpecificationNodeType!
  "  The workflow specification connection(s) from this workflow specification node. "
  outflows(filter: WorkflowSpecificationConnectionFilter, first: Int, offset: Int, order: WorkflowSpecificationConnectionOrder): [WorkflowSpecificationConnection]
  ""
  outflowsAggregate(filter: WorkflowSpecificationConnectionFilter): WorkflowSpecificationConnectionAggregateResult
  " After execution of the node, the values that are passed back into the workflow instance variable context "
  outputs(filter: WorkflowSpecificationNodeVariableFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeVariableOrder): [WorkflowSpecificationNodeVariable]
  ""
  outputsAggregate(filter: WorkflowSpecificationNodeVariableFilter): WorkflowSpecificationNodeVariableAggregateResult
  " This workflow specification node defined in part the workflow specification node property(s). "
  properties(filter: WorkflowSpecificationNodePropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationNodePropertyOrder): [WorkflowSpecificationNodeProperty]
  ""
  propertiesAggregate(filter: WorkflowSpecificationNodePropertyFilter): WorkflowSpecificationNodePropertyAggregateResult
  " User Tasks can have a Role assignment that defines the type of users that can complete the task"
  role: String
  ""
  shape(filter: WorkflowShapeFilter): WorkflowShape
  " The unit-test cases that verify the correct operation of this node"
  testCases(filter: WorkflowSpecificationNodeTestCaseFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeTestCaseOrder): [WorkflowSpecificationNodeTestCase]
  ""
  testCasesAggregate(filter: WorkflowSpecificationNodeTestCaseFilter): WorkflowSpecificationNodeTestCaseAggregateResult
  ""
  timer(filter: WorkflowTimerFilter): WorkflowTimer
  " If the user task requires a specific UI Component to be used, it is defined here"
  uiComponent: String
  " The workflow specification defines in part by this workflow specification node as the whole.  "
  workflowSpecificationVersion(filter: WorkflowSpecificationVersionFilter): WorkflowSpecificationVersion!
}
""
type WorkflowSpecificationNodeAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdDateTimeMax: DateTime
  ""
  _createdDateTimeMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedDateTimeMax: DateTime
  ""
  _modifiedDateTimeMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  roleMax: String
  ""
  roleMin: String
  ""
  uiComponentMax: String
  ""
  uiComponentMin: String
}
"""
A property of a workflow specification node shall be defined as a workflow
specification node property.

A workflow specification node property may contain nested workflow 
specification node property(s).

Workflow specification node property(s) may by used to specify the defined 
properties that can be associated with the specific node type.
"""
type WorkflowSpecificationNodeProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The nested WorkflowSpecificationProperty(s) makes up part of this equipment property as the whole. "
  children(filter: WorkflowSpecificationNodePropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationNodePropertyOrder): [WorkflowSpecificationNodeProperty]
  ""
  childrenAggregate(filter: WorkflowSpecificationNodePropertyFilter): WorkflowSpecificationNodePropertyAggregateResult
  ""
  dataType: DataType
  ""
  definitionType: DefinitionType!
  " Additional information about the WorkflowSpecificationProperty. "
  description: String
  " Uniquely identifies the workflow specification property. Fully Qualified identifier that is unique in the database. Required attribute."
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " Uniquely identifies the workflow specification property. Required attribute."
  name: String!
  ""
  node(filter: WorkflowSpecificationNodeFilter): WorkflowSpecificationNode!
  " The WorkflowSpecificationProperty that this nested equipment property makes up part of as the whole. "
  parent(filter: WorkflowSpecificationNodePropertyFilter): WorkflowSpecificationNodeProperty
  " The value, set of values, or range of the property. "
  value: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type WorkflowSpecificationNodePropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  nameMax: String
  ""
  nameMin: String
  ""
  valueMax: String
  ""
  valueMin: String
}
""
type WorkflowSpecificationNodeTestCase {
  ""
  expectedResult: String!
  ""
  id: String!
  ""
  iid: ID!
  ""
  inputJson: String!
  ""
  node(filter: WorkflowSpecificationNodeFilter): WorkflowSpecificationNode!
}
""
type WorkflowSpecificationNodeTestCaseAggregateResult {
  ""
  count: Int
  ""
  expectedResultMax: String
  ""
  expectedResultMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  inputJsonMax: String
  ""
  inputJsonMin: String
}
"""
A workflow specification node type defines the properties that can be 
associated with a specific workflow specification node.
"""
type WorkflowSpecificationNodeType {
  ""
  _createdBy: String
  ""
  _createdDateTime: DateTime
  ""
  _modifiedBy: String
  ""
  _modifiedDateTime: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Contains additional information and descriptions of the workflow specification node. "
  description: String
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  ""
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  ""
  name: String
  " The workflow specification node(s) defined in part by this workflow specification node type. "
  nodes(filter: WorkflowSpecificationNodeFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeOrder): [WorkflowSpecificationNode]
  ""
  nodesAggregate(filter: WorkflowSpecificationNodeFilter): WorkflowSpecificationNodeAggregateResult
  " The workflow specification node type property(s) defines in part this workflow specification node type. "
  properties(filter: WorkflowSpecificationNodeTypePropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeTypePropertyOrder): [WorkflowSpecificationNodeTypeProperty]
  ""
  propertiesAggregate(filter: WorkflowSpecificationNodeTypePropertyFilter): WorkflowSpecificationNodeTypePropertyAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
}
""
type WorkflowSpecificationNodeTypeAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdDateTimeMax: DateTime
  ""
  _createdDateTimeMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedDateTimeMax: DateTime
  ""
  _modifiedDateTimeMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  nameMax: String
  ""
  nameMin: String
}
"""
A property of a workflow specification node type shall be defined as a workflow
specification node type property. A workflow specification connection type 
property may contain nested workflow specification connection type property(s).

Workflow specification node properties types specify the allowed properties 
that can be associated with a specific workflow specification node.
"""
type WorkflowSpecificationNodeTypeProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The nested WorkflowSpecificationProperty(s) makes up part of this equipment property as the whole. "
  children(filter: WorkflowSpecificationNodeTypePropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeTypePropertyOrder): [WorkflowSpecificationNodeTypeProperty]
  ""
  childrenAggregate(filter: WorkflowSpecificationNodeTypePropertyFilter): WorkflowSpecificationNodeTypePropertyAggregateResult
  ""
  dataType: DataType
  ""
  definitionType: DefinitionType!
  " Additional information about the WorkflowSpecificationProperty. "
  description: String
  " Uniquely identifies the workflow specification property. Fully Qualified identifier that is unique in the database. Required attribute."
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " Uniquely identifies the workflow specification property. Required attribute."
  name: String!
  ""
  nodeType(filter: WorkflowSpecificationNodeTypeFilter): WorkflowSpecificationNodeType!
  " The WorkflowSpecificationProperty that this nested equipment property makes up part of as the whole. "
  parent(filter: WorkflowSpecificationNodeTypePropertyFilter): WorkflowSpecificationNodeTypeProperty
  " The value, set of values, or range of the property. "
  value: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
}
""
type WorkflowSpecificationNodeTypePropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  nameMax: String
  ""
  nameMin: String
  ""
  valueMax: String
  ""
  valueMin: String
}
""
type WorkflowSpecificationNodeVariable {
  " Unique internal database identifier. "
  iid: ID!
  ""
  source: String!
  ""
  target: String!
}
""
type WorkflowSpecificationNodeVariableAggregateResult {
  ""
  count: Int
  ""
  sourceMax: String
  ""
  sourceMin: String
  ""
  targetMax: String
  ""
  targetMin: String
}
"""
A property of a workflow specification shall be defined as a workflow 
specification property. A workflow specification property may contain nested
workflow specification property(s).
"""
type WorkflowSpecificationProperty {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime!
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " The nested WorkflowSpecificationProperty(s) makes up part of this equipment property as the whole. "
  children(filter: WorkflowSpecificationPropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationPropertyOrder): [WorkflowSpecificationProperty]
  ""
  childrenAggregate(filter: WorkflowSpecificationPropertyFilter): WorkflowSpecificationPropertyAggregateResult
  ""
  dataType: DataType
  ""
  definitionType: DefinitionType!
  " Additional information about the WorkflowSpecificationProperty. "
  description: String
  " Uniquely identifies the workflow specification property. Fully Qualified identifier that is unique in the database. Required attribute."
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  " Uniquely identifies the workflow specification property. Required attribute."
  name: String!
  " The WorkflowSpecificationProperty that this nested equipment property makes up part of as the whole. "
  parent(filter: WorkflowSpecificationPropertyFilter): WorkflowSpecificationProperty
  " The value, set of values, or range of the property. "
  value: String
  " The unit of measure of the associated property value. "
  valueUnitOfMeasure(filter: UnitOfMeasureFilter): UnitOfMeasure
  ""
  workflowSpecificationVersion(filter: WorkflowSpecificationVersionFilter): WorkflowSpecificationVersion!
}
""
type WorkflowSpecificationPropertyAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdOnMax: DateTime
  ""
  _createdOnMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedOnMax: DateTime
  ""
  _modifiedOnMin: DateTime
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  idMax: String
  ""
  idMin: String
  ""
  nameMax: String
  ""
  nameMin: String
  ""
  valueMax: String
  ""
  valueMin: String
}
""
type WorkflowSpecificationVersion {
  ""
  _createdBy: String
  ""
  _createdDateTime: DateTime
  ""
  _modifiedBy: String
  ""
  _modifiedDateTime: DateTime
  " Access Control List. A list of roles and permission levels. If the Access Control List is empty it is considered open. "
  acl(filter: AccessPermissionFilter, first: Int, offset: Int, order: AccessPermissionOrder): [AccessPermission]
  ""
  aclAggregate(filter: AccessPermissionFilter): AccessPermissionAggregateResult
  " Contains the base64 encoded XML that this WorkflowSpecificationVersion was generated from. "
  bpmnXMLEncoded: String
  ""
  connections(filter: WorkflowSpecificationConnectionFilter, first: Int, offset: Int, order: WorkflowSpecificationConnectionOrder): [WorkflowSpecificationConnection]
  ""
  connectionsAggregate(filter: WorkflowSpecificationConnectionFilter): WorkflowSpecificationConnectionAggregateResult
  ""
  definitionType: DefinitionType!
  ""
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  ""
  errors(filter: WorkflowErrorFilter, first: Int, offset: Int, order: WorkflowErrorOrder): [WorkflowError]
  ""
  errorsAggregate(filter: WorkflowErrorFilter): WorkflowErrorAggregateResult
  " Identifies where the exchanged information fits within the role-based equipment hierarchy. "
  hierarchyScope(filter: HierarchyScopeFilter): HierarchyScope
  """
   In combination with the Version field, the id is a unique identification of a specific workflow specification that is consistent outside the scope of this database.
  The ID and Version are used in other parts of the model when the workflow specification needs to be identified. 
  """
  id: String!
  ""
  id_version: String!
  " Unique internal database identifier. "
  iid: ID!
  ""
  includePropertiesOf(filter: WorkflowSpecificationFilter, first: Int, offset: Int, order: WorkflowSpecificationOrder): [WorkflowSpecification]
  ""
  includePropertiesOfAggregate(filter: WorkflowSpecificationFilter): WorkflowSpecificationAggregateResult
  ""
  isActiveVersionOf(filter: WorkflowSpecificationFilter): WorkflowSpecification
  " Identifies whether this is an executable BPMN or a non-BPMN WorkflowSpecification "
  isExecutable: Boolean
  ""
  jobOrders(filter: JobOrderFilter, first: Int, offset: Int, order: JobOrderOrder): [JobOrder]
  ""
  jobOrdersAggregate(filter: JobOrderFilter): JobOrderAggregateResult
  ""
  jobResponses(filter: JobResponseFilter, first: Int, offset: Int, order: JobResponseOrder): [JobResponse]
  ""
  jobResponsesAggregate(filter: JobResponseFilter): JobResponseAggregateResult
  ""
  messages(filter: WorkflowMessageFilter, first: Int, offset: Int, order: WorkflowMessageOrder): [WorkflowMessage]
  ""
  messagesAggregate(filter: WorkflowMessageFilter): WorkflowMessageAggregateResult
  ""
  nodes(filter: WorkflowSpecificationNodeFilter, first: Int, offset: Int, order: WorkflowSpecificationNodeOrder): [WorkflowSpecificationNode]
  ""
  nodesAggregate(filter: WorkflowSpecificationNodeFilter): WorkflowSpecificationNodeAggregateResult
  ""
  properties(filter: WorkflowSpecificationPropertyFilter, first: Int, offset: Int, order: WorkflowSpecificationPropertyOrder): [WorkflowSpecificationProperty]
  ""
  propertiesAggregate(filter: WorkflowSpecificationPropertyFilter): WorkflowSpecificationPropertyAggregateResult
  " The list of OperationsEventRecordEntries that have been recorded "
  recordEntries(filter: InformationObjectFilter, first: Int, offset: Int, order: InformationObjectOrder): [InformationObject]
  ""
  recordEntriesAggregate(filter: InformationObjectFilter): InformationObjectAggregateResult
  " The Json Schema definition of inputs required to execute the workflow. "
  schemaDefinition: String
  ""
  timers(filter: WorkflowTimerFilter, first: Int, offset: Int, order: WorkflowTimerOrder): [WorkflowTimer]
  ""
  timersAggregate(filter: WorkflowTimerFilter): WorkflowTimerAggregateResult
  """
   Entity to define the specific version of the entity. Purposely free for to allow use with a specific
  revision scheme. For example `1`, `2` or `Rev A03`, `Rev B01`. Versions are lexicographically compared. 
  """
  version: String!
  ""
  versionStatus: VersionState!
  ""
  workflowSpecification(filter: WorkflowSpecificationFilter): WorkflowSpecification!
}
""
type WorkflowSpecificationVersionAggregateResult {
  ""
  _createdByMax: String
  ""
  _createdByMin: String
  ""
  _createdDateTimeMax: DateTime
  ""
  _createdDateTimeMin: DateTime
  ""
  _modifiedByMax: String
  ""
  _modifiedByMin: String
  ""
  _modifiedDateTimeMax: DateTime
  ""
  _modifiedDateTimeMin: DateTime
  ""
  bpmnXMLEncodedMax: String
  ""
  bpmnXMLEncodedMin: String
  ""
  count: Int
  ""
  descriptionMax: String
  ""
  descriptionMin: String
  ""
  effectiveEndMax: DateTime
  ""
  effectiveEndMin: DateTime
  ""
  effectiveStartMax: DateTime
  ""
  effectiveStartMin: DateTime
  ""
  idMax: String
  ""
  idMin: String
  ""
  schemaDefinitionMax: String
  ""
  schemaDefinitionMin: String
  ""
  versionMax: String
  ""
  versionMin: String
}
"""
WorkflowTimer: Extension of ISA95 Standard to accommodate BPMN2.0. WorkflowTimers
allow an event to be triggered on or wait until a given timer has elapsed, allowing
for repeated events or pauses during workflows.
"""
type WorkflowTimer {
  ""
  enabled: Boolean
  ""
  id: String!
  " Unique internal database identifier. "
  iid: ID!
  ""
  node(filter: WorkflowSpecificationNodeFilter): WorkflowSpecificationNode
  ""
  reference: String
  ""
  workflowSpecificationVersion(filter: WorkflowSpecificationVersionFilter): WorkflowSpecificationVersion
}
""
type WorkflowTimerAggregateResult {
  ""
  count: Int
  ""
  idMax: String
  ""
  idMin: String
  ""
  referenceMax: String
  ""
  referenceMin: String
}
"""
WorkflowWaypoint: Extension of ISA95 Standard to accommodate BPMN2.0. The 
waypoint stores the information needed to display lines correctly in BPMN diagrams.
"""
type WorkflowWaypoint {
  ""
  connection(filter: WorkflowSpecificationConnectionFilter): WorkflowSpecificationConnection!
  " Unique internal database identifier. "
  iid: ID!
  ""
  x: String!
  ""
  y: String!
}
""
type WorkflowWaypointAggregateResult {
  ""
  count: Int
  ""
  xMax: String
  ""
  xMin: String
  ""
  yMax: String
  ""
  yMin: String
}
""
type _Service {
  ""
  sdl: String
}
""
union _Entity = AccessPermission | AlarmEvent | Comment | DataSource | DataSourceMethod | DataSourceMethodArgument | DataSourceTopic | DataSourceVersion | DataSubscription | EnvironmentalVariable | EnvironmentalVariableVersion | Equipment | EquipmentActual | EquipmentActualProperty | EquipmentAssetMapping | EquipmentClass | EquipmentClassProperty | EquipmentClassVersion | EquipmentDataSource | EquipmentProperty | EquipmentPropertyOverride | EquipmentRequirement | EquipmentRequirementProperty | EquipmentSpecification | EquipmentSpecificationProperty | EquipmentVersion | EvaluatedProperty | Event | EventAssociation | EventProperty | EventSubtype | EventType | Form | HierarchyScope | InformationObject | JobList | JobOrder | JobOrderParameter | JobResponse | JobResponseData | JobResponseList | LibreService | MaterialActual | MaterialActualProperty | MaterialAlternate | MaterialClass | MaterialClassProperty | MaterialClassVersion | MaterialDefinition | MaterialDefinitionProperty | MaterialDefinitionVersion | MaterialLot | MaterialLotProperty | MaterialRequirement | MaterialRequirementProperty | MaterialSpecification | MaterialSpecificationProperty | MaterialSubLot | OperationalLocation | OperationalLocationClass | OperationalLocationClassProperty | OperationalLocationClassVersion | OperationalLocationProperty | OperationalLocationVersion | OperationsDefinition | OperationsDefinitionVersion | OperationsEvent | OperationsEventClass | OperationsEventClassProperty | OperationsEventClassRecordSpecification | OperationsEventClassVersion | OperationsEventDefinition | OperationsEventDefinitionProperty | OperationsEventDefinitionRecordSpecification | OperationsEventDefinitionVersion | OperationsEventProperty | OperationsEventRecord | OperationsEventRecordEntry | OperationsMaterialBill | OperationsPerformance | OperationsRequest | OperationsResponse | OperationsResponseProperty | OperationsSchedule | OperationsSegment | OperationsSegmentDependency | ParameterSpecification | PayloadFieldDefinition | Person | PersonProperty | PersonVersion | PersonnelActual | PersonnelActualProperty | PersonnelClass | PersonnelClassProperty | PersonnelClassVersion | PersonnelRequirement | PersonnelRequirementProperty | PersonnelSpecification | PersonnelSpecificationProperty | PhysicalAsset | PhysicalAssetActual | PhysicalAssetActualProperty | PhysicalAssetClass | PhysicalAssetClassProperty | PhysicalAssetClassVersion | PhysicalAssetDataSource | PhysicalAssetProperty | PhysicalAssetRequirement | PhysicalAssetRequirementProperty | PhysicalAssetSpecification | PhysicalAssetSpecificationProperty | PhysicalAssetVersion | ProcessSegment | ProcessSegmentDependency | ProcessSegmentParameter | ProcessSegmentVersion | PropertyMeasurement | Rule | Secret | SecretVersion | SegmentData | SegmentParameter | SegmentRequirement | SegmentResponse | Signature | SignatureReason | SpatialDefinition | StateModelAction | StateModelDefinition | StateModelEvent | StateModelInstance | StateModelProperty | StateModelState | StateModelTransition | StateTransitionInstance | TestResult | TestSpecification | TestSpecificationCriteria | TestSpecificationProperty | UnitOfMeasure | UnitOfMeasureConversion | WorkCalendar | WorkCalendarDefinitionEntry | WorkCalendarDefinitionEntryProperty | WorkCalendarEntry | WorkCalendarEntryProperty | WorkDirective | WorkMaster | WorkPerformance | WorkRequest | WorkResponse | WorkSchedule | WorkflowError | WorkflowMessage | WorkflowShape | WorkflowSpecification | WorkflowSpecificationConnection | WorkflowSpecificationConnectionProperty | WorkflowSpecificationConnectionType | WorkflowSpecificationConnectionTypeProperty | WorkflowSpecificationNode | WorkflowSpecificationNodeProperty | WorkflowSpecificationNodeTestCase | WorkflowSpecificationNodeType | WorkflowSpecificationNodeTypeProperty | WorkflowSpecificationNodeVariable | WorkflowSpecificationProperty | WorkflowSpecificationVersion | WorkflowTimer | WorkflowWaypoint
""
enum AccessPermissionHasFilter {
  label
  permissionLevel
}
""
enum AccessPermissionOrderable {
  label
  permissionLevel
}
""
enum Action {
  Added
  Changed
  Deleted
  Observed
}
""
enum AlarmEventHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  alarmEvent
  alarmLimit
  alarmType
  comments
  effectiveDateTime
  effectiveEnd
  effectiveStart
  event
  priority
  recordedDateTime
  signatures
}
""
enum AlarmEventOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  alarmEvent
  alarmLimit
  alarmType
  effectiveDateTime
  effectiveEnd
  effectiveStart
  priority
  recordedDateTime
}
" Defines the type of the relationships. "
enum AssemblyRelationship {
  " An assembly that is not intended to be split during the production process. "
  Permanent
  " A temporary assembly using during production, such as a pallet of different materials or a batch kit. "
  Transient
}
" Defines the type of the assembly. "
enum AssemblyType {
  " The components of the assembly are not necessarily physically connected or in the same area. "
  Logical
  " The components of the assembly are physically connected or in the same area. "
  Physical
}
""
enum CommentHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  alarmEvent
  child
  effectiveEnd
  effectiveStart
  equipmentActual
  equipmentRequirement
  event
  id
  jobOrder
  jobResponse
  jobResponseData
  materialActual
  materialRequirement
  onSignature
  parent
  personVersion
  personnelActual
  personnelRequirement
  physicalAssetActual
  physicalAssetRequirement
  recordEntries
  segmentParameter
  signOff
  text
  timestamp
  workDirective
  workMaster
  workRequest
  workResponse
}
""
enum CommentOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
  text
  timestamp
}
""
enum DataSourceHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  activeVersion
  effectiveEnd
  effectiveStart
  equipmentDataSources
  id
  label
  nextVersion
  propertyNameAliases
  recordEntries
  uiSortIndex
  versions
}
""
enum DataSourceMethodArgumentHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  dataSourceMethod
  dataType
  description
  direction
  effectiveEnd
  effectiveStart
  id
  position
  value
}
""
enum DataSourceMethodArgumentOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  position
  value
}
""
enum DataSourceMethodHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  arguments
  dataSourceVersion
  description
  effectiveEnd
  effectiveStart
  error
  id
  method
  object
  statusCode
}
""
enum DataSourceMethodOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  error
  id
  method
  object
  statusCode
}
""
enum DataSourceOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
  label
  nextVersion
  uiSortIndex
}
" DataSourceProtocol are the client libraries that have been implemented in the libre agent. "
enum DataSourceProtocol {
  MQTT
  OPCUA
}
""
enum DataSourceTopicHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  dataSourceVersion
  dataType
  description
  effectiveEnd
  effectiveStart
  id
  label
  messageKeyDeterminedBy
  propertyNameAliases
}
""
enum DataSourceTopicOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
}
""
enum DataSourceVersionHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  certificate
  connectionString
  dataSource
  description
  effectiveEnd
  effectiveStart
  equipmentDataSources
  id
  isActiveVersionOf
  methods
  password
  physicalAssetDataSources
  protocol
  recordEntries
  topics
  username
  version
  versionStatus
}
""
enum DataSourceVersionOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  certificate
  connectionString
  description
  effectiveEnd
  effectiveStart
  id
  password
  username
  version
}
""
enum DataSubscriptionHasFilter {
  name
  query
  split
  topic
}
""
enum DataSubscriptionOrderable {
  name
  query
  topic
}
""
enum DataType {
  BOOL
  BOOL_ARRAY
  BYTE
  BYTE_ARRAY
  BYTE_STRING
  BYTE_STRING_ARRAY
  DATA_VALUE
  DATA_VALUE_ARRAY
  DATE_TIME
  DATE_TIME_ARRAY
  EXPANDED_NODE_ID
  EXPANDED_NODE_ID_ARRAY
  FLOAT
  FLOAT64
  FLOAT64_ARRAY
  FLOAT_ARRAY
  GUID
  GUID_ARRAY
  INT
  INT16
  INT16_ARRAY
  INT32
  INT32_ARRAY
  INT64
  INT64_ARRAY
  LOCALIZED_TEXT
  LOCALIZED_TEXT_ARRAY
  NODE_ID
  NODE_ID_ARRAY
  QUALIFIED_NAME
  QUALIFIED_NAME_ARRAY
  STATUS_CODE
  STATUS_CODE_ARRAY
  STRING
  STRING_ARRAY
  STRUCTURE
  STRUCTURE_ARRAY
  S_BYTE
  S_BYTE_ARRAY
  UINT
  UINT16
  UINT16_ARRAY
  UINT32
  UINT32_ARRAY
  UInt64
  UInt64_ARRAY
  XML_ELEMENT
  XML_ELEMENT_ARRAY
}
"""
Resources can be defined as pattern or instance. A pattern resource defines a 
template upon which other pattern or instance resources may be based. Unlike 
instance resources, pattern resources shall not be directly executed. The 
default value is INSTANCE. Defines a “template,” upon which other pattern or 
instance workflow specifications may be based. ANSI/ISA-95.00.04-2018 – 48 –
Unlike instance workflow specifications, pattern workflow specifications shall
not be directly executed. Therefore, a work directive shall only reference an 
instance workflow specification. A pattern work master may reference either a 
pattern or instance workflow specification, while an instance work master shall
only reference an instance workflow specification. A pattern work master may 
reference an instance workflow specification where all work masters (directly 
or indirectly) specializing that pattern work master shall reference the same 
instance workflow specification. This allows a standard instance workflow 
specification to be defined for a pattern work master, which is then 
specialized to a number of pattern or instance work masters, each corresponding
to the same instance workflow specification. Workflow specification nodes shall
assume the definition type (pattern or instance) of the workflow specification 
to which they belong. Therefore, all workflow specification nodes contained 
within a pattern workflow specification shall be assumed to be pattern, while 
all workflow specification nodes contained within an instance workflow 
specification shall be assumed to be instance. Where a workflow specification 
node contains a more detailed workflow specification, the definition type of 
the contained workflow specification shall have the same value as that of the
workflow specification to which the workflow specification node belongs.
"""
enum DefinitionType {
  INSTANCE
  PATTERN
}
"""
Defines the execution dependency constraints of one segment to another segment as the type of the 
execution or dependency factor between the segments. Defined values are explained using dependency 
type between segment A and segment B.
"""
enum DependencyType {
  " Start B after A end. "
  AFTER_END
  " Start B after A start. "
  AFTER_START
  " Start B at A start. "
  AT_START
  " B cannot follow A. "
  NOT_FOLLOW
  " B may not run in parallel to A. "
  NOT_IN_PARALLEL
  " B no earlier than dependency factor after A end. "
  NO_EARLIER_AFTER_END
  " Start B no earlier than dependency factor after A start. "
  NO_EARLIER_AFTER_START
  " Start B no later than dependency factor after A end. "
  NO_LATER_AFTER_END
  " Start B no later than dependency factor after A start. "
  NO_LATER_AFTER_START
  " B may run in parallel to A. "
  POSSIBLE_PARALLEL
}
""
enum DgraphIndex {
  bool
  day
  exact
  float
  fulltext
  geo
  hash
  hour
  int
  int64
  month
  regexp
  term
  trigram
  year
}
""
enum DispatchStatus {
  ACTIVE
  CANCELED
  CLOSED
  COMPLETE
  CREATED
  PARKED
  PENDING
  RELEASED
}
"""
Planning and logistics disposition of a material lot or assembly of material lots, material sublots, 
or assmembly of material lots or sublots. 
"""
enum Disposition {
  " Material lot or sublot has been reconciled as completely consumed, sold or disposed of. "
  Closed
  " The material lot or sublot is in the process of being worked on. "
  InProcess
  """
   A material lot or sublot that does not yet physically exist, is assigned to an operations request 
  (segment requirement) or work request (Part 4 object) or job order (Part 4 object). 
  """
  Planned
  " A material lot or sublot is not permitted for normal use due to a restriction condition. "
  Restricted
  " Material lot or sublot is permitted for normal use without restriction. "
  Unrestricted
}
""
enum EnterpriseFunctionEnum {
  Engineering
  Maintenance_Management
  Marketing_And_Sales
  Material_And_Energy_Control
  Operations_Scheduling
  Order_Processing
  Product_Cost_Accounting
  Product_Shipping_Administration
  Production_Control
  Research_And_Development
}
""
enum EnvironmentalVariableHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  activeVersion
  id
  nextVersion
  versions
}
""
enum EnvironmentalVariableOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  id
  nextVersion
}
""
enum EnvironmentalVariableVersionHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  effectiveEnd
  effectiveStart
  environmentalVariable
  id
  isActiveVersionOf
  value
  version
  versionStatus
}
""
enum EnvironmentalVariableVersionOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
  value
  version
}
""
enum EquipmentActualHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  comments
  description
  effectiveEnd
  effectiveStart
  equipment
  equipmentClass
  equipmentUse
  equipmentVersion
  hierarchyScope
  id
  jobResponse
  operationalLocation
  parent
  properties
  quantity
  quantityUoM
  segmentResponse
  signatures
  spatialDefinition
  testResults
}
""
enum EquipmentActualOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  equipmentUse
  id
  quantity
}
""
enum EquipmentActualPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  effectiveEnd
  effectiveStart
  equipmentActual
  equipmentClassProperty
  equipmentProperty
  hierarchyScope
  id
  label
  operationalLocation
  parent
  quantity
  quantityUoM
  spatialDefinition
  use
  value
  valueUnitOfMeasure
}
""
enum EquipmentActualPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  quantity
  use
  value
}
""
enum EquipmentAssetMappingHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  description
  effectiveEnd
  effectiveStart
  endTime
  equipment
  hierarchyScope
  id
  physicalAsset
  startTime
}
""
enum EquipmentAssetMappingOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  endTime
  id
  startTime
}
""
enum EquipmentClassHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  activeVersion
  effectiveEnd
  effectiveStart
  equipmentActual
  equipmentRequirements
  equipmentSpecifications
  equipmentVersions
  id
  isIncludedIn
  isMadeUpOf
  isPartOf
  label
  nextVersion
  recordEntries
  specifiesTests
  testResults
  testedBy
  uiSortIndex
  versions
}
""
enum EquipmentClassOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
  label
  nextVersion
  uiSortIndex
}
""
enum EquipmentClassPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  bindingType
  children
  correspondsTo
  description
  effectiveEnd
  effectiveStart
  equipmentActualProperties
  equipmentClassVersion
  equipmentProperty
  equipmentRequirementProperties
  equipmentSpecificationProperties
  id
  label
  parent
  propertyType
  recordsMeasurementOf
  triggersRules
  value
  valueUnitOfMeasure
}
""
enum EquipmentClassPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  value
}
""
enum EquipmentClassVersionHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  description
  displayName
  effectiveEnd
  effectiveStart
  equipmentClass
  equipmentLevel
  equipmentVersions
  hierarchyScope
  id
  image
  includesPropertiesOf
  isActiveVersionOf
  properties
  recordEntries
  rules
  stateModels
  uiMonochromeIcon
  uiMonochromeIconColour
  version
  versionStatus
}
""
enum EquipmentClassVersionOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  displayName
  effectiveEnd
  effectiveStart
  id
  image
  uiMonochromeIcon
  uiMonochromeIconColour
  version
}
""
enum EquipmentDataSourceHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  dataSource
  dataSourceVersion
  effectiveEnd
  effectiveStart
  equipmentVersion
  topicTemplate
}
""
enum EquipmentDataSourceOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  topicTemplate
}
""
enum EquipmentElementLevel {
  Area
  ControlModule
  Enterprise
  EquipmentModule
  Other
  ProcessCell
  ProductionLine
  ProductionUnit
  Site
  StorageUnit
  StorageZone
  Unit
  Warehouse
  WorkCell
  WorkCenter
  WorkUnit
}
""
enum EquipmentHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  activeVersion
  effectiveEnd
  effectiveStart
  equipmentActual
  equipmentAssetMapping
  equipmentRequirements
  equipmentSpecifications
  events
  id
  isMadeUpOf
  isPartOf
  label
  materialLots
  materialSubLots
  nextVersion
  physicalAsset
  recordEntries
  specifiesTests
  stateModelInstances
  testResults
  testedBy
  uiSortIndex
  versions
}
""
enum EquipmentNameAliasHasFilter {
  alias
  equipment
  system
}
""
enum EquipmentNameAliasOrderable {
  alias
  system
}
""
enum EquipmentOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
  label
  nextVersion
  uiSortIndex
}
""
enum EquipmentPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  bindingType
  children
  correspondsTo
  description
  effectiveEnd
  effectiveStart
  equipmentActualProperties
  equipmentClassProperty
  equipmentRequirementProperties
  equipmentSpecificationProperties
  equipmentVersion
  id
  label
  parent
  recordsMeasurementOf
  value
  valueLowerControlLimit
  valueLowerSpecLimit
  valueSetPoint
  valueUnitOfMeasure
  valueUpperControlLimit
  valueUpperSpecLimit
}
""
enum EquipmentPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  value
  valueLowerControlLimit
  valueLowerSpecLimit
  valueSetPoint
  valueUpperControlLimit
  valueUpperSpecLimit
}
""
enum EquipmentPropertyOverrideHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  address
  effectiveEnd
  effectiveStart
  equipmentVersions
  expression
  id
  ignore
  propertyLabel
  storeHistory
  value
}
""
enum EquipmentPropertyOverrideOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  address
  effectiveEnd
  effectiveStart
  expression
  id
  propertyLabel
  value
}
""
enum EquipmentRequirementHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  comments
  description
  equipment
  equipmentClass
  equipmentLevel
  hierarchyScope
  id
  jobOrder
  operationalLocation
  parent
  properties
  quantity
  quantityUoM
  segmentRequirement
  signatures
  specifiesTests
  testResults
  testedBy
  use
}
""
enum EquipmentRequirementOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  id
  quantity
  use
}
""
enum EquipmentRequirementPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  equipmentClassProperty
  equipmentProperty
  equipmentRequirement
  id
  label
  parent
  quantity
  quantityUoM
  value
  valueUnitOfMeasure
}
""
enum EquipmentRequirementPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  id
  label
  quantity
  value
}
""
enum EquipmentSpecificationHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  effectiveEnd
  effectiveStart
  equipment
  equipmentClass
  equipmentUse
  hierarchyScope
  id
  label
  operationalLocation
  operationsSegment
  parent
  processSegmentVersion
  properties
  quantity
  quantityUoM
  spatialDefinition
  specifiesTests
  testResults
  testedBy
  workDirective
  workMaster
}
""
enum EquipmentSpecificationOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  equipmentUse
  id
  label
  quantity
}
""
enum EquipmentSpecificationPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  effectiveEnd
  effectiveStart
  equipmentClassProperty
  equipmentProperty
  equipmentSpecification
  id
  label
  parent
  quantity
  quantityUoM
  value
  valueUnitOfMeasure
}
""
enum EquipmentSpecificationPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  quantity
  value
}
""
enum EquipmentVersionHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  dataSources
  description
  displayName
  effectiveEnd
  effectiveStart
  equipment
  equipmentActual
  equipmentClassVersions
  equipmentClasses
  equipmentLevel
  hierarchyScope
  id
  isActiveVersionOf
  operationalLocation
  properties
  propertyNameAliases
  propertyOverrides
  recordEntries
  spatialDefinition
  stateModels
  timeZoneName
  version
  versionStatus
  workCalendar
}
""
enum EquipmentVersionOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  displayName
  effectiveEnd
  effectiveStart
  id
  timeZoneName
  version
}
""
enum EvaluatedPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  criteria
  description
  effectiveEnd
  effectiveStart
  equipmentClassProperty
  equipmentProperty
  id
  label
  materialClassProperty
  materialDefinitionProperty
  materialLotProperty
  personProperty
  personnelClassProperty
  physicalAssetClassProperty
  physicalAssetProperty
  testSpecification
  workDirective
  workMaster
}
""
enum EvaluatedPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
}
""
enum EventAssociationHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  description
  effectiveEnd
  effectiveStart
  from
  id
  to
  version
}
""
enum EventAssociationOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  version
}
""
enum EventHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  alarmEvents
  attribute
  category
  comments
  computerID
  effectiveDateTime
  effectiveEnd
  effectiveStart
  equipment
  eventAssociationsFrom
  eventAssociationsTo
  eventProperties
  eventType
  jobResponse
  jobResponseData
  materialLot
  materialSubLot
  messageText
  person
  personID
  physicalAsset
  previousValue
  proceduralElementReference
  recordEntries
  recordedDateTime
  signatures
  value
  workResponse
}
""
enum EventOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  attribute
  category
  computerID
  effectiveDateTime
  effectiveEnd
  effectiveStart
  messageText
  personID
  previousValue
  proceduralElementReference
  recordedDateTime
  value
}
""
enum EventPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  effectiveEnd
  effectiveStart
  event
  id
  label
  parent
  value
  valueUnitOfMeasure
  version
}
""
enum EventPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  value
  version
}
""
enum EventSubtypeHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  effectiveEnd
  effectiveStart
  eventTypes
  id
  label
  parent
  version
}
""
enum EventSubtypeOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
  label
  version
}
""
enum EventTypeHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  effectiveEnd
  effectiveStart
  eventSubtypes
  events
  id
  label
  parent
  version
}
""
enum EventTypeOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
  label
  version
}
""
enum FormHasFilter {
  id
  jsonSchema
  name
  uiSchema
  workflowSpecificationNodes
}
""
enum FormOrderable {
  id
  jsonSchema
  name
  uiSchema
}
""
enum Frequency {
  DAILY
  HOURLY
  MINUTELY
  MONTHLY
  SECONDLY
  WEEKLY
  YEARLY
}
""
enum HTTPMethod {
  DELETE
  GET
  PATCH
  POST
  PUT
}
""
enum HierarchyScopeHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  children
  effectiveEnd
  effectiveStart
  equipmentLevel
  equipmentVersions
  id
  label
  materialClassVersions
  materialDefinitionVersions
  materialLots
  materialSubLots
  parent
  recordEntries
}
""
enum HierarchyScopeOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
  label
}
""
enum InformationObjectHasFilter {
  Other
  comment
  dataSource
  dataSourceVersion
  equipment
  equipmentClass
  equipmentClassVersion
  equipmentVersion
  event
  hierarchyScope
  jobList
  jobOrder
  jobResponse
  jobResponseList
  materialClass
  materialClassVersion
  materialDefinition
  materialDefinitionVersion
  materialLot
  materialSubLot
  operationalLocation
  operationalLocationClass
  operationalLocationClassVersion
  operationalLocationVersion
  operationsDefinition
  operationsDefinitionVersion
  operationsEvent
  operationsEventClass
  operationsEventClassVersion
  operationsEventDefinition
  operationsEventDefinitionVersion
  operationsEventRecordEntry
  operationsPerformance
  operationsRequest
  operationsResponse
  operationsSchedule
  operationsSegment
  person
  personVersion
  personnelClass
  personnelClassVersion
  physicalAsset
  physicalAssetClass
  physicalAssetClassVersion
  physicalAssetVersion
  processSegment
  processSegmentVersion
  propertyMeasurement
  spatialDefinition
  testResult
  testSpecification
  unitOfMeasure
  workCalendar
  workDirective
  workMaster
  workPerformance
  workRequest
  workResponse
  workSchedule
  workflowSpecification
  workflowSpecificationConnectionType
  workflowSpecificationNodeType
  workflowSpecificationVersion
}
""
enum InformationObjectOrderable {
  Other
}
""
enum InformationObjectTypeEnum {
  Change
  Comment
  DataSet
  DataSource
  DataSourceVersion
  Equipment
  EquipmentClass
  EquipmentClassVersion
  EquipmentVersion
  Event
  HierarchyScope
  JobList
  JobOrder
  JobResponse
  JobResponseList
  MaterialClass
  MaterialClassVersion
  MaterialDefinition
  MaterialDefinitionVersion
  MaterialLot
  MaterialSubLot
  OperationalLocation
  OperationalLocationClass
  OperationalLocationClassVersion
  OperationalLocationVersion
  OperationsCapability
  OperationsDefinition
  OperationsDefinitionVersion
  OperationsEvent
  OperationsEventClass
  OperationsEventClassVersion
  OperationsEventDefinition
  OperationsEventDefinitionVersion
  OperationsPerformance
  OperationsRequest
  OperationsResponse
  OperationsSchedule
  OperationsSegment
  Other
  Person
  PersonVersion
  PersonnelClass
  PersonnelClassVersion
  PhysicalAsset
  PhysicalAssetClass
  PhysicalAssetClassVersion
  PhysicalAssetVersion
  ProcessSegment
  ProcessSegmentVersion
  PropertyMeasurement
  ResourceNetworkConnectionType
  ResourceRelationshipNetwork
  Sample
  SpatialDefinition
  TestResult
  TestSpecification
  TestSpecificationVersion
  UnitOfMeasure
  WorkAlert
  WorkAlertDefinition
  WorkCalendar
  WorkCalendarDefinition
  WorkCapability
  WorkDirective
  WorkMaster
  WorkMasterCapability
  WorkMasterVersion
  WorkPerformance
  WorkRecord
  WorkRecordSpecification
  WorkRequest
  WorkResponse
  WorkSchedule
  WorkflowSpecification
  WorkflowSpecificationConnectionType
  WorkflowSpecificationNodeType
  WorkflowSpecificationVersion
}
"Defines the type of the property,"
enum Isa95PropertyType {
  "The property value is defined for the class and there is no value associated with an instance."
  ClassType
  "The property value is defined for the class as the default instance value, but individual instances of the class may redefine specific values."
  DefaultType
  "The property value of the class is undefined."
  InstanceType
}
""
enum JobListHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  jobOrders
  plannedEndDateTime
  plannedStartDateTime
  publishedDate
  recordEntries
  workType
}
""
enum JobListOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  plannedEndDateTime
  plannedStartDateTime
  publishedDate
}
""
enum JobOrderHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  command
  commandRule
  comments
  description
  dispatchStatus
  effectiveEnd
  effectiveStart
  equipmentRequirements
  hierarchyScope
  id
  jobList
  jobResponses
  label
  materialRequirements
  next
  parameters
  personnelRequirements
  physicalAssetRequirements
  previous
  priority
  publishedDate
  recordEntries
  scheduledEndDateTime
  scheduledStartDateTime
  segmentRequirement
  signatures
  workDirective
  workMaster
  workRequest
  workType
  workflowSpecification
  workflowSpecificationNode
  workflowSpecificationVersion
}
""
enum JobOrderOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  command
  commandRule
  description
  effectiveEnd
  effectiveStart
  id
  label
  priority
  publishedDate
  scheduledEndDateTime
  scheduledStartDateTime
}
""
enum JobOrderParameterHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  jobOrder
  label
  parameterSpecification
  parent
  processSegmentParameter
  value
  valueUnitOfMeasure
}
""
enum JobOrderParameterOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  value
}
""
enum JobResponseDataHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  comments
  description
  effectiveEnd
  effectiveStart
  events
  hierarchyScope
  id
  jobResponse
  label
  parent
  signatures
  value
  valueUnitOfMeasure
}
""
enum JobResponseDataOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  value
}
""
enum JobResponseHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  comments
  data
  dataJSON
  description
  effectiveEnd
  effectiveStart
  endDateTime
  equipmentActual
  events
  hierarchyScope
  id
  jobOrder
  jobResponseList
  jobState
  materialActual
  parent
  personnelActual
  physicalAssetActual
  productionDate
  publishedDate
  recordEntries
  segmentResponse
  signatures
  startDateTime
  workDirective
  workMaster
  workResponse
  workType
  workflowSpecification
  workflowSpecificationNode
  workflowSpecificationVersion
}
""
enum JobResponseListHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  description
  effectiveEnd
  effectiveStart
  endDateTime
  hierarchyScope
  id
  jobResponses
  recordEntries
  startDateTime
  version
  workType
}
""
enum JobResponseListOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  endDateTime
  id
  startDateTime
  version
}
""
enum JobResponseOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  dataJSON
  description
  effectiveEnd
  effectiveStart
  endDateTime
  id
  productionDate
  publishedDate
  startDateTime
}
"""
The defined values for the work state attribute of the work performance object, the response state 
attribute for the work response object, and the job state attribute of the job response object have 
the following definitions.
"""
enum JobState {
  """
   An execution decision has been taken to terminate the job order or activities that may, or may not, 
    have been previously commenced. 
  """
  ABORTED
  """
   Job order or activities have been completed and fully reconciled. No further changes, or restatement 
    of actuals is expected. 
  """
  CLOSED
  " Job order or activities have been completed and are no longer in execution. "
  COMPLETED
  " Job order or activities have been temporarily stopped due to a constraint of some form. "
  HELD
  " Job order or activity doesn't correspond to the other states or is stored else-where. "
  OTHER
  " Necessary preconditions have been met and the job order or activities are ready to run. "
  READY
  " Job order or activities are in execution. "
  RUNNING
  " Job order or activities have been temporarily stopped due to a deliberate decision within execution. "
  SUSPENDED
  " Necessary preconditions have not been met and the job orders or activities are not ready to run. "
  WAITING
}
""
enum LibreServiceHasFilter {
  heartbeat
  name
}
""
enum LibreServiceOrderable {
  heartbeat
  name
}
""
enum MOMFunctionEnum {
  Data_Collection
  Definition_Management
  Detailed_Scheduling
  Dispatching
  Execution_Management
  Performance_Analysis
  Resource_Management
  Tracking
}
""
enum MaterialActualHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  assemblyRelationship
  assemblyType
  children
  comments
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  jobResponse
  materialClass
  materialDefinition
  materialDefinitionVersion
  materialLot
  materialSubLot
  materialUse
  parent
  properties
  quantity
  quantityUoM
  segmentResponse
  signatures
  spatialDefinition
  storageLocation
  testResults
}
""
enum MaterialActualOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  quantity
}
""
enum MaterialActualPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  label
  materialActual
  materialClassProperty
  materialDefinitionProperty
  materialLotProperty
  operationalLocation
  parent
  quantity
  quantityUoM
  spatialDefinition
  use
  value
  valueUnitOfMeasure
}
""
enum MaterialActualPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  quantity
  use
  value
}
""
enum MaterialAlternateHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  alternateMaterial
  effectiveDateTime
  effectiveEnd
  effectiveStart
  materialDefinitionVersion
  priorityOrder
}
""
enum MaterialAlternateOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveDateTime
  effectiveEnd
  effectiveStart
  priorityOrder
}
""
enum MaterialClassHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  activeVersion
  effectiveEnd
  effectiveStart
  id
  isAssembledFrom
  isComponentOf
  isIncludedIn
  label
  materialActual
  materialDefinitionVersions
  materialRequirements
  materialSpecifications
  nextVersion
  recordEntries
  specifiesTests
  testResults
  testedBy
  versions
}
""
enum MaterialClassOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
  label
  nextVersion
}
""
enum MaterialClassPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  correspondsTo
  description
  effectiveEnd
  effectiveStart
  id
  label
  materialActualProperties
  materialClassVersion
  materialDefinitionProperty
  materialRequirementProperties
  materialSpecificationProperties
  parent
  propertyType
  recordsMeasurementOf
  value
  valueUnitOfMeasure
}
""
enum MaterialClassPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  value
}
""
enum MaterialClassVersionHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  assemblyRelationship
  assemblyType
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  includesPropertiesOf
  isActiveVersionOf
  materialClass
  properties
  recordEntries
  stateModels
  version
  versionStatus
}
""
enum MaterialClassVersionOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  version
}
""
enum MaterialDefinitionHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  activeVersion
  effectiveEnd
  effectiveStart
  id
  isAlternateFor
  label
  materialActual
  materialLots
  materialRequirements
  materialSpecifications
  nextVersion
  recordEntries
  specifiesTests
  stateModelInstances
  testResults
  testedBy
  versions
}
""
enum MaterialDefinitionOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
  label
  nextVersion
}
""
enum MaterialDefinitionPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  correspondsTo
  description
  effectiveEnd
  effectiveStart
  id
  label
  materialActualProperties
  materialClassProperty
  materialDefinitionVersion
  materialLotProperty
  materialRequirementProperties
  materialSpecificationProperties
  parent
  recordsMeasurementOf
  value
  valueLowerControlLimit
  valueLowerSpecLimit
  valueSetPoint
  valueUnitOfMeasure
  valueUpperControlLimit
  valueUpperSpecLimit
}
""
enum MaterialDefinitionPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  value
  valueLowerControlLimit
  valueLowerSpecLimit
  valueSetPoint
  valueUpperControlLimit
  valueUpperSpecLimit
}
""
enum MaterialDefinitionVersionHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  alternates
  assemblyRelationship
  assemblyType
  baseUnitOfMeasure
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  isActiveVersionOf
  isAssembledFrom
  isComponentOf
  materialActual
  materialClasses
  materialDefinition
  materialLots
  properties
  recordEntries
  spatialDefinition
  stateModels
  uomConversions
  version
  versionStatus
}
""
enum MaterialDefinitionVersionOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  version
}
""
enum MaterialLotHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  assemblyRelationship
  assemblyType
  childSubLot
  description
  disposition
  effectiveEnd
  effectiveStart
  events
  hierarchyScope
  id
  isAssembledFromMaterialLot
  isAssembledFromMaterialSubLot
  isComponentOfMaterialLot
  isComponentOfMaterialSubLot
  materialActual
  materialDefinition
  materialDefinitionVersion
  materialRequirements
  materialSpecifications
  properties
  quantity
  quantityUnitOfMeasure
  recordEntries
  spatialDefinition
  specifiesTests
  stateModelInstances
  status
  storageLocationDescription
  storageLocationEquipment
  storageLocationOperationalLocation
  storageLocationPhysicalAsset
  testResults
  testedBy
}
""
enum MaterialLotOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  quantity
  status
  storageLocationDescription
}
""
enum MaterialLotPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  correspondsTo
  description
  effectiveEnd
  effectiveStart
  id
  label
  materialActualProperties
  materialDefinitionProperty
  materialLot
  materialRequirementProperties
  materialSpecificationProperties
  materialSubLot
  parent
  recordsMeasurementOf
  value
  valueUnitOfMeasure
}
""
enum MaterialLotPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  value
}
""
enum MaterialRequirementHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  assemblyRelationship
  assemblyType
  children
  comments
  description
  hierarchyScope
  id
  jobOrder
  material
  materialClass
  materialLots
  materialSubLots
  materialUse
  parent
  properties
  quantity
  quantityUoM
  segmentRequirement
  signatures
  specifiesTests
  storageLocation
  testResults
  testedBy
}
""
enum MaterialRequirementOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  id
  quantity
}
""
enum MaterialRequirementPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  id
  label
  materialClassProperty
  materialDefinitionProperty
  materialLotProperty
  materialRequirement
  parent
  quantity
  quantityUoM
  value
  valueUnitOfMeasure
}
""
enum MaterialRequirementPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  id
  label
  quantity
  value
}
""
enum MaterialSpecificationHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  assemblyRelationship
  assemblyType
  children
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  label
  material
  materialClass
  materialLot
  materialSubLot
  materialUse
  materialsBill
  operationsSegment
  parent
  processSegmentVersion
  properties
  quantity
  quantityUoM
  spatialDefinition
  specifiesTests
  storageLocation
  testResults
  testedBy
  workDirective
  workMaster
}
""
enum MaterialSpecificationOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  quantity
}
""
enum MaterialSpecificationPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  effectiveEnd
  effectiveStart
  id
  label
  materialClassProperty
  materialDefinitionProperty
  materialLotProperty
  materialSpecification
  parent
  quantity
  quantityUoM
  value
  valueUnitOfMeasure
}
""
enum MaterialSpecificationPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  quantity
  value
}
""
enum MaterialSubLotHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  assemblyRelationship
  assemblyType
  children
  description
  disposition
  effectiveEnd
  effectiveStart
  events
  hierarchyScope
  id
  isAssembledFromMaterialLot
  isAssembledFromMaterialSubLot
  isComponentOfMaterialLot
  isComponentOfMaterialSubLot
  materialActual
  materialRequirements
  materialSpecifications
  parent
  parentMaterialLot
  properties
  quantity
  quantityUnitOfMeasure
  recordEntries
  spatialDefinition
  specifiesTests
  stateModelInstances
  status
  storageLocationDescription
  storageLocationEquipment
  storageLocationOperationalLocation
  storageLocationPhysicalAsset
  testResults
  testedBy
}
""
enum MaterialSubLotOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  quantity
  status
  storageLocationDescription
}
"""
Defines the expected use of the material class, material definition, material lot, or material 
sublot in the context of the process segment. 
"""
enum MaterialUse {
  Adjustment
  ByProduct
  CoProduct
  Consumable
  Consumed
  Initial
  Packed
  Produced
  Received
  Rework
  Scrap
  Shipped
  Transferred
}
""
enum MenuHasFilter {
  acl
  children
  icon
  isPage
  isSection
  label
  menuPage
  orderNumber
  parent
}
""
enum MenuOrderable {
  icon
  label
  menuPage
  orderNumber
}
""
enum MessageKey {
  MessageValue
  ServerTimestamp
  SourceTimestamp
}
""
enum MethodArgumentDirection {
  DirectionIn
  DirectionOut
}
""
enum Mode {
  BATCH
  SINGLE
}
""
enum MultiplicityHasFilter {
  Max
  Min
}
""
enum MultiplicityOrderable {
  Max
  Min
}
""
enum OperationalLocationClassHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  activeVersion
  effectiveEnd
  effectiveStart
  id
  includedIn
  isMadeUpOf
  isPartOf
  label
  nextVersion
  operationalLocationVersions
  recordEntries
  versions
}
""
enum OperationalLocationClassOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
  label
  nextVersion
}
""
enum OperationalLocationClassPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  isMadeUpOf
  isPartOf
  label
  mapsTo
  operationalLocationClassVersion
  propertyType
  value
  valueUnitOfMeasure
}
""
enum OperationalLocationClassPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  value
}
""
enum OperationalLocationClassVersionHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  includesPropertiesOf
  isActiveVersionOf
  isMadeUpOf
  isPartOf
  label
  name
  operationalLocationClass
  properties
  recordEntries
  version
  versionStatus
}
""
enum OperationalLocationClassVersionOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  name
  version
}
""
enum OperationalLocationHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  activeVersion
  effectiveEnd
  effectiveStart
  id
  isMadeUpOf
  isPartOf
  label
  nextVersion
  recordEntries
  versions
}
""
enum OperationalLocationOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
  label
  nextVersion
}
""
enum OperationalLocationPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  isMadeUpOf
  isPartOf
  label
  mapsTo
  operationalLocationVersion
  value
  valueUnitOfMeasure
}
""
enum OperationalLocationPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  value
}
""
enum OperationalLocationVersionHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  isActiveVersionOf
  isMadeUpOf
  isPartOf
  name
  operationalLocation
  operationalLocationClasses
  properties
  recordEntries
  spatialDefinition
  version
  versionStatus
}
""
enum OperationalLocationVersionOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  name
  version
}
""
enum OperationsDefinitionHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  activeVersion
  children
  effectiveEnd
  effectiveStart
  id
  label
  nextVersion
  operationsRequests
  operationsResponses
  parent
  recordEntries
  segmentRequirements
  segmentResponses
  versions
  workMasters
}
""
enum OperationsDefinitionOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
  label
  nextVersion
}
""
enum OperationsDefinitionVersionHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  billOfMaterial
  billOfResources
  definitionType
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  isActiveVersionOf
  materialsBill
  operationsDefinition
  operationsType
  recordEntries
  segments
  version
  versionStatus
}
""
enum OperationsDefinitionVersionOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  billOfMaterial
  billOfResources
  description
  effectiveEnd
  effectiveStart
  id
  version
}
""
enum OperationsEventClassHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  activeVersion
  effectiveEnd
  effectiveStart
  id
  includesPropertiesOf
  isAssembledFrom
  isComponentOf
  isIncludedIn
  label
  nextVersion
  operationsEventDefinitionVersions
  recordEntries
  versions
}
""
enum OperationsEventClassOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
  label
  nextVersion
}
""
enum OperationsEventClassPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  effectiveEnd
  effectiveStart
  id
  operationsEventClassVersion
  parent
  propertyType
  value
  valueUnitOfMeasure
}
""
enum OperationsEventClassPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
  value
}
""
enum OperationsEventClassRecordSpecificationHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  action
  actionMultiplicity
  definitionType
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  informationObjectType
  multiplicity
  operationsEventClassVersion
}
""
enum OperationsEventClassRecordSpecificationOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
}
""
enum OperationsEventClassVersionHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  description
  effectiveEnd
  effectiveStart
  id
  isActiveVersionOf
  operationsEventClass
  properties
  recordEntries
  recordSpecifications
  version
  versionStatus
}
""
enum OperationsEventClassVersionOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  version
}
""
enum OperationsEventDefinitionHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  activeVersion
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  includesPropertiesOf
  isAssembledFrom
  isComponentOf
  isIncludedIn
  label
  nextVersion
  operationsEvents
  recordEntries
  versions
}
""
enum OperationsEventDefinitionOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
  label
  nextVersion
}
""
enum OperationsEventDefinitionPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  effectiveEnd
  effectiveStart
  id
  operationsEventClassProperty
  operationsEventDefinitionVersion
  parent
  value
  valueUnitOfMeasure
}
""
enum OperationsEventDefinitionPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  value
}
""
enum OperationsEventDefinitionRecordSpecificationHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  action
  actionMultiplicity
  definitionType
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  informationObjectType
  multiplicity
  operationsEventDefinitionVersion
  operationsEventRecords
}
""
enum OperationsEventDefinitionRecordSpecificationOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
}
""
enum OperationsEventDefinitionVersionHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  category
  description
  effectiveEnd
  effectiveStart
  enterpriseFunction
  hierarchyScope
  id
  isActiveVersionOf
  momFunction
  operationsEventClasses
  operationsEventDefinition
  operationsEventLevel
  operationsEventType
  operationsType
  priority
  properties
  recordEntries
  recordSpecifications
  source
  version
  versionStatus
}
""
enum OperationsEventDefinitionVersionOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  category
  description
  effectiveEnd
  effectiveStart
  id
  source
  version
}
""
enum OperationsEventHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  category
  children
  description
  effectiveEnd
  effectiveStart
  enterpriseFunction
  hierarchyScope
  id
  momFunction
  operationsEventDefinition
  operationsEventLevel
  operationsEventType
  operationsType
  parent
  priority
  properties
  recordEntries
  recordTimestamp
  records
  source
}
""
enum OperationsEventLevelEnum {
  Level_2
  Level_3
  Level_4
  Other
}
""
enum OperationsEventOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  category
  description
  effectiveEnd
  effectiveStart
  id
  priority
  recordTimestamp
  source
}
""
enum OperationsEventPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  effectiveEnd
  effectiveStart
  id
  operationsEvent
  operationsEventDefinitionProperty
  parent
  value
  valueUnitOfMeasure
}
""
enum OperationsEventPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  value
}
""
enum OperationsEventRecordEntryHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  data
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  informationObject
  operationsEventRecord
  parent
  recordId
  recordTimestamp
}
""
enum OperationsEventRecordEntryOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  data
  description
  effectiveEnd
  effectiveStart
  id
  recordId
  recordTimestamp
}
""
enum OperationsEventRecordHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  action
  children
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  operationsEvent
  operationsEventDefinitionRecordSpecification
  parent
  recordEntries
  recordTimestamp
}
""
enum OperationsEventRecordOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  recordTimestamp
}
""
enum OperationsEventTypeEnum {
  Alarm
  Alert
  Event
}
""
enum OperationsMaterialBillHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  billOfMaterial
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  label
  materialBillItems
  operationsDefinitionVersion
  operationsSegments
  useType
}
""
enum OperationsMaterialBillOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  billOfMaterial
  description
  effectiveEnd
  effectiveStart
  id
  label
}
""
enum OperationsPerformanceHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  description
  effectiveEnd
  effectiveStart
  endDateTime
  hierarchyScope
  id
  operationsResponses
  operationsSchedule
  operationsType
  performanceState
  publishedDate
  recordEntries
  startDateTime
}
""
enum OperationsPerformanceOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  endDateTime
  id
  publishedDate
  startDateTime
}
""
enum OperationsRequestHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  description
  hierarchyScope
  id
  notes
  operationsDefinition
  operationsResponses
  operationsSchedule
  operationsSegment
  operationsType
  priority
  recordEntries
  requestState
  scheduledEndDate
  scheduledStartDate
  segmentRequirements
  segmentResponses
  workRequests
}
""
enum OperationsRequestOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  id
  notes
  priority
  scheduledEndDate
  scheduledStartDate
}
""
enum OperationsResponseHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  description
  effectiveEnd
  effectiveStart
  endDateTime
  hierarchyScope
  id
  isActive
  operationsDefinition
  operationsPerformance
  operationsRequest
  operationsSegment
  operationsType
  properties
  recordEntries
  responseState
  segmentRequirements
  segmentResponses
  startDateTime
}
""
enum OperationsResponseOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  endDateTime
  id
  startDateTime
}
""
enum OperationsResponsePropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  hierarchyScope
  id
  label
  operationalLocation
  operationsResponse
  parent
  quantity
  quantityUoM
  spatialDefinition
  use
}
""
enum OperationsResponsePropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  id
  label
  quantity
  use
}
""
enum OperationsScheduleHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  description
  hierarchyScope
  id
  operationsPerformance
  operationsRequests
  operationsType
  publishedDate
  recordEntries
  scheduleState
  scheduledEndDate
  scheduledStartDate
}
""
enum OperationsScheduleOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  id
  publishedDate
  scheduledEndDate
  scheduledStartDate
}
""
enum OperationsSegmentDependencyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  condition
  dependencyFactor
  dependencyType
  description
  effectiveEnd
  effectiveStart
  factorUoM
  from
  id
  label
  rules
  to
}
""
enum OperationsSegmentDependencyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  condition
  dependencyFactor
  description
  effectiveEnd
  effectiveStart
  id
  label
}
""
enum OperationsSegmentHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  billOfMaterial
  billOfResources
  children
  definitionType
  description
  duration
  durationUoM
  effectiveEnd
  effectiveStart
  equipmentSpecifications
  hierarchyScope
  id
  inflows
  isMadeUpOf
  label
  makesUp
  materialSpecifications
  materialsBill
  operationsDefinitionVersion
  operationsRequests
  operationsResponses
  operationsType
  outflows
  parameterSpecifications
  parent
  personnelSpecifications
  physicalAssetSpecifications
  positionX
  positionY
  processSegment
  recordEntries
  rules
  segmentRequirements
  segmentResponses
  workMasters
}
""
enum OperationsSegmentOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  billOfMaterial
  billOfResources
  description
  duration
  effectiveEnd
  effectiveStart
  id
  label
  positionX
  positionY
}
""
enum ParameterSpecificationHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  jobOrderParameter
  label
  operationsSegment
  parent
  segmentParameters
  value
  valueLowerControlLimit
  valueLowerSpecLimit
  valueSetPoint
  valueUnitOfMeasure
  valueUpperControlLimit
  valueUpperSpecLimit
  workDirective
  workMaster
}
""
enum ParameterSpecificationOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  value
  valueLowerControlLimit
  valueLowerSpecLimit
  valueSetPoint
  valueUpperControlLimit
  valueUpperSpecLimit
}
""
enum PayloadFieldDefinitionHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  effectiveEnd
  effectiveStart
  expression
  name
}
""
enum PayloadFieldDefinitionOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  expression
  name
}
""
enum PersonHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  activeVersion
  effectiveEnd
  effectiveStart
  events
  id
  label
  nextVersion
  personnelActual
  personnelRequirements
  personnelSpecifications
  recordEntries
  specifiesTests
  stateModelInstances
  testResults
  testedBy
  versions
}
""
enum PersonOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
  label
  nextVersion
}
""
enum PersonPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  correspondsTo
  description
  effectiveEnd
  effectiveStart
  id
  label
  parent
  personVersion
  personnelActualProperties
  personnelClassProperty
  personnelRequirementProperties
  personnelSpecificationProperties
  recordsMeasurementOf
  value
  valueLowerControlLimit
  valueLowerSpecLimit
  valueSetPoint
  valueUnitOfMeasure
  valueUpperControlLimit
  valueUpperSpecLimit
}
""
enum PersonPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  value
  valueLowerControlLimit
  valueLowerSpecLimit
  valueSetPoint
  valueUpperControlLimit
  valueUpperSpecLimit
}
""
enum PersonVersionHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  comments
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  isActiveVersionOf
  name
  operationalLocation
  person
  personnelActual
  personnelClasses
  properties
  recordEntries
  signaturesMade
  spatialDefinition
  stateModels
  version
  versionStatus
}
""
enum PersonVersionOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  name
  version
}
""
enum PersonnelActualHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  comments
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  jobResponse
  operationalLocation
  parent
  person
  personVersion
  personnelClass
  personnelUse
  properties
  quantity
  quantityUoM
  segmentResponse
  signatures
  spatialDefinition
  testResults
}
""
enum PersonnelActualOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  personnelUse
  quantity
}
""
enum PersonnelActualPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  label
  operationalLocation
  parent
  personProperty
  personnelActual
  personnelClassProperty
  quantity
  quantityUoM
  spatialDefinition
  use
  value
  valueUnitOfMeasure
}
""
enum PersonnelActualPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  quantity
  use
  value
}
""
enum PersonnelClassHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  activeVersion
  effectiveEnd
  effectiveStart
  id
  isIncludedIn
  label
  nextVersion
  personVersions
  personnelActual
  personnelRequirements
  personnelSpecifications
  recordEntries
  specifiesTests
  testResults
  testedBy
  versions
}
""
enum PersonnelClassOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
  label
  nextVersion
}
""
enum PersonnelClassPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  correspondsTo
  description
  effectiveEnd
  effectiveStart
  id
  label
  parent
  personProperty
  personnelActualProperties
  personnelClassVersion
  personnelRequirementProperties
  personnelSpecificationProperties
  propertyType
  recordsMeasurementOf
  value
  valueUnitOfMeasure
}
""
enum PersonnelClassPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  value
}
""
enum PersonnelClassVersionHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  includesPropertiesOf
  isActiveVersionOf
  personnelClass
  properties
  recordEntries
  stateModels
  version
  versionStatus
}
""
enum PersonnelClassVersionOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  version
}
""
enum PersonnelRequirementHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  comments
  description
  hierarchyScope
  id
  jobOrder
  operationalLocation
  parent
  person
  personnelClass
  properties
  quantity
  quantityUoM
  segmentRequirement
  signatures
  specifiesTests
  testResults
  testedBy
  use
}
""
enum PersonnelRequirementOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  id
  quantity
  use
}
""
enum PersonnelRequirementPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  id
  label
  parent
  personProperty
  personnelClassProperty
  personnelRequirement
  quantity
  quantityUoM
  value
  valueUnitOfMeasure
}
""
enum PersonnelRequirementPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  id
  label
  quantity
  value
}
""
enum PersonnelSpecificationHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  label
  operationalLocation
  operationsSegment
  parent
  person
  personnelClass
  personnelUse
  processSegmentVersion
  properties
  quantity
  quantityUoM
  spatialDefinition
  specifiesTests
  testResults
  testedBy
  workDirective
  workMaster
}
""
enum PersonnelSpecificationOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  personnelUse
  quantity
}
""
enum PersonnelSpecificationPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  effectiveEnd
  effectiveStart
  id
  label
  parent
  personProperty
  personnelClassProperty
  personnelSpecification
  quantity
  quantityUoM
  value
  valueUnitOfMeasure
}
""
enum PersonnelSpecificationPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  quantity
  value
}
""
enum PhysicalAssetActualHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  comments
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  jobResponse
  parent
  physicalAsset
  physicalAssetClass
  physicalAssetUse
  physicalAssetVersion
  physicalLocation
  properties
  quantity
  quantityUoM
  segmentResponse
  signatures
  spatialDefinition
  testResults
}
""
enum PhysicalAssetActualOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  physicalAssetUse
  quantity
}
""
enum PhysicalAssetActualPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  effectiveEnd
  effectiveStart
  id
  label
  parent
  physicalAssetActual
  physicalAssetClassProperty
  physicalAssetProperty
  quantity
  quantityUoM
  value
  valueUnitOfMeasure
}
""
enum PhysicalAssetActualPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  quantity
  value
}
""
enum PhysicalAssetClassHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  activeVersion
  effectiveEnd
  effectiveStart
  id
  isIncludedIn
  isMadeUpOf
  isPartOf
  label
  nextVersion
  physicalAssetActual
  physicalAssetRequirements
  physicalAssetSpecifications
  physicalAssetVersions
  recordEntries
  specifiesTests
  testResults
  testedBy
  uiSortIndex
  versions
}
""
enum PhysicalAssetClassOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
  label
  nextVersion
  uiSortIndex
}
""
enum PhysicalAssetClassPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  correspondsTo
  description
  effectiveEnd
  effectiveStart
  id
  label
  parent
  physicalAssetActualProperties
  physicalAssetClassVersion
  physicalAssetProperty
  physicalAssetRequirementProperties
  physicalAssetSpecificationProperties
  propertyType
  recordsMeasurementOf
  value
  valueUnitOfMeasure
}
""
enum PhysicalAssetClassPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  value
}
""
enum PhysicalAssetClassVersionHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  includesPropertiesOf
  isActiveVersionOf
  manufacturer
  physicalAssetClass
  properties
  recordEntries
  stateModels
  version
  versionStatus
}
""
enum PhysicalAssetClassVersionOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  manufacturer
  version
}
""
enum PhysicalAssetDataSourceHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  dataSourceVersion
  effectiveEnd
  effectiveStart
  physicalAssetVersion
  topicTemplate
}
""
enum PhysicalAssetDataSourceOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  topicTemplate
}
""
enum PhysicalAssetHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  activeVersion
  effectiveEnd
  effectiveStart
  equipment
  equipmentAssetMapping
  events
  id
  isMadeUpOf
  isPartOf
  label
  materialLots
  materialSubLots
  nextVersion
  physicalAssetActual
  physicalAssetRequirements
  physicalAssetSpecifications
  recordEntries
  specifiesTests
  stateModelInstances
  testResults
  testedBy
  uiSortIndex
  versions
}
""
enum PhysicalAssetOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
  label
  nextVersion
  uiSortIndex
}
""
enum PhysicalAssetPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  correspondsTo
  description
  effectiveEnd
  effectiveStart
  id
  label
  parent
  physicalAssetActualProperties
  physicalAssetClassProperty
  physicalAssetRequirementProperties
  physicalAssetSpecificationProperties
  physicalAssetVersion
  recordsMeasurementOf
  value
  valueLowerControlLimit
  valueLowerSpecLimit
  valueSetPoint
  valueUnitOfMeasure
  valueUpperControlLimit
  valueUpperSpecLimit
}
""
enum PhysicalAssetPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  value
  valueLowerControlLimit
  valueLowerSpecLimit
  valueSetPoint
  valueUpperControlLimit
  valueUpperSpecLimit
}
""
enum PhysicalAssetRequirementHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  comments
  description
  equipmentLevel
  hierarchyScope
  id
  jobOrder
  parent
  physicalAsset
  physicalAssetClass
  physicalLocation
  properties
  quantity
  quantityUoM
  segmentRequirement
  signatures
  specifiesTests
  testResults
  testedBy
  use
}
""
enum PhysicalAssetRequirementOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  id
  quantity
  use
}
""
enum PhysicalAssetRequirementPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  id
  label
  parent
  physicalAssetClassProperty
  physicalAssetProperty
  physicalAssetRequirement
  quantity
  quantityUoM
  value
  valueUnitOfMeasure
}
""
enum PhysicalAssetRequirementPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  id
  label
  quantity
  value
}
""
enum PhysicalAssetSpecificationHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  label
  operationsSegment
  parent
  physicalAsset
  physicalAssetClass
  physicalAssetUse
  physicalLocation
  processSegmentVersion
  properties
  quantity
  quantityUoM
  spatialDefinition
  workDirective
  workMaster
}
""
enum PhysicalAssetSpecificationOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  physicalAssetUse
  quantity
}
""
enum PhysicalAssetSpecificationPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  effectiveEnd
  effectiveStart
  id
  label
  parent
  physicalAssetClassProperty
  physicalAssetProperty
  physicalAssetSpecification
  quantity
  quantityUoM
  value
  valueUnitOfMeasure
}
""
enum PhysicalAssetSpecificationPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  quantity
  value
}
""
enum PhysicalAssetVersionHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  dataSources
  description
  effectiveEnd
  effectiveStart
  fixedAssetID
  hierarchyScope
  id
  isActiveVersionOf
  physicalAsset
  physicalAssetActual
  physicalAssetClasses
  physicalLocation
  physicalLocationDescription
  properties
  recordEntries
  spatialDefinition
  stateModels
  vendorID
  version
  versionStatus
}
""
enum PhysicalAssetVersionOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  fixedAssetID
  id
  physicalLocationDescription
  vendorID
  version
}
""
enum ProcessLocation {
  Core
  Edge
}
""
enum ProcessSegmentDependencyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  condition
  dependencyFactor
  dependencyType
  description
  effectiveEnd
  effectiveStart
  factorUoM
  from
  id
  label
  rules
  to
}
""
enum ProcessSegmentDependencyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  condition
  dependencyFactor
  description
  effectiveEnd
  effectiveStart
  id
  label
}
""
enum ProcessSegmentHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  activeVersion
  effectiveEnd
  effectiveStart
  id
  inflows
  isMadeUpOf
  isPartOf
  label
  nextVersion
  operationsSegments
  outflows
  recordEntries
  segmentRequirements
  segmentResponses
  versions
  workMasters
}
""
enum ProcessSegmentOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
  label
  nextVersion
}
""
enum ProcessSegmentParameterHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  jobOrderParameter
  label
  parent
  processSegmentVersion
  segmentParameters
  value
  valueUnitOfMeasure
}
""
enum ProcessSegmentParameterOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  value
}
""
enum ProcessSegmentVersionHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  definitionType
  description
  duration
  durationUoM
  effectiveEnd
  effectiveStart
  equipmentSpecifications
  hierarchyScope
  id
  isActiveVersionOf
  materialSpecifications
  operationsType
  personnelSpecifications
  physicalAssetSpecifications
  processSegment
  processSegmentParameters
  recordEntries
  version
  versionStatus
}
""
enum ProcessSegmentVersionOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  duration
  effectiveEnd
  effectiveStart
  id
  version
}
""
enum PropertyBindingType {
  BOUND
  CALCULATED
  STATIC
}
""
enum PropertyMeasurementHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  equipmentClassProperty
  equipmentProperty
  expiration
  id
  materialClassProperty
  materialDefinitionProperty
  materialLotProperty
  measurementDate
  personProperty
  personnelClassProperty
  physicalAssetClassProperty
  physicalAssetProperty
  recordEntries
  testResult
  value
  valueUnitOfMeasure
  workDirective
  workMaster
}
""
enum PropertyMeasurementOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  expiration
  id
  measurementDate
  value
}
""
enum PropertyNameAliasHasFilter {
  dataSource
  dataSourceTopic
  dataSourceTopicLabel
  equipmentVersion
  expression
  propertyLabel
}
""
enum PropertyNameAliasOrderable {
  dataSourceTopicLabel
  expression
  propertyLabel
}
""
enum PropertyValueAliasHasFilter {
  alias
  property
  system
  value
}
""
enum PropertyValueAliasOrderable {
  alias
  system
  value
}
""
enum RuleHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  delayOption
  delayTime
  description
  effectiveEnd
  effectiveStart
  equipmentClassVersion
  id
  label
  operationsSegment
  operationsSegmentDependency
  payloadFields
  processLocation
  processSegmentDependency
  triggerExpression
  triggerProperties
  workflowSpecification
}
""
enum RuleOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  delayTime
  description
  effectiveEnd
  effectiveStart
  id
  label
  triggerExpression
}
"""
The defined values for the schedule state attribute of the operations schedule, request state attribute 
for the operations request, and segment state attribute for segment requirement have the following definitions.
"""
enum ScheduleState {
  """
   An execution decision has been taken to terminate the job orders or activities that may, or may not, 
    have been previously commenced. 
  """
  ABORTED
  " A scheduling decision has been taken to cancel the requirements prior to commencement of execution. "
  CANCELLED
  """
   Job orders or activities have been completed and fully reconciled. No further changes, or restatement 
    of actuals is expected. 
  """
  CLOSED
  " Job orders or activities have been completed and are no longer in execution. "
  COMPLETED
  " The requirements have not been released for planning. "
  FORECAST
  " Job orders or activities have been temporarily stopped due to a constraint of some form. "
  HELD
  " Necessary preconditions have been met and the job orders or activities are ready to run. "
  READY
  " The requirements have been released for execution. "
  RELEASED
  " Job orders or activities are in execution. "
  RUNNING
  " Job orders or activities have been temporarily stopped due to a deliberate decision within execution. "
  SUSPENDED
  " Necessary preconditions have not been met and the job orders or activities are not ready to run. "
  WAITING
}
""
enum SecretHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  activeVersion
  id
  nextVersion
  versions
}
""
enum SecretOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  id
  nextVersion
}
""
enum SecretVersionHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  effectiveEnd
  effectiveStart
  id
  isActiveVersionOf
  secret
  value
  version
  versionStatus
}
""
enum SecretVersionOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
  value
  version
}
""
enum SegmentDataHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  label
  parent
  segmentResponse
  value
  valueUnitOfMeasure
}
""
enum SegmentDataOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  value
}
""
enum SegmentParameterHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  comments
  description
  hierarchyScope
  id
  label
  parameterSpecification
  parent
  processSegmentParameter
  segmentRequirement
  value
  valueUnitOfMeasure
}
""
enum SegmentParameterOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  id
  label
  value
}
""
enum SegmentRequirementHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  duration
  durationUoM
  earliestStartDate
  equipmentRequirements
  hierarchyScope
  id
  jobOrders
  latestEndDate
  materialRequirements
  notes
  operationsDefinition
  operationsRequest
  operationsResponses
  operationsSegment
  operationsType
  parameters
  parent
  personnelRequirements
  physicalAssetRequirements
  processSegment
  segmentResponses
  segmentState
  workRequests
}
""
enum SegmentRequirementOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  duration
  earliestStartDate
  id
  latestEndDate
  notes
}
""
enum SegmentResponseHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  actualEndDateTime
  actualStartDateTime
  children
  description
  effectiveEnd
  effectiveStart
  equipmentActual
  hierarchyScope
  id
  jobResponses
  materialActual
  operationsDefinitions
  operationsRequests
  operationsResponse
  operationsSegments
  operationsType
  parent
  personnelActual
  physicalAssetActual
  postingDateTime
  processSegment
  segmentData
  segmentRequirements
  segmentState
  workResponses
}
""
enum SegmentResponseOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  actualEndDateTime
  actualStartDateTime
  description
  effectiveEnd
  effectiveStart
  id
  postingDateTime
}
""
enum SignatureHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  alarmEvent
  changeIndication
  comment
  effectiveEnd
  effectiveStart
  equipmentActual
  equipmentRequirement
  event
  jobOrder
  jobResponse
  jobResponseData
  materialActual
  materialRequirement
  personVersion
  personnelActual
  personnelRequirement
  physicalAssetActual
  physicalAssetRequirement
  signatureForAComment
  signatureReason
  timestamp
  workDirective
  workMaster
  workRequest
  workResponse
}
""
enum SignatureOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  changeIndication
  effectiveEnd
  effectiveStart
  timestamp
}
""
enum SignatureReasonHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  effectiveEnd
  effectiveStart
  id
  signatures
}
""
enum SignatureReasonOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
}
""
enum SpatialDefinitionHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
  label
  multiPolygonValue
  pointValue
  polygonValue
  recordEntries
  srid
  sridAuthority
}
""
enum SpatialDefinitionOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
  label
  srid
  sridAuthority
}
""
enum StateModelActionHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  actionType
  effectiveEnd
  effectiveStart
  id
  isEntryActionForState
  isExitActionForState
  label
  transition
  variables
  workflowSpecification
}
""
enum StateModelActionOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
  label
  variables
}
""
enum StateModelActionType {
  ENTRY
  EXIT
}
""
enum StateModelDefinitionHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  bpmnXMLEncoded
  description
  effectiveEnd
  effectiveStart
  equipmentClassVersion
  equipmentVersion
  events
  hierarchyScope
  id
  instances
  label
  materialClassVersion
  materialDefinitionVersion
  personVersion
  personnelClassVersion
  physicalAssetClassVersion
  physicalAssetVersion
  properties
  states
  transitions
}
""
enum StateModelDefinitionOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  bpmnXMLEncoded
  description
  effectiveEnd
  effectiveStart
  id
  label
}
""
enum StateModelEventHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  effectiveEnd
  effectiveStart
  id
  label
  stateModelDefinition
  transitions
}
""
enum StateModelEventOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
  label
}
""
enum StateModelInstanceHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  description
  equipment
  hierarchyScope
  id
  label
  materialDefinition
  materialLot
  materialSubLot
  person
  physicalAsset
  state
  stateModelDefinition
  transitions
}
""
enum StateModelInstanceOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  id
  label
  state
}
""
enum StateModelPropertyHasFilter {
  StateModel
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  dataType
  definitionType
  description
  id
  name
  parent
  value
  valueUnitOfMeasure
}
""
enum StateModelPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  id
  name
  value
}
""
enum StateModelStateHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  effectiveEnd
  effectiveStart
  id
  inflows
  isFinalState
  isInitialState
  label
  onEntry
  onExit
  outflows
  parent
  stateModelDefinition
}
""
enum StateModelStateOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
  label
}
""
enum StateModelTransitionHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  condition
  effectiveEnd
  effectiveStart
  from
  id
  label
  stateModelActions
  stateModelDefinition
  stateModelEvents
  to
}
""
enum StateModelTransitionOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  condition
  effectiveEnd
  effectiveStart
  id
  label
}
""
enum StateTransitionInstanceHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  fromState
  stateModelInstance
  timestamp
  toState
}
""
enum StateTransitionInstanceOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  fromState
  timestamp
  toState
}
""
enum TestResultHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  children
  description
  effectiveEnd
  effectiveStart
  equipment
  equipmentActual
  equipmentClass
  equipmentRequirement
  equipmentSpecification
  evaluationCriterionResult
  evaluationDate
  expiration
  hierarchyScope
  id
  materialActual
  materialClass
  materialDefinition
  materialLot
  materialRequirement
  materialSpecification
  materialSubLot
  parent
  person
  personnelActual
  personnelClass
  personnelRequirement
  personnelSpecification
  physicalAsset
  physicalAssetActual
  physicalAssetClass
  physicalAssetRequirement
  propertyMeasurements
  recordEntries
}
""
enum TestResultOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  evaluationCriterionResult
  evaluationDate
  expiration
  id
}
""
enum TestSpecificationCriteriaHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  evaluatedProperties
  expression
  id
  label
  result
  sequence
  testSpecification
}
""
enum TestSpecificationCriteriaOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  expression
  id
  label
  result
  sequence
}
""
enum TestSpecificationHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  children
  criteria
  description
  effectiveEnd
  effectiveStart
  evaluatedProperties
  hierarchyScope
  id
  key
  label
  parent
  physicalSample
  properties
  publishedDate
  recordEntries
  recurrenceQuantity
  recurrenceTimeInterval
  requiredByEquipment
  requiredByEquipmentClass
  requiredByEquipmentRequirement
  requiredByEquipmentSpecification
  requiredByMaterialClass
  requiredByMaterialDefinition
  requiredByMaterialLot
  requiredByMaterialRequirement
  requiredByMaterialSpecification
  requiredByMaterialSubLot
  requiredByPerson
  requiredByPersonnelClass
  requiredByPersonnelRequirement
  requiredByPersonnelSpecification
  requiredByPhysicalAsset
  requiredByPhysicalAssetClass
  requiredByPhysicalAssetRequirement
  testSampleSize
  testsEquipment
  testsEquipmentClass
  testsEquipmentRequirements
  testsEquipmentSpecifications
  testsMaterialClass
  testsMaterialDefinition
  testsMaterialLot
  testsMaterialRequirements
  testsMaterialSpecifications
  testsMaterialSubLot
  testsPerson
  testsPersonnelClass
  testsPersonnelRequirements
  testsPersonnelSpecifications
  testsPhysicalAsset
  testsPhysicalAssetClass
  testsPhysicalAssetRequirements
  version
}
""
enum TestSpecificationOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  key
  label
  publishedDate
  recurrenceQuantity
  recurrenceTimeInterval
  testSampleSize
  version
}
""
enum TestSpecificationPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  children
  description
  effectiveEnd
  effectiveStart
  id
  label
  parent
  testSpecification
  value
  valueUnitOfMeasure
}
""
enum TestSpecificationPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  label
  value
}
""
enum UnitOfMeasureConversionHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  denominator
  effectiveEnd
  effectiveStart
  fromUnitOfMeasure
  materialDefinitionVersion
  numerator
  toUnitOfMeasure
}
""
enum UnitOfMeasureConversionOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  denominator
  effectiveEnd
  effectiveStart
  numerator
}
""
enum UnitOfMeasureHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  dataType
  effectiveEnd
  effectiveStart
  id
  recordEntries
}
""
enum UnitOfMeasureOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  effectiveEnd
  effectiveStart
  id
}
""
enum VersionState {
  ACTIVE
  APPROVED
  DEPRECATED
  DRAFT
  FOR_REVIEW
}
""
enum Weekday {
  FR
  MO
  SA
  SU
  TH
  TU
  WE
}
""
enum WorkCalendarDefinitionEntryHasFilter {
  byHour
  byMinute
  byMonth
  byMonthDay
  bySecond
  bySetPos
  byWeekDay
  byWeekNo
  byYearDay
  calendarEntries
  count
  description
  duration
  endDateTime
  entryType
  freq
  hierarchyScope
  interval
  isActive
  properties
  startDateTime
  wkst
  workCalendar
}
""
enum WorkCalendarDefinitionEntryOrderable {
  count
  description
  duration
  endDateTime
  interval
  startDateTime
}
""
enum WorkCalendarDefinitionEntryPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  hierarchyScope
  id
  operationalLocation
  parent
  quantity
  quantityUoM
  spatialDefinition
  use
  workCalendarDefinitionEntry
}
""
enum WorkCalendarDefinitionEntryPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  id
  quantity
  use
}
""
enum WorkCalendarEntryHasFilter {
  definition
  description
  entryType
  finishDateTime
  hierarchyScope
  isActive
  properties
  startDateTime
  workCalendar
}
""
enum WorkCalendarEntryOrderable {
  description
  finishDateTime
  startDateTime
}
""
enum WorkCalendarEntryPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  hierarchyScope
  id
  operationalLocation
  parent
  quantity
  quantityUoM
  spatialDefinition
  use
  workCalendarEntry
}
""
enum WorkCalendarEntryPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  id
  quantity
  use
}
""
enum WorkCalendarEntryType {
  PlannedBusyTime
  PlannedDowntime
  PlannedShutdown
}
""
enum WorkCalendarHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  definition
  description
  effectiveEnd
  effectiveStart
  entries
  equipmentVersions
  name
  recordEntries
}
""
enum WorkCalendarOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  name
}
""
enum WorkDirectiveHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  comments
  description
  duration
  durationUnitOfMeasure
  effectiveEnd
  effectiveStart
  equipmentSpecifications
  evaluatedProperties
  hierarchyScope
  id
  jobOrders
  jobResponses
  materialSpecifications
  parameterSpecifications
  parent
  personnelSpecifications
  physicalAssetSpecifications
  propertyMeasurements
  publishedDate
  recordEntries
  signatures
  state
  version
  workMaster
  workType
  workflowSpecification
}
""
enum WorkDirectiveOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  duration
  effectiveEnd
  effectiveStart
  id
  publishedDate
  version
}
"Indicates the state of the job response."
enum WorkDirectiveState {
  ABORTED
  CLOSED
  COMPLETED
  HELD
  READY
  RUNNING
  SUSPENDED
  WAITING
}
""
enum WorkMasterHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  comments
  definedBy
  defines
  definitionType
  description
  duration
  durationUnitOfMeasure
  effectiveEnd
  effectiveStart
  equipmentSpecifications
  evaluatedProperties
  hierarchyScope
  id
  jobOrders
  jobResponses
  materialSpecifications
  operationsDefinition
  operationsSegment
  parameterSpecifications
  parent
  personnelSpecifications
  physicalAssetSpecifications
  processSegment
  propertyMeasurements
  publishedDate
  recordEntries
  signatures
  version
  workDirectives
  workType
  workflowSpecification
}
""
enum WorkMasterOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  duration
  effectiveEnd
  effectiveStart
  id
  publishedDate
  version
}
""
enum WorkPerformanceHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  effectiveEnd
  effectiveStart
  endDateTime
  hierarchyScope
  id
  parent
  publishedDate
  recordEntries
  startDateTime
  workResponses
  workSchedule
  workState
  workType
}
""
enum WorkPerformanceOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  endDateTime
  id
  publishedDate
  startDateTime
}
""
enum WorkRequestHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  comments
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  jobOrders
  operationsRequest
  parent
  plannedEndDateTime
  plannedStartDateTime
  priority
  recordEntries
  requestState
  segmentRequirement
  signatures
  workResponses
  workSchedule
  workType
}
""
enum WorkRequestOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  plannedEndDateTime
  plannedStartDateTime
  priority
}
""
enum WorkResponseHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  comments
  description
  effectiveEnd
  effectiveStart
  endDateTime
  events
  hierarchyScope
  id
  jobResponses
  parent
  recordEntries
  responseState
  segmentResponse
  signatures
  startDateTime
  workPerformance
  workRequest
  workType
}
""
enum WorkResponseOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  endDateTime
  id
  startDateTime
}
""
enum WorkScheduleHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  description
  effectiveEnd
  effectiveStart
  hierarchyScope
  id
  parent
  publishedDate
  recordEntries
  scheduleState
  scheduledEndDate
  scheduledStartDate
  workPerformances
  workRequests
  workType
}
""
enum WorkScheduleOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  effectiveEnd
  effectiveStart
  id
  publishedDate
  scheduledEndDate
  scheduledStartDate
}
"""
An identification of the resources and workflow required to perform a specified unit of work
shall be defined as a work definition. The work definition may apply to production, maintenance, 
quality and inventory activities.
"""
enum WorkType {
  INVENTORY
  MAINTENANCE
  MIXED
  PRODUCTION
  QUALITY
}
""
enum WorkflowErrorHasFilter {
  code
  id
  node
  reference
  workflowSpecificationVersion
}
""
enum WorkflowErrorOrderable {
  code
  id
  reference
}
""
enum WorkflowMessageHasFilter {
  enabled
  id
  node
  reference
  workflowSpecificationVersion
}
""
enum WorkflowMessageOrderable {
  id
  reference
}
""
enum WorkflowShapeHasFilter {
  acl
  height
  icon
  id
  node
  width
  x
  y
}
""
enum WorkflowShapeOrderable {
  height
  icon
  id
  width
  x
  y
}
""
enum WorkflowSpecificationConnectionHasFilter {
  _createdBy
  _createdDateTime
  _modifiedBy
  _modifiedDateTime
  acl
  condition
  connectionType
  description
  from
  id
  name
  properties
  to
  waypoints
  workflowSpecificationVersion
}
""
enum WorkflowSpecificationConnectionOrderable {
  _createdBy
  _createdDateTime
  _modifiedBy
  _modifiedDateTime
  condition
  description
  id
  name
}
""
enum WorkflowSpecificationConnectionPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  connection
  dataType
  definitionType
  description
  id
  name
  parent
  value
  valueUnitOfMeasure
}
""
enum WorkflowSpecificationConnectionPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  id
  name
  value
}
""
enum WorkflowSpecificationConnectionTypeHasFilter {
  _createdBy
  _createdDateTime
  _modifiedBy
  _modifiedDateTime
  acl
  connections
  description
  hierarchyScope
  id
  properties
  recordEntries
}
""
enum WorkflowSpecificationConnectionTypeOrderable {
  _createdBy
  _createdDateTime
  _modifiedBy
  _modifiedDateTime
  description
  id
}
""
enum WorkflowSpecificationConnectionTypePropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  connectionType
  dataType
  definitionType
  description
  id
  name
  parent
  value
  valueUnitOfMeasure
}
""
enum WorkflowSpecificationConnectionTypePropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  id
  name
  value
}
""
enum WorkflowSpecificationHasFilter {
  _createdBy
  _createdDateTime
  _modifiedBy
  _modifiedDateTime
  acl
  activeVersion
  calledByNodes
  id
  includedIn
  jobOrders
  jobResponses
  nextVersion
  recordEntries
  rules
  stateModelActions
  versions
  workDirectives
  workMasters
}
""
enum WorkflowSpecificationNodeHasFilter {
  _createdBy
  _createdDateTime
  _modifiedBy
  _modifiedDateTime
  acl
  attachedTo
  boundaryEvents
  containsWorkflowSpecification
  description
  error
  form
  hierarchyScope
  id
  inflows
  inputs
  jobOrders
  jobResponses
  message
  nodeType
  outflows
  outputs
  properties
  role
  shape
  testCases
  timer
  uiComponent
  workflowSpecificationVersion
}
""
enum WorkflowSpecificationNodeOrderable {
  _createdBy
  _createdDateTime
  _modifiedBy
  _modifiedDateTime
  description
  id
  role
  uiComponent
}
""
enum WorkflowSpecificationNodePropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  dataType
  definitionType
  description
  id
  name
  node
  parent
  value
  valueUnitOfMeasure
}
""
enum WorkflowSpecificationNodePropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  id
  name
  value
}
""
enum WorkflowSpecificationNodeTestCaseHasFilter {
  expectedResult
  id
  inputJson
  node
}
""
enum WorkflowSpecificationNodeTestCaseOrderable {
  expectedResult
  id
  inputJson
}
""
enum WorkflowSpecificationNodeTypeHasFilter {
  _createdBy
  _createdDateTime
  _modifiedBy
  _modifiedDateTime
  acl
  description
  hierarchyScope
  id
  name
  nodes
  properties
  recordEntries
}
""
enum WorkflowSpecificationNodeTypeOrderable {
  _createdBy
  _createdDateTime
  _modifiedBy
  _modifiedDateTime
  description
  id
  name
}
""
enum WorkflowSpecificationNodeTypePropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  dataType
  definitionType
  description
  id
  name
  nodeType
  parent
  value
  valueUnitOfMeasure
}
""
enum WorkflowSpecificationNodeTypePropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  id
  name
  value
}
""
enum WorkflowSpecificationNodeVariableHasFilter {
  source
  target
}
""
enum WorkflowSpecificationNodeVariableOrderable {
  source
  target
}
""
enum WorkflowSpecificationOrderable {
  _createdBy
  _createdDateTime
  _modifiedBy
  _modifiedDateTime
  id
  nextVersion
}
""
enum WorkflowSpecificationPropertyHasFilter {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  acl
  children
  dataType
  definitionType
  description
  id
  name
  parent
  value
  valueUnitOfMeasure
  workflowSpecificationVersion
}
""
enum WorkflowSpecificationPropertyOrderable {
  _createdBy
  _createdOn
  _modifiedBy
  _modifiedOn
  description
  id
  name
  value
}
""
enum WorkflowSpecificationVersionHasFilter {
  _createdBy
  _createdDateTime
  _modifiedBy
  _modifiedDateTime
  acl
  bpmnXMLEncoded
  connections
  definitionType
  description
  effectiveEnd
  effectiveStart
  errors
  hierarchyScope
  id
  includePropertiesOf
  isActiveVersionOf
  isExecutable
  jobOrders
  jobResponses
  messages
  nodes
  properties
  recordEntries
  schemaDefinition
  timers
  version
  versionStatus
  workflowSpecification
}
""
enum WorkflowSpecificationVersionOrderable {
  _createdBy
  _createdDateTime
  _modifiedBy
  _modifiedDateTime
  bpmnXMLEncoded
  description
  effectiveEnd
  effectiveStart
  id
  schemaDefinition
  version
}
""
enum WorkflowTimerHasFilter {
  enabled
  id
  node
  reference
  workflowSpecificationVersion
}
""
enum WorkflowTimerOrderable {
  id
  reference
}
""
enum WorkflowWaypointHasFilter {
  connection
  x
  y
}
""
enum WorkflowWaypointOrderable {
  x
  y
}
""
input AccessPermissionFilter {
  and: [AccessPermissionFilter]
  has: [AccessPermissionHasFilter]
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter
  not: AccessPermissionFilter
  or: [AccessPermissionFilter]
  permissionLevel: IntFilter
}
""
input AccessPermissionOrder {
  asc: AccessPermissionOrderable
  desc: AccessPermissionOrderable
  then: AccessPermissionOrder
}
""
input AccessPermissionPatch {
  label: String
  permissionLevel: Int
}
""
input AccessPermissionRef {
  iid: ID
  label: String
  permissionLevel: Int
}
""
input AddAccessPermissionInput {
  label: String!
  permissionLevel: Int!
}
""
input AddAlarmEventInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Record of different events during an alarm lifecycle. "
  alarmEvent: String!
  " Value a measurement exceeded that caused the alarm. "
  alarmLimit: String
  " The type of alarm from a process perspective. "
  alarmType: String
  comments: [CommentRef]
  " The date and time an Alarm Event is effective from "
  effectiveDateTime: DateTime
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  event: EventRef
  " Indication of the importance of an event. "
  priority: String
  " The date and time an Alarm Event was last triggered "
  recordedDateTime: DateTime
  signatures: [SignatureRef]
}
""
input AddCommentInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  alarmEvent: AlarmEventRef
  child: [CommentRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentActual: EquipmentActualRef
  equipmentRequirement: EquipmentRequirementRef
  event: EventRef
  " Comment unique external id. "
  id: String!
  jobOrder: JobOrderRef
  jobResponse: JobResponseRef
  jobResponseData: JobResponseDataRef
  materialActual: MaterialActualRef
  materialRequirement: MaterialRequirementRef
  onSignature: SignatureRef
  parent: CommentRef
  personVersion: PersonVersionRef!
  personnelActual: PersonnelActualRef
  personnelRequirement: PersonnelRequirementRef
  physicalAssetActual: PhysicalAssetActualRef
  physicalAssetRequirement: PhysicalAssetRequirementRef
  recordEntries: [InformationObjectRef]
  segmentParameter: SegmentParameterRef
  signOff: SignatureRef
  " Comment body text. "
  text: String!
  " Timestamp of the comment. "
  timestamp: DateTime
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
  workRequest: WorkRequestRef
  workResponse: WorkResponseRef
}
""
input AddDataSourceInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: DataSourceVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentDataSources: [EquipmentDataSourceRef]
  " Uniquely identifies the data source. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  propertyNameAliases: [PropertyNameAliasRef]
  recordEntries: [InformationObjectRef]
  " The icon for the menu in the libre admin UI menu. "
  uiSortIndex: Int
  versions: [DataSourceVersionRef]
}
""
input AddDataSourceMethodArgumentInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  dataSourceMethod: DataSourceMethodRef!
  " The type of data for this method argument. "
  dataType: DataType
  " Contains additional information and descriptions of the data source method argument. "
  description: String
  " The direction of the argument "
  direction: MethodArgumentDirection!
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " Uniquely identifies the data source method argument. "
  id: String!
  " The argument's position in the method call "
  position: Int!
  " The value of the argument, used for communicating with libre-agent "
  value: String
}
""
input AddDataSourceMethodInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  arguments: [DataSourceMethodArgumentRef]
  dataSourceVersion: DataSourceVersionRef!
  " Contains additional information and descriptions of the data source method. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  """
  The Error is optionally returned when the method call fails. Note, 
  this should be Null in BaaS, used for communication between services.
  """
  error: String
  " Uniquely identifies the data source method. "
  id: String!
  " The method is last node in the fully qualified name of the method to call. "
  method: String!
  """
  The Object that the method is called against. Note, this should be Null in 
  BaaS, used for communication between services.
  """
  object: String
  """
  The StatusCode is returned after a method call. Note, this should be 
  Null in BaaS, used for communication between services.
  """
  statusCode: Int
}
""
input AddDataSourceTopicInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  dataSourceVersion: DataSourceVersionRef!
  " The type of data for this topic. "
  dataType: DataType
  " Contains additional information and descriptions of the data source topic. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " Uniquely identifies the data source topic. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  " The messageKey for messages being published into NATS "
  messageKeyDeterminedBy: MessageKey!
  propertyNameAliases: [PropertyNameAliasRef]
}
""
input AddDataSourceVersionInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Certificate for use with data sources that support encryption. "
  certificate: String
  " The full connection uri for the data source. "
  connectionString: String
  dataSource: DataSourceRef!
  " Contains additional information and descriptions of the data source. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentDataSources: [EquipmentDataSourceRef]
  " Uniquely identifies the data source with the version. "
  id: String!
  isActiveVersionOf: DataSourceRef
  methods: [DataSourceMethodRef]
  " Password for data sources that use simple auth. "
  password: String
  physicalAssetDataSources: [PhysicalAssetDataSourceRef]
  " The protocol use to connect to the external data source. "
  protocol: DataSourceProtocol!
  recordEntries: [InformationObjectRef]
  topics: [DataSourceTopicRef]
  " Username for data sources that use simple auth. "
  username: String
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
input AddDataSubscriptionInput {
  name: String!
  "The GraphQL Subscription query to use."
  query: String!
  "If the subscription returns a list, it can be split into separate messages in sub-topics using the id field."
  split: Boolean!
  "The MQTT Topic to publish this subscription to."
  topic: String!
}
""
input AddEnvironmentalVariableInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: EnvironmentalVariableVersionRef
  " Uniquely identifies the environmental variable. "
  id: String!
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  versions: [EnvironmentalVariableVersionRef]
}
""
input AddEnvironmentalVariableVersionInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  environmentalVariable: EnvironmentalVariableRef!
  " Uniquely identifies the environmental variable with the version. "
  id: String!
  isActiveVersionOf: EnvironmentalVariableRef
  " The value is substuted into any templates in place of the variable's id. "
  value: String!
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
input AddEquipmentActualInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [EquipmentActualRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the equipment actual. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipment: EquipmentRef
  equipmentClass: EquipmentClassRef
  " Defines the actual use of the equipment class or equipment. "
  equipmentUse: String
  equipmentVersion: EquipmentVersionRef
  hierarchyScope: HierarchyScopeRef
  " Defines a unique identification of a specific equipment actual. "
  id: String!
  jobResponse: JobResponseRef
  operationalLocation: OperationalLocationRef
  parent: EquipmentActualRef
  properties: [EquipmentActualPropertyRef]
  " Specifies the amount of equipment resources used in parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  segmentResponse: SegmentResponseRef
  signatures: [SignatureRef]
  spatialDefinition: SpatialDefinitionRef
  testResults: [TestResultRef]
}
""
input AddEquipmentActualPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [EquipmentActualPropertyRef]
  " Contains additional information and descriptions of the equipment actual property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentActual: EquipmentActualRef!
  equipmentClassProperty: EquipmentClassPropertyRef
  equipmentProperty: EquipmentPropertyRef
  hierarchyScope: HierarchyScopeRef
  " An identification of the associated equipment property or equipment class property for a specific segment response. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  operationalLocation: OperationalLocationRef
  parent: EquipmentActualPropertyRef
  " Specifies the amount of equipment resources used in parent segment. "
  quantity: Float!
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  use: String
  " The value or set of values for the associated property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddEquipmentAssetMappingInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Additional information about the mapping element. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The ending time of the association. "
  endTime: DateTime
  equipment: EquipmentRef!
  hierarchyScope: HierarchyScopeRef
  " An identification of the specific equipment asset mapping. "
  id: String!
  physicalAsset: PhysicalAssetRef!
  " The starting time of the association. "
  startTime: DateTime
}
""
input AddEquipmentClassInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: EquipmentClassVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentActual: [EquipmentActualRef]
  equipmentRequirements: [EquipmentRequirementRef]
  equipmentSpecifications: [EquipmentSpecificationRef]
  equipmentVersions: [EquipmentVersionRef]
  " A unique identification of a specific equipment class, within the scope of the information exchanged. "
  id: String!
  isIncludedIn: [EquipmentClassVersionRef]
  isMadeUpOf: [EquipmentClassRef]
  isPartOf: [EquipmentClassRef]
  " The label is last node in the fully qualified name. "
  label: String!
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  recordEntries: [InformationObjectRef]
  specifiesTests: [TestSpecificationRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  " The icon for the menu in the libre admin UI menu. "
  uiSortIndex: Int
  versions: [EquipmentClassVersionRef]
}
""
input AddEquipmentClassPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Defined how the Libre application treats the property binding logic. "
  bindingType: PropertyBindingType
  children: [EquipmentClassPropertyRef]
  correspondsTo: EvaluatedPropertyRef
  " Additional information about the equipment class property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentActualProperties: [EquipmentActualPropertyRef]
  equipmentClassVersion: EquipmentClassVersionRef!
  equipmentProperty: EquipmentPropertyRef
  equipmentRequirementProperties: [EquipmentRequirementPropertyRef]
  equipmentSpecificationProperties: [EquipmentSpecificationPropertyRef]
  " An identification of the specific property. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  parent: EquipmentClassPropertyRef
  " Defines the type of the property. "
  propertyType: Isa95PropertyType!
  recordsMeasurementOf: [PropertyMeasurementRef]
  triggersRules: [RuleRef]
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddEquipmentClassVersionInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Additional information about the equipment class. "
  description: String
  " The display name in the libre admin UI menu. "
  displayName: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  equipmentClass: EquipmentClassRef!
  " An identification of the level in the role-based equipment hierarchy. "
  equipmentLevel: EquipmentElementLevel
  equipmentVersions: [EquipmentVersionRef]
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific equipment class version. "
  id: String!
  " The icon for the menu in the libre admin UI menu. "
  image: String
  includesPropertiesOf: [EquipmentClassRef]
  isActiveVersionOf: EquipmentClassRef
  properties: [EquipmentClassPropertyRef]
  recordEntries: [InformationObjectRef]
  rules: [RuleRef]
  stateModels: [StateModelDefinitionRef]
  " Monochrome icon for use in UI "
  uiMonochromeIcon: String
  " Colour setting for the monochrome icon. "
  uiMonochromeIconColour: String
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
input AddEquipmentDataSourceInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  dataSource: DataSourceRef
  dataSourceVersion: DataSourceVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentVersion: EquipmentVersionRef!
  " This JSONata transform resolves the data source topic id for the properties of the equipment"
  topicTemplate: String
}
""
input AddEquipmentInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: EquipmentVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentActual: [EquipmentActualRef]
  equipmentAssetMapping: [EquipmentAssetMappingRef]
  equipmentRequirements: [EquipmentRequirementRef]
  equipmentSpecifications: [EquipmentSpecificationRef]
  events: [EventRef]
  " A unique identification of a specific piece of equipment, within the scope of the information exchanged. "
  id: String!
  isMadeUpOf: [EquipmentRef]
  isPartOf: [EquipmentRef]
  " The label is last node in the fully qualified name. "
  label: String!
  materialLots: [MaterialLotRef]
  materialSubLots: [MaterialSubLotRef]
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  physicalAsset: PhysicalAssetRef
  recordEntries: [InformationObjectRef]
  specifiesTests: [TestSpecificationRef]
  stateModelInstances: [StateModelInstanceRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  " The icon for the menu in the libre admin UI menu. "
  uiSortIndex: Int
  versions: [EquipmentVersionRef]
}
""
input AddEquipmentNameAliasInput {
  alias: String!
  equipment: EquipmentRef!
  system: String!
}
""
input AddEquipmentPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Defined how the MES application treats the property. "
  bindingType: PropertyBindingType
  children: [EquipmentPropertyRef]
  correspondsTo: EvaluatedPropertyRef
  " Additional information about the equipment property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentActualProperties: [EquipmentActualPropertyRef]
  equipmentClassProperty: EquipmentClassPropertyRef
  equipmentRequirementProperties: [EquipmentRequirementPropertyRef]
  equipmentSpecificationProperties: [EquipmentSpecificationPropertyRef]
  equipmentVersion: EquipmentVersionRef!
  " An identification of the specific property. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  parent: EquipmentPropertyRef
  recordsMeasurementOf: [PropertyMeasurementRef]
  " The value, set of values, or range of the property. "
  value: String
  " The lower limit that would trigger an alert. "
  valueLowerControlLimit: Float
  " The lower limit that impacts the quality of the product. "
  valueLowerSpecLimit: Float
  " Target value. "
  valueSetPoint: String
  valueUnitOfMeasure: UnitOfMeasureRef
  " The upper limit that would trigger an alert. "
  valueUpperControlLimit: Float
  " The upper limit that impacts the quality of the product. "
  valueUpperSpecLimit: Float
}
""
input AddEquipmentPropertyOverrideInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " The data source reference for a bound property type. "
  address: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  equipmentVersions: EquipmentVersionRef!
  " Used for calculated property types. "
  expression: String
  " An identification of the specific property. "
  id: String!
  " Determines if this property is not relevent on the instance. "
  ignore: Boolean
  " The property to override the preexisting property with. "
  propertyLabel: String!
  " Determines if changes to values should be stored over time. "
  storeHistory: Boolean
  " Used for static property types. "
  value: String
}
""
input AddEquipmentRequirementInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [EquipmentRequirementRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the equipment requirement. "
  description: String
  equipment: EquipmentRef
  equipmentClass: EquipmentClassRef
  " A definition of the level of the associated element of the equipment model. "
  equipmentLevel: EquipmentElementLevel
  hierarchyScope: HierarchyScopeRef
  " Defines a unique identification of a specific equipment requirement. "
  id: String!
  jobOrder: JobOrderRef
  operationalLocation: OperationalLocationRef
  parent: EquipmentRequirementRef
  properties: [EquipmentRequirementPropertyRef]
  " Specifies the amount of equipment resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  segmentRequirement: SegmentRequirementRef
  signatures: [SignatureRef]
  specifiesTests: [TestSpecificationRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  " Defines the expected use of the equipment class or equipment. "
  use: String
}
""
input AddEquipmentRequirementPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [EquipmentRequirementPropertyRef]
  " Contains additional information and descriptions of the equipment requirement property definition. "
  description: String
  equipmentClassProperty: EquipmentClassPropertyRef
  equipmentProperty: EquipmentPropertyRef
  equipmentRequirement: EquipmentRequirementRef!
  " An identification of the associated equipment property or equipment class property for a specific segment requirement. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  parent: EquipmentRequirementPropertyRef
  " Specifies the amount of equipment requirement property required for the parent equipment requirement. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  " The value, set of values, or range of the associated property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddEquipmentSpecificationInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [EquipmentSpecificationRef]
  " Contains additional information of the equipment specification. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipment: EquipmentRef
  equipmentClass: EquipmentClassRef
  " Defines the expected use of the equipment class or equipment in the context of the operations segment. "
  equipmentUse: String
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific equipment segment specification. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  operationalLocation: OperationalLocationRef
  operationsSegment: OperationsSegmentRef
  parent: EquipmentSpecificationRef
  processSegmentVersion: ProcessSegmentVersionRef
  properties: [EquipmentSpecificationPropertyRef]
  " Specifies the amount of equipment resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  specifiesTests: [TestSpecificationRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
}
""
input AddEquipmentSpecificationPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [EquipmentSpecificationPropertyRef]
  " Contains additional information and descriptions of the equipment specification property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentClassProperty: EquipmentClassPropertyRef
  equipmentProperty: EquipmentPropertyRef
  equipmentSpecification: EquipmentSpecificationRef!
  " An identification of a property of the associated equipment property or equipment class property for a specific segment. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  parent: EquipmentSpecificationPropertyRef
  " Specifies the amount of equipment resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddEquipmentVersionInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  dataSources: [EquipmentDataSourceRef]
  " Additional information about the equipment. "
  description: String
  " The display name in the libre admin UI menu. "
  displayName: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  equipment: EquipmentRef!
  equipmentActual: [EquipmentActualRef]
  equipmentClassVersions: [EquipmentClassVersionRef]
  equipmentClasses: [EquipmentClassRef]
  " An identification of the level in the role-based equipment hierarchy. "
  equipmentLevel: EquipmentElementLevel
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific piece of equipment, within the scope of the information exchanged. "
  id: String!
  isActiveVersionOf: EquipmentRef
  operationalLocation: OperationalLocationRef
  properties: [EquipmentPropertyRef]
  propertyNameAliases: [PropertyNameAliasRef]
  propertyOverrides: [EquipmentPropertyOverrideRef]
  recordEntries: [InformationObjectRef]
  spatialDefinition: SpatialDefinitionRef
  stateModels: [StateModelDefinitionRef]
  " The time zone this equipment is located in. "
  timeZoneName: String
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
  workCalendar: WorkCalendarRef
}
""
input AddEvaluatedPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  criteria: [TestSpecificationCriteriaRef]
  " Description of the test specification criteria. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  equipmentClassProperty: [EquipmentClassPropertyRef]
  equipmentProperty: [EquipmentPropertyRef]
  " Identification of the evaluated property. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  materialClassProperty: [MaterialClassPropertyRef]
  materialDefinitionProperty: [MaterialDefinitionPropertyRef]
  materialLotProperty: [MaterialLotPropertyRef]
  personProperty: [PersonPropertyRef]
  personnelClassProperty: [PersonnelClassPropertyRef]
  physicalAssetClassProperty: [PhysicalAssetClassPropertyRef]
  physicalAssetProperty: [PhysicalAssetPropertyRef]
  testSpecification: TestSpecificationRef!
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
}
""
input AddEventAssociationInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " A description of the event type. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  from: EventRef!
  " A unique identification of a specific event type. "
  id: String!
  to: EventRef!
  " An identification of the version of the event association. "
  version: String
}
""
input AddEventInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  alarmEvents: [AlarmEventRef]
  " Attribute "
  attribute: String
  " The use category of the event. "
  category: String
  comments: [CommentRef]
  " Unique identification of the computer where the event originated. "
  computerID: String
  " The date and time an Event is effective from "
  effectiveDateTime: DateTime
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipment: EquipmentRef
  eventAssociationsFrom: [EventAssociationRef]
  eventAssociationsTo: [EventAssociationRef]
  eventProperties: [EventPropertyRef]
  eventType: EventTypeRef
  jobResponse: JobResponseRef
  jobResponseData: JobResponseDataRef
  materialLot: MaterialLotRef
  materialSubLot: MaterialSubLotRef
  " Text describing the event. "
  messageText: String
  person: PersonRef
  " Identification of the person associated with the event. "
  personID: String
  physicalAsset: PhysicalAssetRef
  " The value prior to the change documented by the event. "
  previousValue: String
  """
  Reference to a procedural element. This maps to an element of the procedural hierarchy, such as a 
  phase in a control recipe, or an operation in a control recipe.
  """
  proceduralElementReference: String
  recordEntries: [InformationObjectRef]
  " The date and time an Event was last triggered "
  recordedDateTime: DateTime
  signatures: [SignatureRef]
  " Value associated with the event. "
  value: String
  workResponse: WorkResponseRef
}
""
input AddEventPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [EventPropertyRef]
  " A description of the event type. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  event: EventRef
  " A unique identification of a specific event type. "
  id: String!
  " Human friendly alternative identifier "
  label: String
  parent: EventPropertyRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
  " An identification of the version of the event property. "
  version: String
}
""
input AddEventSubtypeInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [EventSubtypeRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  eventTypes: [EventTypeRef!]
  " A unique identification of a specific event type. "
  id: String!
  " Human friendly alternative identifier "
  label: String!
  parent: EventSubtypeRef
  " An identification of the version of the event subtype. "
  version: String
}
""
input AddEventTypeInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [EventTypeRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  eventSubtypes: [EventSubtypeRef]
  events: [EventRef]
  " A unique identification of a specific event type. "
  id: String!
  " Human friendly alternative identifier "
  label: String!
  parent: EventTypeRef
  " An identification of the version of the event type. "
  version: String
}
""
input AddFormInput {
  id: String!
  jsonSchema: String
  name: String
  uiSchema: String
  workflowSpecificationNodes: [WorkflowSpecificationNodeRef]
}
""
input AddHierarchyScopeInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  children: [HierarchyScopeRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Identification of the equipment level if the equipment element is defined. "
  equipmentLevel: EquipmentElementLevel
  equipmentVersions: [EquipmentVersionRef]
  " An identification of the specific property. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  materialClassVersions: [MaterialClassVersionRef]
  materialDefinitionVersions: [MaterialDefinitionVersionRef]
  materialLots: [MaterialLotRef]
  materialSubLots: [MaterialSubLotRef]
  parent: HierarchyScopeRef
  recordEntries: [InformationObjectRef]
}
""
input AddInformationObjectInput {
  Other: String
  comment: CommentRef
  dataSource: DataSourceRef
  dataSourceVersion: DataSourceVersionRef
  equipment: EquipmentRef
  equipmentClass: EquipmentClassRef
  equipmentClassVersion: EquipmentClassVersionRef
  equipmentVersion: EquipmentVersionRef
  event: EventRef
  hierarchyScope: HierarchyScopeRef
  jobList: JobListRef
  jobOrder: JobOrderRef
  jobResponse: JobResponseRef
  jobResponseList: JobResponseListRef
  materialClass: MaterialClassRef
  materialClassVersion: MaterialClassVersionRef
  materialDefinition: MaterialDefinitionRef
  materialDefinitionVersion: MaterialDefinitionVersionRef
  materialLot: MaterialLotRef
  materialSubLot: MaterialSubLotRef
  operationalLocation: OperationalLocationRef
  operationalLocationClass: OperationalLocationClassRef
  operationalLocationClassVersion: OperationalLocationClassVersionRef
  operationalLocationVersion: OperationalLocationVersionRef
  operationsDefinition: OperationsDefinitionRef
  operationsDefinitionVersion: OperationsDefinitionVersionRef
  operationsEvent: OperationsEventRef
  operationsEventClass: OperationsEventClassRef
  operationsEventClassVersion: OperationsEventClassVersionRef
  operationsEventDefinition: OperationsEventDefinitionRef
  operationsEventDefinitionVersion: OperationsEventDefinitionVersionRef
  operationsEventRecordEntry: OperationsEventRecordEntryRef
  operationsPerformance: OperationsPerformanceRef
  operationsRequest: OperationsRequestRef
  operationsResponse: OperationsResponseRef
  operationsSchedule: OperationsScheduleRef
  operationsSegment: OperationsSegmentRef
  person: PersonRef
  personVersion: PersonVersionRef
  personnelClass: PersonnelClassRef
  personnelClassVersion: PersonnelClassVersionRef
  physicalAsset: PhysicalAssetRef
  physicalAssetClass: PhysicalAssetClassRef
  physicalAssetClassVersion: PhysicalAssetClassVersionRef
  physicalAssetVersion: PhysicalAssetVersionRef
  processSegment: ProcessSegmentRef
  processSegmentVersion: ProcessSegmentVersionRef
  propertyMeasurement: PropertyMeasurementRef
  spatialDefinition: SpatialDefinitionRef
  testResult: TestResultRef
  testSpecification: TestSpecificationRef
  unitOfMeasure: UnitOfMeasureRef
  workCalendar: WorkCalendarRef
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
  workPerformance: WorkPerformanceRef
  workRequest: WorkRequestRef
  workResponse: WorkResponseRef
  workSchedule: WorkScheduleRef
  workflowSpecification: WorkflowSpecificationRef
  workflowSpecificationConnectionType: WorkflowSpecificationConnectionTypeRef
  workflowSpecificationNodeType: WorkflowSpecificationNodeTypeRef
  workflowSpecificationVersion: WorkflowSpecificationVersionRef
}
""
input AddJobListInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the job list. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the job list and could include version and revision identification. "
  id: String!
  jobOrders: [JobOrderRef!]!
  " The ending time for the associated job list. "
  plannedEndDateTime: DateTime
  " The starting time for the associated job list. "
  plannedStartDateTime: DateTime
  " The date and time on which the job list was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  " Describes the category of work. "
  workType: WorkType!
}
""
input AddJobOrderInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Identifies the action the execution management activity is to perform on the job order. "
  command: String
  " Instruction to execution management activities specifying conditions to execute the command. "
  commandRule: String
  comments: [CommentRef]
  " Contains additional information and descriptions of the job order. "
  description: String
  " Identifies the status of the entry from the perspective of the dispatch activity. "
  dispatchStatus: DispatchStatus
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentRequirements: [EquipmentRequirementRef]
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the job order. "
  id: String!
  jobList: JobListRef
  jobResponses: [JobResponseRef]
  " Display name. "
  label: String
  materialRequirements: [MaterialRequirementRef]
  next: [JobOrderRef]
  parameters: [JobOrderParameterRef]
  personnelRequirements: [PersonnelRequirementRef]
  physicalAssetRequirements: [PhysicalAssetRequirementRef]
  previous: [JobOrderRef]
  " The priority of the job order. "
  priority: Int
  " The date and time on which the resource relationship network was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  " When work is to be completed. "
  scheduledEndDateTime: DateTime
  " When work is to be started. "
  scheduledStartDateTime: DateTime
  segmentRequirement: SegmentRequirementRef
  signatures: [SignatureRef]
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
  workRequest: WorkRequestRef
  " Describes the category of work. "
  workType: WorkType
  workflowSpecification: WorkflowSpecificationRef
  workflowSpecificationNode: WorkflowSpecificationNodeRef
  workflowSpecificationVersion: WorkflowSpecificationVersionRef
}
""
input AddJobOrderParameterInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [JobOrderParameterRef]
  " Contains additional information and descriptions of the job order parameter. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " The identification of the job order parameter. "
  id: String!
  jobOrder: JobOrderRef!
  " Display name. "
  label: String
  parameterSpecification: ParameterSpecificationRef
  parent: JobOrderParameterRef
  processSegmentParameter: ProcessSegmentParameterRef
  " The value, set of values, or range of the value to be used for this parameter. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddJobResponseDataInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [JobResponseDataRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the job response data. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  events: [EventRef]
  hierarchyScope: HierarchyScopeRef
  " The identification of the job response data. "
  id: String!
  jobResponse: JobResponseRef!
  " Display name. "
  label: String
  parent: JobResponseDataRef
  signatures: [SignatureRef]
  " The value or set of values of the job response data. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddJobResponseInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [JobResponseRef]
  comments: [CommentRef]
  data: [JobResponseDataRef]
  " The variable context for process instance. May be moved to data field. "
  dataJSON: String
  " Contains additional information and descriptions of the job response. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The actual ending time of information in the job response. "
  endDateTime: DateTime
  equipmentActual: [EquipmentActualRef]
  events: [EventRef]
  hierarchyScope: HierarchyScopeRef
  " An identification within the associated job response. "
  id: String!
  jobOrder: JobOrderRef
  jobResponseList: JobResponseListRef
  " Indicates the state of job work response. "
  jobState: JobState
  materialActual: [MaterialActualRef]
  parent: JobResponseRef
  personnelActual: [PersonnelActualRef]
  physicalAssetActual: [PhysicalAssetActualRef]
  " The production day this job was finished. "
  productionDate: String
  " The date and time on which the resource relationship network was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  segmentResponse: SegmentResponseRef
  signatures: [SignatureRef]
  " The actual starting time of information in the job response. "
  startDateTime: DateTime
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
  workResponse: WorkResponseRef
  " Describes the category of work. "
  workType: WorkType
  workflowSpecification: WorkflowSpecificationRef
  workflowSpecificationNode: WorkflowSpecificationNodeRef
  workflowSpecificationVersion: WorkflowSpecificationVersionRef
}
""
input AddJobResponseListInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the job response list. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The ending time of this job response list. "
  endDateTime: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the job response list. "
  id: String!
  jobResponses: [JobResponseRef!]!
  recordEntries: [InformationObjectRef]
  " The starting time of this job response list. "
  startDateTime: DateTime
  " An identification of the version of the job response list. "
  version: String!
  " Describes the category of work. "
  workType: WorkType
}
""
input AddLibreServiceInput {
  heartbeat: DateTime
  name: String!
}
""
input AddMaterialActualInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  children: [MaterialActualRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the material actual. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " Define a unique identification of a specific material actual. "
  id: String!
  jobResponse: JobResponseRef
  materialClass: MaterialClassRef
  materialDefinition: MaterialDefinitionRef
  materialDefinitionVersion: MaterialDefinitionVersionRef
  materialLot: [MaterialLotRef]
  materialSubLot: [MaterialSubLotRef]
  """
   Defines the expected use of the material class, material definition, material lot, or material sublot 
  in the context of the segment response. 
  """
  materialUse: MaterialUse
  parent: MaterialActualRef
  properties: [MaterialActualPropertyRef]
  " Specifies the amount of material produced by the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  segmentResponse: SegmentResponseRef
  signatures: [SignatureRef]
  spatialDefinition: SpatialDefinitionRef
  storageLocation: OperationalLocationRef
  testResults: [TestResultRef]
}
""
input AddMaterialActualPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [MaterialActualPropertyRef]
  " Contains additional information and descriptions of the material produced actual property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " An identification of the associated material property or material class property for a specific segment response. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  materialActual: MaterialActualRef!
  materialClassProperty: MaterialClassPropertyRef
  materialDefinitionProperty: MaterialDefinitionPropertyRef
  materialLotProperty: MaterialLotPropertyRef
  operationalLocation: OperationalLocationRef
  parent: MaterialActualPropertyRef
  " Specifies the amount of material produced by the parent segment. "
  quantity: Float!
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  use: String
  " The value or set of values for the associated property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddMaterialAlternateInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  alternateMaterial: MaterialDefinitionRef!
  " Moment after which this Material alternative will be available as an alternative "
  effectiveDateTime: DateTime!
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  materialDefinitionVersion: MaterialDefinitionVersionRef!
  " Priority order is used to prioritise which Material Alternative is used (if more than one is available)"
  priorityOrder: Int!
}
""
input AddMaterialClassInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: MaterialClassVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " A unique identification of a specific material class, within the scope of the information exchanged. "
  id: String!
  isAssembledFrom: [MaterialClassRef]
  isComponentOf: MaterialClassRef
  isIncludedIn: [MaterialClassVersionRef]
  " A user-friendly identifier for this entity "
  label: String!
  materialActual: [MaterialActualRef]
  materialDefinitionVersions: [MaterialDefinitionVersionRef]
  materialRequirements: [MaterialRequirementRef]
  materialSpecifications: [MaterialSpecificationRef]
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  recordEntries: [InformationObjectRef]
  specifiesTests: [TestSpecificationRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  versions: [MaterialClassVersionRef]
}
""
input AddMaterialClassPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [MaterialClassPropertyRef]
  correspondsTo: EvaluatedPropertyRef
  " Additional information about the material class property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of a specific material class property. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  materialActualProperties: [MaterialActualPropertyRef]
  materialClassVersion: MaterialClassVersionRef!
  materialDefinitionProperty: MaterialDefinitionPropertyRef
  materialRequirementProperties: [MaterialRequirementPropertyRef]
  materialSpecificationProperties: [MaterialSpecificationPropertyRef]
  parent: MaterialClassPropertyRef
  " Defines the type of the property. "
  propertyType: Isa95PropertyType!
  recordsMeasurementOf: [PropertyMeasurementRef]
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddMaterialClassVersionInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  " Additional information about the material class. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific material class, within the scope of the information exchanged. "
  id: String!
  includesPropertiesOf: [MaterialClassRef]
  isActiveVersionOf: MaterialClassRef
  materialClass: MaterialClassRef!
  properties: [MaterialClassPropertyRef]
  recordEntries: [InformationObjectRef]
  stateModels: [StateModelDefinitionRef]
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
input AddMaterialDefinitionInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: MaterialDefinitionVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " A unique identification of a specific material definition, within the scope of the information exchanged. "
  id: String!
  isAlternateFor: [MaterialAlternateRef]
  " A user-friendly identifier for this entity "
  label: String!
  materialActual: [MaterialActualRef]
  materialLots: [MaterialLotRef]
  materialRequirements: [MaterialRequirementRef]
  materialSpecifications: [MaterialSpecificationRef]
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  recordEntries: [InformationObjectRef]
  specifiesTests: [TestSpecificationRef]
  stateModelInstances: [StateModelInstanceRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  versions: [MaterialDefinitionVersionRef]
}
""
input AddMaterialDefinitionPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [MaterialDefinitionPropertyRef]
  correspondsTo: EvaluatedPropertyRef
  " Additional information about the material definition property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of the specific material definition property. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  materialActualProperties: [MaterialActualPropertyRef]
  materialClassProperty: MaterialClassPropertyRef
  materialDefinitionVersion: MaterialDefinitionVersionRef!
  materialLotProperty: MaterialLotPropertyRef
  materialRequirementProperties: [MaterialRequirementPropertyRef]
  materialSpecificationProperties: [MaterialSpecificationPropertyRef]
  parent: MaterialDefinitionPropertyRef
  recordsMeasurementOf: [PropertyMeasurementRef]
  " The value, set of values, or range of the property. "
  value: String
  " The lower limit that would trigger an alert. "
  valueLowerControlLimit: Float
  " The lower limit that impacts the quality of the product. "
  valueLowerSpecLimit: Float
  " Target value. "
  valueSetPoint: String
  valueUnitOfMeasure: UnitOfMeasureRef
  " The upper limit that would trigger an alert. "
  valueUpperControlLimit: Float
  " The upper limit that impacts the quality of the product. "
  valueUpperSpecLimit: Float
}
""
input AddMaterialDefinitionVersionInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  alternates: [MaterialAlternateRef]
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  baseUnitOfMeasure: UnitOfMeasureRef
  " Additional information about the material definition. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific material definition, within the scope of the information exchanged. "
  id: String!
  isActiveVersionOf: MaterialDefinitionRef
  isAssembledFrom: [MaterialDefinitionVersionRef]
  isComponentOf: MaterialDefinitionVersionRef
  materialActual: [MaterialActualRef]
  materialClasses: [MaterialClassRef]
  materialDefinition: MaterialDefinitionRef!
  materialLots: [MaterialLotRef]
  properties: [MaterialDefinitionPropertyRef]
  recordEntries: [InformationObjectRef]
  spatialDefinition: SpatialDefinitionRef
  stateModels: [StateModelDefinitionRef]
  uomConversions: [UnitOfMeasureConversionRef]
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
input AddMaterialLotInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  childSubLot: [MaterialSubLotRef]
  " Additional information about the material lot. "
  description: String
  " Planning and logistics disposition of a material lot or assembly of material lots. "
  disposition: Disposition
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  events: [EventRef]
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific material lot, within the scope of the information exchanged. "
  id: String!
  isAssembledFromMaterialLot: [MaterialLotRef]
  isAssembledFromMaterialSubLot: [MaterialSubLotRef]
  isComponentOfMaterialLot: MaterialLotRef
  isComponentOfMaterialSubLot: MaterialSubLotRef
  materialActual: [MaterialActualRef]
  materialDefinition: MaterialDefinitionRef!
  materialDefinitionVersion: MaterialDefinitionVersionRef!
  materialRequirements: [MaterialRequirementRef]
  materialSpecifications: [MaterialSpecificationRef]
  properties: [MaterialLotPropertyRef]
  " The quantity of the material lot. "
  quantity: Float
  quantityUnitOfMeasure: UnitOfMeasureRef
  recordEntries: [InformationObjectRef]
  spatialDefinition: SpatialDefinitionRef
  specifiesTests: [TestSpecificationRef]
  stateModelInstances: [StateModelInstanceRef]
  " Status of the material lot in manufacturing operations. Values defined by implementation. "
  status: String
  " Identifies the storage location description of the material lot. "
  storageLocationDescription: String
  storageLocationEquipment: EquipmentRef
  storageLocationOperationalLocation: OperationalLocationRef
  storageLocationPhysicalAsset: PhysicalAssetRef
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
}
""
input AddMaterialLotPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [MaterialLotPropertyRef]
  correspondsTo: EvaluatedPropertyRef
  " Additional information about the material lot property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of the specific material lot property. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  materialActualProperties: [MaterialActualPropertyRef]
  materialDefinitionProperty: MaterialDefinitionPropertyRef
  materialLot: MaterialLotRef
  materialRequirementProperties: [MaterialRequirementPropertyRef]
  materialSpecificationProperties: [MaterialSpecificationPropertyRef]
  materialSubLot: MaterialSubLotRef
  parent: MaterialLotPropertyRef
  recordsMeasurementOf: [PropertyMeasurementRef]
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddMaterialRequirementInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  children: [MaterialRequirementRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the material requirement definition. "
  description: String
  hierarchyScope: HierarchyScopeRef
  " Defines a unique identification of a specific material requirement, "
  id: String!
  jobOrder: JobOrderRef
  material: MaterialDefinitionRef
  materialClass: MaterialClassRef
  materialLots: [MaterialLotRef]
  materialSubLots: [MaterialSubLotRef]
  """
   Defines the expected use of the material class, material definition, material lot, or material sublot 
    in the context of the segment requirement. 
  """
  materialUse: MaterialUse!
  parent: MaterialRequirementRef
  properties: [MaterialRequirementPropertyRef]
  " Specifies the amount of material to be used. "
  quantity: Float!
  quantityUoM: UnitOfMeasureRef
  segmentRequirement: SegmentRequirementRef
  signatures: [SignatureRef]
  specifiesTests: [TestSpecificationRef]
  storageLocation: OperationalLocationRef
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
}
""
input AddMaterialRequirementPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [MaterialRequirementPropertyRef]
  " Contains additional information and descriptions of the material produced requirement property definition. "
  description: String
  """
   An identification of a property of the associated material property or material class property for a 
    specific segment requirement. 
  """
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  materialClassProperty: MaterialClassPropertyRef
  materialDefinitionProperty: MaterialDefinitionPropertyRef
  materialLotProperty: MaterialLotPropertyRef
  materialRequirement: MaterialRequirementRef!
  parent: MaterialRequirementPropertyRef
  " Specifies the amount of material to be produced. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  " The value, set of values, or range of the associated property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddMaterialSpecificationInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  children: [MaterialSpecificationRef]
  " Contains additional information and descriptions of the material specification. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific material specification. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  material: MaterialDefinitionRef
  materialClass: MaterialClassRef
  materialLot: MaterialLotRef
  materialSubLot: MaterialSubLotRef
  " Defines the expected use of the material class or material in the context of the operations segment. "
  materialUse: MaterialUse!
  materialsBill: OperationsMaterialBillRef
  operationsSegment: OperationsSegmentRef
  parent: MaterialSpecificationRef
  processSegmentVersion: ProcessSegmentVersionRef
  properties: [MaterialSpecificationPropertyRef]
  " Specifies the amount of material resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  specifiesTests: [TestSpecificationRef]
  storageLocation: OperationalLocationRef
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
}
""
input AddMaterialSpecificationPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [MaterialSpecificationPropertyRef]
  " Contains additional information and descriptions of the material specification property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of the associated material property for a specific segment. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  materialClassProperty: MaterialClassPropertyRef
  materialDefinitionProperty: MaterialDefinitionPropertyRef
  materialLotProperty: MaterialLotPropertyRef
  materialSpecification: MaterialSpecificationRef!
  parent: MaterialSpecificationPropertyRef
  " Specifies the amount of material resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  " The value, set of values, or range for the associated property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddMaterialSubLotInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  children: [MaterialSubLotRef]
  " Additional information about the material sublot property. "
  description: String
  " Planning and logistics disposition of a material sublot or assembly of material lots. "
  disposition: Disposition
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  events: [EventRef]
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific material sublot, within the scope of the information exchanged. "
  id: String!
  isAssembledFromMaterialLot: [MaterialLotRef]
  isAssembledFromMaterialSubLot: [MaterialSubLotRef]
  isComponentOfMaterialLot: MaterialLotRef
  isComponentOfMaterialSubLot: MaterialSubLotRef
  materialActual: [MaterialActualRef]
  materialRequirements: [MaterialRequirementRef]
  materialSpecifications: [MaterialSpecificationRef]
  parent: MaterialSubLotRef
  parentMaterialLot: MaterialLotRef
  properties: [MaterialLotPropertyRef]
  " The quantity of the material sublot. "
  quantity: Float
  quantityUnitOfMeasure: UnitOfMeasureRef
  recordEntries: [InformationObjectRef]
  spatialDefinition: SpatialDefinitionRef
  specifiesTests: [TestSpecificationRef]
  stateModelInstances: [StateModelInstanceRef]
  " Status of the material sublot in manufacturing operations. Values defined by implementation. "
  status: String
  " Identifies the storage location description of the material sublot. "
  storageLocationDescription: String
  storageLocationEquipment: EquipmentRef
  storageLocationOperationalLocation: OperationalLocationRef
  storageLocationPhysicalAsset: PhysicalAssetRef
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
}
""
input AddMenuInput {
  acl: [AccessPermissionRef]
  children: [MenuRef!]
  icon: String
  isPage: Boolean!
  isSection: Boolean!
  label: String!
  menuPage: String
  orderNumber: Int
  parent: MenuRef
}
""
input AddMultiplicityInput {
  Max: Int
  Min: Int
}
""
input AddOperationalLocationClassInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: OperationalLocationClassVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " A unique identification of a specific operational location class. "
  id: String!
  includedIn: [OperationalLocationClassVersionRef]
  isMadeUpOf: OperationalLocationClassRef
  isPartOf: [OperationalLocationClassRef]
  " The label is last node in the fully qualified name. "
  label: String!
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  operationalLocationVersions: [OperationalLocationVersionRef]
  recordEntries: [InformationObjectRef]
  versions: [OperationalLocationClassVersionRef]
}
""
input AddOperationalLocationClassPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Additional information about the operational location class property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " A unique identification of a specific operational location class property within the operational location class. "
  id: String!
  isMadeUpOf: OperationalLocationClassPropertyRef
  isPartOf: [OperationalLocationClassPropertyRef]
  " The label is last node in the fully qualified name. "
  label: String!
  mapsTo: [OperationalLocationPropertyRef]
  operationalLocationClassVersion: OperationalLocationClassVersionRef!
  " Defines the type of the property. "
  propertyType: Isa95PropertyType!
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddOperationalLocationClassVersionInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the operational location. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific operational location class version. "
  id: String!
  includesPropertiesOf: [OperationalLocationClassRef]
  isActiveVersionOf: OperationalLocationClassRef
  isMadeUpOf: OperationalLocationClassVersionRef
  isPartOf: [OperationalLocationClassVersionRef]
  " The label is last node in the fully qualified name. "
  label: String!
  " A short description of the material definition. "
  name: String
  operationalLocationClass: OperationalLocationClassRef!
  properties: [OperationalLocationClassPropertyRef]
  recordEntries: [InformationObjectRef]
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
input AddOperationalLocationInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: OperationalLocationVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  """
  A unique identification of a specific operational location, within the hierarchy scope of the
  operational location.
  """
  id: String!
  isMadeUpOf: OperationalLocationRef
  isPartOf: [OperationalLocationRef]
  " The label is last node in the fully qualified name. "
  label: String!
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  recordEntries: [InformationObjectRef]
  versions: [OperationalLocationVersionRef]
}
""
input AddOperationalLocationPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Additional information about the operational location property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " A unique identification of a specific operational location class property within the operational location class. "
  id: String!
  isMadeUpOf: OperationalLocationPropertyRef
  isPartOf: [OperationalLocationPropertyRef]
  " The label is last node in the fully qualified name. "
  label: String!
  mapsTo: OperationalLocationClassPropertyRef
  operationalLocationVersion: OperationalLocationVersionRef!
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddOperationalLocationVersionInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the operational location. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific operational location, within the scope of the information exchanged. "
  id: String!
  isActiveVersionOf: OperationalLocationRef
  isMadeUpOf: OperationalLocationVersionRef
  isPartOf: [OperationalLocationVersionRef]
  " A short description of the material definition. "
  name: String
  operationalLocation: OperationalLocationRef!
  operationalLocationClasses: [OperationalLocationClassRef]
  properties: [OperationalLocationPropertyRef]
  recordEntries: [InformationObjectRef]
  spatialDefinition: SpatialDefinitionRef
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
input AddOperationsDefinitionInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: OperationsDefinitionVersionRef
  children: [OperationsDefinitionRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " Uniquely identifies the operations definition. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  operationsRequests: [OperationsRequestRef]
  operationsResponses: [OperationsResponseRef]
  parent: OperationsDefinitionRef
  recordEntries: [InformationObjectRef]
  segmentRequirements: [SegmentRequirementRef]
  segmentResponses: [SegmentResponseRef]
  versions: [OperationsDefinitionVersionRef]
  workMasters: [WorkMasterRef]
}
""
input AddOperationsDefinitionVersionInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Identification of the external bill of material associated with this operation definition. "
  billOfMaterial: String
  " Identification of the external bill of resource associated with this operation definition. "
  billOfResources: String
  " Defines the type of the process segment. "
  definitionType: DefinitionType
  " Contains additional information and descriptions of the operations definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " Uniquely identifies the operations definition version. "
  id: String!
  isActiveVersionOf: OperationsDefinitionRef
  materialsBill: [OperationsMaterialBillRef]
  operationsDefinition: OperationsDefinitionRef!
  " Describes the category of the activity. "
  operationsType: WorkType!
  recordEntries: [InformationObjectRef]
  segments: [OperationsSegmentRef]
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
input AddOperationsEventClassInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: OperationsEventClassVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " A unique identification of a specific equipment class, within the scope of the information exchanged. "
  id: String!
  includesPropertiesOf: [OperationsEventClassRef]
  isAssembledFrom: [OperationsEventClassRef]
  isComponentOf: OperationsEventClassRef
  isIncludedIn: OperationsEventClassRef
  " The label is last node in the fully qualified name. "
  label: String!
  nextVersion: String
  operationsEventDefinitionVersions: [OperationsEventDefinitionVersionRef]
  recordEntries: [InformationObjectRef]
  versions: [OperationsEventClassVersionRef]
}
""
input AddOperationsEventClassPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [OperationsEventClassPropertyRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  id: String!
  operationsEventClassVersion: OperationsEventClassVersionRef!
  parent: OperationsEventClassPropertyRef
  propertyType: Isa95PropertyType
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddOperationsEventClassRecordSpecificationInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  action: [Action]
  actionMultiplicity: MultiplicityRef
  definitionType: DefinitionType
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  id: String!
  informationObjectType: [InformationObjectTypeEnum]
  multiplicity: MultiplicityRef
  operationsEventClassVersion: OperationsEventClassVersionRef!
}
""
input AddOperationsEventClassVersionInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " A unique identification of a specific record. "
  id: String!
  isActiveVersionOf: OperationsEventClassRef
  operationsEventClass: OperationsEventClassRef!
  properties: [OperationsEventClassPropertyRef]
  recordEntries: [InformationObjectRef]
  recordSpecifications: [OperationsEventClassRecordSpecificationRef]
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
input AddOperationsEventDefinitionInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: OperationsEventDefinitionVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific equipment class, within the scope of the information exchanged. "
  id: String!
  includesPropertiesOf: [OperationsEventDefinitionRef]
  isAssembledFrom: [OperationsEventDefinitionRef]
  isComponentOf: OperationsEventDefinitionRef
  isIncludedIn: OperationsEventDefinitionRef
  " The label is last node in the fully qualified name. "
  label: String!
  nextVersion: String
  operationsEvents: [OperationsEventRef]
  recordEntries: [InformationObjectRef]
  versions: [OperationsEventDefinitionVersionRef]
}
""
input AddOperationsEventDefinitionPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [OperationsEventDefinitionPropertyRef]
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  id: String!
  operationsEventClassProperty: OperationsEventClassPropertyRef
  operationsEventDefinitionVersion: OperationsEventDefinitionVersionRef!
  parent: OperationsEventDefinitionPropertyRef
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddOperationsEventDefinitionRecordSpecificationInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  action: [Action]
  actionMultiplicity: MultiplicityRef
  definitionType: DefinitionType
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  id: String!
  informationObjectType: [InformationObjectTypeEnum]
  multiplicity: MultiplicityRef
  operationsEventDefinitionVersion: OperationsEventDefinitionVersionRef!
  operationsEventRecords: [OperationsEventRecordRef]
}
""
input AddOperationsEventDefinitionVersionInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  category: String
  " A unique identification of a specific equipment class version. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  enterpriseFunction: EnterpriseFunctionEnum
  hierarchyScope: HierarchyScopeRef
  id: String!
  isActiveVersionOf: OperationsEventDefinitionRef
  momFunction: MOMFunctionEnum
  operationsEventClasses: [OperationsEventClassRef]
  operationsEventDefinition: OperationsEventDefinitionRef!
  operationsEventLevel: OperationsEventLevelEnum
  operationsEventType: OperationsEventTypeEnum
  operationsType: WorkType
  priority: [String]
  properties: [OperationsEventDefinitionPropertyRef]
  recordEntries: [InformationObjectRef]
  recordSpecifications: [OperationsEventDefinitionRecordSpecificationRef]
  source: String
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
input AddOperationsEventInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  category: String
  children: [OperationsEventRef]
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  enterpriseFunction: EnterpriseFunctionEnum
  hierarchyScope: HierarchyScopeRef
  id: String!
  momFunction: MOMFunctionEnum
  operationsEventDefinition: OperationsEventDefinitionRef!
  operationsEventLevel: OperationsEventLevelEnum
  operationsEventType: OperationsEventTypeEnum
  operationsType: WorkType
  parent: OperationsEventRef
  priority: String
  properties: [OperationsEventPropertyRef]
  recordEntries: [InformationObjectRef]
  recordTimestamp: DateTime!
  records: [OperationsEventRecordRef]
  source: String
}
""
input AddOperationsEventPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [OperationsEventPropertyRef]
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  id: String!
  operationsEvent: OperationsEventRef!
  operationsEventDefinitionProperty: OperationsEventDefinitionPropertyRef
  parent: OperationsEventPropertyRef
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddOperationsEventRecordEntryInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [OperationsEventRecordEntryRef]
  data: String
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " Unique external identifier is a composite of the id and the parent record id. "
  id: String!
  informationObject: InformationObjectRef
  operationsEventRecord: OperationsEventRecordRef!
  parent: OperationsEventRecordEntryRef
  recordId: String!
  recordTimestamp: DateTime!
}
""
input AddOperationsEventRecordInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  action: Action
  children: [OperationsEventRecordRef]
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  id: String!
  operationsEvent: OperationsEventRef!
  operationsEventDefinitionRecordSpecification: OperationsEventDefinitionRecordSpecificationRef
  parent: OperationsEventRecordRef
  recordEntries: [OperationsEventRecordEntryRef]
  " The date and time the publisher recorded/transacted the action. Record timestamp explicitly states the time that the publisher took the action  "
  recordTimestamp: DateTime
}
""
input AddOperationsMaterialBillInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Identification of the bill of material associated with this operations material bill. "
  billOfMaterial: String
  " Contains additional information of the manufacturing bill. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a manufacturing bill. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  materialBillItems: [MaterialSpecificationRef]
  operationsDefinitionVersion: OperationsDefinitionVersionRef
  operationsSegments: [OperationsSegmentRef]
  " Defines the use of the material. "
  useType: MaterialUse
}
""
input AddOperationsPerformanceInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the operations performance. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The ending time of the associated operations performance. "
  endDateTime: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the operations performance and could include version and revision identification. "
  id: String!
  operationsResponses: [OperationsResponseRef!]!
  operationsSchedule: OperationsScheduleRef
  " Describes the category of operations. "
  operationsType: WorkType!
  " Indicates the state of the operations performance. "
  performanceState: JobState
  " The date and time on which the operations performance was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  " The starting time of the associated operations performance. "
  startDateTime: DateTime
}
""
input AddOperationsRequestInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the operations request. "
  description: String
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the operations request. "
  id: String!
  " Notes about this operations request. "
  notes: String
  operationsDefinition: OperationsDefinitionRef
  operationsResponses: [OperationsResponseRef]
  operationsSchedule: OperationsScheduleRef!
  operationsSegment: OperationsSegmentRef
  " Describes the category of operations. "
  operationsType: WorkType!
  " The priority of the request. "
  priority: String
  recordEntries: [InformationObjectRef]
  " Indicates the state of the operations request. "
  requestState: ScheduleState!
  " When operation is to be completed. "
  scheduledEndDate: DateTime
  " When operation is to be started. "
  scheduledStartDate: DateTime
  segmentRequirements: [SegmentRequirementRef!]!
  segmentResponses: [SegmentResponseRef]
  workRequests: [WorkRequestRef]
}
""
input AddOperationsResponseInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the operations response. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The ending time of this operations response. "
  endDateTime: DateTime
  hierarchyScope: HierarchyScopeRef
  " An identification within the associated operations response. "
  id: String!
  isActive: Boolean
  operationsDefinition: OperationsDefinitionRef
  operationsPerformance: OperationsPerformanceRef!
  operationsRequest: OperationsRequestRef
  operationsSegment: OperationsSegmentRef
  " Describes the category of operations. "
  operationsType: WorkType!
  properties: [OperationsResponsePropertyRef]
  recordEntries: [InformationObjectRef]
  " Indicates the state of the operations response. "
  responseState: JobState
  segmentRequirements: [SegmentRequirementRef]
  segmentResponses: [SegmentResponseRef!]!
  " The starting time of this operations response. "
  startDateTime: DateTime!
}
""
input AddOperationsResponsePropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [OperationsResponsePropertyRef]
  description: String
  hierarchyScope: HierarchyScopeRef
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  operationalLocation: OperationalLocationRef
  operationsResponse: OperationsResponseRef!
  parent: OperationsResponsePropertyRef
  quantity: Float!
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  use: String
}
""
input AddOperationsScheduleInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the operations schedule. "
  description: String
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the operations schedule and could include version and revision identification. "
  id: String!
  operationsPerformance: [OperationsPerformanceRef]
  operationsRequests: [OperationsRequestRef!]!
  " Describes the category of operation. "
  operationsType: WorkType!
  " The date and time on which the operations schedule was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  " Indicates the state of the operations schedule. "
  scheduleState: ScheduleState
  " The ending time for the associated operations schedule. "
  scheduledEndDate: DateTime
  " The starting time for the associated operations schedule. "
  scheduledStartDate: DateTime
}
""
input AddOperationsSegmentDependencyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " A condition required to transition between operations segments. Expressed as JSONata expression. "
  condition: String
  " Factor used by dependency. "
  dependencyFactor: Float
  " Defines the execution dependency constraints of one operations to another operations. "
  dependencyType: DependencyType
  " Contains additional information and descriptions of the operations dependency definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  factorUoM: UnitOfMeasureRef
  from: OperationsSegmentRef!
  " The identification of the unique instance of the operations segment dependency. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  rules: [RuleRef]
  to: OperationsSegmentRef!
}
""
input AddOperationsSegmentInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Identification of the external bill of material associated with this operation segment. "
  billOfMaterial: String
  " Identification of the external bill of material associated with this operation segment. "
  billOfResources: String
  children: [OperationsSegmentRef]
  " Defines the type of the operations segment. "
  definitionType: DefinitionType
  " Contains additional information of the segment. "
  description: String
  " Duration of segment, if known. "
  duration: Float
  durationUoM: UnitOfMeasureRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentSpecifications: [EquipmentSpecificationRef]
  hierarchyScope: HierarchyScopeRef
  " The last part of the fully qualified id. Used as the display name "
  id: String!
  inflows: [OperationsSegmentDependencyRef]
  isMadeUpOf: [OperationsSegmentRef]
  " The label is last node in the fully qualified name. "
  label: String!
  makesUp: OperationsSegmentRef
  materialSpecifications: [MaterialSpecificationRef]
  materialsBill: [OperationsMaterialBillRef]
  operationsDefinitionVersion: OperationsDefinitionVersionRef!
  operationsRequests: [OperationsRequestRef]
  operationsResponses: [OperationsResponseRef]
  " Describes the category of operation. "
  operationsType: WorkType
  outflows: [OperationsSegmentDependencyRef]
  parameterSpecifications: [ParameterSpecificationRef]
  parent: OperationsSegmentRef
  personnelSpecifications: [PersonnelSpecificationRef]
  physicalAssetSpecifications: [PhysicalAssetSpecificationRef]
  " Used by Libre UI for chart drawing. "
  positionX: Int
  " Used by Libre UI for chart drawing. "
  positionY: Int
  processSegment: ProcessSegmentRef
  recordEntries: [InformationObjectRef]
  rules: [RuleRef]
  segmentRequirements: [SegmentRequirementRef]
  segmentResponses: [SegmentResponseRef]
  workMasters: [WorkMasterRef]
}
""
input AddParameterSpecificationInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [ParameterSpecificationRef]
  " Contains additional information of the parameter. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " Identification of the parameter for a specific segment. "
  id: String!
  jobOrderParameter: [JobOrderParameterRef]
  " The label is last node in the fully qualified name. "
  label: String!
  operationsSegment: OperationsSegmentRef
  parent: ParameterSpecificationRef
  segmentParameters: [SegmentParameterRef]
  " The value, set of values, or range of acceptable values. "
  value: String
  " The lower limit that would trigger an alert. "
  valueLowerControlLimit: Float
  " The lower limit that impacts the quality of the product. "
  valueLowerSpecLimit: Float
  " Target value. "
  valueSetPoint: String
  valueUnitOfMeasure: UnitOfMeasureRef
  " The upper limit that would trigger an alert. "
  valueUpperControlLimit: Float
  " The upper limit that impacts the quality of the product. "
  valueUpperSpecLimit: Float
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
}
""
input AddPayloadFieldDefinitionInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " The payload field expression"
  expression: String!
  " A short description of the payload field definition. "
  name: String!
}
""
input AddPersonInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: PersonVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  events: [EventRef]
  " A unique identification of a specific person, within the scope of the information exchanged. "
  id: String!
  " Human friendly alternative identifier "
  label: String!
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  personnelActual: [PersonnelActualRef]
  personnelRequirements: [PersonnelRequirementRef]
  personnelSpecifications: [PersonnelSpecificationRef]
  recordEntries: [InformationObjectRef]
  specifiesTests: [TestSpecificationRef]
  stateModelInstances: [StateModelInstanceRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  versions: [PersonVersionRef]
}
""
input AddPersonPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PersonPropertyRef]
  correspondsTo: EvaluatedPropertyRef
  " Additional information about the person property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of the specific property. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  parent: PersonPropertyRef
  personVersion: PersonVersionRef!
  personnelActualProperties: [PersonnelActualPropertyRef]
  personnelClassProperty: PersonnelClassPropertyRef
  personnelRequirementProperties: [PersonnelRequirementPropertyRef]
  personnelSpecificationProperties: [PersonnelSpecificationPropertyRef]
  recordsMeasurementOf: [PropertyMeasurementRef]
  " The value, set of values, or range of the property. "
  value: String
  " The lower limit that would trigger an alert. "
  valueLowerControlLimit: Float
  " The lower limit that impacts the quality of the product. "
  valueLowerSpecLimit: Float
  " Target value. "
  valueSetPoint: String
  valueUnitOfMeasure: UnitOfMeasureRef
  " The upper limit that would trigger an alert. "
  valueUpperControlLimit: Float
  " The upper limit that impacts the quality of the product. "
  valueUpperSpecLimit: Float
}
""
input AddPersonVersionInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  comments: [CommentRef]
  " Additional information about the resource. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific person, within the scope of the information exchanged. "
  id: String!
  isActiveVersionOf: PersonRef
  " The name of the individual. "
  name: String!
  operationalLocation: OperationalLocationRef
  person: PersonRef!
  personnelActual: [PersonnelActualRef]
  personnelClasses: [PersonnelClassRef]
  properties: [PersonPropertyRef]
  recordEntries: [InformationObjectRef]
  signaturesMade: [SignatureRef]
  spatialDefinition: SpatialDefinitionRef
  stateModels: [StateModelDefinitionRef]
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
input AddPersonnelActualInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PersonnelActualRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the personnel actual. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific personnel actual. "
  id: String!
  jobResponse: JobResponseRef
  operationalLocation: OperationalLocationRef
  parent: PersonnelActualRef
  person: [PersonRef]
  personVersion: [PersonVersionRef]
  personnelClass: [PersonnelClassRef]
  " Defines the expected use of the personnel class or person in the context of the operations response. "
  personnelUse: String
  properties: [PersonnelActualPropertyRef]
  " Specifies the amount of personnel resources used in the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  segmentResponse: SegmentResponseRef
  signatures: [SignatureRef]
  spatialDefinition: SpatialDefinitionRef
  testResults: [TestResultRef]
}
""
input AddPersonnelActualPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PersonnelActualPropertyRef]
  " Contains additional information and descriptions of the personnel actual property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " An identification of the associated person property or personnel class property for a specific segment response. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  operationalLocation: OperationalLocationRef
  parent: PersonnelActualPropertyRef
  personProperty: PersonPropertyRef
  personnelActual: PersonnelActualRef!
  personnelClassProperty: PersonnelClassPropertyRef
  " Specifies the amount of personnel resources used in the parent segment. "
  quantity: Float!
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  use: String
  " The value or set of values for the associated property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddPersonnelClassInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: PersonnelClassVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " A unique identification of a specific personnel class. "
  id: String!
  isIncludedIn: [PersonnelClassVersionRef]
  " Human friendly alternative identifier "
  label: String!
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  personVersions: [PersonVersionRef]
  personnelActual: [PersonnelActualRef]
  personnelRequirements: [PersonnelRequirementRef]
  personnelSpecifications: [PersonnelSpecificationRef]
  recordEntries: [InformationObjectRef]
  specifiesTests: [TestSpecificationRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  versions: [PersonnelClassVersionRef]
}
""
input AddPersonnelClassPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PersonnelClassPropertyRef]
  correspondsTo: EvaluatedPropertyRef
  " Additional information and description about the personnel class property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of the specific property, unique fully qualified id"
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  parent: PersonnelClassPropertyRef
  personProperty: PersonPropertyRef
  personnelActualProperties: [PersonnelActualPropertyRef]
  personnelClassVersion: PersonnelClassVersionRef!
  personnelRequirementProperties: [PersonnelRequirementPropertyRef]
  personnelSpecificationProperties: [PersonnelSpecificationPropertyRef]
  " Defines the type of the property. "
  propertyType: Isa95PropertyType!
  recordsMeasurementOf: [PropertyMeasurementRef]
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddPersonnelClassVersionInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Additional information and description about the personnel class. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific personnel class. "
  id: String!
  includesPropertiesOf: [PersonnelClassRef]
  isActiveVersionOf: PersonnelClassRef
  personnelClass: PersonnelClassRef!
  properties: [PersonnelClassPropertyRef]
  recordEntries: [InformationObjectRef]
  stateModels: [StateModelDefinitionRef]
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
input AddPersonnelRequirementInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PersonnelRequirementRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the personnel requirement. "
  description: String
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific personnel requirement. "
  id: String!
  jobOrder: JobOrderRef
  operationalLocation: OperationalLocationRef
  parent: PersonnelRequirementRef
  person: PersonRef
  personnelClass: PersonnelClassRef
  properties: [PersonnelRequirementPropertyRef]
  " Specifies the amount of personnel resources required for the parent segment. "
  quantity: Float!
  quantityUoM: UnitOfMeasureRef
  segmentRequirement: SegmentRequirementRef
  signatures: [SignatureRef]
  specifiesTests: [TestSpecificationRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  " Defines the expected use of the personnel class or person in the context of the segment requirement. "
  use: String
}
""
input AddPersonnelRequirementPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PersonnelRequirementPropertyRef]
  " Contains additional information and descriptions of the personnel requirement property definition. "
  description: String
  " An identification of the associated person property or personnel class property for a specific segment requirement. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  parent: PersonnelRequirementPropertyRef
  personProperty: PersonPropertyRef
  personnelClassProperty: PersonnelClassPropertyRef
  personnelRequirement: PersonnelRequirementRef!
  " Specifies the amount of the property required for the parent personnel requirement. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddPersonnelSpecificationInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PersonnelSpecificationRef]
  " Contains additional information of the personnel specification. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific personnel segment specification. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  operationalLocation: OperationalLocationRef
  operationsSegment: OperationsSegmentRef
  parent: PersonnelSpecificationRef
  person: PersonRef
  personnelClass: PersonnelClassRef
  " Defines the expected use of the personnel class or person in the context of the operations segment. "
  personnelUse: String
  processSegmentVersion: ProcessSegmentVersionRef
  properties: [PersonnelSpecificationPropertyRef]
  " Specifies the amount of personnel resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  specifiesTests: [TestSpecificationRef]
  testResults: TestResultRef
  testedBy: [TestSpecificationRef]
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
}
""
input AddPersonnelSpecificationPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PersonnelSpecificationPropertyRef]
  " Contains additional information and descriptions of the personnel specification property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of a property of the associated person property or personnel class property for a specific segment. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  parent: PersonnelSpecificationPropertyRef
  personProperty: PersonPropertyRef
  personnelClassProperty: PersonnelClassPropertyRef
  personnelSpecification: PersonnelSpecificationRef!
  " Specifies the amount of personnel resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddPhysicalAssetActualInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PhysicalAssetActualRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the physical asset actual. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " Defines a unique identification of a physical asset actual. "
  id: String!
  jobResponse: JobResponseRef
  parent: PhysicalAssetActualRef
  physicalAsset: PhysicalAssetRef
  physicalAssetClass: PhysicalAssetClassRef
  " Defines the actual use of the physical asset class or physical asset.. "
  physicalAssetUse: String
  physicalAssetVersion: PhysicalAssetVersionRef
  physicalLocation: OperationalLocationRef
  properties: [PhysicalAssetActualPropertyRef]
  " Specifies the amount of equipment resources used in parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  segmentResponse: SegmentResponseRef
  signatures: [SignatureRef]
  spatialDefinition: SpatialDefinitionRef
  testResults: [TestResultRef]
}
""
input AddPhysicalAssetActualPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PhysicalAssetActualPropertyRef]
  " Contains additional information and descriptions of the physical asset actual property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of the associated physical asset property or class property for a specific segment response. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  parent: PhysicalAssetActualPropertyRef
  physicalAssetActual: PhysicalAssetActualRef!
  physicalAssetClassProperty: PhysicalAssetClassPropertyRef
  physicalAssetProperty: PhysicalAssetPropertyRef
  " Specifies the amount of physical asset resources used in parent segment. "
  quantity: Float!
  quantityUoM: UnitOfMeasureRef
  " The value or set of values for the associated property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddPhysicalAssetClassInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: PhysicalAssetClassVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The manufacture's identification of the specific physical asset class. "
  id: String!
  isIncludedIn: [PhysicalAssetClassVersionRef]
  isMadeUpOf: [PhysicalAssetClassRef]
  isPartOf: [PhysicalAssetClassRef]
  " The last node in the fully qualified id "
  label: String!
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  physicalAssetActual: [PhysicalAssetActualRef]
  physicalAssetRequirements: [PhysicalAssetRequirementRef]
  physicalAssetSpecifications: [PhysicalAssetSpecificationRef]
  physicalAssetVersions: [PhysicalAssetVersionRef]
  recordEntries: [InformationObjectRef]
  specifiesTests: [TestSpecificationRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  " The icon for the menu in the libre admin UI menu. "
  uiSortIndex: Int
  versions: [PhysicalAssetClassVersionRef]
}
""
input AddPhysicalAssetClassPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PhysicalAssetClassPropertyRef]
  correspondsTo: EvaluatedPropertyRef
  " Additional information about the property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of the specific property. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  parent: PhysicalAssetClassPropertyRef
  physicalAssetActualProperties: [PhysicalAssetActualPropertyRef]
  physicalAssetClassVersion: PhysicalAssetClassVersionRef!
  physicalAssetProperty: PhysicalAssetPropertyRef
  physicalAssetRequirementProperties: [PhysicalAssetRequirementPropertyRef]
  physicalAssetSpecificationProperties: [PhysicalAssetSpecificationPropertyRef]
  " Defines the type of the property. "
  propertyType: Isa95PropertyType!
  recordsMeasurementOf: [PropertyMeasurementRef]
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddPhysicalAssetClassVersionInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Additional information about the physical asset class. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " The manufacture's identification of the specific physical asset class. "
  id: String!
  includesPropertiesOf: [PhysicalAssetClassRef]
  isActiveVersionOf: PhysicalAssetClassRef
  " An identification of the manufacturer. "
  manufacturer: String
  physicalAssetClass: PhysicalAssetClassRef!
  properties: [PhysicalAssetClassPropertyRef]
  recordEntries: [InformationObjectRef]
  stateModels: [StateModelDefinitionRef]
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
input AddPhysicalAssetDataSourceInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  dataSourceVersion: DataSourceVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  physicalAssetVersion: PhysicalAssetVersionRef!
  " This JSONata transform resolves the data source topic id for the properties of the equipment"
  topicTemplate: String
}
""
input AddPhysicalAssetInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: PhysicalAssetVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipment: EquipmentRef
  equipmentAssetMapping: [EquipmentAssetMappingRef]
  events: [EventRef]
  " Defines a unique identification of a physical asset. "
  id: String!
  isMadeUpOf: [PhysicalAssetRef]
  isPartOf: [PhysicalAssetRef]
  " Defines a unique identification of a physical asset. "
  label: String!
  materialLots: [MaterialLotRef]
  materialSubLots: [MaterialSubLotRef]
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  physicalAssetActual: [PhysicalAssetActualRef]
  physicalAssetRequirements: [PhysicalAssetRequirementRef]
  physicalAssetSpecifications: [PhysicalAssetSpecificationRef]
  recordEntries: [InformationObjectRef]
  specifiesTests: [TestSpecificationRef]
  stateModelInstances: [StateModelInstanceRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  " The icon for the menu in the libre admin UI menu. "
  uiSortIndex: Int
  versions: [PhysicalAssetVersionRef]
}
""
input AddPhysicalAssetPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PhysicalAssetPropertyRef]
  correspondsTo: EvaluatedPropertyRef
  " Additional information about the asset property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of the specific property. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  parent: PhysicalAssetPropertyRef
  physicalAssetActualProperties: [PhysicalAssetActualPropertyRef]
  physicalAssetClassProperty: PhysicalAssetClassPropertyRef
  physicalAssetRequirementProperties: [PhysicalAssetRequirementPropertyRef]
  physicalAssetSpecificationProperties: [PhysicalAssetSpecificationPropertyRef]
  physicalAssetVersion: PhysicalAssetVersionRef!
  recordsMeasurementOf: [PropertyMeasurementRef]
  " The value, set of values, or range of the property. "
  value: String
  " The lower limit that would trigger an alert. "
  valueLowerControlLimit: Float
  " The lower limit that impacts the quality of the product. "
  valueLowerSpecLimit: Float
  " Target value. "
  valueSetPoint: String
  valueUnitOfMeasure: UnitOfMeasureRef
  " The upper limit that would trigger an alert. "
  valueUpperControlLimit: Float
  " The upper limit that impacts the quality of the product. "
  valueUpperSpecLimit: Float
}
""
input AddPhysicalAssetRequirementInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PhysicalAssetRequirementRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the physical asset requirement. "
  description: String
  " A level definition for the associated element in the hierarchy of the physical asset model "
  equipmentLevel: EquipmentElementLevel
  hierarchyScope: HierarchyScopeRef
  " Defines a unique identification of a physical asset requirement. "
  id: String!
  jobOrder: JobOrderRef
  parent: PhysicalAssetRequirementRef
  physicalAsset: PhysicalAssetRef
  physicalAssetClass: PhysicalAssetClassRef
  physicalLocation: OperationalLocationRef
  properties: [PhysicalAssetRequirementPropertyRef]
  " Specifies the amount of equipment resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  segmentRequirement: SegmentRequirementRef
  signatures: [SignatureRef]
  specifiesTests: [TestSpecificationRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  " Defines the expected use of the physical asset class or physical asset. "
  use: String
}
""
input AddPhysicalAssetRequirementPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PhysicalAssetRequirementPropertyRef]
  " Contains additional information and descriptions of the equipment requirement property definition. "
  description: String
  " An identification of the associated equipment property or equipment class property for a specific segment requirement. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  parent: PhysicalAssetRequirementPropertyRef
  physicalAssetClassProperty: PhysicalAssetClassPropertyRef
  physicalAssetProperty: PhysicalAssetPropertyRef
  physicalAssetRequirement: PhysicalAssetRequirementRef!
  " Specifies the amount of physical asset requirement property required for the parent physical asset. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  " The value, set of values, or range of the associated property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddPhysicalAssetSpecificationInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PhysicalAssetSpecificationRef]
  " Contains additional information of the physical asset specification. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific physical asset segment specification. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  operationsSegment: OperationsSegmentRef
  parent: PhysicalAssetSpecificationRef
  physicalAsset: PhysicalAssetRef
  physicalAssetClass: PhysicalAssetClassRef
  " Defines the expected use of the physical asset class or physical asset in the context of the operations segment. "
  physicalAssetUse: String
  physicalLocation: OperationalLocationRef
  processSegmentVersion: ProcessSegmentVersionRef
  properties: [PhysicalAssetSpecificationPropertyRef]
  " Specifies the amount of physical asset resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
}
""
input AddPhysicalAssetSpecificationPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PhysicalAssetSpecificationPropertyRef]
  " Contains additional information and descriptions of the physical asset specification property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of a property of the associated physical asset property or physical asset class property for a specific segment. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  parent: PhysicalAssetSpecificationPropertyRef
  physicalAssetClassProperty: PhysicalAssetClassPropertyRef
  physicalAssetProperty: PhysicalAssetPropertyRef
  physicalAssetSpecification: PhysicalAssetSpecificationRef!
  " Specifies the amount of physical asset resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddPhysicalAssetVersionInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  dataSources: [PhysicalAssetDataSourceRef]
  " Contains additional information and descriptions of the physical asset. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " Contains a unique identification for financial tracking as required by laws or regulations. "
  fixedAssetID: String
  hierarchyScope: HierarchyScopeRef
  " Defines a unique identification of a physical asset. "
  id: String!
  isActiveVersionOf: PhysicalAssetRef
  physicalAsset: PhysicalAssetRef!
  physicalAssetActual: [PhysicalAssetActualRef]
  physicalAssetClasses: [PhysicalAssetClassRef]
  physicalLocation: OperationalLocationRef
  " Identifies the physical location of the physical asset. "
  physicalLocationDescription: String
  properties: [PhysicalAssetPropertyRef]
  recordEntries: [InformationObjectRef]
  spatialDefinition: SpatialDefinitionRef
  stateModels: [StateModelDefinitionRef]
  " Contains a vendor's serial number. "
  vendorID: String
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
input AddProcessSegmentDependencyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " A condition required to transition between process segments. Expressed as JSONata expression. "
  condition: String
  " Factor used by dependency. "
  dependencyFactor: Float
  " Defines the execution dependency constraints of one segment to another segment. "
  dependencyType: DependencyType
  " Contains additional information and descriptions of the segment dependency definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  factorUoM: UnitOfMeasureRef
  from: ProcessSegmentRef!
  " The identification of the unique instance of the process segment dependency. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  rules: [RuleRef]
  to: ProcessSegmentRef!
}
""
input AddProcessSegmentInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: ProcessSegmentVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " A unique identification of a process segment, within the scope of the information exchanged. "
  id: String!
  inflows: [ProcessSegmentDependencyRef]
  isMadeUpOf: [ProcessSegmentRef]
  isPartOf: ProcessSegmentRef
  " A user-friendly identifier for this entity "
  label: String!
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  operationsSegments: [OperationsSegmentRef]
  outflows: [ProcessSegmentDependencyRef]
  recordEntries: [InformationObjectRef]
  segmentRequirements: [SegmentRequirementRef]
  segmentResponses: [SegmentResponseRef]
  versions: [ProcessSegmentVersionRef]
  workMasters: [WorkMasterRef]
}
""
input AddProcessSegmentParameterInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [ProcessSegmentParameterRef]
  " Contains additional information. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " Identification of the process segment parameter. "
  id: String!
  jobOrderParameter: JobOrderParameterRef
  " The label is last node in the fully qualified name. "
  label: String!
  parent: ProcessSegmentParameterRef
  processSegmentVersion: ProcessSegmentVersionRef!
  segmentParameters: [SegmentParameterRef]
  " The value, set of values, or range of acceptable values. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddProcessSegmentVersionInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Defines the type of the process segment. "
  definitionType: DefinitionType
  " Description of the process segment"
  description: String
  " Duration of process segment. "
  duration: Float
  durationUoM: UnitOfMeasureRef
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  equipmentSpecifications: [EquipmentSpecificationRef]
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a process segment version, within the scope of the information exchanged. "
  id: String!
  isActiveVersionOf: ProcessSegmentRef
  materialSpecifications: [MaterialSpecificationRef]
  " Describes the category of the activity. "
  operationsType: WorkType!
  personnelSpecifications: [PersonnelSpecificationRef]
  physicalAssetSpecifications: [PhysicalAssetSpecificationRef]
  processSegment: ProcessSegmentRef!
  processSegmentParameters: [ProcessSegmentParameterRef]
  recordEntries: [InformationObjectRef]
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
input AddPropertyMeasurementInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Additional information about the property measurement. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  equipmentClassProperty: EquipmentClassPropertyRef
  equipmentProperty: EquipmentPropertyRef
  " The date of the expiration of the property measurement. "
  expiration: DateTime
  " An identification of the specific property measurement. "
  id: String!
  materialClassProperty: MaterialClassPropertyRef
  materialDefinitionProperty: MaterialDefinitionPropertyRef
  materialLotProperty: MaterialLotPropertyRef
  " The date and time when the measurement was obtained. "
  measurementDate: DateTime
  personProperty: PersonPropertyRef
  personnelClassProperty: PersonnelClassPropertyRef
  physicalAssetClassProperty: PhysicalAssetClassPropertyRef
  physicalAssetProperty: PhysicalAssetPropertyRef
  recordEntries: [InformationObjectRef]
  testResult: TestResultRef!
  " The measured value for the testable object property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
}
""
input AddPropertyNameAliasInput {
  dataSource: DataSourceRef
  dataSourceTopic: DataSourceTopicRef
  dataSourceTopicLabel: String
  equipmentVersion: EquipmentVersionRef!
  expression: String
  propertyLabel: String!
}
""
input AddPropertyValueAliasInput {
  alias: String!
  property: EquipmentClassPropertyRef!
  system: String!
  value: String!
}
""
input AddRuleInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " If True, delays the rule triggering. "
  delayOption: Boolean
  " The amount of time the rule is delayed by if DelayOption true. "
  delayTime: Int
  " Additional information about the rule. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  equipmentClassVersion: EquipmentClassVersionRef
  " A unique identification of a rule. "
  id: String!
  " Label is the name of the rule the client sees on the front end. "
  label: String!
  operationsSegment: OperationsSegmentRef
  operationsSegmentDependency: OperationsSegmentDependencyRef
  payloadFields: [PayloadFieldDefinitionRef]
  " The process location related to this rule. "
  processLocation: ProcessLocation
  processSegmentDependency: ProcessSegmentDependencyRef
  " The expression if true triggers the rule. "
  triggerExpression: String!
  triggerProperties: [EquipmentClassPropertyRef]
  workflowSpecification: WorkflowSpecificationRef!
}
""
input AddSecretInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: SecretVersionRef
  " Uniquely identifies the environmental variable. "
  id: String!
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  versions: [SecretVersionRef]
}
""
input AddSecretVersionInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Uniquely identifies the environmental variable with the version. "
  id: String!
  isActiveVersionOf: SecretRef
  secret: SecretRef!
  " The value is decrypted then substuted into any templates in place of the variable's id. "
  value: String!
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String!
  " The current state of the version for this entity. "
  versionStatus: VersionState!
}
""
input AddSegmentDataInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [SegmentDataRef]
  " Contains additional information and descriptions of the segment data. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " The identification of the segment data. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  parent: SegmentDataRef
  segmentResponse: SegmentResponseRef
  " The value or set of values of the segment data. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddSegmentParameterInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [SegmentParameterRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the segment parameter. "
  description: String
  hierarchyScope: HierarchyScopeRef
  " The identification of the segment parameter. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  parameterSpecification: ParameterSpecificationRef
  parent: SegmentParameterRef
  processSegmentParameter: ProcessSegmentParameterRef
  segmentRequirement: SegmentRequirementRef!
  " The value, set of values, or range of the value to be used for this parameter. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddSegmentRequirementInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [SegmentRequirementRef]
  " Contains additional information and descriptions of the segment requirement. "
  description: String
  " The expected duration of this segment requirement. "
  duration: Float
  durationUoM: UnitOfMeasureRef
  " The expected earliest start time of this segment requirement. "
  earliestStartDate: DateTime
  equipmentRequirements: [EquipmentRequirementRef]
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the segment requirement within the scope of an operations request. "
  id: String!
  jobOrders: [JobOrderRef]
  " The expected latest ending time of this segment requirement. "
  latestEndDate: DateTime
  materialRequirements: [MaterialRequirementRef]
  " Notes about this segment requirement. "
  notes: String
  operationsDefinition: OperationsDefinitionRef
  operationsRequest: OperationsRequestRef!
  operationsResponses: [OperationsResponseRef]
  operationsSegment: OperationsSegmentRef
  " Describes the category of operation. "
  operationsType: WorkType!
  parameters: [SegmentParameterRef]
  parent: SegmentRequirementRef
  personnelRequirements: [PersonnelRequirementRef]
  physicalAssetRequirements: [PhysicalAssetRequirementRef]
  processSegment: ProcessSegmentRef
  segmentResponses: [SegmentResponseRef]
  " Indicates the state of the segment requirement. "
  segmentState: ScheduleState!
  workRequests: [WorkRequestRef]
}
""
input AddSegmentResponseInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " The actual end time of this segment response. "
  actualEndDateTime: DateTime
  " The actual start time of this segment response. "
  actualStartDateTime: DateTime
  children: [SegmentResponseRef]
  " Contains additional information and descriptions of the segment response. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentActual: [EquipmentActualRef]
  hierarchyScope: HierarchyScopeRef
  " Uniquely identifies an instance of a segment response executed. "
  id: String!
  jobResponses: JobResponseRef
  materialActual: [MaterialActualRef]
  operationsDefinitions: [OperationsDefinitionRef]
  operationsRequests: [OperationsRequestRef]
  operationsResponse: OperationsResponseRef!
  operationsSegments: [OperationsSegmentRef]
  " Describes the category of operations. "
  operationsType: WorkType!
  parent: SegmentResponseRef
  personnelActual: [PersonnelActualRef]
  physicalAssetActual: [PhysicalAssetActualRef]
  " The date and time used for posting resource actuals to supporting applications. "
  postingDateTime: DateTime
  processSegment: ProcessSegmentRef
  segmentData: [SegmentDataRef]
  segmentRequirements: [SegmentRequirementRef]
  " Indicates the state of the segment response. "
  segmentState: JobState
  workResponses: WorkResponseRef
}
""
input AddSignatureInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  alarmEvent: AlarmEventRef
  " An indication enabling detection that the signature has not been altered. The change indication enables detection that the record has been altered, although it may not identify the specific alterations. "
  changeIndication: String!
  comment: CommentRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentActual: EquipmentActualRef
  equipmentRequirement: EquipmentRequirementRef
  event: EventRef
  jobOrder: JobOrderRef
  jobResponse: JobResponseRef
  jobResponseData: JobResponseDataRef
  materialActual: MaterialActualRef
  materialRequirement: MaterialRequirementRef
  personVersion: PersonVersionRef!
  personnelActual: PersonnelActualRef
  personnelRequirement: PersonnelRequirementRef
  physicalAssetActual: PhysicalAssetActualRef
  physicalAssetRequirement: PhysicalAssetRequirementRef
  signatureForAComment: CommentRef
  signatureReason: SignatureReasonRef!
  " Timestamps the signature signing. "
  timestamp: DateTime
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
  workRequest: WorkRequestRef
  workResponse: WorkResponseRef
}
""
input AddSignatureReasonInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " Uniquely identifies the signature reason. "
  id: String!
  signatures: [SignatureRef]
}
""
input AddSpatialDefinitionInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " A string to uniquely identify a spatial definition. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  multiPolygonValue: MultiPolygonRef
  pointValue: PointRef
  polygonValue: PolygonRef
  recordEntries: [InformationObjectRef]
  """
  SRID is the Spatial Reference Identifier which identifies the coordinate reference system to identify 
  a predefined coordinate reference system (pre-configured into communication systems).
  """
  srid: String
  """
  The SRID authority identifies the authority that defines the coordinate reference system identified 
  by the SRID.
  """
  sridAuthority: String
}
""
input AddStateModelActionInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  actionType: StateModelActionType
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " A unique identification of a specific operational location class version. "
  id: String!
  isEntryActionForState: StateModelStateRef
  isExitActionForState: StateModelStateRef
  " The label is last node in the fully qualified name. "
  label: String!
  transition: StateModelTransitionRef
  " Variable Context to pass into the Workflow. stringified json or jsonata expression "
  variables: String
  workflowSpecification: WorkflowSpecificationRef
}
""
input AddStateModelDefinitionInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains the base64 encoded XML that this StateModelDefinition was generated from. "
  bpmnXMLEncoded: String!
  " Contains additional information and descriptions of the operational location. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  equipmentClassVersion: EquipmentClassVersionRef
  equipmentVersion: EquipmentVersionRef
  events: [StateModelEventRef]
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific operational location class version. "
  id: String!
  instances: [StateModelInstanceRef]
  " The label is last node in the fully qualified name. "
  label: String!
  materialClassVersion: MaterialClassVersionRef
  materialDefinitionVersion: MaterialDefinitionVersionRef
  personVersion: PersonVersionRef
  personnelClassVersion: PersonnelClassVersionRef
  physicalAssetClassVersion: PhysicalAssetClassVersionRef
  physicalAssetVersion: PhysicalAssetVersionRef
  properties: [StateModelPropertyRef]
  states: [StateModelStateRef]
  transitions: [StateModelTransitionRef]
}
""
input AddStateModelEventInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " A unique identification of a specific operational location class version. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  stateModelDefinition: StateModelDefinitionRef!
  transitions: [StateModelTransitionRef]
}
""
input AddStateModelInstanceInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the operational location. "
  description: String
  equipment: EquipmentRef
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific operational location class version. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  materialDefinition: MaterialDefinitionRef
  materialLot: MaterialLotRef
  materialSubLot: MaterialSubLotRef
  person: PersonRef
  physicalAsset: PhysicalAssetRef
  " The current state of the StateModelInstance "
  state: String
  stateModelDefinition: StateModelDefinitionRef
  transitions: [StateTransitionInstanceRef]
}
""
input AddStateModelPropertyInput {
  StateModel: StateModelDefinitionRef!
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [StateModelPropertyRef]
  dataType: DataType
  definitionType: DefinitionType
  " Additional information about the StateModelProperty. "
  description: String
  " Uniquely identifies the state model property. Fully Qualified identifier that is unique in the database. Required attribute."
  id: String!
  " Uniquely identifies the state model property. Required attribute."
  name: String!
  parent: StateModelPropertyRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddStateModelStateInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [StateModelStateRef]
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " A unique identification of a specific operational location class version. "
  id: String!
  inflows: [StateModelTransitionRef]
  " This state machine terminates when it reaches this state "
  isFinalState: Boolean
  " This state is active when the state machine is initiated "
  isInitialState: Boolean
  " The label is last node in the fully qualified name. "
  label: String!
  onEntry: [StateModelActionRef]
  onExit: [StateModelActionRef]
  outflows: [StateModelTransitionRef]
  parent: StateModelStateRef
  stateModelDefinition: StateModelDefinitionRef
}
""
input AddStateModelTransitionInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " jsonata expression to determine if the transition should proceed or not "
  condition: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  from: StateModelStateRef!
  " A unique identification of a specific operational location class version. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  stateModelActions: [StateModelActionRef]
  stateModelDefinition: StateModelDefinitionRef!
  stateModelEvents: [StateModelEventRef]
  to: StateModelStateRef!
}
""
input AddStateTransitionInstanceInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  fromState: String
  stateModelInstance: StateModelInstanceRef!
  timestamp: DateTime
  toState: String!
}
""
input AddTestResultInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  children: [TestResultRef]
  " Additional information about the test result. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  equipment: EquipmentRef
  equipmentActual: EquipmentActualRef
  equipmentClass: EquipmentClassRef
  equipmentRequirement: EquipmentRequirementRef
  equipmentSpecification: EquipmentSpecificationRef
  " Result obtained from evaluation of the associated test specification criteria. "
  evaluationCriterionResult: String
  " Date and time of evaluation of the test result. "
  evaluationDate: DateTime
  " Date of the expiration of the test result criteria. "
  expiration: DateTime
  hierarchyScope: HierarchyScopeRef
  " An identification of the specific test result. "
  id: String!
  materialActual: MaterialActualRef
  materialClass: MaterialClassRef
  materialDefinition: MaterialDefinitionRef
  materialLot: MaterialLotRef
  materialRequirement: MaterialRequirementRef
  materialSpecification: MaterialSpecificationRef
  materialSubLot: MaterialSubLotRef
  parent: TestResultRef
  person: PersonRef
  personnelActual: PersonnelActualRef
  personnelClass: PersonnelClassRef
  personnelRequirement: PersonnelRequirementRef
  personnelSpecification: PersonnelSpecificationRef
  physicalAsset: PhysicalAssetRef
  physicalAssetActual: PhysicalAssetActualRef
  physicalAssetClass: PhysicalAssetClassRef
  physicalAssetRequirement: PhysicalAssetRequirementRef
  propertyMeasurements: [PropertyMeasurementRef]
  recordEntries: [InformationObjectRef]
}
""
input AddTestSpecificationCriteriaInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Description of the test specification criteria. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  evaluatedProperties: [EvaluatedPropertyRef]
  """
  An expression of the test specification criteria to be evaluated. If the expression is empty, 
  then the test specification criteria represents the else criterion. 
  """
  expression: String
  " Identification of the test specification criteria. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  """
  The value to be given to the result of the test if the test specification criteria expression is 
  evaluated as true.
  """
  result: String
  """
  Specifies the sequence of evaluation of test specification criteria. The sequence shall be executed 
  lowest first. Duplicate sequence values shall be executed in parallel with worst case result 
  reported if both criteria are evaluated as true. 
  """
  sequence: Int
  testSpecification: TestSpecificationRef!
}
""
input AddTestSpecificationInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  children: [TestSpecificationRef]
  criteria: [TestSpecificationCriteriaRef]
  " A description of the test specification. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  evaluatedProperties: [EvaluatedPropertyRef]
  hierarchyScope: HierarchyScopeRef
  " An identification of a test for certifying one or more values. "
  id: String!
  """
  A named unique instance of the entity. Note that this attribute is subject to change, based on 
  the implementation timeline of composite keys within dgraph.
  """
  key: String!
  " The label is last node in the fully qualified name. "
  label: String!
  parent: TestSpecificationRef
  " Defines whether physical sampling is required to perform the test. "
  physicalSample: Boolean
  properties: [TestSpecificationPropertyRef]
  " The date and time on which the test specification was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  " The amount of operations activity required between samples. "
  recurrenceQuantity: String
  " The duration of operational activity required between samples. "
  recurrenceTimeInterval: String
  requiredByEquipment: EquipmentRef
  requiredByEquipmentClass: EquipmentClassRef
  requiredByEquipmentRequirement: EquipmentRequirementRef
  requiredByEquipmentSpecification: EquipmentSpecificationRef
  requiredByMaterialClass: MaterialClassRef
  requiredByMaterialDefinition: MaterialDefinitionRef
  requiredByMaterialLot: MaterialLotRef
  requiredByMaterialRequirement: MaterialRequirementRef
  requiredByMaterialSpecification: MaterialSpecificationRef
  requiredByMaterialSubLot: MaterialSubLotRef
  requiredByPerson: PersonRef
  requiredByPersonnelClass: PersonnelClassRef
  requiredByPersonnelRequirement: PersonnelRequirementRef
  requiredByPersonnelSpecification: PersonnelSpecificationRef
  requiredByPhysicalAsset: PhysicalAssetRef
  requiredByPhysicalAssetClass: PhysicalAssetClassRef
  requiredByPhysicalAssetRequirement: PhysicalAssetRequirementRef
  " Sample size required to perform the test. "
  testSampleSize: String
  testsEquipment: [EquipmentRef]
  testsEquipmentClass: [EquipmentClassRef]
  testsEquipmentRequirements: [EquipmentRequirementRef]
  testsEquipmentSpecifications: [EquipmentSpecificationRef]
  testsMaterialClass: [MaterialClassRef]
  testsMaterialDefinition: [MaterialDefinitionRef]
  testsMaterialLot: [MaterialLotRef]
  testsMaterialRequirements: [MaterialRequirementRef]
  testsMaterialSpecifications: [MaterialSpecificationRef]
  testsMaterialSubLot: [MaterialSubLotRef]
  testsPerson: [PersonRef]
  testsPersonnelClass: [PersonnelClassRef]
  testsPersonnelRequirements: [PersonnelRequirementRef]
  testsPersonnelSpecifications: [PersonnelSpecificationRef]
  testsPhysicalAsset: [PhysicalAssetRef]
  testsPhysicalAssetClass: [PhysicalAssetClassRef]
  testsPhysicalAssetRequirements: [PhysicalAssetRequirementRef]
  " An identification of the version of the test specification. "
  version: String!
}
""
input AddTestSpecificationPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  children: [TestSpecificationPropertyRef]
  " Description of the test specification property "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime!
  " Identification of the test specification property. "
  id: String!
  " The label is last node in the fully qualified name. "
  label: String!
  parent: TestSpecificationPropertyRef
  testSpecification: TestSpecificationRef!
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddUnitOfMeasureConversionInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Numberator and Denominator are used to convert the UoM value:  toUnitOfMeasure Value = fromUnitOfMeasure Value * (numerator/denominator)"
  denominator: Float!
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  fromUnitOfMeasure: UnitOfMeasureRef!
  materialDefinitionVersion: MaterialDefinitionVersionRef!
  " Numberator and Denominator are used to convert the UoM value:  toUnitOfMeasure Value = fromUnitOfMeasure Value * (numerator/denominator)"
  numerator: Float!
  toUnitOfMeasure: UnitOfMeasureRef!
}
""
input AddUnitOfMeasureInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Enumeration: The data type of the stored values associated with this Unit of Measure: BOOL; INT; INT32; FLOAT64; FLOAT; STRING "
  dataType: DataType
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The actual unit associated with the values measured. "
  id: String!
  recordEntries: [InformationObjectRef]
}
""
input AddWorkCalendarDefinitionEntryInput {
  " The hour in which the work calendar definition entry recurs. "
  byHour: [Int]
  " The minute in which the work calendar definition entry recurs. "
  byMinute: [Int]
  " The month in which the work calendar definition entry recurs. "
  byMonth: [Int]
  " The month day in which the work calendar definition entry recurs. "
  byMonthDay: [Int]
  " The second in which the work calendar definition entry recurs. "
  bySecond: [Int]
  " The set position in which the work calendar definition entry recurs. "
  bySetPos: [Int]
  " The day on which the work calendar definition entry recurs. "
  byWeekDay: [Weekday]
  " The week number in which the work calendar definition entry recurs. "
  byWeekNo: [Int]
  " The day of the year in which the work calendar definition entry recurs. "
  byYearDay: [Int]
  calendarEntries: [WorkCalendarEntryRef]
  " Describes the number of repititions of the event. "
  count: Int
  " Description of the workCalendarDefinitionEntry. "
  description: String
  " The duration of the work calendar definition entry. "
  duration: String
  " Describes the end date/time of the work calendar entry. "
  endDateTime: DateTime
  " Defines the type of work calendar definition entry. "
  entryType: WorkCalendarEntryType!
  "  Describes how often the work calendar Entry repeats. "
  freq: Frequency!
  hierarchyScope: EquipmentRef
  " Describes the interval between calendar events. "
  interval: Int
  " Boolean denoting whether the WorkCalendarDefinitionEntry is active. "
  isActive: Boolean
  properties: [WorkCalendarDefinitionEntryPropertyRef]
  " Describes the start date/time of the work calendar entry. "
  startDateTime: DateTime!
  " Describes the week start. "
  wkst: Weekday
  workCalendar: WorkCalendarRef
}
""
input AddWorkCalendarDefinitionEntryPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkCalendarDefinitionEntryPropertyRef]
  " Description of the workCalendarDefinitionEntryProperty. "
  description: String
  hierarchyScope: HierarchyScopeRef
  "A unique identification of a specific work calendar."
  id: String!
  operationalLocation: OperationalLocationRef
  parent: WorkCalendarDefinitionEntryPropertyRef
  " The default value, set of values, or range of the property. "
  quantity: Float!
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  " The use of the property. "
  use: String
  workCalendarDefinitionEntry: WorkCalendarDefinitionEntryRef!
}
""
input AddWorkCalendarEntryInput {
  definition: WorkCalendarDefinitionEntryRef
  " The description of the work calendar entry. "
  description: String
  " The entry type of the calendar entry. "
  entryType: WorkCalendarEntryType!
  " The end time of the work calendar entry. "
  finishDateTime: DateTime!
  hierarchyScope: EquipmentRef
  " The boolean to define whether the entry is active. "
  isActive: Boolean
  properties: [WorkCalendarEntryPropertyRef]
  " The start time of the work calendar entry. "
  startDateTime: DateTime!
  workCalendar: WorkCalendarRef
}
""
input AddWorkCalendarEntryPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkCalendarEntryPropertyRef]
  " The description of the work calendar entry property. "
  description: String
  hierarchyScope: HierarchyScopeRef
  "A unique identification of a specific work calendar."
  id: String!
  operationalLocation: OperationalLocationRef
  parent: WorkCalendarEntryPropertyRef
  " The quantity associated with the work calendar entry property. "
  quantity: Float!
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  " The use associated with the work calendar entry property. "
  use: String
  workCalendarEntry: WorkCalendarEntryRef!
}
""
input AddWorkCalendarInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  definition: [WorkCalendarDefinitionEntryRef]
  " The description of the work calendar. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  entries: [WorkCalendarEntryRef]
  equipmentVersions: [EquipmentVersionRef]
  " The name of the work calendar. "
  name: String!
  recordEntries: [InformationObjectRef]
}
""
input AddWorkDirectiveInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkDirectiveRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the work directive. "
  description: String
  " Duration, if known. "
  duration: Float
  durationUnitOfMeasure: UnitOfMeasureRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentSpecifications: [EquipmentSpecificationRef]
  evaluatedProperties: [EvaluatedPropertyRef]
  hierarchyScope: HierarchyScopeRef
  " A unique identification as the work directive ID. "
  id: String!
  jobOrders: [JobOrderRef]
  jobResponses: [JobResponseRef]
  materialSpecifications: [MaterialSpecificationRef]
  parameterSpecifications: [ParameterSpecificationRef]
  parent: WorkDirectiveRef
  personnelSpecifications: [PersonnelSpecificationRef]
  physicalAssetSpecifications: [PhysicalAssetSpecificationRef]
  propertyMeasurements: [PropertyMeasurementRef]
  " The date and time on which the work directive was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  signatures: [SignatureRef]
  " Indicates the state of the job response. "
  state: WorkDirectiveState
  " An identification of the version of the work directive version. "
  version: String!
  workMaster: WorkMasterRef
  " Describes the category of work. "
  workType: WorkType
  workflowSpecification: WorkflowSpecificationRef
}
""
input AddWorkMasterInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkMasterRef]
  comments: [CommentRef]
  definedBy: [WorkMasterRef]
  defines: WorkMasterRef
  " Defines the type of the work master. "
  definitionType: DefinitionType!
  " Contains additional information and descriptions of the work master. "
  description: String
  " Duration, if known. "
  duration: Float
  durationUnitOfMeasure: UnitOfMeasureRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentSpecifications: [EquipmentSpecificationRef]
  evaluatedProperties: [EvaluatedPropertyRef]
  hierarchyScope: HierarchyScopeRef
  " A unique identification as the work master ID. "
  id: String!
  jobOrders: [JobOrderRef]
  jobResponses: [JobResponseRef]
  materialSpecifications: [MaterialSpecificationRef]
  operationsDefinition: OperationsDefinitionRef
  operationsSegment: OperationsSegmentRef
  parameterSpecifications: [ParameterSpecificationRef]
  parent: WorkMasterRef
  personnelSpecifications: [PersonnelSpecificationRef]
  physicalAssetSpecifications: [PhysicalAssetSpecificationRef]
  processSegment: ProcessSegmentRef
  propertyMeasurements: [PropertyMeasurementRef]
  " The date and time on which the work master was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  signatures: [SignatureRef]
  " An identification of the version of the work master version. "
  version: String!
  workDirectives: [WorkDirectiveRef]
  " Describes the category of work. "
  workType: WorkType
  workflowSpecification: WorkflowSpecificationRef
}
""
input AddWorkPerformanceInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkPerformanceRef]
  " Contains additional information and descriptions of the work performance. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The ending time of the associated work performance. "
  endDateTime: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the work performance and could include version and revision identification. "
  id: String!
  parent: WorkPerformanceRef
  " The date and time in which the work performance was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  " The starting time of the associated work performance. "
  startDateTime: DateTime
  workResponses: [WorkResponseRef!]!
  workSchedule: WorkScheduleRef
  " Indicates the state of the work performance. "
  workState: JobState
  " Describes the category of work. "
  workType: WorkType
}
""
input AddWorkRequestInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkRequestRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the work request. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the work request. "
  id: String!
  jobOrders: [JobOrderRef!]!
  operationsRequest: OperationsRequestRef
  parent: WorkRequestRef
  " When work is to be completed. "
  plannedEndDateTime: DateTime
  " When work is to be started. "
  plannedStartDateTime: DateTime
  " The priority of the work request. "
  priority: String
  recordEntries: [InformationObjectRef]
  " Indicates the state of the work request. "
  requestState: ScheduleState!
  segmentRequirement: SegmentRequirementRef
  signatures: [SignatureRef]
  workResponses: [WorkResponseRef]
  workSchedule: WorkScheduleRef!
  " Describes the category of work. "
  workType: WorkType!
}
""
input AddWorkResponseInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkResponseRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the work response. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The ending time of this work response. "
  endDateTime: DateTime
  events: [EventRef]
  hierarchyScope: HierarchyScopeRef
  " An identification within the associated work performance. "
  id: String!
  jobResponses: [JobResponseRef!]!
  parent: WorkResponseRef
  recordEntries: [InformationObjectRef]
  " Indicates the state of the work response. "
  responseState: JobState
  segmentResponse: SegmentResponseRef
  signatures: [SignatureRef]
  " The starting time of this work response. "
  startDateTime: DateTime
  workPerformance: WorkPerformanceRef!
  workRequest: WorkRequestRef
  " Describes the category of work. "
  workType: WorkType
}
""
input AddWorkScheduleInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkScheduleRef]
  " Contains additional information and descriptions of the work schedule. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the work schedule and could include version and revision identification. "
  id: String!
  parent: WorkScheduleRef
  " The date and time on which the work schedule was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  " Indicates the state of the work schedule. "
  scheduleState: ScheduleState
  " The ending time for the associated work schedule. "
  scheduledEndDate: DateTime
  " The starting time for the associated work schedule. "
  scheduledStartDate: DateTime
  workPerformances: [WorkPerformanceRef]
  workRequests: [WorkRequestRef]
  " Describes the category of work. "
  workType: WorkType
}
""
input AddWorkflowErrorInput {
  code: String
  id: String!
  node: WorkflowSpecificationNodeRef
  reference: String
  workflowSpecificationVersion: WorkflowSpecificationVersionRef
}
""
input AddWorkflowMessageInput {
  enabled: Boolean!
  id: String!
  node: WorkflowSpecificationNodeRef
  reference: String
  workflowSpecificationVersion: WorkflowSpecificationVersionRef
}
""
input AddWorkflowShapeInput {
  acl: [AccessPermissionRef]
  height: String!
  icon: String
  """
  In combination with the Version field, the id is a unique identification of a specific workflow specification that is consistent outside the scope of this database.
  The ID and Version are used in other parts of the model when the workflow specification needs to be identified.
  """
  id: String!
  node: WorkflowSpecificationNodeRef!
  width: String!
  x: String!
  y: String!
}
""
input AddWorkflowSpecificationConnectionInput {
  _createdBy: String
  _createdDateTime: DateTime
  _modifiedBy: String
  _modifiedDateTime: DateTime
  acl: [AccessPermissionRef]
  condition: String
  connectionType: WorkflowSpecificationConnectionTypeRef!
  "Contains additional information and descriptions of the workflow specification connection."
  description: String
  from: WorkflowSpecificationNodeRef!
  id: String!
  name: String
  properties: [WorkflowSpecificationConnectionPropertyRef]
  to: WorkflowSpecificationNodeRef!
  waypoints: [WorkflowWaypointRef]
  workflowSpecificationVersion: WorkflowSpecificationVersionRef!
}
""
input AddWorkflowSpecificationConnectionPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkflowSpecificationConnectionPropertyRef]
  connection: WorkflowSpecificationConnectionRef!
  dataType: DataType
  definitionType: DefinitionType
  " Additional information about the WorkflowSpecificationProperty. "
  description: String
  " Uniquely identifies the workflow specification property. Fully Qualified identifier that is unique in the database. Required attribute."
  id: String!
  " Uniquely identifies the workflow specification property. Required attribute."
  name: String!
  parent: WorkflowSpecificationConnectionPropertyRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddWorkflowSpecificationConnectionTypeInput {
  _createdBy: String
  _createdDateTime: DateTime
  _modifiedBy: String
  _modifiedDateTime: DateTime
  acl: [AccessPermissionRef]
  connections: [WorkflowSpecificationConnectionRef]
  "Contains additional information and descriptions of the workflow specification connection."
  description: String
  hierarchyScope: HierarchyScopeRef
  id: String!
  properties: [WorkflowSpecificationConnectionTypePropertyRef]
  recordEntries: [InformationObjectRef]
}
""
input AddWorkflowSpecificationConnectionTypePropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkflowSpecificationConnectionTypePropertyRef]
  connectionType: WorkflowSpecificationConnectionTypeRef!
  dataType: DataType
  definitionType: DefinitionType
  " Additional information about the WorkflowSpecificationProperty. "
  description: String
  " Uniquely identifies the workflow specification property. Fully Qualified identifier that is unique in the database. Required attribute."
  id: String!
  " Uniquely identifies the workflow specification property. Required attribute."
  name: String!
  parent: WorkflowSpecificationConnectionTypePropertyRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddWorkflowSpecificationInput {
  _createdBy: String
  _createdDateTime: DateTime
  _modifiedBy: String
  _modifiedDateTime: DateTime
  acl: [AccessPermissionRef]
  activeVersion: WorkflowSpecificationVersionRef
  calledByNodes: [WorkflowSpecificationNodeRef]
  id: String!
  includedIn: [WorkflowSpecificationVersionRef]
  jobOrders: [JobOrderRef]
  jobResponses: [JobResponseRef]
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  recordEntries: [InformationObjectRef]
  rules: [RuleRef]
  stateModelActions: [StateModelActionRef]
  versions: [WorkflowSpecificationVersionRef]
  workDirectives: [WorkDirectiveRef]
  workMasters: [WorkMasterRef]
}
""
input AddWorkflowSpecificationNodeInput {
  _createdBy: String
  _createdDateTime: DateTime
  _modifiedBy: String
  _modifiedDateTime: DateTime
  acl: [AccessPermissionRef]
  attachedTo: WorkflowSpecificationNodeRef
  boundaryEvents: [WorkflowSpecificationNodeRef]
  containsWorkflowSpecification: WorkflowSpecificationRef
  " Contains additional information and descriptions of the workflow specification node. "
  description: String
  error: WorkflowErrorRef
  form: FormRef
  hierarchyScope: HierarchyScopeRef
  """
   Id is a unique identification of a specific workflow specification node that is consistent outside the scope of this database.
  The ID and Version are used in other parts of the model when the workflow specification needs to be identified. 
  """
  id: String!
  inflows: [WorkflowSpecificationConnectionRef]
  inputs: [WorkflowSpecificationNodeVariableRef]
  jobOrders: [JobOrderRef]
  jobResponses: [JobResponseRef]
  message: WorkflowMessageRef
  nodeType: WorkflowSpecificationNodeTypeRef!
  outflows: [WorkflowSpecificationConnectionRef]
  outputs: [WorkflowSpecificationNodeVariableRef]
  properties: [WorkflowSpecificationNodePropertyRef]
  " User Tasks can have a Role assignment that defines the type of users that can complete the task"
  role: String
  shape: WorkflowShapeRef
  testCases: [WorkflowSpecificationNodeTestCaseRef]
  timer: WorkflowTimerRef
  " If the user task requires a specific UI Component to be used, it is defined here"
  uiComponent: String
  workflowSpecificationVersion: WorkflowSpecificationVersionRef!
}
""
input AddWorkflowSpecificationNodePropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkflowSpecificationNodePropertyRef]
  dataType: DataType
  definitionType: DefinitionType
  " Additional information about the WorkflowSpecificationProperty. "
  description: String
  " Uniquely identifies the workflow specification property. Fully Qualified identifier that is unique in the database. Required attribute."
  id: String!
  " Uniquely identifies the workflow specification property. Required attribute."
  name: String!
  node: WorkflowSpecificationNodeRef!
  parent: WorkflowSpecificationNodePropertyRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddWorkflowSpecificationNodeTestCaseInput {
  expectedResult: String!
  id: String!
  inputJson: String!
  node: WorkflowSpecificationNodeRef!
}
""
input AddWorkflowSpecificationNodeTypeInput {
  _createdBy: String
  _createdDateTime: DateTime
  _modifiedBy: String
  _modifiedDateTime: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the workflow specification node. "
  description: String
  hierarchyScope: HierarchyScopeRef
  id: String!
  name: String
  nodes: [WorkflowSpecificationNodeRef]
  properties: [WorkflowSpecificationNodeTypePropertyRef]
  recordEntries: [InformationObjectRef]
}
""
input AddWorkflowSpecificationNodeTypePropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkflowSpecificationNodeTypePropertyRef]
  dataType: DataType
  definitionType: DefinitionType
  " Additional information about the WorkflowSpecificationProperty. "
  description: String
  " Uniquely identifies the workflow specification property. Fully Qualified identifier that is unique in the database. Required attribute."
  id: String!
  " Uniquely identifies the workflow specification property. Required attribute."
  name: String!
  nodeType: WorkflowSpecificationNodeTypeRef!
  parent: WorkflowSpecificationNodeTypePropertyRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input AddWorkflowSpecificationNodeVariableInput {
  source: String!
  target: String!
}
""
input AddWorkflowSpecificationPropertyInput {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkflowSpecificationPropertyRef]
  dataType: DataType
  definitionType: DefinitionType
  " Additional information about the WorkflowSpecificationProperty. "
  description: String
  " Uniquely identifies the workflow specification property. Fully Qualified identifier that is unique in the database. Required attribute."
  id: String!
  " Uniquely identifies the workflow specification property. Required attribute."
  name: String!
  parent: WorkflowSpecificationPropertyRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
  workflowSpecificationVersion: WorkflowSpecificationVersionRef!
}
""
input AddWorkflowSpecificationVersionInput {
  _createdBy: String
  _createdDateTime: DateTime
  _modifiedBy: String
  _modifiedDateTime: DateTime
  acl: [AccessPermissionRef]
  " Contains the base64 encoded XML that this WorkflowSpecificationVersion was generated from. "
  bpmnXMLEncoded: String
  connections: [WorkflowSpecificationConnectionRef]
  definitionType: DefinitionType
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  errors: [WorkflowErrorRef]
  hierarchyScope: HierarchyScopeRef
  """
   In combination with the Version field, the id is a unique identification of a specific workflow specification that is consistent outside the scope of this database.
  The ID and Version are used in other parts of the model when the workflow specification needs to be identified. 
  """
  id: String!
  includePropertiesOf: [WorkflowSpecificationRef]
  isActiveVersionOf: WorkflowSpecificationRef
  " Identifies whether this is an executable BPMN or a non-BPMN WorkflowSpecification "
  isExecutable: Boolean
  jobOrders: [JobOrderRef]
  jobResponses: [JobResponseRef]
  messages: [WorkflowMessageRef]
  nodes: [WorkflowSpecificationNodeRef]
  properties: [WorkflowSpecificationPropertyRef]
  recordEntries: [InformationObjectRef]
  " The Json Schema definition of inputs required to execute the workflow. "
  schemaDefinition: String
  timers: [WorkflowTimerRef]
  """
   Entity to define the specific version of the entity. Purposely free for to allow use with a specific
  revision scheme. For example `1`, `2` or `Rev A03`, `Rev B01`. Versions are lexicographically compared. 
  """
  version: String!
  versionStatus: VersionState!
  workflowSpecification: WorkflowSpecificationRef!
}
""
input AddWorkflowTimerInput {
  enabled: Boolean
  id: String!
  node: WorkflowSpecificationNodeRef
  reference: String
  workflowSpecificationVersion: WorkflowSpecificationVersionRef
}
""
input AddWorkflowWaypointInput {
  connection: WorkflowSpecificationConnectionRef!
  x: String!
  y: String!
}
""
input AlarmEventFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  alarmEvent: StringHashFilter
  alarmLimit: StringHashFilter
  alarmType: StringHashFilter
  and: [AlarmEventFilter]
  effectiveDateTime: DateTimeFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [AlarmEventHasFilter]
  iid: [ID!]
  not: AlarmEventFilter
  or: [AlarmEventFilter]
  priority: StringHashFilter
  recordedDateTime: DateTimeFilter
}
""
input AlarmEventOrder {
  asc: AlarmEventOrderable
  desc: AlarmEventOrderable
  then: AlarmEventOrder
}
""
input AlarmEventPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Record of different events during an alarm lifecycle. "
  alarmEvent: String
  " Value a measurement exceeded that caused the alarm. "
  alarmLimit: String
  " The type of alarm from a process perspective. "
  alarmType: String
  comments: [CommentRef]
  " The date and time an Alarm Event is effective from "
  effectiveDateTime: DateTime
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  event: EventRef
  " Indication of the importance of an event. "
  priority: String
  " The date and time an Alarm Event was last triggered "
  recordedDateTime: DateTime
  signatures: [SignatureRef]
}
""
input AlarmEventRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Record of different events during an alarm lifecycle. "
  alarmEvent: String
  " Value a measurement exceeded that caused the alarm. "
  alarmLimit: String
  " The type of alarm from a process perspective. "
  alarmType: String
  comments: [CommentRef]
  " The date and time an Alarm Event is effective from "
  effectiveDateTime: DateTime
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  event: EventRef
  " Unique internal database identifier. "
  iid: ID
  " Indication of the importance of an event. "
  priority: String
  " The date and time an Alarm Event was last triggered "
  recordedDateTime: DateTime
  signatures: [SignatureRef]
}
""
input AssemblyRelationship_exact {
  between: AssemblyRelationship
  eq: AssemblyRelationship
  ge: AssemblyRelationship
  gt: AssemblyRelationship
  in: [AssemblyRelationship]
  le: AssemblyRelationship
  lt: AssemblyRelationship
}
""
input AssemblyType_exact {
  between: AssemblyType
  eq: AssemblyType
  ge: AssemblyType
  gt: AssemblyType
  in: [AssemblyType]
  le: AssemblyType
  lt: AssemblyType
}
""
input AuthRule {
  and: [AuthRule]
  not: AuthRule
  or: [AuthRule]
  rule: String
}
""
input CommentFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [CommentFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [CommentHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: CommentFilter
  or: [CommentFilter]
  text: StringExactFilter_StringFullTextFilter
}
""
input CommentOrder {
  asc: CommentOrderable
  desc: CommentOrderable
  then: CommentOrder
}
""
input CommentPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  alarmEvent: AlarmEventRef
  child: [CommentRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentActual: EquipmentActualRef
  equipmentRequirement: EquipmentRequirementRef
  event: EventRef
  " Comment unique external id. "
  id: String
  jobOrder: JobOrderRef
  jobResponse: JobResponseRef
  jobResponseData: JobResponseDataRef
  materialActual: MaterialActualRef
  materialRequirement: MaterialRequirementRef
  onSignature: SignatureRef
  parent: CommentRef
  personVersion: PersonVersionRef
  personnelActual: PersonnelActualRef
  personnelRequirement: PersonnelRequirementRef
  physicalAssetActual: PhysicalAssetActualRef
  physicalAssetRequirement: PhysicalAssetRequirementRef
  recordEntries: [InformationObjectRef]
  segmentParameter: SegmentParameterRef
  signOff: SignatureRef
  " Comment body text. "
  text: String
  " Timestamp of the comment. "
  timestamp: DateTime
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
  workRequest: WorkRequestRef
  workResponse: WorkResponseRef
}
""
input CommentRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  alarmEvent: AlarmEventRef
  child: [CommentRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentActual: EquipmentActualRef
  equipmentRequirement: EquipmentRequirementRef
  event: EventRef
  " Comment unique external id. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  jobOrder: JobOrderRef
  jobResponse: JobResponseRef
  jobResponseData: JobResponseDataRef
  materialActual: MaterialActualRef
  materialRequirement: MaterialRequirementRef
  onSignature: SignatureRef
  parent: CommentRef
  personVersion: PersonVersionRef
  personnelActual: PersonnelActualRef
  personnelRequirement: PersonnelRequirementRef
  physicalAssetActual: PhysicalAssetActualRef
  physicalAssetRequirement: PhysicalAssetRequirementRef
  recordEntries: [InformationObjectRef]
  segmentParameter: SegmentParameterRef
  signOff: SignatureRef
  " Comment body text. "
  text: String
  " Timestamp of the comment. "
  timestamp: DateTime
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
  workRequest: WorkRequestRef
  workResponse: WorkResponseRef
}
""
input ContainsFilter {
  point: PointRef
  polygon: PolygonRef
}
""
input CustomHTTP {
  body: String
  forwardHeaders: [String!]
  graphql: String
  introspectionHeaders: [String!]
  method: HTTPMethod!
  mode: Mode
  secretHeaders: [String!]
  skipIntrospection: Boolean
  url: String!
}
""
input DataSourceFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [DataSourceFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [DataSourceHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: DataSourceFilter
  or: [DataSourceFilter]
}
""
input DataSourceMethodArgumentFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [DataSourceMethodArgumentFilter]
  dataType: DataType_hash
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [DataSourceMethodArgumentHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: DataSourceMethodArgumentFilter
  or: [DataSourceMethodArgumentFilter]
}
""
input DataSourceMethodArgumentOrder {
  asc: DataSourceMethodArgumentOrderable
  desc: DataSourceMethodArgumentOrderable
  then: DataSourceMethodArgumentOrder
}
""
input DataSourceMethodArgumentPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  dataSourceMethod: DataSourceMethodRef
  " The type of data for this method argument. "
  dataType: DataType
  " Contains additional information and descriptions of the data source method argument. "
  description: String
  " The direction of the argument "
  direction: MethodArgumentDirection
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " Uniquely identifies the data source method argument. "
  id: String
  " The argument's position in the method call "
  position: Int
  " The value of the argument, used for communicating with libre-agent "
  value: String
}
""
input DataSourceMethodArgumentRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  dataSourceMethod: DataSourceMethodRef
  " The type of data for this method argument. "
  dataType: DataType
  " Contains additional information and descriptions of the data source method argument. "
  description: String
  " The direction of the argument "
  direction: MethodArgumentDirection
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " Uniquely identifies the data source method argument. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The argument's position in the method call "
  position: Int
  " The value of the argument, used for communicating with libre-agent "
  value: String
}
""
input DataSourceMethodFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [DataSourceMethodFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [DataSourceMethodHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  method: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: DataSourceMethodFilter
  or: [DataSourceMethodFilter]
}
""
input DataSourceMethodOrder {
  asc: DataSourceMethodOrderable
  desc: DataSourceMethodOrderable
  then: DataSourceMethodOrder
}
""
input DataSourceMethodPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  arguments: [DataSourceMethodArgumentRef]
  dataSourceVersion: DataSourceVersionRef
  " Contains additional information and descriptions of the data source method. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  """
  The Error is optionally returned when the method call fails. Note, 
  this should be Null in BaaS, used for communication between services.
  """
  error: String
  " Uniquely identifies the data source method. "
  id: String
  " The method is last node in the fully qualified name of the method to call. "
  method: String
  """
  The Object that the method is called against. Note, this should be Null in 
  BaaS, used for communication between services.
  """
  object: String
  """
  The StatusCode is returned after a method call. Note, this should be 
  Null in BaaS, used for communication between services.
  """
  statusCode: Int
}
""
input DataSourceMethodRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  arguments: [DataSourceMethodArgumentRef]
  dataSourceVersion: DataSourceVersionRef
  " Contains additional information and descriptions of the data source method. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  """
  The Error is optionally returned when the method call fails. Note, 
  this should be Null in BaaS, used for communication between services.
  """
  error: String
  " Uniquely identifies the data source method. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The method is last node in the fully qualified name of the method to call. "
  method: String
  """
  The Object that the method is called against. Note, this should be Null in 
  BaaS, used for communication between services.
  """
  object: String
  """
  The StatusCode is returned after a method call. Note, this should be 
  Null in BaaS, used for communication between services.
  """
  statusCode: Int
}
""
input DataSourceOrder {
  asc: DataSourceOrderable
  desc: DataSourceOrderable
  then: DataSourceOrder
}
""
input DataSourcePatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: DataSourceVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentDataSources: [EquipmentDataSourceRef]
  " Uniquely identifies the data source. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  propertyNameAliases: [PropertyNameAliasRef]
  recordEntries: [InformationObjectRef]
  " The icon for the menu in the libre admin UI menu. "
  uiSortIndex: Int
  versions: [DataSourceVersionRef]
}
""
input DataSourceProtocol_exact {
  between: DataSourceProtocol
  eq: DataSourceProtocol
  ge: DataSourceProtocol
  gt: DataSourceProtocol
  in: [DataSourceProtocol]
  le: DataSourceProtocol
  lt: DataSourceProtocol
}
""
input DataSourceRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: DataSourceVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentDataSources: [EquipmentDataSourceRef]
  " Uniquely identifies the data source. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  propertyNameAliases: [PropertyNameAliasRef]
  recordEntries: [InformationObjectRef]
  " The icon for the menu in the libre admin UI menu. "
  uiSortIndex: Int
  versions: [DataSourceVersionRef]
}
""
input DataSourceTopicFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [DataSourceTopicFilter]
  dataType: DataType_hash
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [DataSourceTopicHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  messageKeyDeterminedBy: MessageKey_hash
  not: DataSourceTopicFilter
  or: [DataSourceTopicFilter]
}
""
input DataSourceTopicOrder {
  asc: DataSourceTopicOrderable
  desc: DataSourceTopicOrderable
  then: DataSourceTopicOrder
}
""
input DataSourceTopicPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  dataSourceVersion: DataSourceVersionRef
  " The type of data for this topic. "
  dataType: DataType
  " Contains additional information and descriptions of the data source topic. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " Uniquely identifies the data source topic. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  " The messageKey for messages being published into NATS "
  messageKeyDeterminedBy: MessageKey
  propertyNameAliases: [PropertyNameAliasRef]
}
""
input DataSourceTopicRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  dataSourceVersion: DataSourceVersionRef
  " The type of data for this topic. "
  dataType: DataType
  " Contains additional information and descriptions of the data source topic. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " Uniquely identifies the data source topic. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  " The messageKey for messages being published into NATS "
  messageKeyDeterminedBy: MessageKey
  propertyNameAliases: [PropertyNameAliasRef]
}
""
input DataSourceVersionFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [DataSourceVersionFilter]
  connectionString: StringExactFilter_StringFullTextFilter
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [DataSourceVersionHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: DataSourceVersionFilter
  or: [DataSourceVersionFilter]
  protocol: DataSourceProtocol_exact
  version: StringExactFilter_StringFullTextFilter
  versionStatus: VersionState_hash
}
""
input DataSourceVersionOrder {
  asc: DataSourceVersionOrderable
  desc: DataSourceVersionOrderable
  then: DataSourceVersionOrder
}
""
input DataSourceVersionPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Certificate for use with data sources that support encryption. "
  certificate: String
  " The full connection uri for the data source. "
  connectionString: String
  dataSource: DataSourceRef
  " Contains additional information and descriptions of the data source. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentDataSources: [EquipmentDataSourceRef]
  " Uniquely identifies the data source with the version. "
  id: String
  isActiveVersionOf: DataSourceRef
  methods: [DataSourceMethodRef]
  " Password for data sources that use simple auth. "
  password: String
  physicalAssetDataSources: [PhysicalAssetDataSourceRef]
  " The protocol use to connect to the external data source. "
  protocol: DataSourceProtocol
  recordEntries: [InformationObjectRef]
  topics: [DataSourceTopicRef]
  " Username for data sources that use simple auth. "
  username: String
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input DataSourceVersionRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Certificate for use with data sources that support encryption. "
  certificate: String
  " The full connection uri for the data source. "
  connectionString: String
  dataSource: DataSourceRef
  " Contains additional information and descriptions of the data source. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentDataSources: [EquipmentDataSourceRef]
  " Uniquely identifies the data source with the version. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  isActiveVersionOf: DataSourceRef
  methods: [DataSourceMethodRef]
  " Password for data sources that use simple auth. "
  password: String
  physicalAssetDataSources: [PhysicalAssetDataSourceRef]
  " The protocol use to connect to the external data source. "
  protocol: DataSourceProtocol
  recordEntries: [InformationObjectRef]
  topics: [DataSourceTopicRef]
  " Username for data sources that use simple auth. "
  username: String
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input DataSubscriptionFilter {
  and: [DataSubscriptionFilter]
  has: [DataSubscriptionHasFilter]
  id: [ID!]
  name: StringHashFilter
  not: DataSubscriptionFilter
  or: [DataSubscriptionFilter]
}
""
input DataSubscriptionOrder {
  asc: DataSubscriptionOrderable
  desc: DataSubscriptionOrderable
  then: DataSubscriptionOrder
}
""
input DataSubscriptionPatch {
  name: String
  "The GraphQL Subscription query to use."
  query: String
  "If the subscription returns a list, it can be split into separate messages in sub-topics using the id field."
  split: Boolean
  "The MQTT Topic to publish this subscription to."
  topic: String
}
""
input DataSubscriptionRef {
  id: ID
  name: String
  "The GraphQL Subscription query to use."
  query: String
  "If the subscription returns a list, it can be split into separate messages in sub-topics using the id field."
  split: Boolean
  "The MQTT Topic to publish this subscription to."
  topic: String
}
""
input DataType_hash {
  eq: DataType
  in: [DataType]
}
""
input DateTimeFilter {
  between: DateTimeRange
  eq: DateTime
  ge: DateTime
  gt: DateTime
  in: [DateTime]
  le: DateTime
  lt: DateTime
}
""
input DateTimeRange {
  max: DateTime!
  min: DateTime!
}
""
input DefinitionType_hash {
  eq: DefinitionType
  in: [DefinitionType]
}
""
input DgraphDefault {
  value: String
}
""
input DispatchStatus_hash {
  eq: DispatchStatus
  in: [DispatchStatus]
}
""
input Disposition_exact {
  between: Disposition
  eq: Disposition
  ge: Disposition
  gt: Disposition
  in: [Disposition]
  le: Disposition
  lt: Disposition
}
""
input EnvironmentalVariableFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [EnvironmentalVariableFilter]
  has: [EnvironmentalVariableHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: EnvironmentalVariableFilter
  or: [EnvironmentalVariableFilter]
}
""
input EnvironmentalVariableOrder {
  asc: EnvironmentalVariableOrderable
  desc: EnvironmentalVariableOrderable
  then: EnvironmentalVariableOrder
}
""
input EnvironmentalVariablePatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: EnvironmentalVariableVersionRef
  " Uniquely identifies the environmental variable. "
  id: String
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  versions: [EnvironmentalVariableVersionRef]
}
""
input EnvironmentalVariableRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: EnvironmentalVariableVersionRef
  " Uniquely identifies the environmental variable. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  versions: [EnvironmentalVariableVersionRef]
}
""
input EnvironmentalVariableVersionFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [EnvironmentalVariableVersionFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [EnvironmentalVariableVersionHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: EnvironmentalVariableVersionFilter
  or: [EnvironmentalVariableVersionFilter]
  version: StringExactFilter_StringFullTextFilter
  versionStatus: VersionState_hash
}
""
input EnvironmentalVariableVersionOrder {
  asc: EnvironmentalVariableVersionOrderable
  desc: EnvironmentalVariableVersionOrderable
  then: EnvironmentalVariableVersionOrder
}
""
input EnvironmentalVariableVersionPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  environmentalVariable: EnvironmentalVariableRef
  " Uniquely identifies the environmental variable with the version. "
  id: String
  isActiveVersionOf: EnvironmentalVariableRef
  " The value is substuted into any templates in place of the variable's id. "
  value: String
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input EnvironmentalVariableVersionRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  environmentalVariable: EnvironmentalVariableRef
  " Uniquely identifies the environmental variable with the version. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  isActiveVersionOf: EnvironmentalVariableRef
  " The value is substuted into any templates in place of the variable's id. "
  value: String
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input EquipmentActualFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [EquipmentActualFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  equipmentUse: StringExactFilter_StringFullTextFilter
  has: [EquipmentActualHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: EquipmentActualFilter
  or: [EquipmentActualFilter]
}
""
input EquipmentActualOrder {
  asc: EquipmentActualOrderable
  desc: EquipmentActualOrderable
  then: EquipmentActualOrder
}
""
input EquipmentActualPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [EquipmentActualRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the equipment actual. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipment: EquipmentRef
  equipmentClass: EquipmentClassRef
  " Defines the actual use of the equipment class or equipment. "
  equipmentUse: String
  equipmentVersion: EquipmentVersionRef
  hierarchyScope: HierarchyScopeRef
  " Defines a unique identification of a specific equipment actual. "
  id: String
  jobResponse: JobResponseRef
  operationalLocation: OperationalLocationRef
  parent: EquipmentActualRef
  properties: [EquipmentActualPropertyRef]
  " Specifies the amount of equipment resources used in parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  segmentResponse: SegmentResponseRef
  signatures: [SignatureRef]
  spatialDefinition: SpatialDefinitionRef
  testResults: [TestResultRef]
}
""
input EquipmentActualPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [EquipmentActualPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [EquipmentActualPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: EquipmentActualPropertyFilter
  or: [EquipmentActualPropertyFilter]
  use: StringExactFilter_StringFullTextFilter
  value: StringExactFilter_StringFullTextFilter
}
""
input EquipmentActualPropertyOrder {
  asc: EquipmentActualPropertyOrderable
  desc: EquipmentActualPropertyOrderable
  then: EquipmentActualPropertyOrder
}
""
input EquipmentActualPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [EquipmentActualPropertyRef]
  " Contains additional information and descriptions of the equipment actual property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentActual: EquipmentActualRef
  equipmentClassProperty: EquipmentClassPropertyRef
  equipmentProperty: EquipmentPropertyRef
  hierarchyScope: HierarchyScopeRef
  " An identification of the associated equipment property or equipment class property for a specific segment response. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  operationalLocation: OperationalLocationRef
  parent: EquipmentActualPropertyRef
  " Specifies the amount of equipment resources used in parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  use: String
  " The value or set of values for the associated property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input EquipmentActualPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [EquipmentActualPropertyRef]
  " Contains additional information and descriptions of the equipment actual property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentActual: EquipmentActualRef
  equipmentClassProperty: EquipmentClassPropertyRef
  equipmentProperty: EquipmentPropertyRef
  hierarchyScope: HierarchyScopeRef
  " An identification of the associated equipment property or equipment class property for a specific segment response. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  operationalLocation: OperationalLocationRef
  parent: EquipmentActualPropertyRef
  " Specifies the amount of equipment resources used in parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  use: String
  " The value or set of values for the associated property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input EquipmentActualRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [EquipmentActualRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the equipment actual. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipment: EquipmentRef
  equipmentClass: EquipmentClassRef
  " Defines the actual use of the equipment class or equipment. "
  equipmentUse: String
  equipmentVersion: EquipmentVersionRef
  hierarchyScope: HierarchyScopeRef
  " Defines a unique identification of a specific equipment actual. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  jobResponse: JobResponseRef
  operationalLocation: OperationalLocationRef
  parent: EquipmentActualRef
  properties: [EquipmentActualPropertyRef]
  " Specifies the amount of equipment resources used in parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  segmentResponse: SegmentResponseRef
  signatures: [SignatureRef]
  spatialDefinition: SpatialDefinitionRef
  testResults: [TestResultRef]
}
""
input EquipmentAssetMappingFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [EquipmentAssetMappingFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [EquipmentAssetMappingHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: EquipmentAssetMappingFilter
  or: [EquipmentAssetMappingFilter]
}
""
input EquipmentAssetMappingOrder {
  asc: EquipmentAssetMappingOrderable
  desc: EquipmentAssetMappingOrderable
  then: EquipmentAssetMappingOrder
}
""
input EquipmentAssetMappingPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Additional information about the mapping element. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The ending time of the association. "
  endTime: DateTime
  equipment: EquipmentRef
  hierarchyScope: HierarchyScopeRef
  " An identification of the specific equipment asset mapping. "
  id: String
  physicalAsset: PhysicalAssetRef
  " The starting time of the association. "
  startTime: DateTime
}
""
input EquipmentAssetMappingRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Additional information about the mapping element. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The ending time of the association. "
  endTime: DateTime
  equipment: EquipmentRef
  hierarchyScope: HierarchyScopeRef
  " An identification of the specific equipment asset mapping. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  physicalAsset: PhysicalAssetRef
  " The starting time of the association. "
  startTime: DateTime
}
""
input EquipmentClassFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [EquipmentClassFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [EquipmentClassHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: EquipmentClassFilter
  or: [EquipmentClassFilter]
}
""
input EquipmentClassOrder {
  asc: EquipmentClassOrderable
  desc: EquipmentClassOrderable
  then: EquipmentClassOrder
}
""
input EquipmentClassPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: EquipmentClassVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentActual: [EquipmentActualRef]
  equipmentRequirements: [EquipmentRequirementRef]
  equipmentSpecifications: [EquipmentSpecificationRef]
  equipmentVersions: [EquipmentVersionRef]
  " A unique identification of a specific equipment class, within the scope of the information exchanged. "
  id: String
  isIncludedIn: [EquipmentClassVersionRef]
  isMadeUpOf: [EquipmentClassRef]
  isPartOf: [EquipmentClassRef]
  " The label is last node in the fully qualified name. "
  label: String
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  recordEntries: [InformationObjectRef]
  specifiesTests: [TestSpecificationRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  " The icon for the menu in the libre admin UI menu. "
  uiSortIndex: Int
  versions: [EquipmentClassVersionRef]
}
""
input EquipmentClassPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [EquipmentClassPropertyFilter]
  bindingType: PropertyBindingType_hash
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [EquipmentClassPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: EquipmentClassPropertyFilter
  or: [EquipmentClassPropertyFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input EquipmentClassPropertyOrder {
  asc: EquipmentClassPropertyOrderable
  desc: EquipmentClassPropertyOrderable
  then: EquipmentClassPropertyOrder
}
""
input EquipmentClassPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Defined how the Libre application treats the property binding logic. "
  bindingType: PropertyBindingType
  children: [EquipmentClassPropertyRef]
  correspondsTo: EvaluatedPropertyRef
  " Additional information about the equipment class property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentActualProperties: [EquipmentActualPropertyRef]
  equipmentClassVersion: EquipmentClassVersionRef
  equipmentProperty: EquipmentPropertyRef
  equipmentRequirementProperties: [EquipmentRequirementPropertyRef]
  equipmentSpecificationProperties: [EquipmentSpecificationPropertyRef]
  " An identification of the specific property. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  parent: EquipmentClassPropertyRef
  " Defines the type of the property. "
  propertyType: Isa95PropertyType
  recordsMeasurementOf: [PropertyMeasurementRef]
  triggersRules: [RuleRef]
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input EquipmentClassPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Defined how the Libre application treats the property binding logic. "
  bindingType: PropertyBindingType
  children: [EquipmentClassPropertyRef]
  correspondsTo: EvaluatedPropertyRef
  " Additional information about the equipment class property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentActualProperties: [EquipmentActualPropertyRef]
  equipmentClassVersion: EquipmentClassVersionRef
  equipmentProperty: EquipmentPropertyRef
  equipmentRequirementProperties: [EquipmentRequirementPropertyRef]
  equipmentSpecificationProperties: [EquipmentSpecificationPropertyRef]
  " An identification of the specific property. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  parent: EquipmentClassPropertyRef
  " Defines the type of the property. "
  propertyType: Isa95PropertyType
  recordsMeasurementOf: [PropertyMeasurementRef]
  triggersRules: [RuleRef]
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input EquipmentClassRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: EquipmentClassVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentActual: [EquipmentActualRef]
  equipmentRequirements: [EquipmentRequirementRef]
  equipmentSpecifications: [EquipmentSpecificationRef]
  equipmentVersions: [EquipmentVersionRef]
  " A unique identification of a specific equipment class, within the scope of the information exchanged. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  isIncludedIn: [EquipmentClassVersionRef]
  isMadeUpOf: [EquipmentClassRef]
  isPartOf: [EquipmentClassRef]
  " The label is last node in the fully qualified name. "
  label: String
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  recordEntries: [InformationObjectRef]
  specifiesTests: [TestSpecificationRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  " The icon for the menu in the libre admin UI menu. "
  uiSortIndex: Int
  versions: [EquipmentClassVersionRef]
}
""
input EquipmentClassVersionFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [EquipmentClassVersionFilter]
  description: StringExactFilter_StringFullTextFilter
  displayName: StringHashFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [EquipmentClassVersionHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: EquipmentClassVersionFilter
  or: [EquipmentClassVersionFilter]
  version: StringExactFilter_StringFullTextFilter
  versionStatus: VersionState_hash
}
""
input EquipmentClassVersionOrder {
  asc: EquipmentClassVersionOrderable
  desc: EquipmentClassVersionOrderable
  then: EquipmentClassVersionOrder
}
""
input EquipmentClassVersionPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Additional information about the equipment class. "
  description: String
  " The display name in the libre admin UI menu. "
  displayName: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  equipmentClass: EquipmentClassRef
  " An identification of the level in the role-based equipment hierarchy. "
  equipmentLevel: EquipmentElementLevel
  equipmentVersions: [EquipmentVersionRef]
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific equipment class version. "
  id: String
  " The icon for the menu in the libre admin UI menu. "
  image: String
  includesPropertiesOf: [EquipmentClassRef]
  isActiveVersionOf: EquipmentClassRef
  properties: [EquipmentClassPropertyRef]
  recordEntries: [InformationObjectRef]
  rules: [RuleRef]
  stateModels: [StateModelDefinitionRef]
  " Monochrome icon for use in UI "
  uiMonochromeIcon: String
  " Colour setting for the monochrome icon. "
  uiMonochromeIconColour: String
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input EquipmentClassVersionRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Additional information about the equipment class. "
  description: String
  " The display name in the libre admin UI menu. "
  displayName: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  equipmentClass: EquipmentClassRef
  " An identification of the level in the role-based equipment hierarchy. "
  equipmentLevel: EquipmentElementLevel
  equipmentVersions: [EquipmentVersionRef]
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific equipment class version. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The icon for the menu in the libre admin UI menu. "
  image: String
  includesPropertiesOf: [EquipmentClassRef]
  isActiveVersionOf: EquipmentClassRef
  properties: [EquipmentClassPropertyRef]
  recordEntries: [InformationObjectRef]
  rules: [RuleRef]
  stateModels: [StateModelDefinitionRef]
  " Monochrome icon for use in UI "
  uiMonochromeIcon: String
  " Colour setting for the monochrome icon. "
  uiMonochromeIconColour: String
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input EquipmentDataSourceFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [EquipmentDataSourceFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [EquipmentDataSourceHasFilter]
  iid: [ID!]
  not: EquipmentDataSourceFilter
  or: [EquipmentDataSourceFilter]
}
""
input EquipmentDataSourceOrder {
  asc: EquipmentDataSourceOrderable
  desc: EquipmentDataSourceOrderable
  then: EquipmentDataSourceOrder
}
""
input EquipmentDataSourcePatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  dataSource: DataSourceRef
  dataSourceVersion: DataSourceVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentVersion: EquipmentVersionRef
  " This JSONata transform resolves the data source topic id for the properties of the equipment"
  topicTemplate: String
}
""
input EquipmentDataSourceRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  dataSource: DataSourceRef
  dataSourceVersion: DataSourceVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentVersion: EquipmentVersionRef
  " Unique internal database identifier. "
  iid: ID
  " This JSONata transform resolves the data source topic id for the properties of the equipment"
  topicTemplate: String
}
""
input EquipmentFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [EquipmentFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [EquipmentHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: EquipmentFilter
  or: [EquipmentFilter]
}
""
input EquipmentNameAliasFilter {
  alias: StringFullTextFilter
  and: [EquipmentNameAliasFilter]
  has: [EquipmentNameAliasHasFilter]
  iid: [ID!]
  not: EquipmentNameAliasFilter
  or: [EquipmentNameAliasFilter]
  system: StringFullTextFilter
}
""
input EquipmentNameAliasOrder {
  asc: EquipmentNameAliasOrderable
  desc: EquipmentNameAliasOrderable
  then: EquipmentNameAliasOrder
}
""
input EquipmentNameAliasPatch {
  alias: String
  equipment: EquipmentRef
  system: String
}
""
input EquipmentNameAliasRef {
  alias: String
  equipment: EquipmentRef
  iid: ID
  system: String
}
""
input EquipmentOrder {
  asc: EquipmentOrderable
  desc: EquipmentOrderable
  then: EquipmentOrder
}
""
input EquipmentPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: EquipmentVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentActual: [EquipmentActualRef]
  equipmentAssetMapping: [EquipmentAssetMappingRef]
  equipmentRequirements: [EquipmentRequirementRef]
  equipmentSpecifications: [EquipmentSpecificationRef]
  events: [EventRef]
  " A unique identification of a specific piece of equipment, within the scope of the information exchanged. "
  id: String
  isMadeUpOf: [EquipmentRef]
  isPartOf: [EquipmentRef]
  " The label is last node in the fully qualified name. "
  label: String
  materialLots: [MaterialLotRef]
  materialSubLots: [MaterialSubLotRef]
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  physicalAsset: PhysicalAssetRef
  recordEntries: [InformationObjectRef]
  specifiesTests: [TestSpecificationRef]
  stateModelInstances: [StateModelInstanceRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  " The icon for the menu in the libre admin UI menu. "
  uiSortIndex: Int
  versions: [EquipmentVersionRef]
}
""
input EquipmentPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [EquipmentPropertyFilter]
  bindingType: PropertyBindingType_hash
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [EquipmentPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: EquipmentPropertyFilter
  or: [EquipmentPropertyFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input EquipmentPropertyOrder {
  asc: EquipmentPropertyOrderable
  desc: EquipmentPropertyOrderable
  then: EquipmentPropertyOrder
}
""
input EquipmentPropertyOverrideFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [EquipmentPropertyOverrideFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [EquipmentPropertyOverrideHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  ignore: Boolean
  iid: [ID!]
  not: EquipmentPropertyOverrideFilter
  or: [EquipmentPropertyOverrideFilter]
  propertyLabel: StringExactFilter_StringFullTextFilter
}
""
input EquipmentPropertyOverrideOrder {
  asc: EquipmentPropertyOverrideOrderable
  desc: EquipmentPropertyOverrideOrderable
  then: EquipmentPropertyOverrideOrder
}
""
input EquipmentPropertyOverridePatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " The data source reference for a bound property type. "
  address: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentVersions: EquipmentVersionRef
  " Used for calculated property types. "
  expression: String
  " An identification of the specific property. "
  id: String
  " Determines if this property is not relevent on the instance. "
  ignore: Boolean
  " The property to override the preexisting property with. "
  propertyLabel: String
  " Determines if changes to values should be stored over time. "
  storeHistory: Boolean
  " Used for static property types. "
  value: String
}
""
input EquipmentPropertyOverrideRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " The data source reference for a bound property type. "
  address: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentVersions: EquipmentVersionRef
  " Used for calculated property types. "
  expression: String
  " An identification of the specific property. "
  id: String
  " Determines if this property is not relevent on the instance. "
  ignore: Boolean
  " Unique internal database identifier. "
  iid: ID
  " The property to override the preexisting property with. "
  propertyLabel: String
  " Determines if changes to values should be stored over time. "
  storeHistory: Boolean
  " Used for static property types. "
  value: String
}
""
input EquipmentPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Defined how the MES application treats the property. "
  bindingType: PropertyBindingType
  children: [EquipmentPropertyRef]
  correspondsTo: EvaluatedPropertyRef
  " Additional information about the equipment property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentActualProperties: [EquipmentActualPropertyRef]
  equipmentClassProperty: EquipmentClassPropertyRef
  equipmentRequirementProperties: [EquipmentRequirementPropertyRef]
  equipmentSpecificationProperties: [EquipmentSpecificationPropertyRef]
  equipmentVersion: EquipmentVersionRef
  " An identification of the specific property. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  parent: EquipmentPropertyRef
  recordsMeasurementOf: [PropertyMeasurementRef]
  " The value, set of values, or range of the property. "
  value: String
  " The lower limit that would trigger an alert. "
  valueLowerControlLimit: Float
  " The lower limit that impacts the quality of the product. "
  valueLowerSpecLimit: Float
  " Target value. "
  valueSetPoint: String
  valueUnitOfMeasure: UnitOfMeasureRef
  " The upper limit that would trigger an alert. "
  valueUpperControlLimit: Float
  " The upper limit that impacts the quality of the product. "
  valueUpperSpecLimit: Float
}
""
input EquipmentPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Defined how the MES application treats the property. "
  bindingType: PropertyBindingType
  children: [EquipmentPropertyRef]
  correspondsTo: EvaluatedPropertyRef
  " Additional information about the equipment property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentActualProperties: [EquipmentActualPropertyRef]
  equipmentClassProperty: EquipmentClassPropertyRef
  equipmentRequirementProperties: [EquipmentRequirementPropertyRef]
  equipmentSpecificationProperties: [EquipmentSpecificationPropertyRef]
  equipmentVersion: EquipmentVersionRef
  " An identification of the specific property. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  parent: EquipmentPropertyRef
  recordsMeasurementOf: [PropertyMeasurementRef]
  " The value, set of values, or range of the property. "
  value: String
  " The lower limit that would trigger an alert. "
  valueLowerControlLimit: Float
  " The lower limit that impacts the quality of the product. "
  valueLowerSpecLimit: Float
  " Target value. "
  valueSetPoint: String
  valueUnitOfMeasure: UnitOfMeasureRef
  " The upper limit that would trigger an alert. "
  valueUpperControlLimit: Float
  " The upper limit that impacts the quality of the product. "
  valueUpperSpecLimit: Float
}
""
input EquipmentRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: EquipmentVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentActual: [EquipmentActualRef]
  equipmentAssetMapping: [EquipmentAssetMappingRef]
  equipmentRequirements: [EquipmentRequirementRef]
  equipmentSpecifications: [EquipmentSpecificationRef]
  events: [EventRef]
  " A unique identification of a specific piece of equipment, within the scope of the information exchanged. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  isMadeUpOf: [EquipmentRef]
  isPartOf: [EquipmentRef]
  " The label is last node in the fully qualified name. "
  label: String
  materialLots: [MaterialLotRef]
  materialSubLots: [MaterialSubLotRef]
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  physicalAsset: PhysicalAssetRef
  recordEntries: [InformationObjectRef]
  specifiesTests: [TestSpecificationRef]
  stateModelInstances: [StateModelInstanceRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  " The icon for the menu in the libre admin UI menu. "
  uiSortIndex: Int
  versions: [EquipmentVersionRef]
}
""
input EquipmentRequirementFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [EquipmentRequirementFilter]
  description: StringExactFilter_StringFullTextFilter
  has: [EquipmentRequirementHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: EquipmentRequirementFilter
  or: [EquipmentRequirementFilter]
  use: StringExactFilter_StringFullTextFilter
}
""
input EquipmentRequirementOrder {
  asc: EquipmentRequirementOrderable
  desc: EquipmentRequirementOrderable
  then: EquipmentRequirementOrder
}
""
input EquipmentRequirementPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [EquipmentRequirementRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the equipment requirement. "
  description: String
  equipment: EquipmentRef
  equipmentClass: EquipmentClassRef
  " A definition of the level of the associated element of the equipment model. "
  equipmentLevel: EquipmentElementLevel
  hierarchyScope: HierarchyScopeRef
  " Defines a unique identification of a specific equipment requirement. "
  id: String
  jobOrder: JobOrderRef
  operationalLocation: OperationalLocationRef
  parent: EquipmentRequirementRef
  properties: [EquipmentRequirementPropertyRef]
  " Specifies the amount of equipment resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  segmentRequirement: SegmentRequirementRef
  signatures: [SignatureRef]
  specifiesTests: [TestSpecificationRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  " Defines the expected use of the equipment class or equipment. "
  use: String
}
""
input EquipmentRequirementPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [EquipmentRequirementPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  has: [EquipmentRequirementPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: EquipmentRequirementPropertyFilter
  or: [EquipmentRequirementPropertyFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input EquipmentRequirementPropertyOrder {
  asc: EquipmentRequirementPropertyOrderable
  desc: EquipmentRequirementPropertyOrderable
  then: EquipmentRequirementPropertyOrder
}
""
input EquipmentRequirementPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [EquipmentRequirementPropertyRef]
  " Contains additional information and descriptions of the equipment requirement property definition. "
  description: String
  equipmentClassProperty: EquipmentClassPropertyRef
  equipmentProperty: EquipmentPropertyRef
  equipmentRequirement: EquipmentRequirementRef
  " An identification of the associated equipment property or equipment class property for a specific segment requirement. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  parent: EquipmentRequirementPropertyRef
  " Specifies the amount of equipment requirement property required for the parent equipment requirement. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  " The value, set of values, or range of the associated property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input EquipmentRequirementPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [EquipmentRequirementPropertyRef]
  " Contains additional information and descriptions of the equipment requirement property definition. "
  description: String
  equipmentClassProperty: EquipmentClassPropertyRef
  equipmentProperty: EquipmentPropertyRef
  equipmentRequirement: EquipmentRequirementRef
  " An identification of the associated equipment property or equipment class property for a specific segment requirement. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  parent: EquipmentRequirementPropertyRef
  " Specifies the amount of equipment requirement property required for the parent equipment requirement. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  " The value, set of values, or range of the associated property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input EquipmentRequirementRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [EquipmentRequirementRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the equipment requirement. "
  description: String
  equipment: EquipmentRef
  equipmentClass: EquipmentClassRef
  " A definition of the level of the associated element of the equipment model. "
  equipmentLevel: EquipmentElementLevel
  hierarchyScope: HierarchyScopeRef
  " Defines a unique identification of a specific equipment requirement. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  jobOrder: JobOrderRef
  operationalLocation: OperationalLocationRef
  parent: EquipmentRequirementRef
  properties: [EquipmentRequirementPropertyRef]
  " Specifies the amount of equipment resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  segmentRequirement: SegmentRequirementRef
  signatures: [SignatureRef]
  specifiesTests: [TestSpecificationRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  " Defines the expected use of the equipment class or equipment. "
  use: String
}
""
input EquipmentSpecificationFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [EquipmentSpecificationFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  equipmentUse: StringExactFilter_StringFullTextFilter
  has: [EquipmentSpecificationHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: EquipmentSpecificationFilter
  or: [EquipmentSpecificationFilter]
}
""
input EquipmentSpecificationOrder {
  asc: EquipmentSpecificationOrderable
  desc: EquipmentSpecificationOrderable
  then: EquipmentSpecificationOrder
}
""
input EquipmentSpecificationPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [EquipmentSpecificationRef]
  " Contains additional information of the equipment specification. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipment: EquipmentRef
  equipmentClass: EquipmentClassRef
  " Defines the expected use of the equipment class or equipment in the context of the operations segment. "
  equipmentUse: String
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific equipment segment specification. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  operationalLocation: OperationalLocationRef
  operationsSegment: OperationsSegmentRef
  parent: EquipmentSpecificationRef
  processSegmentVersion: ProcessSegmentVersionRef
  properties: [EquipmentSpecificationPropertyRef]
  " Specifies the amount of equipment resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  specifiesTests: [TestSpecificationRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
}
""
input EquipmentSpecificationPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [EquipmentSpecificationPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [EquipmentSpecificationPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: EquipmentSpecificationPropertyFilter
  or: [EquipmentSpecificationPropertyFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input EquipmentSpecificationPropertyOrder {
  asc: EquipmentSpecificationPropertyOrderable
  desc: EquipmentSpecificationPropertyOrderable
  then: EquipmentSpecificationPropertyOrder
}
""
input EquipmentSpecificationPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [EquipmentSpecificationPropertyRef]
  " Contains additional information and descriptions of the equipment specification property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentClassProperty: EquipmentClassPropertyRef
  equipmentProperty: EquipmentPropertyRef
  equipmentSpecification: EquipmentSpecificationRef
  " An identification of a property of the associated equipment property or equipment class property for a specific segment. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  parent: EquipmentSpecificationPropertyRef
  " Specifies the amount of equipment resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input EquipmentSpecificationPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [EquipmentSpecificationPropertyRef]
  " Contains additional information and descriptions of the equipment specification property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentClassProperty: EquipmentClassPropertyRef
  equipmentProperty: EquipmentPropertyRef
  equipmentSpecification: EquipmentSpecificationRef
  " An identification of a property of the associated equipment property or equipment class property for a specific segment. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  parent: EquipmentSpecificationPropertyRef
  " Specifies the amount of equipment resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input EquipmentSpecificationRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [EquipmentSpecificationRef]
  " Contains additional information of the equipment specification. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipment: EquipmentRef
  equipmentClass: EquipmentClassRef
  " Defines the expected use of the equipment class or equipment in the context of the operations segment. "
  equipmentUse: String
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific equipment segment specification. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  operationalLocation: OperationalLocationRef
  operationsSegment: OperationsSegmentRef
  parent: EquipmentSpecificationRef
  processSegmentVersion: ProcessSegmentVersionRef
  properties: [EquipmentSpecificationPropertyRef]
  " Specifies the amount of equipment resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  specifiesTests: [TestSpecificationRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
}
""
input EquipmentVersionFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [EquipmentVersionFilter]
  description: StringExactFilter_StringFullTextFilter
  displayName: StringHashFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [EquipmentVersionHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: EquipmentVersionFilter
  or: [EquipmentVersionFilter]
  version: StringExactFilter_StringFullTextFilter
  versionStatus: VersionState_hash
}
""
input EquipmentVersionOrder {
  asc: EquipmentVersionOrderable
  desc: EquipmentVersionOrderable
  then: EquipmentVersionOrder
}
""
input EquipmentVersionPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  dataSources: [EquipmentDataSourceRef]
  " Additional information about the equipment. "
  description: String
  " The display name in the libre admin UI menu. "
  displayName: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  equipment: EquipmentRef
  equipmentActual: [EquipmentActualRef]
  equipmentClassVersions: [EquipmentClassVersionRef]
  equipmentClasses: [EquipmentClassRef]
  " An identification of the level in the role-based equipment hierarchy. "
  equipmentLevel: EquipmentElementLevel
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific piece of equipment, within the scope of the information exchanged. "
  id: String
  isActiveVersionOf: EquipmentRef
  operationalLocation: OperationalLocationRef
  properties: [EquipmentPropertyRef]
  propertyNameAliases: [PropertyNameAliasRef]
  propertyOverrides: [EquipmentPropertyOverrideRef]
  recordEntries: [InformationObjectRef]
  spatialDefinition: SpatialDefinitionRef
  stateModels: [StateModelDefinitionRef]
  " The time zone this equipment is located in. "
  timeZoneName: String
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
  workCalendar: WorkCalendarRef
}
""
input EquipmentVersionRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  dataSources: [EquipmentDataSourceRef]
  " Additional information about the equipment. "
  description: String
  " The display name in the libre admin UI menu. "
  displayName: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  equipment: EquipmentRef
  equipmentActual: [EquipmentActualRef]
  equipmentClassVersions: [EquipmentClassVersionRef]
  equipmentClasses: [EquipmentClassRef]
  " An identification of the level in the role-based equipment hierarchy. "
  equipmentLevel: EquipmentElementLevel
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific piece of equipment, within the scope of the information exchanged. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  isActiveVersionOf: EquipmentRef
  operationalLocation: OperationalLocationRef
  properties: [EquipmentPropertyRef]
  propertyNameAliases: [PropertyNameAliasRef]
  propertyOverrides: [EquipmentPropertyOverrideRef]
  recordEntries: [InformationObjectRef]
  spatialDefinition: SpatialDefinitionRef
  stateModels: [StateModelDefinitionRef]
  " The time zone this equipment is located in. "
  timeZoneName: String
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
  workCalendar: WorkCalendarRef
}
""
input EvaluatedPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [EvaluatedPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [EvaluatedPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: EvaluatedPropertyFilter
  or: [EvaluatedPropertyFilter]
}
""
input EvaluatedPropertyOrder {
  asc: EvaluatedPropertyOrderable
  desc: EvaluatedPropertyOrderable
  then: EvaluatedPropertyOrder
}
""
input EvaluatedPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  criteria: [TestSpecificationCriteriaRef]
  " Description of the test specification criteria. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentClassProperty: [EquipmentClassPropertyRef]
  equipmentProperty: [EquipmentPropertyRef]
  " Identification of the evaluated property. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  materialClassProperty: [MaterialClassPropertyRef]
  materialDefinitionProperty: [MaterialDefinitionPropertyRef]
  materialLotProperty: [MaterialLotPropertyRef]
  personProperty: [PersonPropertyRef]
  personnelClassProperty: [PersonnelClassPropertyRef]
  physicalAssetClassProperty: [PhysicalAssetClassPropertyRef]
  physicalAssetProperty: [PhysicalAssetPropertyRef]
  testSpecification: TestSpecificationRef
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
}
""
input EvaluatedPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  criteria: [TestSpecificationCriteriaRef]
  " Description of the test specification criteria. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentClassProperty: [EquipmentClassPropertyRef]
  equipmentProperty: [EquipmentPropertyRef]
  " Identification of the evaluated property. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  materialClassProperty: [MaterialClassPropertyRef]
  materialDefinitionProperty: [MaterialDefinitionPropertyRef]
  materialLotProperty: [MaterialLotPropertyRef]
  personProperty: [PersonPropertyRef]
  personnelClassProperty: [PersonnelClassPropertyRef]
  physicalAssetClassProperty: [PhysicalAssetClassPropertyRef]
  physicalAssetProperty: [PhysicalAssetPropertyRef]
  testSpecification: TestSpecificationRef
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
}
""
input EventAssociationFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [EventAssociationFilter]
  description: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [EventAssociationHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: EventAssociationFilter
  or: [EventAssociationFilter]
  version: StringExactFilter_StringFullTextFilter
}
""
input EventAssociationOrder {
  asc: EventAssociationOrderable
  desc: EventAssociationOrderable
  then: EventAssociationOrder
}
""
input EventAssociationPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " A description of the event type. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  from: EventRef
  " A unique identification of a specific event type. "
  id: String
  to: EventRef
  " An identification of the version of the event association. "
  version: String
}
""
input EventAssociationRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " A description of the event type. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  from: EventRef
  " A unique identification of a specific event type. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  to: EventRef
  " An identification of the version of the event association. "
  version: String
}
""
input EventFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [EventFilter]
  attribute: StringHashFilter
  category: StringHashFilter
  computerID: StringHashFilter
  effectiveDateTime: DateTimeFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [EventHasFilter]
  iid: [ID!]
  messageText: StringHashFilter
  not: EventFilter
  or: [EventFilter]
  personID: StringHashFilter
  proceduralElementReference: StringHashFilter
  recordedDateTime: DateTimeFilter
}
""
input EventOrder {
  asc: EventOrderable
  desc: EventOrderable
  then: EventOrder
}
""
input EventPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  alarmEvents: [AlarmEventRef]
  " Attribute "
  attribute: String
  " The use category of the event. "
  category: String
  comments: [CommentRef]
  " Unique identification of the computer where the event originated. "
  computerID: String
  " The date and time an Event is effective from "
  effectiveDateTime: DateTime
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipment: EquipmentRef
  eventAssociationsFrom: [EventAssociationRef]
  eventAssociationsTo: [EventAssociationRef]
  eventProperties: [EventPropertyRef]
  eventType: EventTypeRef
  jobResponse: JobResponseRef
  jobResponseData: JobResponseDataRef
  materialLot: MaterialLotRef
  materialSubLot: MaterialSubLotRef
  " Text describing the event. "
  messageText: String
  person: PersonRef
  " Identification of the person associated with the event. "
  personID: String
  physicalAsset: PhysicalAssetRef
  " The value prior to the change documented by the event. "
  previousValue: String
  """
  Reference to a procedural element. This maps to an element of the procedural hierarchy, such as a 
  phase in a control recipe, or an operation in a control recipe.
  """
  proceduralElementReference: String
  recordEntries: [InformationObjectRef]
  " The date and time an Event was last triggered "
  recordedDateTime: DateTime
  signatures: [SignatureRef]
  " Value associated with the event. "
  value: String
  workResponse: WorkResponseRef
}
""
input EventPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [EventPropertyFilter]
  description: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [EventPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: EventPropertyFilter
  or: [EventPropertyFilter]
  value: StringExactFilter_StringFullTextFilter
  version: StringExactFilter_StringFullTextFilter
}
""
input EventPropertyOrder {
  asc: EventPropertyOrderable
  desc: EventPropertyOrderable
  then: EventPropertyOrder
}
""
input EventPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [EventPropertyRef]
  " A description of the event type. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  event: EventRef
  " A unique identification of a specific event type. "
  id: String
  " Human friendly alternative identifier "
  label: String
  parent: EventPropertyRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
  " An identification of the version of the event property. "
  version: String
}
""
input EventPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [EventPropertyRef]
  " A description of the event type. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  event: EventRef
  " A unique identification of a specific event type. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " Human friendly alternative identifier "
  label: String
  parent: EventPropertyRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
  " An identification of the version of the event property. "
  version: String
}
""
input EventRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  alarmEvents: [AlarmEventRef]
  " Attribute "
  attribute: String
  " The use category of the event. "
  category: String
  comments: [CommentRef]
  " Unique identification of the computer where the event originated. "
  computerID: String
  " The date and time an Event is effective from "
  effectiveDateTime: DateTime
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipment: EquipmentRef
  eventAssociationsFrom: [EventAssociationRef]
  eventAssociationsTo: [EventAssociationRef]
  eventProperties: [EventPropertyRef]
  eventType: EventTypeRef
  " Unique internal database identifier. "
  iid: ID
  jobResponse: JobResponseRef
  jobResponseData: JobResponseDataRef
  materialLot: MaterialLotRef
  materialSubLot: MaterialSubLotRef
  " Text describing the event. "
  messageText: String
  person: PersonRef
  " Identification of the person associated with the event. "
  personID: String
  physicalAsset: PhysicalAssetRef
  " The value prior to the change documented by the event. "
  previousValue: String
  """
  Reference to a procedural element. This maps to an element of the procedural hierarchy, such as a 
  phase in a control recipe, or an operation in a control recipe.
  """
  proceduralElementReference: String
  recordEntries: [InformationObjectRef]
  " The date and time an Event was last triggered "
  recordedDateTime: DateTime
  signatures: [SignatureRef]
  " Value associated with the event. "
  value: String
  workResponse: WorkResponseRef
}
""
input EventSubtypeFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [EventSubtypeFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [EventSubtypeHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: EventSubtypeFilter
  or: [EventSubtypeFilter]
  version: StringExactFilter_StringFullTextFilter
}
""
input EventSubtypeOrder {
  asc: EventSubtypeOrderable
  desc: EventSubtypeOrderable
  then: EventSubtypeOrder
}
""
input EventSubtypePatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [EventSubtypeRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  eventTypes: [EventTypeRef!]
  " A unique identification of a specific event type. "
  id: String
  " Human friendly alternative identifier "
  label: String
  parent: EventSubtypeRef
  " An identification of the version of the event subtype. "
  version: String
}
""
input EventSubtypeRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [EventSubtypeRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  eventTypes: [EventTypeRef!]
  " A unique identification of a specific event type. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " Human friendly alternative identifier "
  label: String
  parent: EventSubtypeRef
  " An identification of the version of the event subtype. "
  version: String
}
""
input EventTypeFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [EventTypeFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [EventTypeHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: EventTypeFilter
  or: [EventTypeFilter]
  version: StringExactFilter_StringFullTextFilter
}
""
input EventTypeOrder {
  asc: EventTypeOrderable
  desc: EventTypeOrderable
  then: EventTypeOrder
}
""
input EventTypePatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [EventTypeRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  eventSubtypes: [EventSubtypeRef]
  events: [EventRef]
  " A unique identification of a specific event type. "
  id: String
  " Human friendly alternative identifier "
  label: String
  parent: EventTypeRef
  " An identification of the version of the event type. "
  version: String
}
""
input EventTypeRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [EventTypeRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  eventSubtypes: [EventSubtypeRef]
  events: [EventRef]
  " A unique identification of a specific event type. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " Human friendly alternative identifier "
  label: String
  parent: EventTypeRef
  " An identification of the version of the event type. "
  version: String
}
""
input FloatFilter {
  between: FloatRange
  eq: Float
  ge: Float
  gt: Float
  in: [Float]
  le: Float
  lt: Float
}
""
input FloatRange {
  max: Float!
  min: Float!
}
""
input FormFilter {
  and: [FormFilter]
  has: [FormHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  name: StringExactFilter_StringFullTextFilter
  not: FormFilter
  or: [FormFilter]
}
""
input FormOrder {
  asc: FormOrderable
  desc: FormOrderable
  then: FormOrder
}
""
input FormPatch {
  id: String
  jsonSchema: String
  name: String
  uiSchema: String
  workflowSpecificationNodes: [WorkflowSpecificationNodeRef]
}
""
input FormRef {
  id: String
  " Unique internal database identifier. "
  iid: ID
  jsonSchema: String
  name: String
  uiSchema: String
  workflowSpecificationNodes: [WorkflowSpecificationNodeRef]
}
""
input GenerateMutationParams {
  add: Boolean
  delete: Boolean
  update: Boolean
}
""
input GenerateQueryParams {
  aggregate: Boolean
  get: Boolean
  password: Boolean
  query: Boolean
}
""
input HierarchyScopeFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [HierarchyScopeFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [HierarchyScopeHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: HierarchyScopeFilter
  or: [HierarchyScopeFilter]
}
""
input HierarchyScopeOrder {
  asc: HierarchyScopeOrderable
  desc: HierarchyScopeOrderable
  then: HierarchyScopeOrder
}
""
input HierarchyScopePatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  children: [HierarchyScopeRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " Identification of the equipment level if the equipment element is defined. "
  equipmentLevel: EquipmentElementLevel
  equipmentVersions: [EquipmentVersionRef]
  " An identification of the specific property. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  materialClassVersions: [MaterialClassVersionRef]
  materialDefinitionVersions: [MaterialDefinitionVersionRef]
  materialLots: [MaterialLotRef]
  materialSubLots: [MaterialSubLotRef]
  parent: HierarchyScopeRef
  recordEntries: [InformationObjectRef]
}
""
input HierarchyScopeRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  children: [HierarchyScopeRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " Identification of the equipment level if the equipment element is defined. "
  equipmentLevel: EquipmentElementLevel
  equipmentVersions: [EquipmentVersionRef]
  " An identification of the specific property. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  materialClassVersions: [MaterialClassVersionRef]
  materialDefinitionVersions: [MaterialDefinitionVersionRef]
  materialLots: [MaterialLotRef]
  materialSubLots: [MaterialSubLotRef]
  parent: HierarchyScopeRef
  recordEntries: [InformationObjectRef]
}
""
input InformationObjectFilter {
  and: [InformationObjectFilter]
  has: [InformationObjectHasFilter]
  iid: [ID!]
  not: InformationObjectFilter
  or: [InformationObjectFilter]
}
""
input InformationObjectOrder {
  asc: InformationObjectOrderable
  desc: InformationObjectOrderable
  then: InformationObjectOrder
}
""
input InformationObjectPatch {
  Other: String
  comment: CommentRef
  dataSource: DataSourceRef
  dataSourceVersion: DataSourceVersionRef
  equipment: EquipmentRef
  equipmentClass: EquipmentClassRef
  equipmentClassVersion: EquipmentClassVersionRef
  equipmentVersion: EquipmentVersionRef
  event: EventRef
  hierarchyScope: HierarchyScopeRef
  jobList: JobListRef
  jobOrder: JobOrderRef
  jobResponse: JobResponseRef
  jobResponseList: JobResponseListRef
  materialClass: MaterialClassRef
  materialClassVersion: MaterialClassVersionRef
  materialDefinition: MaterialDefinitionRef
  materialDefinitionVersion: MaterialDefinitionVersionRef
  materialLot: MaterialLotRef
  materialSubLot: MaterialSubLotRef
  operationalLocation: OperationalLocationRef
  operationalLocationClass: OperationalLocationClassRef
  operationalLocationClassVersion: OperationalLocationClassVersionRef
  operationalLocationVersion: OperationalLocationVersionRef
  operationsDefinition: OperationsDefinitionRef
  operationsDefinitionVersion: OperationsDefinitionVersionRef
  operationsEvent: OperationsEventRef
  operationsEventClass: OperationsEventClassRef
  operationsEventClassVersion: OperationsEventClassVersionRef
  operationsEventDefinition: OperationsEventDefinitionRef
  operationsEventDefinitionVersion: OperationsEventDefinitionVersionRef
  operationsEventRecordEntry: OperationsEventRecordEntryRef
  operationsPerformance: OperationsPerformanceRef
  operationsRequest: OperationsRequestRef
  operationsResponse: OperationsResponseRef
  operationsSchedule: OperationsScheduleRef
  operationsSegment: OperationsSegmentRef
  person: PersonRef
  personVersion: PersonVersionRef
  personnelClass: PersonnelClassRef
  personnelClassVersion: PersonnelClassVersionRef
  physicalAsset: PhysicalAssetRef
  physicalAssetClass: PhysicalAssetClassRef
  physicalAssetClassVersion: PhysicalAssetClassVersionRef
  physicalAssetVersion: PhysicalAssetVersionRef
  processSegment: ProcessSegmentRef
  processSegmentVersion: ProcessSegmentVersionRef
  propertyMeasurement: PropertyMeasurementRef
  spatialDefinition: SpatialDefinitionRef
  testResult: TestResultRef
  testSpecification: TestSpecificationRef
  unitOfMeasure: UnitOfMeasureRef
  workCalendar: WorkCalendarRef
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
  workPerformance: WorkPerformanceRef
  workRequest: WorkRequestRef
  workResponse: WorkResponseRef
  workSchedule: WorkScheduleRef
  workflowSpecification: WorkflowSpecificationRef
  workflowSpecificationConnectionType: WorkflowSpecificationConnectionTypeRef
  workflowSpecificationNodeType: WorkflowSpecificationNodeTypeRef
  workflowSpecificationVersion: WorkflowSpecificationVersionRef
}
""
input InformationObjectRef {
  Other: String
  comment: CommentRef
  dataSource: DataSourceRef
  dataSourceVersion: DataSourceVersionRef
  equipment: EquipmentRef
  equipmentClass: EquipmentClassRef
  equipmentClassVersion: EquipmentClassVersionRef
  equipmentVersion: EquipmentVersionRef
  event: EventRef
  hierarchyScope: HierarchyScopeRef
  " Unique internal database identifier. "
  iid: ID
  jobList: JobListRef
  jobOrder: JobOrderRef
  jobResponse: JobResponseRef
  jobResponseList: JobResponseListRef
  materialClass: MaterialClassRef
  materialClassVersion: MaterialClassVersionRef
  materialDefinition: MaterialDefinitionRef
  materialDefinitionVersion: MaterialDefinitionVersionRef
  materialLot: MaterialLotRef
  materialSubLot: MaterialSubLotRef
  operationalLocation: OperationalLocationRef
  operationalLocationClass: OperationalLocationClassRef
  operationalLocationClassVersion: OperationalLocationClassVersionRef
  operationalLocationVersion: OperationalLocationVersionRef
  operationsDefinition: OperationsDefinitionRef
  operationsDefinitionVersion: OperationsDefinitionVersionRef
  operationsEvent: OperationsEventRef
  operationsEventClass: OperationsEventClassRef
  operationsEventClassVersion: OperationsEventClassVersionRef
  operationsEventDefinition: OperationsEventDefinitionRef
  operationsEventDefinitionVersion: OperationsEventDefinitionVersionRef
  operationsEventRecordEntry: OperationsEventRecordEntryRef
  operationsPerformance: OperationsPerformanceRef
  operationsRequest: OperationsRequestRef
  operationsResponse: OperationsResponseRef
  operationsSchedule: OperationsScheduleRef
  operationsSegment: OperationsSegmentRef
  person: PersonRef
  personVersion: PersonVersionRef
  personnelClass: PersonnelClassRef
  personnelClassVersion: PersonnelClassVersionRef
  physicalAsset: PhysicalAssetRef
  physicalAssetClass: PhysicalAssetClassRef
  physicalAssetClassVersion: PhysicalAssetClassVersionRef
  physicalAssetVersion: PhysicalAssetVersionRef
  processSegment: ProcessSegmentRef
  processSegmentVersion: ProcessSegmentVersionRef
  propertyMeasurement: PropertyMeasurementRef
  spatialDefinition: SpatialDefinitionRef
  testResult: TestResultRef
  testSpecification: TestSpecificationRef
  unitOfMeasure: UnitOfMeasureRef
  workCalendar: WorkCalendarRef
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
  workPerformance: WorkPerformanceRef
  workRequest: WorkRequestRef
  workResponse: WorkResponseRef
  workSchedule: WorkScheduleRef
  workflowSpecification: WorkflowSpecificationRef
  workflowSpecificationConnectionType: WorkflowSpecificationConnectionTypeRef
  workflowSpecificationNodeType: WorkflowSpecificationNodeTypeRef
  workflowSpecificationVersion: WorkflowSpecificationVersionRef
}
""
input Int64Filter {
  between: Int64Range
  eq: Int64
  ge: Int64
  gt: Int64
  in: [Int64]
  le: Int64
  lt: Int64
}
""
input Int64Range {
  max: Int64!
  min: Int64!
}
""
input IntFilter {
  between: IntRange
  eq: Int
  ge: Int
  gt: Int
  in: [Int]
  le: Int
  lt: Int
}
""
input IntRange {
  max: Int!
  min: Int!
}
""
input IntersectsFilter {
  multiPolygon: MultiPolygonRef
  polygon: PolygonRef
}
""
input JobListFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [JobListFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [JobListHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: JobListFilter
  or: [JobListFilter]
  plannedEndDateTime: DateTimeFilter
  plannedStartDateTime: DateTimeFilter
  publishedDate: DateTimeFilter
  workType: WorkType_hash
}
""
input JobListOrder {
  asc: JobListOrderable
  desc: JobListOrderable
  then: JobListOrder
}
""
input JobListPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the job list. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the job list and could include version and revision identification. "
  id: String
  jobOrders: [JobOrderRef!]
  " The ending time for the associated job list. "
  plannedEndDateTime: DateTime
  " The starting time for the associated job list. "
  plannedStartDateTime: DateTime
  " The date and time on which the job list was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  " Describes the category of work. "
  workType: WorkType
}
""
input JobListRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the job list. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the job list and could include version and revision identification. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  jobOrders: [JobOrderRef!]
  " The ending time for the associated job list. "
  plannedEndDateTime: DateTime
  " The starting time for the associated job list. "
  plannedStartDateTime: DateTime
  " The date and time on which the job list was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  " Describes the category of work. "
  workType: WorkType
}
""
input JobOrderFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [JobOrderFilter]
  command: StringExactFilter_StringFullTextFilter
  commandRule: StringExactFilter_StringFullTextFilter
  description: StringExactFilter_StringFullTextFilter
  dispatchStatus: DispatchStatus_hash
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [JobOrderHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: JobOrderFilter
  or: [JobOrderFilter]
  publishedDate: DateTimeFilter
  scheduledEndDateTime: DateTimeFilter
  scheduledStartDateTime: DateTimeFilter
  workType: WorkType_hash
}
""
input JobOrderOrder {
  asc: JobOrderOrderable
  desc: JobOrderOrderable
  then: JobOrderOrder
}
""
input JobOrderParameterFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [JobOrderParameterFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [JobOrderParameterHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter
  not: JobOrderParameterFilter
  or: [JobOrderParameterFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input JobOrderParameterOrder {
  asc: JobOrderParameterOrderable
  desc: JobOrderParameterOrderable
  then: JobOrderParameterOrder
}
""
input JobOrderParameterPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [JobOrderParameterRef]
  " Contains additional information and descriptions of the job order parameter. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " The identification of the job order parameter. "
  id: String
  jobOrder: JobOrderRef
  " Display name. "
  label: String
  parameterSpecification: ParameterSpecificationRef
  parent: JobOrderParameterRef
  processSegmentParameter: ProcessSegmentParameterRef
  " The value, set of values, or range of the value to be used for this parameter. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input JobOrderParameterRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [JobOrderParameterRef]
  " Contains additional information and descriptions of the job order parameter. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " The identification of the job order parameter. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  jobOrder: JobOrderRef
  " Display name. "
  label: String
  parameterSpecification: ParameterSpecificationRef
  parent: JobOrderParameterRef
  processSegmentParameter: ProcessSegmentParameterRef
  " The value, set of values, or range of the value to be used for this parameter. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input JobOrderPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Identifies the action the execution management activity is to perform on the job order. "
  command: String
  " Instruction to execution management activities specifying conditions to execute the command. "
  commandRule: String
  comments: [CommentRef]
  " Contains additional information and descriptions of the job order. "
  description: String
  " Identifies the status of the entry from the perspective of the dispatch activity. "
  dispatchStatus: DispatchStatus
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentRequirements: [EquipmentRequirementRef]
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the job order. "
  id: String
  jobList: JobListRef
  jobResponses: [JobResponseRef]
  " Display name. "
  label: String
  materialRequirements: [MaterialRequirementRef]
  next: [JobOrderRef]
  parameters: [JobOrderParameterRef]
  personnelRequirements: [PersonnelRequirementRef]
  physicalAssetRequirements: [PhysicalAssetRequirementRef]
  previous: [JobOrderRef]
  " The priority of the job order. "
  priority: Int
  " The date and time on which the resource relationship network was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  " When work is to be completed. "
  scheduledEndDateTime: DateTime
  " When work is to be started. "
  scheduledStartDateTime: DateTime
  segmentRequirement: SegmentRequirementRef
  signatures: [SignatureRef]
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
  workRequest: WorkRequestRef
  " Describes the category of work. "
  workType: WorkType
  workflowSpecification: WorkflowSpecificationRef
  workflowSpecificationNode: WorkflowSpecificationNodeRef
  workflowSpecificationVersion: WorkflowSpecificationVersionRef
}
""
input JobOrderRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Identifies the action the execution management activity is to perform on the job order. "
  command: String
  " Instruction to execution management activities specifying conditions to execute the command. "
  commandRule: String
  comments: [CommentRef]
  " Contains additional information and descriptions of the job order. "
  description: String
  " Identifies the status of the entry from the perspective of the dispatch activity. "
  dispatchStatus: DispatchStatus
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentRequirements: [EquipmentRequirementRef]
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the job order. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  jobList: JobListRef
  jobResponses: [JobResponseRef]
  " Display name. "
  label: String
  materialRequirements: [MaterialRequirementRef]
  next: [JobOrderRef]
  parameters: [JobOrderParameterRef]
  personnelRequirements: [PersonnelRequirementRef]
  physicalAssetRequirements: [PhysicalAssetRequirementRef]
  previous: [JobOrderRef]
  " The priority of the job order. "
  priority: Int
  " The date and time on which the resource relationship network was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  " When work is to be completed. "
  scheduledEndDateTime: DateTime
  " When work is to be started. "
  scheduledStartDateTime: DateTime
  segmentRequirement: SegmentRequirementRef
  signatures: [SignatureRef]
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
  workRequest: WorkRequestRef
  " Describes the category of work. "
  workType: WorkType
  workflowSpecification: WorkflowSpecificationRef
  workflowSpecificationNode: WorkflowSpecificationNodeRef
  workflowSpecificationVersion: WorkflowSpecificationVersionRef
}
""
input JobResponseDataFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [JobResponseDataFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [JobResponseDataHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: JobResponseDataFilter
  or: [JobResponseDataFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input JobResponseDataOrder {
  asc: JobResponseDataOrderable
  desc: JobResponseDataOrderable
  then: JobResponseDataOrder
}
""
input JobResponseDataPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [JobResponseDataRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the job response data. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  events: [EventRef]
  hierarchyScope: HierarchyScopeRef
  " The identification of the job response data. "
  id: String
  jobResponse: JobResponseRef
  " Display name. "
  label: String
  parent: JobResponseDataRef
  signatures: [SignatureRef]
  " The value or set of values of the job response data. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input JobResponseDataRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [JobResponseDataRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the job response data. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  events: [EventRef]
  hierarchyScope: HierarchyScopeRef
  " The identification of the job response data. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  jobResponse: JobResponseRef
  " Display name. "
  label: String
  parent: JobResponseDataRef
  signatures: [SignatureRef]
  " The value or set of values of the job response data. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input JobResponseFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [JobResponseFilter]
  dataJSON: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  endDateTime: DateTimeFilter
  has: [JobResponseHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: JobResponseFilter
  or: [JobResponseFilter]
  productionDate: StringExactFilter_StringFullTextFilter
  publishedDate: DateTimeFilter
  startDateTime: DateTimeFilter
  workType: WorkType_hash
}
""
input JobResponseListFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [JobResponseListFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  endDateTime: DateTimeFilter
  has: [JobResponseListHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: JobResponseListFilter
  or: [JobResponseListFilter]
  startDateTime: DateTimeFilter
  version: StringExactFilter_StringFullTextFilter
  workType: WorkType_hash
}
""
input JobResponseListOrder {
  asc: JobResponseListOrderable
  desc: JobResponseListOrderable
  then: JobResponseListOrder
}
""
input JobResponseListPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the job response list. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The ending time of this job response list. "
  endDateTime: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the job response list. "
  id: String
  jobResponses: [JobResponseRef!]
  recordEntries: [InformationObjectRef]
  " The starting time of this job response list. "
  startDateTime: DateTime
  " An identification of the version of the job response list. "
  version: String
  " Describes the category of work. "
  workType: WorkType
}
""
input JobResponseListRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the job response list. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The ending time of this job response list. "
  endDateTime: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the job response list. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  jobResponses: [JobResponseRef!]
  recordEntries: [InformationObjectRef]
  " The starting time of this job response list. "
  startDateTime: DateTime
  " An identification of the version of the job response list. "
  version: String
  " Describes the category of work. "
  workType: WorkType
}
""
input JobResponseOrder {
  asc: JobResponseOrderable
  desc: JobResponseOrderable
  then: JobResponseOrder
}
""
input JobResponsePatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [JobResponseRef]
  comments: [CommentRef]
  data: [JobResponseDataRef]
  " The variable context for process instance. May be moved to data field. "
  dataJSON: String
  " Contains additional information and descriptions of the job response. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The actual ending time of information in the job response. "
  endDateTime: DateTime
  equipmentActual: [EquipmentActualRef]
  events: [EventRef]
  hierarchyScope: HierarchyScopeRef
  " An identification within the associated job response. "
  id: String
  jobOrder: JobOrderRef
  jobResponseList: JobResponseListRef
  " Indicates the state of job work response. "
  jobState: JobState
  materialActual: [MaterialActualRef]
  parent: JobResponseRef
  personnelActual: [PersonnelActualRef]
  physicalAssetActual: [PhysicalAssetActualRef]
  " The production day this job was finished. "
  productionDate: String
  " The date and time on which the resource relationship network was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  segmentResponse: SegmentResponseRef
  signatures: [SignatureRef]
  " The actual starting time of information in the job response. "
  startDateTime: DateTime
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
  workResponse: WorkResponseRef
  " Describes the category of work. "
  workType: WorkType
  workflowSpecification: WorkflowSpecificationRef
  workflowSpecificationNode: WorkflowSpecificationNodeRef
  workflowSpecificationVersion: WorkflowSpecificationVersionRef
}
""
input JobResponseRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [JobResponseRef]
  comments: [CommentRef]
  data: [JobResponseDataRef]
  " The variable context for process instance. May be moved to data field. "
  dataJSON: String
  " Contains additional information and descriptions of the job response. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The actual ending time of information in the job response. "
  endDateTime: DateTime
  equipmentActual: [EquipmentActualRef]
  events: [EventRef]
  hierarchyScope: HierarchyScopeRef
  " An identification within the associated job response. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  jobOrder: JobOrderRef
  jobResponseList: JobResponseListRef
  " Indicates the state of job work response. "
  jobState: JobState
  materialActual: [MaterialActualRef]
  parent: JobResponseRef
  personnelActual: [PersonnelActualRef]
  physicalAssetActual: [PhysicalAssetActualRef]
  " The production day this job was finished. "
  productionDate: String
  " The date and time on which the resource relationship network was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  segmentResponse: SegmentResponseRef
  signatures: [SignatureRef]
  " The actual starting time of information in the job response. "
  startDateTime: DateTime
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
  workResponse: WorkResponseRef
  " Describes the category of work. "
  workType: WorkType
  workflowSpecification: WorkflowSpecificationRef
  workflowSpecificationNode: WorkflowSpecificationNodeRef
  workflowSpecificationVersion: WorkflowSpecificationVersionRef
}
""
input JobState_hash {
  eq: JobState
  in: [JobState]
}
""
input LibreServiceFilter {
  and: [LibreServiceFilter]
  has: [LibreServiceHasFilter]
  id: [ID!]
  name: StringHashFilter
  not: LibreServiceFilter
  or: [LibreServiceFilter]
}
""
input LibreServiceOrder {
  asc: LibreServiceOrderable
  desc: LibreServiceOrderable
  then: LibreServiceOrder
}
""
input LibreServicePatch {
  heartbeat: DateTime
  name: String
}
""
input LibreServiceRef {
  heartbeat: DateTime
  id: ID
  name: String
}
""
input MaterialActualFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [MaterialActualFilter]
  assemblyRelationship: AssemblyRelationship_exact
  assemblyType: AssemblyType_exact
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [MaterialActualHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  materialUse: MaterialUse_hash
  not: MaterialActualFilter
  or: [MaterialActualFilter]
}
""
input MaterialActualOrder {
  asc: MaterialActualOrderable
  desc: MaterialActualOrderable
  then: MaterialActualOrder
}
""
input MaterialActualPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  children: [MaterialActualRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the material actual. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " Define a unique identification of a specific material actual. "
  id: String
  jobResponse: JobResponseRef
  materialClass: MaterialClassRef
  materialDefinition: MaterialDefinitionRef
  materialDefinitionVersion: MaterialDefinitionVersionRef
  materialLot: [MaterialLotRef]
  materialSubLot: [MaterialSubLotRef]
  """
   Defines the expected use of the material class, material definition, material lot, or material sublot 
  in the context of the segment response. 
  """
  materialUse: MaterialUse
  parent: MaterialActualRef
  properties: [MaterialActualPropertyRef]
  " Specifies the amount of material produced by the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  segmentResponse: SegmentResponseRef
  signatures: [SignatureRef]
  spatialDefinition: SpatialDefinitionRef
  storageLocation: OperationalLocationRef
  testResults: [TestResultRef]
}
""
input MaterialActualPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [MaterialActualPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [MaterialActualPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: MaterialActualPropertyFilter
  or: [MaterialActualPropertyFilter]
  use: StringExactFilter_StringFullTextFilter
  value: StringExactFilter_StringFullTextFilter
}
""
input MaterialActualPropertyOrder {
  asc: MaterialActualPropertyOrderable
  desc: MaterialActualPropertyOrderable
  then: MaterialActualPropertyOrder
}
""
input MaterialActualPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [MaterialActualPropertyRef]
  " Contains additional information and descriptions of the material produced actual property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " An identification of the associated material property or material class property for a specific segment response. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  materialActual: MaterialActualRef
  materialClassProperty: MaterialClassPropertyRef
  materialDefinitionProperty: MaterialDefinitionPropertyRef
  materialLotProperty: MaterialLotPropertyRef
  operationalLocation: OperationalLocationRef
  parent: MaterialActualPropertyRef
  " Specifies the amount of material produced by the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  use: String
  " The value or set of values for the associated property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input MaterialActualPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [MaterialActualPropertyRef]
  " Contains additional information and descriptions of the material produced actual property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " An identification of the associated material property or material class property for a specific segment response. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  materialActual: MaterialActualRef
  materialClassProperty: MaterialClassPropertyRef
  materialDefinitionProperty: MaterialDefinitionPropertyRef
  materialLotProperty: MaterialLotPropertyRef
  operationalLocation: OperationalLocationRef
  parent: MaterialActualPropertyRef
  " Specifies the amount of material produced by the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  use: String
  " The value or set of values for the associated property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input MaterialActualRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  children: [MaterialActualRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the material actual. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " Define a unique identification of a specific material actual. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  jobResponse: JobResponseRef
  materialClass: MaterialClassRef
  materialDefinition: MaterialDefinitionRef
  materialDefinitionVersion: MaterialDefinitionVersionRef
  materialLot: [MaterialLotRef]
  materialSubLot: [MaterialSubLotRef]
  """
   Defines the expected use of the material class, material definition, material lot, or material sublot 
  in the context of the segment response. 
  """
  materialUse: MaterialUse
  parent: MaterialActualRef
  properties: [MaterialActualPropertyRef]
  " Specifies the amount of material produced by the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  segmentResponse: SegmentResponseRef
  signatures: [SignatureRef]
  spatialDefinition: SpatialDefinitionRef
  storageLocation: OperationalLocationRef
  testResults: [TestResultRef]
}
""
input MaterialAlternateFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [MaterialAlternateFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [MaterialAlternateHasFilter]
  iid: [ID!]
  not: MaterialAlternateFilter
  or: [MaterialAlternateFilter]
}
""
input MaterialAlternateOrder {
  asc: MaterialAlternateOrderable
  desc: MaterialAlternateOrderable
  then: MaterialAlternateOrder
}
""
input MaterialAlternatePatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  alternateMaterial: MaterialDefinitionRef
  " Moment after which this Material alternative will be available as an alternative "
  effectiveDateTime: DateTime
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  materialDefinitionVersion: MaterialDefinitionVersionRef
  " Priority order is used to prioritise which Material Alternative is used (if more than one is available)"
  priorityOrder: Int
}
""
input MaterialAlternateRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  alternateMaterial: MaterialDefinitionRef
  " Moment after which this Material alternative will be available as an alternative "
  effectiveDateTime: DateTime
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " Unique internal database identifier. "
  iid: ID
  materialDefinitionVersion: MaterialDefinitionVersionRef
  " Priority order is used to prioritise which Material Alternative is used (if more than one is available)"
  priorityOrder: Int
}
""
input MaterialClassFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [MaterialClassFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [MaterialClassHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: MaterialClassFilter
  or: [MaterialClassFilter]
}
""
input MaterialClassOrder {
  asc: MaterialClassOrderable
  desc: MaterialClassOrderable
  then: MaterialClassOrder
}
""
input MaterialClassPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: MaterialClassVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " A unique identification of a specific material class, within the scope of the information exchanged. "
  id: String
  isAssembledFrom: [MaterialClassRef]
  isComponentOf: MaterialClassRef
  isIncludedIn: [MaterialClassVersionRef]
  " A user-friendly identifier for this entity "
  label: String
  materialActual: [MaterialActualRef]
  materialDefinitionVersions: [MaterialDefinitionVersionRef]
  materialRequirements: [MaterialRequirementRef]
  materialSpecifications: [MaterialSpecificationRef]
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  recordEntries: [InformationObjectRef]
  specifiesTests: [TestSpecificationRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  versions: [MaterialClassVersionRef]
}
""
input MaterialClassPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [MaterialClassPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [MaterialClassPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: MaterialClassPropertyFilter
  or: [MaterialClassPropertyFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input MaterialClassPropertyOrder {
  asc: MaterialClassPropertyOrderable
  desc: MaterialClassPropertyOrderable
  then: MaterialClassPropertyOrder
}
""
input MaterialClassPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [MaterialClassPropertyRef]
  correspondsTo: EvaluatedPropertyRef
  " Additional information about the material class property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of a specific material class property. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  materialActualProperties: [MaterialActualPropertyRef]
  materialClassVersion: MaterialClassVersionRef
  materialDefinitionProperty: MaterialDefinitionPropertyRef
  materialRequirementProperties: [MaterialRequirementPropertyRef]
  materialSpecificationProperties: [MaterialSpecificationPropertyRef]
  parent: MaterialClassPropertyRef
  " Defines the type of the property. "
  propertyType: Isa95PropertyType
  recordsMeasurementOf: [PropertyMeasurementRef]
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input MaterialClassPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [MaterialClassPropertyRef]
  correspondsTo: EvaluatedPropertyRef
  " Additional information about the material class property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of a specific material class property. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  materialActualProperties: [MaterialActualPropertyRef]
  materialClassVersion: MaterialClassVersionRef
  materialDefinitionProperty: MaterialDefinitionPropertyRef
  materialRequirementProperties: [MaterialRequirementPropertyRef]
  materialSpecificationProperties: [MaterialSpecificationPropertyRef]
  parent: MaterialClassPropertyRef
  " Defines the type of the property. "
  propertyType: Isa95PropertyType
  recordsMeasurementOf: [PropertyMeasurementRef]
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input MaterialClassRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: MaterialClassVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " A unique identification of a specific material class, within the scope of the information exchanged. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  isAssembledFrom: [MaterialClassRef]
  isComponentOf: MaterialClassRef
  isIncludedIn: [MaterialClassVersionRef]
  " A user-friendly identifier for this entity "
  label: String
  materialActual: [MaterialActualRef]
  materialDefinitionVersions: [MaterialDefinitionVersionRef]
  materialRequirements: [MaterialRequirementRef]
  materialSpecifications: [MaterialSpecificationRef]
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  recordEntries: [InformationObjectRef]
  specifiesTests: [TestSpecificationRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  versions: [MaterialClassVersionRef]
}
""
input MaterialClassVersionFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [MaterialClassVersionFilter]
  assemblyRelationship: AssemblyRelationship_exact
  assemblyType: AssemblyType_exact
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [MaterialClassVersionHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: MaterialClassVersionFilter
  or: [MaterialClassVersionFilter]
  version: StringExactFilter_StringFullTextFilter
  versionStatus: VersionState_hash
}
""
input MaterialClassVersionOrder {
  asc: MaterialClassVersionOrderable
  desc: MaterialClassVersionOrderable
  then: MaterialClassVersionOrder
}
""
input MaterialClassVersionPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  " Additional information about the material class. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific material class, within the scope of the information exchanged. "
  id: String
  includesPropertiesOf: [MaterialClassRef]
  isActiveVersionOf: MaterialClassRef
  materialClass: MaterialClassRef
  properties: [MaterialClassPropertyRef]
  recordEntries: [InformationObjectRef]
  stateModels: [StateModelDefinitionRef]
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input MaterialClassVersionRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  " Additional information about the material class. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific material class, within the scope of the information exchanged. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  includesPropertiesOf: [MaterialClassRef]
  isActiveVersionOf: MaterialClassRef
  materialClass: MaterialClassRef
  properties: [MaterialClassPropertyRef]
  recordEntries: [InformationObjectRef]
  stateModels: [StateModelDefinitionRef]
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input MaterialDefinitionFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [MaterialDefinitionFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [MaterialDefinitionHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: MaterialDefinitionFilter
  or: [MaterialDefinitionFilter]
}
""
input MaterialDefinitionOrder {
  asc: MaterialDefinitionOrderable
  desc: MaterialDefinitionOrderable
  then: MaterialDefinitionOrder
}
""
input MaterialDefinitionPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: MaterialDefinitionVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " A unique identification of a specific material definition, within the scope of the information exchanged. "
  id: String
  isAlternateFor: [MaterialAlternateRef]
  " A user-friendly identifier for this entity "
  label: String
  materialActual: [MaterialActualRef]
  materialLots: [MaterialLotRef]
  materialRequirements: [MaterialRequirementRef]
  materialSpecifications: [MaterialSpecificationRef]
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  recordEntries: [InformationObjectRef]
  specifiesTests: [TestSpecificationRef]
  stateModelInstances: [StateModelInstanceRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  versions: [MaterialDefinitionVersionRef]
}
""
input MaterialDefinitionPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [MaterialDefinitionPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [MaterialDefinitionPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: MaterialDefinitionPropertyFilter
  or: [MaterialDefinitionPropertyFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input MaterialDefinitionPropertyOrder {
  asc: MaterialDefinitionPropertyOrderable
  desc: MaterialDefinitionPropertyOrderable
  then: MaterialDefinitionPropertyOrder
}
""
input MaterialDefinitionPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [MaterialDefinitionPropertyRef]
  correspondsTo: EvaluatedPropertyRef
  " Additional information about the material definition property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of the specific material definition property. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  materialActualProperties: [MaterialActualPropertyRef]
  materialClassProperty: MaterialClassPropertyRef
  materialDefinitionVersion: MaterialDefinitionVersionRef
  materialLotProperty: MaterialLotPropertyRef
  materialRequirementProperties: [MaterialRequirementPropertyRef]
  materialSpecificationProperties: [MaterialSpecificationPropertyRef]
  parent: MaterialDefinitionPropertyRef
  recordsMeasurementOf: [PropertyMeasurementRef]
  " The value, set of values, or range of the property. "
  value: String
  " The lower limit that would trigger an alert. "
  valueLowerControlLimit: Float
  " The lower limit that impacts the quality of the product. "
  valueLowerSpecLimit: Float
  " Target value. "
  valueSetPoint: String
  valueUnitOfMeasure: UnitOfMeasureRef
  " The upper limit that would trigger an alert. "
  valueUpperControlLimit: Float
  " The upper limit that impacts the quality of the product. "
  valueUpperSpecLimit: Float
}
""
input MaterialDefinitionPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [MaterialDefinitionPropertyRef]
  correspondsTo: EvaluatedPropertyRef
  " Additional information about the material definition property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of the specific material definition property. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  materialActualProperties: [MaterialActualPropertyRef]
  materialClassProperty: MaterialClassPropertyRef
  materialDefinitionVersion: MaterialDefinitionVersionRef
  materialLotProperty: MaterialLotPropertyRef
  materialRequirementProperties: [MaterialRequirementPropertyRef]
  materialSpecificationProperties: [MaterialSpecificationPropertyRef]
  parent: MaterialDefinitionPropertyRef
  recordsMeasurementOf: [PropertyMeasurementRef]
  " The value, set of values, or range of the property. "
  value: String
  " The lower limit that would trigger an alert. "
  valueLowerControlLimit: Float
  " The lower limit that impacts the quality of the product. "
  valueLowerSpecLimit: Float
  " Target value. "
  valueSetPoint: String
  valueUnitOfMeasure: UnitOfMeasureRef
  " The upper limit that would trigger an alert. "
  valueUpperControlLimit: Float
  " The upper limit that impacts the quality of the product. "
  valueUpperSpecLimit: Float
}
""
input MaterialDefinitionRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: MaterialDefinitionVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " A unique identification of a specific material definition, within the scope of the information exchanged. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  isAlternateFor: [MaterialAlternateRef]
  " A user-friendly identifier for this entity "
  label: String
  materialActual: [MaterialActualRef]
  materialLots: [MaterialLotRef]
  materialRequirements: [MaterialRequirementRef]
  materialSpecifications: [MaterialSpecificationRef]
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  recordEntries: [InformationObjectRef]
  specifiesTests: [TestSpecificationRef]
  stateModelInstances: [StateModelInstanceRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  versions: [MaterialDefinitionVersionRef]
}
""
input MaterialDefinitionVersionFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [MaterialDefinitionVersionFilter]
  assemblyRelationship: AssemblyRelationship_exact
  assemblyType: AssemblyType_exact
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [MaterialDefinitionVersionHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: MaterialDefinitionVersionFilter
  or: [MaterialDefinitionVersionFilter]
  version: StringExactFilter_StringFullTextFilter
  versionStatus: VersionState_hash
}
""
input MaterialDefinitionVersionOrder {
  asc: MaterialDefinitionVersionOrderable
  desc: MaterialDefinitionVersionOrderable
  then: MaterialDefinitionVersionOrder
}
""
input MaterialDefinitionVersionPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  alternates: [MaterialAlternateRef]
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  baseUnitOfMeasure: UnitOfMeasureRef
  " Additional information about the material definition. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific material definition, within the scope of the information exchanged. "
  id: String
  isActiveVersionOf: MaterialDefinitionRef
  isAssembledFrom: [MaterialDefinitionVersionRef]
  isComponentOf: MaterialDefinitionVersionRef
  materialActual: [MaterialActualRef]
  materialClasses: [MaterialClassRef]
  materialDefinition: MaterialDefinitionRef
  materialLots: [MaterialLotRef]
  properties: [MaterialDefinitionPropertyRef]
  recordEntries: [InformationObjectRef]
  spatialDefinition: SpatialDefinitionRef
  stateModels: [StateModelDefinitionRef]
  uomConversions: [UnitOfMeasureConversionRef]
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input MaterialDefinitionVersionRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  alternates: [MaterialAlternateRef]
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  baseUnitOfMeasure: UnitOfMeasureRef
  " Additional information about the material definition. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific material definition, within the scope of the information exchanged. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  isActiveVersionOf: MaterialDefinitionRef
  isAssembledFrom: [MaterialDefinitionVersionRef]
  isComponentOf: MaterialDefinitionVersionRef
  materialActual: [MaterialActualRef]
  materialClasses: [MaterialClassRef]
  materialDefinition: MaterialDefinitionRef
  materialLots: [MaterialLotRef]
  properties: [MaterialDefinitionPropertyRef]
  recordEntries: [InformationObjectRef]
  spatialDefinition: SpatialDefinitionRef
  stateModels: [StateModelDefinitionRef]
  uomConversions: [UnitOfMeasureConversionRef]
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input MaterialLotFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [MaterialLotFilter]
  assemblyRelationship: AssemblyRelationship_exact
  assemblyType: AssemblyType_exact
  description: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  disposition: Disposition_exact
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [MaterialLotHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: MaterialLotFilter
  or: [MaterialLotFilter]
  status: StringExactFilter_StringFullTextFilter
  storageLocationDescription: StringExactFilter_StringFullTextFilter
}
""
input MaterialLotOrder {
  asc: MaterialLotOrderable
  desc: MaterialLotOrderable
  then: MaterialLotOrder
}
""
input MaterialLotPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  childSubLot: [MaterialSubLotRef]
  " Additional information about the material lot. "
  description: String
  " Planning and logistics disposition of a material lot or assembly of material lots. "
  disposition: Disposition
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  events: [EventRef]
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific material lot, within the scope of the information exchanged. "
  id: String
  isAssembledFromMaterialLot: [MaterialLotRef]
  isAssembledFromMaterialSubLot: [MaterialSubLotRef]
  isComponentOfMaterialLot: MaterialLotRef
  isComponentOfMaterialSubLot: MaterialSubLotRef
  materialActual: [MaterialActualRef]
  materialDefinition: MaterialDefinitionRef
  materialDefinitionVersion: MaterialDefinitionVersionRef
  materialRequirements: [MaterialRequirementRef]
  materialSpecifications: [MaterialSpecificationRef]
  properties: [MaterialLotPropertyRef]
  " The quantity of the material lot. "
  quantity: Float
  quantityUnitOfMeasure: UnitOfMeasureRef
  recordEntries: [InformationObjectRef]
  spatialDefinition: SpatialDefinitionRef
  specifiesTests: [TestSpecificationRef]
  stateModelInstances: [StateModelInstanceRef]
  " Status of the material lot in manufacturing operations. Values defined by implementation. "
  status: String
  " Identifies the storage location description of the material lot. "
  storageLocationDescription: String
  storageLocationEquipment: EquipmentRef
  storageLocationOperationalLocation: OperationalLocationRef
  storageLocationPhysicalAsset: PhysicalAssetRef
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
}
""
input MaterialLotPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [MaterialLotPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [MaterialLotPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: MaterialLotPropertyFilter
  or: [MaterialLotPropertyFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input MaterialLotPropertyOrder {
  asc: MaterialLotPropertyOrderable
  desc: MaterialLotPropertyOrderable
  then: MaterialLotPropertyOrder
}
""
input MaterialLotPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [MaterialLotPropertyRef]
  correspondsTo: EvaluatedPropertyRef
  " Additional information about the material lot property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of the specific material lot property. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  materialActualProperties: [MaterialActualPropertyRef]
  materialDefinitionProperty: MaterialDefinitionPropertyRef
  materialLot: MaterialLotRef
  materialRequirementProperties: [MaterialRequirementPropertyRef]
  materialSpecificationProperties: [MaterialSpecificationPropertyRef]
  materialSubLot: MaterialSubLotRef
  parent: MaterialLotPropertyRef
  recordsMeasurementOf: [PropertyMeasurementRef]
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input MaterialLotPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [MaterialLotPropertyRef]
  correspondsTo: EvaluatedPropertyRef
  " Additional information about the material lot property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of the specific material lot property. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  materialActualProperties: [MaterialActualPropertyRef]
  materialDefinitionProperty: MaterialDefinitionPropertyRef
  materialLot: MaterialLotRef
  materialRequirementProperties: [MaterialRequirementPropertyRef]
  materialSpecificationProperties: [MaterialSpecificationPropertyRef]
  materialSubLot: MaterialSubLotRef
  parent: MaterialLotPropertyRef
  recordsMeasurementOf: [PropertyMeasurementRef]
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input MaterialLotRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  childSubLot: [MaterialSubLotRef]
  " Additional information about the material lot. "
  description: String
  " Planning and logistics disposition of a material lot or assembly of material lots. "
  disposition: Disposition
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  events: [EventRef]
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific material lot, within the scope of the information exchanged. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  isAssembledFromMaterialLot: [MaterialLotRef]
  isAssembledFromMaterialSubLot: [MaterialSubLotRef]
  isComponentOfMaterialLot: MaterialLotRef
  isComponentOfMaterialSubLot: MaterialSubLotRef
  materialActual: [MaterialActualRef]
  materialDefinition: MaterialDefinitionRef
  materialDefinitionVersion: MaterialDefinitionVersionRef
  materialRequirements: [MaterialRequirementRef]
  materialSpecifications: [MaterialSpecificationRef]
  properties: [MaterialLotPropertyRef]
  " The quantity of the material lot. "
  quantity: Float
  quantityUnitOfMeasure: UnitOfMeasureRef
  recordEntries: [InformationObjectRef]
  spatialDefinition: SpatialDefinitionRef
  specifiesTests: [TestSpecificationRef]
  stateModelInstances: [StateModelInstanceRef]
  " Status of the material lot in manufacturing operations. Values defined by implementation. "
  status: String
  " Identifies the storage location description of the material lot. "
  storageLocationDescription: String
  storageLocationEquipment: EquipmentRef
  storageLocationOperationalLocation: OperationalLocationRef
  storageLocationPhysicalAsset: PhysicalAssetRef
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
}
""
input MaterialRequirementFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [MaterialRequirementFilter]
  assemblyRelationship: AssemblyRelationship_exact
  assemblyType: AssemblyType_exact
  description: StringExactFilter_StringFullTextFilter
  has: [MaterialRequirementHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  materialUse: MaterialUse_hash
  not: MaterialRequirementFilter
  or: [MaterialRequirementFilter]
}
""
input MaterialRequirementOrder {
  asc: MaterialRequirementOrderable
  desc: MaterialRequirementOrderable
  then: MaterialRequirementOrder
}
""
input MaterialRequirementPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  children: [MaterialRequirementRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the material requirement definition. "
  description: String
  hierarchyScope: HierarchyScopeRef
  " Defines a unique identification of a specific material requirement, "
  id: String
  jobOrder: JobOrderRef
  material: MaterialDefinitionRef
  materialClass: MaterialClassRef
  materialLots: [MaterialLotRef]
  materialSubLots: [MaterialSubLotRef]
  """
   Defines the expected use of the material class, material definition, material lot, or material sublot 
    in the context of the segment requirement. 
  """
  materialUse: MaterialUse
  parent: MaterialRequirementRef
  properties: [MaterialRequirementPropertyRef]
  " Specifies the amount of material to be used. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  segmentRequirement: SegmentRequirementRef
  signatures: [SignatureRef]
  specifiesTests: [TestSpecificationRef]
  storageLocation: OperationalLocationRef
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
}
""
input MaterialRequirementPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [MaterialRequirementPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  has: [MaterialRequirementPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: MaterialRequirementPropertyFilter
  or: [MaterialRequirementPropertyFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input MaterialRequirementPropertyOrder {
  asc: MaterialRequirementPropertyOrderable
  desc: MaterialRequirementPropertyOrderable
  then: MaterialRequirementPropertyOrder
}
""
input MaterialRequirementPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [MaterialRequirementPropertyRef]
  " Contains additional information and descriptions of the material produced requirement property definition. "
  description: String
  """
   An identification of a property of the associated material property or material class property for a 
    specific segment requirement. 
  """
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  materialClassProperty: MaterialClassPropertyRef
  materialDefinitionProperty: MaterialDefinitionPropertyRef
  materialLotProperty: MaterialLotPropertyRef
  materialRequirement: MaterialRequirementRef
  parent: MaterialRequirementPropertyRef
  " Specifies the amount of material to be produced. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  " The value, set of values, or range of the associated property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input MaterialRequirementPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [MaterialRequirementPropertyRef]
  " Contains additional information and descriptions of the material produced requirement property definition. "
  description: String
  """
   An identification of a property of the associated material property or material class property for a 
    specific segment requirement. 
  """
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  materialClassProperty: MaterialClassPropertyRef
  materialDefinitionProperty: MaterialDefinitionPropertyRef
  materialLotProperty: MaterialLotPropertyRef
  materialRequirement: MaterialRequirementRef
  parent: MaterialRequirementPropertyRef
  " Specifies the amount of material to be produced. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  " The value, set of values, or range of the associated property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input MaterialRequirementRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  children: [MaterialRequirementRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the material requirement definition. "
  description: String
  hierarchyScope: HierarchyScopeRef
  " Defines a unique identification of a specific material requirement, "
  id: String
  " Unique internal database identifier. "
  iid: ID
  jobOrder: JobOrderRef
  material: MaterialDefinitionRef
  materialClass: MaterialClassRef
  materialLots: [MaterialLotRef]
  materialSubLots: [MaterialSubLotRef]
  """
   Defines the expected use of the material class, material definition, material lot, or material sublot 
    in the context of the segment requirement. 
  """
  materialUse: MaterialUse
  parent: MaterialRequirementRef
  properties: [MaterialRequirementPropertyRef]
  " Specifies the amount of material to be used. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  segmentRequirement: SegmentRequirementRef
  signatures: [SignatureRef]
  specifiesTests: [TestSpecificationRef]
  storageLocation: OperationalLocationRef
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
}
""
input MaterialSpecificationFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [MaterialSpecificationFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [MaterialSpecificationHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  materialUse: MaterialUse_hash
  not: MaterialSpecificationFilter
  or: [MaterialSpecificationFilter]
}
""
input MaterialSpecificationOrder {
  asc: MaterialSpecificationOrderable
  desc: MaterialSpecificationOrderable
  then: MaterialSpecificationOrder
}
""
input MaterialSpecificationPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  children: [MaterialSpecificationRef]
  " Contains additional information and descriptions of the material specification. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific material specification. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  material: MaterialDefinitionRef
  materialClass: MaterialClassRef
  materialLot: MaterialLotRef
  materialSubLot: MaterialSubLotRef
  " Defines the expected use of the material class or material in the context of the operations segment. "
  materialUse: MaterialUse
  materialsBill: OperationsMaterialBillRef
  operationsSegment: OperationsSegmentRef
  parent: MaterialSpecificationRef
  processSegmentVersion: ProcessSegmentVersionRef
  properties: [MaterialSpecificationPropertyRef]
  " Specifies the amount of material resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  specifiesTests: [TestSpecificationRef]
  storageLocation: OperationalLocationRef
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
}
""
input MaterialSpecificationPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [MaterialSpecificationPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [MaterialSpecificationPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: MaterialSpecificationPropertyFilter
  or: [MaterialSpecificationPropertyFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input MaterialSpecificationPropertyOrder {
  asc: MaterialSpecificationPropertyOrderable
  desc: MaterialSpecificationPropertyOrderable
  then: MaterialSpecificationPropertyOrder
}
""
input MaterialSpecificationPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [MaterialSpecificationPropertyRef]
  " Contains additional information and descriptions of the material specification property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of the associated material property for a specific segment. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  materialClassProperty: MaterialClassPropertyRef
  materialDefinitionProperty: MaterialDefinitionPropertyRef
  materialLotProperty: MaterialLotPropertyRef
  materialSpecification: MaterialSpecificationRef
  parent: MaterialSpecificationPropertyRef
  " Specifies the amount of material resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  " The value, set of values, or range for the associated property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input MaterialSpecificationPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [MaterialSpecificationPropertyRef]
  " Contains additional information and descriptions of the material specification property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of the associated material property for a specific segment. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  materialClassProperty: MaterialClassPropertyRef
  materialDefinitionProperty: MaterialDefinitionPropertyRef
  materialLotProperty: MaterialLotPropertyRef
  materialSpecification: MaterialSpecificationRef
  parent: MaterialSpecificationPropertyRef
  " Specifies the amount of material resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  " The value, set of values, or range for the associated property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input MaterialSpecificationRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  children: [MaterialSpecificationRef]
  " Contains additional information and descriptions of the material specification. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific material specification. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  material: MaterialDefinitionRef
  materialClass: MaterialClassRef
  materialLot: MaterialLotRef
  materialSubLot: MaterialSubLotRef
  " Defines the expected use of the material class or material in the context of the operations segment. "
  materialUse: MaterialUse
  materialsBill: OperationsMaterialBillRef
  operationsSegment: OperationsSegmentRef
  parent: MaterialSpecificationRef
  processSegmentVersion: ProcessSegmentVersionRef
  properties: [MaterialSpecificationPropertyRef]
  " Specifies the amount of material resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  specifiesTests: [TestSpecificationRef]
  storageLocation: OperationalLocationRef
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
}
""
input MaterialSubLotFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [MaterialSubLotFilter]
  assemblyRelationship: AssemblyRelationship_exact
  assemblyType: AssemblyType_exact
  description: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  disposition: Disposition_exact
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [MaterialSubLotHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: MaterialSubLotFilter
  or: [MaterialSubLotFilter]
  status: StringExactFilter_StringFullTextFilter
  storageLocationDescription: StringExactFilter_StringFullTextFilter
}
""
input MaterialSubLotOrder {
  asc: MaterialSubLotOrderable
  desc: MaterialSubLotOrderable
  then: MaterialSubLotOrder
}
""
input MaterialSubLotPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  children: [MaterialSubLotRef]
  " Additional information about the material sublot property. "
  description: String
  " Planning and logistics disposition of a material sublot or assembly of material lots. "
  disposition: Disposition
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  events: [EventRef]
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific material sublot, within the scope of the information exchanged. "
  id: String
  isAssembledFromMaterialLot: [MaterialLotRef]
  isAssembledFromMaterialSubLot: [MaterialSubLotRef]
  isComponentOfMaterialLot: MaterialLotRef
  isComponentOfMaterialSubLot: MaterialSubLotRef
  materialActual: [MaterialActualRef]
  materialRequirements: [MaterialRequirementRef]
  materialSpecifications: [MaterialSpecificationRef]
  parent: MaterialSubLotRef
  parentMaterialLot: MaterialLotRef
  properties: [MaterialLotPropertyRef]
  " The quantity of the material sublot. "
  quantity: Float
  quantityUnitOfMeasure: UnitOfMeasureRef
  recordEntries: [InformationObjectRef]
  spatialDefinition: SpatialDefinitionRef
  specifiesTests: [TestSpecificationRef]
  stateModelInstances: [StateModelInstanceRef]
  " Status of the material sublot in manufacturing operations. Values defined by implementation. "
  status: String
  " Identifies the storage location description of the material sublot. "
  storageLocationDescription: String
  storageLocationEquipment: EquipmentRef
  storageLocationOperationalLocation: OperationalLocationRef
  storageLocationPhysicalAsset: PhysicalAssetRef
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
}
""
input MaterialSubLotRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Defines the type of the relationships. "
  assemblyRelationship: AssemblyRelationship
  " Defines the type of the assembly. "
  assemblyType: AssemblyType
  children: [MaterialSubLotRef]
  " Additional information about the material sublot property. "
  description: String
  " Planning and logistics disposition of a material sublot or assembly of material lots. "
  disposition: Disposition
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  events: [EventRef]
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific material sublot, within the scope of the information exchanged. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  isAssembledFromMaterialLot: [MaterialLotRef]
  isAssembledFromMaterialSubLot: [MaterialSubLotRef]
  isComponentOfMaterialLot: MaterialLotRef
  isComponentOfMaterialSubLot: MaterialSubLotRef
  materialActual: [MaterialActualRef]
  materialRequirements: [MaterialRequirementRef]
  materialSpecifications: [MaterialSpecificationRef]
  parent: MaterialSubLotRef
  parentMaterialLot: MaterialLotRef
  properties: [MaterialLotPropertyRef]
  " The quantity of the material sublot. "
  quantity: Float
  quantityUnitOfMeasure: UnitOfMeasureRef
  recordEntries: [InformationObjectRef]
  spatialDefinition: SpatialDefinitionRef
  specifiesTests: [TestSpecificationRef]
  stateModelInstances: [StateModelInstanceRef]
  " Status of the material sublot in manufacturing operations. Values defined by implementation. "
  status: String
  " Identifies the storage location description of the material sublot. "
  storageLocationDescription: String
  storageLocationEquipment: EquipmentRef
  storageLocationOperationalLocation: OperationalLocationRef
  storageLocationPhysicalAsset: PhysicalAssetRef
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
}
""
input MaterialUse_hash {
  eq: MaterialUse
  in: [MaterialUse]
}
""
input MenuFilter {
  and: [MenuFilter]
  has: [MenuHasFilter]
  iid: [ID!]
  label: StringHashFilter
  not: MenuFilter
  or: [MenuFilter]
}
""
input MenuOrder {
  asc: MenuOrderable
  desc: MenuOrderable
  then: MenuOrder
}
""
input MenuPatch {
  acl: [AccessPermissionRef]
  children: [MenuRef!]
  icon: String
  isPage: Boolean
  isSection: Boolean
  label: String
  menuPage: String
  orderNumber: Int
  parent: MenuRef
}
""
input MenuRef {
  acl: [AccessPermissionRef]
  children: [MenuRef!]
  icon: String
  iid: ID
  isPage: Boolean
  isSection: Boolean
  label: String
  menuPage: String
  orderNumber: Int
  parent: MenuRef
}
""
input MessageKey_hash {
  eq: MessageKey
  in: [MessageKey]
}
""
input MultiPolygonRef {
  polygons: [PolygonRef!]!
}
""
input MultiplicityFilter {
  and: [MultiplicityFilter]
  has: [MultiplicityHasFilter]
  not: MultiplicityFilter
  or: [MultiplicityFilter]
}
""
input MultiplicityOrder {
  asc: MultiplicityOrderable
  desc: MultiplicityOrderable
  then: MultiplicityOrder
}
""
input MultiplicityPatch {
  Max: Int
  Min: Int
}
""
input MultiplicityRef {
  Max: Int
  Min: Int
}
""
input NearFilter {
  coordinate: PointRef!
  distance: Float!
}
""
input OperationalLocationClassFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationalLocationClassFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [OperationalLocationClassHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: OperationalLocationClassFilter
  or: [OperationalLocationClassFilter]
}
""
input OperationalLocationClassOrder {
  asc: OperationalLocationClassOrderable
  desc: OperationalLocationClassOrderable
  then: OperationalLocationClassOrder
}
""
input OperationalLocationClassPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: OperationalLocationClassVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " A unique identification of a specific operational location class. "
  id: String
  includedIn: [OperationalLocationClassVersionRef]
  isMadeUpOf: OperationalLocationClassRef
  isPartOf: [OperationalLocationClassRef]
  " The label is last node in the fully qualified name. "
  label: String
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  operationalLocationVersions: [OperationalLocationVersionRef]
  recordEntries: [InformationObjectRef]
  versions: [OperationalLocationClassVersionRef]
}
""
input OperationalLocationClassPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationalLocationClassPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [OperationalLocationClassPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: OperationalLocationClassPropertyFilter
  or: [OperationalLocationClassPropertyFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input OperationalLocationClassPropertyOrder {
  asc: OperationalLocationClassPropertyOrderable
  desc: OperationalLocationClassPropertyOrderable
  then: OperationalLocationClassPropertyOrder
}
""
input OperationalLocationClassPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Additional information about the operational location class property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " A unique identification of a specific operational location class property within the operational location class. "
  id: String
  isMadeUpOf: OperationalLocationClassPropertyRef
  isPartOf: [OperationalLocationClassPropertyRef]
  " The label is last node in the fully qualified name. "
  label: String
  mapsTo: [OperationalLocationPropertyRef]
  operationalLocationClassVersion: OperationalLocationClassVersionRef
  " Defines the type of the property. "
  propertyType: Isa95PropertyType
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input OperationalLocationClassPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Additional information about the operational location class property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " A unique identification of a specific operational location class property within the operational location class. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  isMadeUpOf: OperationalLocationClassPropertyRef
  isPartOf: [OperationalLocationClassPropertyRef]
  " The label is last node in the fully qualified name. "
  label: String
  mapsTo: [OperationalLocationPropertyRef]
  operationalLocationClassVersion: OperationalLocationClassVersionRef
  " Defines the type of the property. "
  propertyType: Isa95PropertyType
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input OperationalLocationClassRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: OperationalLocationClassVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " A unique identification of a specific operational location class. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  includedIn: [OperationalLocationClassVersionRef]
  isMadeUpOf: OperationalLocationClassRef
  isPartOf: [OperationalLocationClassRef]
  " The label is last node in the fully qualified name. "
  label: String
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  operationalLocationVersions: [OperationalLocationVersionRef]
  recordEntries: [InformationObjectRef]
  versions: [OperationalLocationClassVersionRef]
}
""
input OperationalLocationClassVersionFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationalLocationClassVersionFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [OperationalLocationClassVersionHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  name: StringFullTextFilter
  not: OperationalLocationClassVersionFilter
  or: [OperationalLocationClassVersionFilter]
  version: StringExactFilter_StringFullTextFilter
  versionStatus: VersionState_hash
}
""
input OperationalLocationClassVersionOrder {
  asc: OperationalLocationClassVersionOrderable
  desc: OperationalLocationClassVersionOrderable
  then: OperationalLocationClassVersionOrder
}
""
input OperationalLocationClassVersionPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the operational location. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific operational location class version. "
  id: String
  includesPropertiesOf: [OperationalLocationClassRef]
  isActiveVersionOf: OperationalLocationClassRef
  isMadeUpOf: OperationalLocationClassVersionRef
  isPartOf: [OperationalLocationClassVersionRef]
  " The label is last node in the fully qualified name. "
  label: String
  " A short description of the material definition. "
  name: String
  operationalLocationClass: OperationalLocationClassRef
  properties: [OperationalLocationClassPropertyRef]
  recordEntries: [InformationObjectRef]
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input OperationalLocationClassVersionRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the operational location. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific operational location class version. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  includesPropertiesOf: [OperationalLocationClassRef]
  isActiveVersionOf: OperationalLocationClassRef
  isMadeUpOf: OperationalLocationClassVersionRef
  isPartOf: [OperationalLocationClassVersionRef]
  " The label is last node in the fully qualified name. "
  label: String
  " A short description of the material definition. "
  name: String
  operationalLocationClass: OperationalLocationClassRef
  properties: [OperationalLocationClassPropertyRef]
  recordEntries: [InformationObjectRef]
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input OperationalLocationFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationalLocationFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [OperationalLocationHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: OperationalLocationFilter
  or: [OperationalLocationFilter]
}
""
input OperationalLocationOrder {
  asc: OperationalLocationOrderable
  desc: OperationalLocationOrderable
  then: OperationalLocationOrder
}
""
input OperationalLocationPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: OperationalLocationVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  """
  A unique identification of a specific operational location, within the hierarchy scope of the
  operational location.
  """
  id: String
  isMadeUpOf: OperationalLocationRef
  isPartOf: [OperationalLocationRef]
  " The label is last node in the fully qualified name. "
  label: String
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  recordEntries: [InformationObjectRef]
  versions: [OperationalLocationVersionRef]
}
""
input OperationalLocationPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationalLocationPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [OperationalLocationPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: OperationalLocationPropertyFilter
  or: [OperationalLocationPropertyFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input OperationalLocationPropertyOrder {
  asc: OperationalLocationPropertyOrderable
  desc: OperationalLocationPropertyOrderable
  then: OperationalLocationPropertyOrder
}
""
input OperationalLocationPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Additional information about the operational location property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " A unique identification of a specific operational location class property within the operational location class. "
  id: String
  isMadeUpOf: OperationalLocationPropertyRef
  isPartOf: [OperationalLocationPropertyRef]
  " The label is last node in the fully qualified name. "
  label: String
  mapsTo: OperationalLocationClassPropertyRef
  operationalLocationVersion: OperationalLocationVersionRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input OperationalLocationPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Additional information about the operational location property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " A unique identification of a specific operational location class property within the operational location class. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  isMadeUpOf: OperationalLocationPropertyRef
  isPartOf: [OperationalLocationPropertyRef]
  " The label is last node in the fully qualified name. "
  label: String
  mapsTo: OperationalLocationClassPropertyRef
  operationalLocationVersion: OperationalLocationVersionRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input OperationalLocationRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: OperationalLocationVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  """
  A unique identification of a specific operational location, within the hierarchy scope of the
  operational location.
  """
  id: String
  " Unique internal database identifier. "
  iid: ID
  isMadeUpOf: OperationalLocationRef
  isPartOf: [OperationalLocationRef]
  " The label is last node in the fully qualified name. "
  label: String
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  recordEntries: [InformationObjectRef]
  versions: [OperationalLocationVersionRef]
}
""
input OperationalLocationVersionFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationalLocationVersionFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [OperationalLocationVersionHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  name: StringFullTextFilter
  not: OperationalLocationVersionFilter
  or: [OperationalLocationVersionFilter]
  version: StringExactFilter_StringFullTextFilter
  versionStatus: VersionState_hash
}
""
input OperationalLocationVersionOrder {
  asc: OperationalLocationVersionOrderable
  desc: OperationalLocationVersionOrderable
  then: OperationalLocationVersionOrder
}
""
input OperationalLocationVersionPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the operational location. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific operational location, within the scope of the information exchanged. "
  id: String
  isActiveVersionOf: OperationalLocationRef
  isMadeUpOf: OperationalLocationVersionRef
  isPartOf: [OperationalLocationVersionRef]
  " A short description of the material definition. "
  name: String
  operationalLocation: OperationalLocationRef
  operationalLocationClasses: [OperationalLocationClassRef]
  properties: [OperationalLocationPropertyRef]
  recordEntries: [InformationObjectRef]
  spatialDefinition: SpatialDefinitionRef
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input OperationalLocationVersionRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the operational location. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific operational location, within the scope of the information exchanged. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  isActiveVersionOf: OperationalLocationRef
  isMadeUpOf: OperationalLocationVersionRef
  isPartOf: [OperationalLocationVersionRef]
  " A short description of the material definition. "
  name: String
  operationalLocation: OperationalLocationRef
  operationalLocationClasses: [OperationalLocationClassRef]
  properties: [OperationalLocationPropertyRef]
  recordEntries: [InformationObjectRef]
  spatialDefinition: SpatialDefinitionRef
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input OperationsDefinitionFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationsDefinitionFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [OperationsDefinitionHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: OperationsDefinitionFilter
  or: [OperationsDefinitionFilter]
}
""
input OperationsDefinitionOrder {
  asc: OperationsDefinitionOrderable
  desc: OperationsDefinitionOrderable
  then: OperationsDefinitionOrder
}
""
input OperationsDefinitionPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: OperationsDefinitionVersionRef
  children: [OperationsDefinitionRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " Uniquely identifies the operations definition. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  operationsRequests: [OperationsRequestRef]
  operationsResponses: [OperationsResponseRef]
  parent: OperationsDefinitionRef
  recordEntries: [InformationObjectRef]
  segmentRequirements: [SegmentRequirementRef]
  segmentResponses: [SegmentResponseRef]
  versions: [OperationsDefinitionVersionRef]
  workMasters: [WorkMasterRef]
}
""
input OperationsDefinitionRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: OperationsDefinitionVersionRef
  children: [OperationsDefinitionRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " Uniquely identifies the operations definition. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  operationsRequests: [OperationsRequestRef]
  operationsResponses: [OperationsResponseRef]
  parent: OperationsDefinitionRef
  recordEntries: [InformationObjectRef]
  segmentRequirements: [SegmentRequirementRef]
  segmentResponses: [SegmentResponseRef]
  versions: [OperationsDefinitionVersionRef]
  workMasters: [WorkMasterRef]
}
""
input OperationsDefinitionVersionFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationsDefinitionVersionFilter]
  billOfMaterial: StringExactFilter_StringFullTextFilter
  billOfResources: StringExactFilter_StringFullTextFilter
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [OperationsDefinitionVersionHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: OperationsDefinitionVersionFilter
  operationsType: WorkType_hash
  or: [OperationsDefinitionVersionFilter]
  version: StringExactFilter_StringFullTextFilter
  versionStatus: VersionState_hash
}
""
input OperationsDefinitionVersionOrder {
  asc: OperationsDefinitionVersionOrderable
  desc: OperationsDefinitionVersionOrderable
  then: OperationsDefinitionVersionOrder
}
""
input OperationsDefinitionVersionPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Identification of the external bill of material associated with this operation definition. "
  billOfMaterial: String
  " Identification of the external bill of resource associated with this operation definition. "
  billOfResources: String
  " Defines the type of the process segment. "
  definitionType: DefinitionType
  " Contains additional information and descriptions of the operations definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " Uniquely identifies the operations definition version. "
  id: String
  isActiveVersionOf: OperationsDefinitionRef
  materialsBill: [OperationsMaterialBillRef]
  operationsDefinition: OperationsDefinitionRef
  " Describes the category of the activity. "
  operationsType: WorkType
  recordEntries: [InformationObjectRef]
  segments: [OperationsSegmentRef]
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input OperationsDefinitionVersionRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Identification of the external bill of material associated with this operation definition. "
  billOfMaterial: String
  " Identification of the external bill of resource associated with this operation definition. "
  billOfResources: String
  " Defines the type of the process segment. "
  definitionType: DefinitionType
  " Contains additional information and descriptions of the operations definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " Uniquely identifies the operations definition version. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  isActiveVersionOf: OperationsDefinitionRef
  materialsBill: [OperationsMaterialBillRef]
  operationsDefinition: OperationsDefinitionRef
  " Describes the category of the activity. "
  operationsType: WorkType
  recordEntries: [InformationObjectRef]
  segments: [OperationsSegmentRef]
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input OperationsEventClassFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationsEventClassFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [OperationsEventClassHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: OperationsEventClassFilter
  or: [OperationsEventClassFilter]
}
""
input OperationsEventClassOrder {
  asc: OperationsEventClassOrderable
  desc: OperationsEventClassOrderable
  then: OperationsEventClassOrder
}
""
input OperationsEventClassPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: OperationsEventClassVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " A unique identification of a specific equipment class, within the scope of the information exchanged. "
  id: String
  includesPropertiesOf: [OperationsEventClassRef]
  isAssembledFrom: [OperationsEventClassRef]
  isComponentOf: OperationsEventClassRef
  isIncludedIn: OperationsEventClassRef
  " The label is last node in the fully qualified name. "
  label: String
  nextVersion: String
  operationsEventDefinitionVersions: [OperationsEventDefinitionVersionRef]
  recordEntries: [InformationObjectRef]
  versions: [OperationsEventClassVersionRef]
}
""
input OperationsEventClassPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationsEventClassPropertyFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [OperationsEventClassPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: OperationsEventClassPropertyFilter
  or: [OperationsEventClassPropertyFilter]
  value: StringExactFilter_StringFullTextFilter_StringRegExpFilter
}
""
input OperationsEventClassPropertyOrder {
  asc: OperationsEventClassPropertyOrderable
  desc: OperationsEventClassPropertyOrderable
  then: OperationsEventClassPropertyOrder
}
""
input OperationsEventClassPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [OperationsEventClassPropertyRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  id: String
  operationsEventClassVersion: OperationsEventClassVersionRef
  parent: OperationsEventClassPropertyRef
  propertyType: Isa95PropertyType
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input OperationsEventClassPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [OperationsEventClassPropertyRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  id: String
  " Unique internal database identifier. "
  iid: ID
  operationsEventClassVersion: OperationsEventClassVersionRef
  parent: OperationsEventClassPropertyRef
  propertyType: Isa95PropertyType
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input OperationsEventClassRecordSpecificationFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationsEventClassRecordSpecificationFilter]
  description: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [OperationsEventClassRecordSpecificationHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: OperationsEventClassRecordSpecificationFilter
  or: [OperationsEventClassRecordSpecificationFilter]
}
""
input OperationsEventClassRecordSpecificationOrder {
  asc: OperationsEventClassRecordSpecificationOrderable
  desc: OperationsEventClassRecordSpecificationOrderable
  then: OperationsEventClassRecordSpecificationOrder
}
""
input OperationsEventClassRecordSpecificationPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  action: [Action]
  actionMultiplicity: MultiplicityRef
  definitionType: DefinitionType
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  id: String
  informationObjectType: [InformationObjectTypeEnum]
  multiplicity: MultiplicityRef
  operationsEventClassVersion: OperationsEventClassVersionRef
}
""
input OperationsEventClassRecordSpecificationRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  action: [Action]
  actionMultiplicity: MultiplicityRef
  definitionType: DefinitionType
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  id: String
  " Unique internal database identifier. "
  iid: ID
  informationObjectType: [InformationObjectTypeEnum]
  multiplicity: MultiplicityRef
  operationsEventClassVersion: OperationsEventClassVersionRef
}
""
input OperationsEventClassRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: OperationsEventClassVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " A unique identification of a specific equipment class, within the scope of the information exchanged. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  includesPropertiesOf: [OperationsEventClassRef]
  isAssembledFrom: [OperationsEventClassRef]
  isComponentOf: OperationsEventClassRef
  isIncludedIn: OperationsEventClassRef
  " The label is last node in the fully qualified name. "
  label: String
  nextVersion: String
  operationsEventDefinitionVersions: [OperationsEventDefinitionVersionRef]
  recordEntries: [InformationObjectRef]
  versions: [OperationsEventClassVersionRef]
}
""
input OperationsEventClassVersionFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationsEventClassVersionFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [OperationsEventClassVersionHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: OperationsEventClassVersionFilter
  or: [OperationsEventClassVersionFilter]
  version: StringExactFilter_StringFullTextFilter
  versionStatus: VersionState_hash
}
""
input OperationsEventClassVersionOrder {
  asc: OperationsEventClassVersionOrderable
  desc: OperationsEventClassVersionOrderable
  then: OperationsEventClassVersionOrder
}
""
input OperationsEventClassVersionPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " A unique identification of a specific record. "
  id: String
  isActiveVersionOf: OperationsEventClassRef
  operationsEventClass: OperationsEventClassRef
  properties: [OperationsEventClassPropertyRef]
  recordEntries: [InformationObjectRef]
  recordSpecifications: [OperationsEventClassRecordSpecificationRef]
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input OperationsEventClassVersionRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " A unique identification of a specific record. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  isActiveVersionOf: OperationsEventClassRef
  operationsEventClass: OperationsEventClassRef
  properties: [OperationsEventClassPropertyRef]
  recordEntries: [InformationObjectRef]
  recordSpecifications: [OperationsEventClassRecordSpecificationRef]
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input OperationsEventDefinitionFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationsEventDefinitionFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [OperationsEventDefinitionHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: OperationsEventDefinitionFilter
  or: [OperationsEventDefinitionFilter]
}
""
input OperationsEventDefinitionOrder {
  asc: OperationsEventDefinitionOrderable
  desc: OperationsEventDefinitionOrderable
  then: OperationsEventDefinitionOrder
}
""
input OperationsEventDefinitionPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: OperationsEventDefinitionVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific equipment class, within the scope of the information exchanged. "
  id: String
  includesPropertiesOf: [OperationsEventDefinitionRef]
  isAssembledFrom: [OperationsEventDefinitionRef]
  isComponentOf: OperationsEventDefinitionRef
  isIncludedIn: OperationsEventDefinitionRef
  " The label is last node in the fully qualified name. "
  label: String
  nextVersion: String
  operationsEvents: [OperationsEventRef]
  recordEntries: [InformationObjectRef]
  versions: [OperationsEventDefinitionVersionRef]
}
""
input OperationsEventDefinitionPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationsEventDefinitionPropertyFilter]
  description: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [OperationsEventDefinitionPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: OperationsEventDefinitionPropertyFilter
  or: [OperationsEventDefinitionPropertyFilter]
  value: StringExactFilter_StringFullTextFilter_StringRegExpFilter
}
""
input OperationsEventDefinitionPropertyOrder {
  asc: OperationsEventDefinitionPropertyOrderable
  desc: OperationsEventDefinitionPropertyOrderable
  then: OperationsEventDefinitionPropertyOrder
}
""
input OperationsEventDefinitionPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [OperationsEventDefinitionPropertyRef]
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  id: String
  operationsEventClassProperty: OperationsEventClassPropertyRef
  operationsEventDefinitionVersion: OperationsEventDefinitionVersionRef
  parent: OperationsEventDefinitionPropertyRef
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input OperationsEventDefinitionPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [OperationsEventDefinitionPropertyRef]
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  id: String
  " Unique internal database identifier. "
  iid: ID
  operationsEventClassProperty: OperationsEventClassPropertyRef
  operationsEventDefinitionVersion: OperationsEventDefinitionVersionRef
  parent: OperationsEventDefinitionPropertyRef
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input OperationsEventDefinitionRecordSpecificationFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationsEventDefinitionRecordSpecificationFilter]
  description: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [OperationsEventDefinitionRecordSpecificationHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: OperationsEventDefinitionRecordSpecificationFilter
  or: [OperationsEventDefinitionRecordSpecificationFilter]
}
""
input OperationsEventDefinitionRecordSpecificationOrder {
  asc: OperationsEventDefinitionRecordSpecificationOrderable
  desc: OperationsEventDefinitionRecordSpecificationOrderable
  then: OperationsEventDefinitionRecordSpecificationOrder
}
""
input OperationsEventDefinitionRecordSpecificationPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  action: [Action]
  actionMultiplicity: MultiplicityRef
  definitionType: DefinitionType
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  id: String
  informationObjectType: [InformationObjectTypeEnum]
  multiplicity: MultiplicityRef
  operationsEventDefinitionVersion: OperationsEventDefinitionVersionRef
  operationsEventRecords: [OperationsEventRecordRef]
}
""
input OperationsEventDefinitionRecordSpecificationRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  action: [Action]
  actionMultiplicity: MultiplicityRef
  definitionType: DefinitionType
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  id: String
  " Unique internal database identifier. "
  iid: ID
  informationObjectType: [InformationObjectTypeEnum]
  multiplicity: MultiplicityRef
  operationsEventDefinitionVersion: OperationsEventDefinitionVersionRef
  operationsEventRecords: [OperationsEventRecordRef]
}
""
input OperationsEventDefinitionRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: OperationsEventDefinitionVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific equipment class, within the scope of the information exchanged. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  includesPropertiesOf: [OperationsEventDefinitionRef]
  isAssembledFrom: [OperationsEventDefinitionRef]
  isComponentOf: OperationsEventDefinitionRef
  isIncludedIn: OperationsEventDefinitionRef
  " The label is last node in the fully qualified name. "
  label: String
  nextVersion: String
  operationsEvents: [OperationsEventRef]
  recordEntries: [InformationObjectRef]
  versions: [OperationsEventDefinitionVersionRef]
}
""
input OperationsEventDefinitionVersionFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationsEventDefinitionVersionFilter]
  description: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [OperationsEventDefinitionVersionHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: OperationsEventDefinitionVersionFilter
  or: [OperationsEventDefinitionVersionFilter]
  version: StringExactFilter_StringFullTextFilter
  versionStatus: VersionState_hash
}
""
input OperationsEventDefinitionVersionOrder {
  asc: OperationsEventDefinitionVersionOrderable
  desc: OperationsEventDefinitionVersionOrderable
  then: OperationsEventDefinitionVersionOrder
}
""
input OperationsEventDefinitionVersionPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  category: String
  " A unique identification of a specific equipment class version. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  enterpriseFunction: EnterpriseFunctionEnum
  hierarchyScope: HierarchyScopeRef
  id: String
  isActiveVersionOf: OperationsEventDefinitionRef
  momFunction: MOMFunctionEnum
  operationsEventClasses: [OperationsEventClassRef]
  operationsEventDefinition: OperationsEventDefinitionRef
  operationsEventLevel: OperationsEventLevelEnum
  operationsEventType: OperationsEventTypeEnum
  operationsType: WorkType
  priority: [String]
  properties: [OperationsEventDefinitionPropertyRef]
  recordEntries: [InformationObjectRef]
  recordSpecifications: [OperationsEventDefinitionRecordSpecificationRef]
  source: String
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input OperationsEventDefinitionVersionRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  category: String
  " A unique identification of a specific equipment class version. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  enterpriseFunction: EnterpriseFunctionEnum
  hierarchyScope: HierarchyScopeRef
  id: String
  " Unique internal database identifier. "
  iid: ID
  isActiveVersionOf: OperationsEventDefinitionRef
  momFunction: MOMFunctionEnum
  operationsEventClasses: [OperationsEventClassRef]
  operationsEventDefinition: OperationsEventDefinitionRef
  operationsEventLevel: OperationsEventLevelEnum
  operationsEventType: OperationsEventTypeEnum
  operationsType: WorkType
  priority: [String]
  properties: [OperationsEventDefinitionPropertyRef]
  recordEntries: [InformationObjectRef]
  recordSpecifications: [OperationsEventDefinitionRecordSpecificationRef]
  source: String
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input OperationsEventFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationsEventFilter]
  description: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [OperationsEventHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: OperationsEventFilter
  or: [OperationsEventFilter]
  recordTimestamp: DateTimeFilter
}
""
input OperationsEventOrder {
  asc: OperationsEventOrderable
  desc: OperationsEventOrderable
  then: OperationsEventOrder
}
""
input OperationsEventPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  category: String
  children: [OperationsEventRef]
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  enterpriseFunction: EnterpriseFunctionEnum
  hierarchyScope: HierarchyScopeRef
  id: String
  momFunction: MOMFunctionEnum
  operationsEventDefinition: OperationsEventDefinitionRef
  operationsEventLevel: OperationsEventLevelEnum
  operationsEventType: OperationsEventTypeEnum
  operationsType: WorkType
  parent: OperationsEventRef
  priority: String
  properties: [OperationsEventPropertyRef]
  recordEntries: [InformationObjectRef]
  recordTimestamp: DateTime
  records: [OperationsEventRecordRef]
  source: String
}
""
input OperationsEventPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationsEventPropertyFilter]
  description: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [OperationsEventPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: OperationsEventPropertyFilter
  or: [OperationsEventPropertyFilter]
  value: StringExactFilter_StringFullTextFilter_StringRegExpFilter
}
""
input OperationsEventPropertyOrder {
  asc: OperationsEventPropertyOrderable
  desc: OperationsEventPropertyOrderable
  then: OperationsEventPropertyOrder
}
""
input OperationsEventPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [OperationsEventPropertyRef]
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  id: String
  operationsEvent: OperationsEventRef
  operationsEventDefinitionProperty: OperationsEventDefinitionPropertyRef
  parent: OperationsEventPropertyRef
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input OperationsEventPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [OperationsEventPropertyRef]
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  id: String
  " Unique internal database identifier. "
  iid: ID
  operationsEvent: OperationsEventRef
  operationsEventDefinitionProperty: OperationsEventDefinitionPropertyRef
  parent: OperationsEventPropertyRef
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input OperationsEventRecordEntryFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationsEventRecordEntryFilter]
  description: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [OperationsEventRecordEntryHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: OperationsEventRecordEntryFilter
  or: [OperationsEventRecordEntryFilter]
  recordId: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  recordTimestamp: DateTimeFilter
}
""
input OperationsEventRecordEntryOrder {
  asc: OperationsEventRecordEntryOrderable
  desc: OperationsEventRecordEntryOrderable
  then: OperationsEventRecordEntryOrder
}
""
input OperationsEventRecordEntryPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [OperationsEventRecordEntryRef]
  data: String
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " Unique external identifier is a composite of the id and the parent record id. "
  id: String
  informationObject: InformationObjectRef
  operationsEventRecord: OperationsEventRecordRef
  parent: OperationsEventRecordEntryRef
  recordId: String
  recordTimestamp: DateTime
}
""
input OperationsEventRecordEntryRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [OperationsEventRecordEntryRef]
  data: String
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " Unique external identifier is a composite of the id and the parent record id. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  informationObject: InformationObjectRef
  operationsEventRecord: OperationsEventRecordRef
  parent: OperationsEventRecordEntryRef
  recordId: String
  recordTimestamp: DateTime
}
""
input OperationsEventRecordFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationsEventRecordFilter]
  description: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [OperationsEventRecordHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: OperationsEventRecordFilter
  or: [OperationsEventRecordFilter]
  recordTimestamp: DateTimeFilter
}
""
input OperationsEventRecordOrder {
  asc: OperationsEventRecordOrderable
  desc: OperationsEventRecordOrderable
  then: OperationsEventRecordOrder
}
""
input OperationsEventRecordPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  action: Action
  children: [OperationsEventRecordRef]
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  id: String
  operationsEvent: OperationsEventRef
  operationsEventDefinitionRecordSpecification: OperationsEventDefinitionRecordSpecificationRef
  parent: OperationsEventRecordRef
  recordEntries: [OperationsEventRecordEntryRef]
  " The date and time the publisher recorded/transacted the action. Record timestamp explicitly states the time that the publisher took the action  "
  recordTimestamp: DateTime
}
""
input OperationsEventRecordRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  action: Action
  children: [OperationsEventRecordRef]
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  id: String
  " Unique internal database identifier. "
  iid: ID
  operationsEvent: OperationsEventRef
  operationsEventDefinitionRecordSpecification: OperationsEventDefinitionRecordSpecificationRef
  parent: OperationsEventRecordRef
  recordEntries: [OperationsEventRecordEntryRef]
  " The date and time the publisher recorded/transacted the action. Record timestamp explicitly states the time that the publisher took the action  "
  recordTimestamp: DateTime
}
""
input OperationsEventRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  category: String
  children: [OperationsEventRef]
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  enterpriseFunction: EnterpriseFunctionEnum
  hierarchyScope: HierarchyScopeRef
  id: String
  " Unique internal database identifier. "
  iid: ID
  momFunction: MOMFunctionEnum
  operationsEventDefinition: OperationsEventDefinitionRef
  operationsEventLevel: OperationsEventLevelEnum
  operationsEventType: OperationsEventTypeEnum
  operationsType: WorkType
  parent: OperationsEventRef
  priority: String
  properties: [OperationsEventPropertyRef]
  recordEntries: [InformationObjectRef]
  recordTimestamp: DateTime
  records: [OperationsEventRecordRef]
  source: String
}
""
input OperationsMaterialBillFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationsMaterialBillFilter]
  billOfMaterial: StringExactFilter_StringFullTextFilter
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [OperationsMaterialBillHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: OperationsMaterialBillFilter
  or: [OperationsMaterialBillFilter]
  useType: MaterialUse_hash
}
""
input OperationsMaterialBillOrder {
  asc: OperationsMaterialBillOrderable
  desc: OperationsMaterialBillOrderable
  then: OperationsMaterialBillOrder
}
""
input OperationsMaterialBillPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Identification of the bill of material associated with this operations material bill. "
  billOfMaterial: String
  " Contains additional information of the manufacturing bill. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a manufacturing bill. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  materialBillItems: [MaterialSpecificationRef]
  operationsDefinitionVersion: OperationsDefinitionVersionRef
  operationsSegments: [OperationsSegmentRef]
  " Defines the use of the material. "
  useType: MaterialUse
}
""
input OperationsMaterialBillRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Identification of the bill of material associated with this operations material bill. "
  billOfMaterial: String
  " Contains additional information of the manufacturing bill. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a manufacturing bill. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  materialBillItems: [MaterialSpecificationRef]
  operationsDefinitionVersion: OperationsDefinitionVersionRef
  operationsSegments: [OperationsSegmentRef]
  " Defines the use of the material. "
  useType: MaterialUse
}
""
input OperationsPerformanceFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationsPerformanceFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  endDateTime: DateTimeFilter
  has: [OperationsPerformanceHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: OperationsPerformanceFilter
  operationsType: WorkType_hash
  or: [OperationsPerformanceFilter]
  publishedDate: DateTimeFilter
  startDateTime: DateTimeFilter
}
""
input OperationsPerformanceOrder {
  asc: OperationsPerformanceOrderable
  desc: OperationsPerformanceOrderable
  then: OperationsPerformanceOrder
}
""
input OperationsPerformancePatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the operations performance. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The ending time of the associated operations performance. "
  endDateTime: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the operations performance and could include version and revision identification. "
  id: String
  operationsResponses: [OperationsResponseRef!]
  operationsSchedule: OperationsScheduleRef
  " Describes the category of operations. "
  operationsType: WorkType
  " Indicates the state of the operations performance. "
  performanceState: JobState
  " The date and time on which the operations performance was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  " The starting time of the associated operations performance. "
  startDateTime: DateTime
}
""
input OperationsPerformanceRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the operations performance. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The ending time of the associated operations performance. "
  endDateTime: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the operations performance and could include version and revision identification. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  operationsResponses: [OperationsResponseRef!]
  operationsSchedule: OperationsScheduleRef
  " Describes the category of operations. "
  operationsType: WorkType
  " Indicates the state of the operations performance. "
  performanceState: JobState
  " The date and time on which the operations performance was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  " The starting time of the associated operations performance. "
  startDateTime: DateTime
}
""
input OperationsRequestFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationsRequestFilter]
  description: StringExactFilter_StringFullTextFilter
  has: [OperationsRequestHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: OperationsRequestFilter
  operationsType: WorkType_hash
  or: [OperationsRequestFilter]
  scheduledEndDate: DateTimeFilter
  scheduledStartDate: DateTimeFilter
}
""
input OperationsRequestOrder {
  asc: OperationsRequestOrderable
  desc: OperationsRequestOrderable
  then: OperationsRequestOrder
}
""
input OperationsRequestPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the operations request. "
  description: String
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the operations request. "
  id: String
  " Notes about this operations request. "
  notes: String
  operationsDefinition: OperationsDefinitionRef
  operationsResponses: [OperationsResponseRef]
  operationsSchedule: OperationsScheduleRef
  operationsSegment: OperationsSegmentRef
  " Describes the category of operations. "
  operationsType: WorkType
  " The priority of the request. "
  priority: String
  recordEntries: [InformationObjectRef]
  " Indicates the state of the operations request. "
  requestState: ScheduleState
  " When operation is to be completed. "
  scheduledEndDate: DateTime
  " When operation is to be started. "
  scheduledStartDate: DateTime
  segmentRequirements: [SegmentRequirementRef!]
  segmentResponses: [SegmentResponseRef]
  workRequests: [WorkRequestRef]
}
""
input OperationsRequestRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the operations request. "
  description: String
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the operations request. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " Notes about this operations request. "
  notes: String
  operationsDefinition: OperationsDefinitionRef
  operationsResponses: [OperationsResponseRef]
  operationsSchedule: OperationsScheduleRef
  operationsSegment: OperationsSegmentRef
  " Describes the category of operations. "
  operationsType: WorkType
  " The priority of the request. "
  priority: String
  recordEntries: [InformationObjectRef]
  " Indicates the state of the operations request. "
  requestState: ScheduleState
  " When operation is to be completed. "
  scheduledEndDate: DateTime
  " When operation is to be started. "
  scheduledStartDate: DateTime
  segmentRequirements: [SegmentRequirementRef!]
  segmentResponses: [SegmentResponseRef]
  workRequests: [WorkRequestRef]
}
""
input OperationsResponseFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationsResponseFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  endDateTime: DateTimeFilter
  has: [OperationsResponseHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  isActive: Boolean
  not: OperationsResponseFilter
  operationsType: WorkType_hash
  or: [OperationsResponseFilter]
  responseState: JobState_hash
  startDateTime: DateTimeFilter
}
""
input OperationsResponseOrder {
  asc: OperationsResponseOrderable
  desc: OperationsResponseOrderable
  then: OperationsResponseOrder
}
""
input OperationsResponsePatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the operations response. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The ending time of this operations response. "
  endDateTime: DateTime
  hierarchyScope: HierarchyScopeRef
  " An identification within the associated operations response. "
  id: String
  isActive: Boolean
  operationsDefinition: OperationsDefinitionRef
  operationsPerformance: OperationsPerformanceRef
  operationsRequest: OperationsRequestRef
  operationsSegment: OperationsSegmentRef
  " Describes the category of operations. "
  operationsType: WorkType
  properties: [OperationsResponsePropertyRef]
  recordEntries: [InformationObjectRef]
  " Indicates the state of the operations response. "
  responseState: JobState
  segmentRequirements: [SegmentRequirementRef]
  segmentResponses: [SegmentResponseRef!]
  " The starting time of this operations response. "
  startDateTime: DateTime
}
""
input OperationsResponsePropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationsResponsePropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  has: [OperationsResponsePropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: OperationsResponsePropertyFilter
  or: [OperationsResponsePropertyFilter]
  use: StringExactFilter_StringFullTextFilter
}
""
input OperationsResponsePropertyOrder {
  asc: OperationsResponsePropertyOrderable
  desc: OperationsResponsePropertyOrderable
  then: OperationsResponsePropertyOrder
}
""
input OperationsResponsePropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [OperationsResponsePropertyRef]
  description: String
  hierarchyScope: HierarchyScopeRef
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  operationalLocation: OperationalLocationRef
  operationsResponse: OperationsResponseRef
  parent: OperationsResponsePropertyRef
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  use: String
}
""
input OperationsResponsePropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [OperationsResponsePropertyRef]
  description: String
  hierarchyScope: HierarchyScopeRef
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  operationalLocation: OperationalLocationRef
  operationsResponse: OperationsResponseRef
  parent: OperationsResponsePropertyRef
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  use: String
}
""
input OperationsResponseRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the operations response. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The ending time of this operations response. "
  endDateTime: DateTime
  hierarchyScope: HierarchyScopeRef
  " An identification within the associated operations response. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  isActive: Boolean
  operationsDefinition: OperationsDefinitionRef
  operationsPerformance: OperationsPerformanceRef
  operationsRequest: OperationsRequestRef
  operationsSegment: OperationsSegmentRef
  " Describes the category of operations. "
  operationsType: WorkType
  properties: [OperationsResponsePropertyRef]
  recordEntries: [InformationObjectRef]
  " Indicates the state of the operations response. "
  responseState: JobState
  segmentRequirements: [SegmentRequirementRef]
  segmentResponses: [SegmentResponseRef!]
  " The starting time of this operations response. "
  startDateTime: DateTime
}
""
input OperationsScheduleFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationsScheduleFilter]
  description: StringExactFilter_StringFullTextFilter
  has: [OperationsScheduleHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: OperationsScheduleFilter
  operationsType: WorkType_hash
  or: [OperationsScheduleFilter]
  publishedDate: DateTimeFilter
  scheduleState: ScheduleState_hash
  scheduledEndDate: DateTimeFilter
  scheduledStartDate: DateTimeFilter
}
""
input OperationsScheduleOrder {
  asc: OperationsScheduleOrderable
  desc: OperationsScheduleOrderable
  then: OperationsScheduleOrder
}
""
input OperationsSchedulePatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the operations schedule. "
  description: String
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the operations schedule and could include version and revision identification. "
  id: String
  operationsPerformance: [OperationsPerformanceRef]
  operationsRequests: [OperationsRequestRef!]
  " Describes the category of operation. "
  operationsType: WorkType
  " The date and time on which the operations schedule was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  " Indicates the state of the operations schedule. "
  scheduleState: ScheduleState
  " The ending time for the associated operations schedule. "
  scheduledEndDate: DateTime
  " The starting time for the associated operations schedule. "
  scheduledStartDate: DateTime
}
""
input OperationsScheduleRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the operations schedule. "
  description: String
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the operations schedule and could include version and revision identification. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  operationsPerformance: [OperationsPerformanceRef]
  operationsRequests: [OperationsRequestRef!]
  " Describes the category of operation. "
  operationsType: WorkType
  " The date and time on which the operations schedule was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  " Indicates the state of the operations schedule. "
  scheduleState: ScheduleState
  " The ending time for the associated operations schedule. "
  scheduledEndDate: DateTime
  " The starting time for the associated operations schedule. "
  scheduledStartDate: DateTime
}
""
input OperationsSegmentDependencyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationsSegmentDependencyFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [OperationsSegmentDependencyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: OperationsSegmentDependencyFilter
  or: [OperationsSegmentDependencyFilter]
}
""
input OperationsSegmentDependencyOrder {
  asc: OperationsSegmentDependencyOrderable
  desc: OperationsSegmentDependencyOrderable
  then: OperationsSegmentDependencyOrder
}
""
input OperationsSegmentDependencyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " A condition required to transition between operations segments. Expressed as JSONata expression. "
  condition: String
  " Factor used by dependency. "
  dependencyFactor: Float
  " Defines the execution dependency constraints of one operations to another operations. "
  dependencyType: DependencyType
  " Contains additional information and descriptions of the operations dependency definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  factorUoM: UnitOfMeasureRef
  from: OperationsSegmentRef
  " The identification of the unique instance of the operations segment dependency. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  rules: [RuleRef]
  to: OperationsSegmentRef
}
""
input OperationsSegmentDependencyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " A condition required to transition between operations segments. Expressed as JSONata expression. "
  condition: String
  " Factor used by dependency. "
  dependencyFactor: Float
  " Defines the execution dependency constraints of one operations to another operations. "
  dependencyType: DependencyType
  " Contains additional information and descriptions of the operations dependency definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  factorUoM: UnitOfMeasureRef
  from: OperationsSegmentRef
  " The identification of the unique instance of the operations segment dependency. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  rules: [RuleRef]
  to: OperationsSegmentRef
}
""
input OperationsSegmentFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [OperationsSegmentFilter]
  billOfMaterial: StringExactFilter_StringFullTextFilter
  billOfResources: StringExactFilter_StringFullTextFilter
  definitionType: DefinitionType_hash
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [OperationsSegmentHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: OperationsSegmentFilter
  operationsType: WorkType_hash
  or: [OperationsSegmentFilter]
}
""
input OperationsSegmentOrder {
  asc: OperationsSegmentOrderable
  desc: OperationsSegmentOrderable
  then: OperationsSegmentOrder
}
""
input OperationsSegmentPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Identification of the external bill of material associated with this operation segment. "
  billOfMaterial: String
  " Identification of the external bill of material associated with this operation segment. "
  billOfResources: String
  children: [OperationsSegmentRef]
  " Defines the type of the operations segment. "
  definitionType: DefinitionType
  " Contains additional information of the segment. "
  description: String
  " Duration of segment, if known. "
  duration: Float
  durationUoM: UnitOfMeasureRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentSpecifications: [EquipmentSpecificationRef]
  hierarchyScope: HierarchyScopeRef
  " The last part of the fully qualified id. Used as the display name "
  id: String
  inflows: [OperationsSegmentDependencyRef]
  isMadeUpOf: [OperationsSegmentRef]
  " The label is last node in the fully qualified name. "
  label: String
  makesUp: OperationsSegmentRef
  materialSpecifications: [MaterialSpecificationRef]
  materialsBill: [OperationsMaterialBillRef]
  operationsDefinitionVersion: OperationsDefinitionVersionRef
  operationsRequests: [OperationsRequestRef]
  operationsResponses: [OperationsResponseRef]
  " Describes the category of operation. "
  operationsType: WorkType
  outflows: [OperationsSegmentDependencyRef]
  parameterSpecifications: [ParameterSpecificationRef]
  parent: OperationsSegmentRef
  personnelSpecifications: [PersonnelSpecificationRef]
  physicalAssetSpecifications: [PhysicalAssetSpecificationRef]
  " Used by Libre UI for chart drawing. "
  positionX: Int
  " Used by Libre UI for chart drawing. "
  positionY: Int
  processSegment: ProcessSegmentRef
  recordEntries: [InformationObjectRef]
  rules: [RuleRef]
  segmentRequirements: [SegmentRequirementRef]
  segmentResponses: [SegmentResponseRef]
  workMasters: [WorkMasterRef]
}
""
input OperationsSegmentRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Identification of the external bill of material associated with this operation segment. "
  billOfMaterial: String
  " Identification of the external bill of material associated with this operation segment. "
  billOfResources: String
  children: [OperationsSegmentRef]
  " Defines the type of the operations segment. "
  definitionType: DefinitionType
  " Contains additional information of the segment. "
  description: String
  " Duration of segment, if known. "
  duration: Float
  durationUoM: UnitOfMeasureRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentSpecifications: [EquipmentSpecificationRef]
  hierarchyScope: HierarchyScopeRef
  " The last part of the fully qualified id. Used as the display name "
  id: String
  " Unique internal database identifier. "
  iid: ID
  inflows: [OperationsSegmentDependencyRef]
  isMadeUpOf: [OperationsSegmentRef]
  " The label is last node in the fully qualified name. "
  label: String
  makesUp: OperationsSegmentRef
  materialSpecifications: [MaterialSpecificationRef]
  materialsBill: [OperationsMaterialBillRef]
  operationsDefinitionVersion: OperationsDefinitionVersionRef
  operationsRequests: [OperationsRequestRef]
  operationsResponses: [OperationsResponseRef]
  " Describes the category of operation. "
  operationsType: WorkType
  outflows: [OperationsSegmentDependencyRef]
  parameterSpecifications: [ParameterSpecificationRef]
  parent: OperationsSegmentRef
  personnelSpecifications: [PersonnelSpecificationRef]
  physicalAssetSpecifications: [PhysicalAssetSpecificationRef]
  " Used by Libre UI for chart drawing. "
  positionX: Int
  " Used by Libre UI for chart drawing. "
  positionY: Int
  processSegment: ProcessSegmentRef
  recordEntries: [InformationObjectRef]
  rules: [RuleRef]
  segmentRequirements: [SegmentRequirementRef]
  segmentResponses: [SegmentResponseRef]
  workMasters: [WorkMasterRef]
}
""
input ParameterSpecificationFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [ParameterSpecificationFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [ParameterSpecificationHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: ParameterSpecificationFilter
  or: [ParameterSpecificationFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input ParameterSpecificationOrder {
  asc: ParameterSpecificationOrderable
  desc: ParameterSpecificationOrderable
  then: ParameterSpecificationOrder
}
""
input ParameterSpecificationPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [ParameterSpecificationRef]
  " Contains additional information of the parameter. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " Identification of the parameter for a specific segment. "
  id: String
  jobOrderParameter: [JobOrderParameterRef]
  " The label is last node in the fully qualified name. "
  label: String
  operationsSegment: OperationsSegmentRef
  parent: ParameterSpecificationRef
  segmentParameters: [SegmentParameterRef]
  " The value, set of values, or range of acceptable values. "
  value: String
  " The lower limit that would trigger an alert. "
  valueLowerControlLimit: Float
  " The lower limit that impacts the quality of the product. "
  valueLowerSpecLimit: Float
  " Target value. "
  valueSetPoint: String
  valueUnitOfMeasure: UnitOfMeasureRef
  " The upper limit that would trigger an alert. "
  valueUpperControlLimit: Float
  " The upper limit that impacts the quality of the product. "
  valueUpperSpecLimit: Float
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
}
""
input ParameterSpecificationRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [ParameterSpecificationRef]
  " Contains additional information of the parameter. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " Identification of the parameter for a specific segment. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  jobOrderParameter: [JobOrderParameterRef]
  " The label is last node in the fully qualified name. "
  label: String
  operationsSegment: OperationsSegmentRef
  parent: ParameterSpecificationRef
  segmentParameters: [SegmentParameterRef]
  " The value, set of values, or range of acceptable values. "
  value: String
  " The lower limit that would trigger an alert. "
  valueLowerControlLimit: Float
  " The lower limit that impacts the quality of the product. "
  valueLowerSpecLimit: Float
  " Target value. "
  valueSetPoint: String
  valueUnitOfMeasure: UnitOfMeasureRef
  " The upper limit that would trigger an alert. "
  valueUpperControlLimit: Float
  " The upper limit that impacts the quality of the product. "
  valueUpperSpecLimit: Float
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
}
""
input PayloadFieldDefinitionFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [PayloadFieldDefinitionFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [PayloadFieldDefinitionHasFilter]
  iid: [ID!]
  not: PayloadFieldDefinitionFilter
  or: [PayloadFieldDefinitionFilter]
}
""
input PayloadFieldDefinitionOrder {
  asc: PayloadFieldDefinitionOrderable
  desc: PayloadFieldDefinitionOrderable
  then: PayloadFieldDefinitionOrder
}
""
input PayloadFieldDefinitionPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The payload field expression"
  expression: String
  " A short description of the payload field definition. "
  name: String
}
""
input PayloadFieldDefinitionRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The payload field expression"
  expression: String
  " Unique internal database identifier. "
  iid: ID
  " A short description of the payload field definition. "
  name: String
}
""
input PersonFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [PersonFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [PersonHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: PersonFilter
  or: [PersonFilter]
}
""
input PersonOrder {
  asc: PersonOrderable
  desc: PersonOrderable
  then: PersonOrder
}
""
input PersonPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: PersonVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  events: [EventRef]
  " A unique identification of a specific person, within the scope of the information exchanged. "
  id: String
  " Human friendly alternative identifier "
  label: String
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  personnelActual: [PersonnelActualRef]
  personnelRequirements: [PersonnelRequirementRef]
  personnelSpecifications: [PersonnelSpecificationRef]
  recordEntries: [InformationObjectRef]
  specifiesTests: [TestSpecificationRef]
  stateModelInstances: [StateModelInstanceRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  versions: [PersonVersionRef]
}
""
input PersonPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [PersonPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [PersonPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: PersonPropertyFilter
  or: [PersonPropertyFilter]
}
""
input PersonPropertyOrder {
  asc: PersonPropertyOrderable
  desc: PersonPropertyOrderable
  then: PersonPropertyOrder
}
""
input PersonPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PersonPropertyRef]
  correspondsTo: EvaluatedPropertyRef
  " Additional information about the person property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of the specific property. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  parent: PersonPropertyRef
  personVersion: PersonVersionRef
  personnelActualProperties: [PersonnelActualPropertyRef]
  personnelClassProperty: PersonnelClassPropertyRef
  personnelRequirementProperties: [PersonnelRequirementPropertyRef]
  personnelSpecificationProperties: [PersonnelSpecificationPropertyRef]
  recordsMeasurementOf: [PropertyMeasurementRef]
  " The value, set of values, or range of the property. "
  value: String
  " The lower limit that would trigger an alert. "
  valueLowerControlLimit: Float
  " The lower limit that impacts the quality of the product. "
  valueLowerSpecLimit: Float
  " Target value. "
  valueSetPoint: String
  valueUnitOfMeasure: UnitOfMeasureRef
  " The upper limit that would trigger an alert. "
  valueUpperControlLimit: Float
  " The upper limit that impacts the quality of the product. "
  valueUpperSpecLimit: Float
}
""
input PersonPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PersonPropertyRef]
  correspondsTo: EvaluatedPropertyRef
  " Additional information about the person property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of the specific property. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  parent: PersonPropertyRef
  personVersion: PersonVersionRef
  personnelActualProperties: [PersonnelActualPropertyRef]
  personnelClassProperty: PersonnelClassPropertyRef
  personnelRequirementProperties: [PersonnelRequirementPropertyRef]
  personnelSpecificationProperties: [PersonnelSpecificationPropertyRef]
  recordsMeasurementOf: [PropertyMeasurementRef]
  " The value, set of values, or range of the property. "
  value: String
  " The lower limit that would trigger an alert. "
  valueLowerControlLimit: Float
  " The lower limit that impacts the quality of the product. "
  valueLowerSpecLimit: Float
  " Target value. "
  valueSetPoint: String
  valueUnitOfMeasure: UnitOfMeasureRef
  " The upper limit that would trigger an alert. "
  valueUpperControlLimit: Float
  " The upper limit that impacts the quality of the product. "
  valueUpperSpecLimit: Float
}
""
input PersonRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: PersonVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  events: [EventRef]
  " A unique identification of a specific person, within the scope of the information exchanged. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " Human friendly alternative identifier "
  label: String
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  personnelActual: [PersonnelActualRef]
  personnelRequirements: [PersonnelRequirementRef]
  personnelSpecifications: [PersonnelSpecificationRef]
  recordEntries: [InformationObjectRef]
  specifiesTests: [TestSpecificationRef]
  stateModelInstances: [StateModelInstanceRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  versions: [PersonVersionRef]
}
""
input PersonVersionFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [PersonVersionFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [PersonVersionHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  name: StringExactFilter_StringFullTextFilter
  not: PersonVersionFilter
  or: [PersonVersionFilter]
  version: StringExactFilter_StringFullTextFilter
  versionStatus: VersionState_hash
}
""
input PersonVersionOrder {
  asc: PersonVersionOrderable
  desc: PersonVersionOrderable
  then: PersonVersionOrder
}
""
input PersonVersionPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  comments: [CommentRef]
  " Additional information about the resource. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific person, within the scope of the information exchanged. "
  id: String
  isActiveVersionOf: PersonRef
  " The name of the individual. "
  name: String
  operationalLocation: OperationalLocationRef
  person: PersonRef
  personnelActual: [PersonnelActualRef]
  personnelClasses: [PersonnelClassRef]
  properties: [PersonPropertyRef]
  recordEntries: [InformationObjectRef]
  signaturesMade: [SignatureRef]
  spatialDefinition: SpatialDefinitionRef
  stateModels: [StateModelDefinitionRef]
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input PersonVersionRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  comments: [CommentRef]
  " Additional information about the resource. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific person, within the scope of the information exchanged. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  isActiveVersionOf: PersonRef
  " The name of the individual. "
  name: String
  operationalLocation: OperationalLocationRef
  person: PersonRef
  personnelActual: [PersonnelActualRef]
  personnelClasses: [PersonnelClassRef]
  properties: [PersonPropertyRef]
  recordEntries: [InformationObjectRef]
  signaturesMade: [SignatureRef]
  spatialDefinition: SpatialDefinitionRef
  stateModels: [StateModelDefinitionRef]
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input PersonnelActualFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [PersonnelActualFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [PersonnelActualHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: PersonnelActualFilter
  or: [PersonnelActualFilter]
  personnelUse: StringExactFilter_StringFullTextFilter
}
""
input PersonnelActualOrder {
  asc: PersonnelActualOrderable
  desc: PersonnelActualOrderable
  then: PersonnelActualOrder
}
""
input PersonnelActualPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PersonnelActualRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the personnel actual. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific personnel actual. "
  id: String
  jobResponse: JobResponseRef
  operationalLocation: OperationalLocationRef
  parent: PersonnelActualRef
  person: [PersonRef]
  personVersion: [PersonVersionRef]
  personnelClass: [PersonnelClassRef]
  " Defines the expected use of the personnel class or person in the context of the operations response. "
  personnelUse: String
  properties: [PersonnelActualPropertyRef]
  " Specifies the amount of personnel resources used in the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  segmentResponse: SegmentResponseRef
  signatures: [SignatureRef]
  spatialDefinition: SpatialDefinitionRef
  testResults: [TestResultRef]
}
""
input PersonnelActualPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [PersonnelActualPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [PersonnelActualPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: PersonnelActualPropertyFilter
  or: [PersonnelActualPropertyFilter]
  use: StringExactFilter_StringFullTextFilter
  value: StringExactFilter_StringFullTextFilter
}
""
input PersonnelActualPropertyOrder {
  asc: PersonnelActualPropertyOrderable
  desc: PersonnelActualPropertyOrderable
  then: PersonnelActualPropertyOrder
}
""
input PersonnelActualPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PersonnelActualPropertyRef]
  " Contains additional information and descriptions of the personnel actual property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " An identification of the associated person property or personnel class property for a specific segment response. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  operationalLocation: OperationalLocationRef
  parent: PersonnelActualPropertyRef
  personProperty: PersonPropertyRef
  personnelActual: PersonnelActualRef
  personnelClassProperty: PersonnelClassPropertyRef
  " Specifies the amount of personnel resources used in the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  use: String
  " The value or set of values for the associated property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input PersonnelActualPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PersonnelActualPropertyRef]
  " Contains additional information and descriptions of the personnel actual property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " An identification of the associated person property or personnel class property for a specific segment response. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  operationalLocation: OperationalLocationRef
  parent: PersonnelActualPropertyRef
  personProperty: PersonPropertyRef
  personnelActual: PersonnelActualRef
  personnelClassProperty: PersonnelClassPropertyRef
  " Specifies the amount of personnel resources used in the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  use: String
  " The value or set of values for the associated property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input PersonnelActualRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PersonnelActualRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the personnel actual. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific personnel actual. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  jobResponse: JobResponseRef
  operationalLocation: OperationalLocationRef
  parent: PersonnelActualRef
  person: [PersonRef]
  personVersion: [PersonVersionRef]
  personnelClass: [PersonnelClassRef]
  " Defines the expected use of the personnel class or person in the context of the operations response. "
  personnelUse: String
  properties: [PersonnelActualPropertyRef]
  " Specifies the amount of personnel resources used in the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  segmentResponse: SegmentResponseRef
  signatures: [SignatureRef]
  spatialDefinition: SpatialDefinitionRef
  testResults: [TestResultRef]
}
""
input PersonnelClassFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [PersonnelClassFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [PersonnelClassHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: PersonnelClassFilter
  or: [PersonnelClassFilter]
}
""
input PersonnelClassOrder {
  asc: PersonnelClassOrderable
  desc: PersonnelClassOrderable
  then: PersonnelClassOrder
}
""
input PersonnelClassPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: PersonnelClassVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " A unique identification of a specific personnel class. "
  id: String
  isIncludedIn: [PersonnelClassVersionRef]
  " Human friendly alternative identifier "
  label: String
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  personVersions: [PersonVersionRef]
  personnelActual: [PersonnelActualRef]
  personnelRequirements: [PersonnelRequirementRef]
  personnelSpecifications: [PersonnelSpecificationRef]
  recordEntries: [InformationObjectRef]
  specifiesTests: [TestSpecificationRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  versions: [PersonnelClassVersionRef]
}
""
input PersonnelClassPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [PersonnelClassPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [PersonnelClassPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: PersonnelClassPropertyFilter
  or: [PersonnelClassPropertyFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input PersonnelClassPropertyOrder {
  asc: PersonnelClassPropertyOrderable
  desc: PersonnelClassPropertyOrderable
  then: PersonnelClassPropertyOrder
}
""
input PersonnelClassPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PersonnelClassPropertyRef]
  correspondsTo: EvaluatedPropertyRef
  " Additional information and description about the personnel class property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of the specific property, unique fully qualified id"
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  parent: PersonnelClassPropertyRef
  personProperty: PersonPropertyRef
  personnelActualProperties: [PersonnelActualPropertyRef]
  personnelClassVersion: PersonnelClassVersionRef
  personnelRequirementProperties: [PersonnelRequirementPropertyRef]
  personnelSpecificationProperties: [PersonnelSpecificationPropertyRef]
  " Defines the type of the property. "
  propertyType: Isa95PropertyType
  recordsMeasurementOf: [PropertyMeasurementRef]
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input PersonnelClassPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PersonnelClassPropertyRef]
  correspondsTo: EvaluatedPropertyRef
  " Additional information and description about the personnel class property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of the specific property, unique fully qualified id"
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  parent: PersonnelClassPropertyRef
  personProperty: PersonPropertyRef
  personnelActualProperties: [PersonnelActualPropertyRef]
  personnelClassVersion: PersonnelClassVersionRef
  personnelRequirementProperties: [PersonnelRequirementPropertyRef]
  personnelSpecificationProperties: [PersonnelSpecificationPropertyRef]
  " Defines the type of the property. "
  propertyType: Isa95PropertyType
  recordsMeasurementOf: [PropertyMeasurementRef]
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input PersonnelClassRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: PersonnelClassVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " A unique identification of a specific personnel class. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  isIncludedIn: [PersonnelClassVersionRef]
  " Human friendly alternative identifier "
  label: String
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  personVersions: [PersonVersionRef]
  personnelActual: [PersonnelActualRef]
  personnelRequirements: [PersonnelRequirementRef]
  personnelSpecifications: [PersonnelSpecificationRef]
  recordEntries: [InformationObjectRef]
  specifiesTests: [TestSpecificationRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  versions: [PersonnelClassVersionRef]
}
""
input PersonnelClassVersionFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [PersonnelClassVersionFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [PersonnelClassVersionHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: PersonnelClassVersionFilter
  or: [PersonnelClassVersionFilter]
  version: StringExactFilter_StringFullTextFilter
  versionStatus: VersionState_hash
}
""
input PersonnelClassVersionOrder {
  asc: PersonnelClassVersionOrderable
  desc: PersonnelClassVersionOrderable
  then: PersonnelClassVersionOrder
}
""
input PersonnelClassVersionPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Additional information and description about the personnel class. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific personnel class. "
  id: String
  includesPropertiesOf: [PersonnelClassRef]
  isActiveVersionOf: PersonnelClassRef
  personnelClass: PersonnelClassRef
  properties: [PersonnelClassPropertyRef]
  recordEntries: [InformationObjectRef]
  stateModels: [StateModelDefinitionRef]
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input PersonnelClassVersionRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Additional information and description about the personnel class. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific personnel class. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  includesPropertiesOf: [PersonnelClassRef]
  isActiveVersionOf: PersonnelClassRef
  personnelClass: PersonnelClassRef
  properties: [PersonnelClassPropertyRef]
  recordEntries: [InformationObjectRef]
  stateModels: [StateModelDefinitionRef]
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input PersonnelRequirementFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [PersonnelRequirementFilter]
  description: StringExactFilter_StringFullTextFilter
  has: [PersonnelRequirementHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: PersonnelRequirementFilter
  or: [PersonnelRequirementFilter]
  use: StringExactFilter_StringFullTextFilter
}
""
input PersonnelRequirementOrder {
  asc: PersonnelRequirementOrderable
  desc: PersonnelRequirementOrderable
  then: PersonnelRequirementOrder
}
""
input PersonnelRequirementPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PersonnelRequirementRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the personnel requirement. "
  description: String
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific personnel requirement. "
  id: String
  jobOrder: JobOrderRef
  operationalLocation: OperationalLocationRef
  parent: PersonnelRequirementRef
  person: PersonRef
  personnelClass: PersonnelClassRef
  properties: [PersonnelRequirementPropertyRef]
  " Specifies the amount of personnel resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  segmentRequirement: SegmentRequirementRef
  signatures: [SignatureRef]
  specifiesTests: [TestSpecificationRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  " Defines the expected use of the personnel class or person in the context of the segment requirement. "
  use: String
}
""
input PersonnelRequirementPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [PersonnelRequirementPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  has: [PersonnelRequirementPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: PersonnelRequirementPropertyFilter
  or: [PersonnelRequirementPropertyFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input PersonnelRequirementPropertyOrder {
  asc: PersonnelRequirementPropertyOrderable
  desc: PersonnelRequirementPropertyOrderable
  then: PersonnelRequirementPropertyOrder
}
""
input PersonnelRequirementPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PersonnelRequirementPropertyRef]
  " Contains additional information and descriptions of the personnel requirement property definition. "
  description: String
  " An identification of the associated person property or personnel class property for a specific segment requirement. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  parent: PersonnelRequirementPropertyRef
  personProperty: PersonPropertyRef
  personnelClassProperty: PersonnelClassPropertyRef
  personnelRequirement: PersonnelRequirementRef
  " Specifies the amount of the property required for the parent personnel requirement. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input PersonnelRequirementPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PersonnelRequirementPropertyRef]
  " Contains additional information and descriptions of the personnel requirement property definition. "
  description: String
  " An identification of the associated person property or personnel class property for a specific segment requirement. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  parent: PersonnelRequirementPropertyRef
  personProperty: PersonPropertyRef
  personnelClassProperty: PersonnelClassPropertyRef
  personnelRequirement: PersonnelRequirementRef
  " Specifies the amount of the property required for the parent personnel requirement. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input PersonnelRequirementRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PersonnelRequirementRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the personnel requirement. "
  description: String
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific personnel requirement. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  jobOrder: JobOrderRef
  operationalLocation: OperationalLocationRef
  parent: PersonnelRequirementRef
  person: PersonRef
  personnelClass: PersonnelClassRef
  properties: [PersonnelRequirementPropertyRef]
  " Specifies the amount of personnel resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  segmentRequirement: SegmentRequirementRef
  signatures: [SignatureRef]
  specifiesTests: [TestSpecificationRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  " Defines the expected use of the personnel class or person in the context of the segment requirement. "
  use: String
}
""
input PersonnelSpecificationFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [PersonnelSpecificationFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [PersonnelSpecificationHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: PersonnelSpecificationFilter
  or: [PersonnelSpecificationFilter]
  personnelUse: StringExactFilter_StringFullTextFilter
}
""
input PersonnelSpecificationOrder {
  asc: PersonnelSpecificationOrderable
  desc: PersonnelSpecificationOrderable
  then: PersonnelSpecificationOrder
}
""
input PersonnelSpecificationPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PersonnelSpecificationRef]
  " Contains additional information of the personnel specification. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific personnel segment specification. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  operationalLocation: OperationalLocationRef
  operationsSegment: OperationsSegmentRef
  parent: PersonnelSpecificationRef
  person: PersonRef
  personnelClass: PersonnelClassRef
  " Defines the expected use of the personnel class or person in the context of the operations segment. "
  personnelUse: String
  processSegmentVersion: ProcessSegmentVersionRef
  properties: [PersonnelSpecificationPropertyRef]
  " Specifies the amount of personnel resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  specifiesTests: [TestSpecificationRef]
  testResults: TestResultRef
  testedBy: [TestSpecificationRef]
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
}
""
input PersonnelSpecificationPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [PersonnelSpecificationPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [PersonnelSpecificationPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: PersonnelSpecificationPropertyFilter
  or: [PersonnelSpecificationPropertyFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input PersonnelSpecificationPropertyOrder {
  asc: PersonnelSpecificationPropertyOrderable
  desc: PersonnelSpecificationPropertyOrderable
  then: PersonnelSpecificationPropertyOrder
}
""
input PersonnelSpecificationPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PersonnelSpecificationPropertyRef]
  " Contains additional information and descriptions of the personnel specification property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of a property of the associated person property or personnel class property for a specific segment. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  parent: PersonnelSpecificationPropertyRef
  personProperty: PersonPropertyRef
  personnelClassProperty: PersonnelClassPropertyRef
  personnelSpecification: PersonnelSpecificationRef
  " Specifies the amount of personnel resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input PersonnelSpecificationPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PersonnelSpecificationPropertyRef]
  " Contains additional information and descriptions of the personnel specification property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of a property of the associated person property or personnel class property for a specific segment. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  parent: PersonnelSpecificationPropertyRef
  personProperty: PersonPropertyRef
  personnelClassProperty: PersonnelClassPropertyRef
  personnelSpecification: PersonnelSpecificationRef
  " Specifies the amount of personnel resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input PersonnelSpecificationRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PersonnelSpecificationRef]
  " Contains additional information of the personnel specification. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific personnel segment specification. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  operationalLocation: OperationalLocationRef
  operationsSegment: OperationsSegmentRef
  parent: PersonnelSpecificationRef
  person: PersonRef
  personnelClass: PersonnelClassRef
  " Defines the expected use of the personnel class or person in the context of the operations segment. "
  personnelUse: String
  processSegmentVersion: ProcessSegmentVersionRef
  properties: [PersonnelSpecificationPropertyRef]
  " Specifies the amount of personnel resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  specifiesTests: [TestSpecificationRef]
  testResults: TestResultRef
  testedBy: [TestSpecificationRef]
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
}
""
input PhysicalAssetActualFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [PhysicalAssetActualFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [PhysicalAssetActualHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: PhysicalAssetActualFilter
  or: [PhysicalAssetActualFilter]
  physicalAssetUse: StringExactFilter_StringFullTextFilter
}
""
input PhysicalAssetActualOrder {
  asc: PhysicalAssetActualOrderable
  desc: PhysicalAssetActualOrderable
  then: PhysicalAssetActualOrder
}
""
input PhysicalAssetActualPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PhysicalAssetActualRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the physical asset actual. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " Defines a unique identification of a physical asset actual. "
  id: String
  jobResponse: JobResponseRef
  parent: PhysicalAssetActualRef
  physicalAsset: PhysicalAssetRef
  physicalAssetClass: PhysicalAssetClassRef
  " Defines the actual use of the physical asset class or physical asset.. "
  physicalAssetUse: String
  physicalAssetVersion: PhysicalAssetVersionRef
  physicalLocation: OperationalLocationRef
  properties: [PhysicalAssetActualPropertyRef]
  " Specifies the amount of equipment resources used in parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  segmentResponse: SegmentResponseRef
  signatures: [SignatureRef]
  spatialDefinition: SpatialDefinitionRef
  testResults: [TestResultRef]
}
""
input PhysicalAssetActualPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [PhysicalAssetActualPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [PhysicalAssetActualPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: PhysicalAssetActualPropertyFilter
  or: [PhysicalAssetActualPropertyFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input PhysicalAssetActualPropertyOrder {
  asc: PhysicalAssetActualPropertyOrderable
  desc: PhysicalAssetActualPropertyOrderable
  then: PhysicalAssetActualPropertyOrder
}
""
input PhysicalAssetActualPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PhysicalAssetActualPropertyRef]
  " Contains additional information and descriptions of the physical asset actual property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of the associated physical asset property or class property for a specific segment response. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  parent: PhysicalAssetActualPropertyRef
  physicalAssetActual: PhysicalAssetActualRef
  physicalAssetClassProperty: PhysicalAssetClassPropertyRef
  physicalAssetProperty: PhysicalAssetPropertyRef
  " Specifies the amount of physical asset resources used in parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  " The value or set of values for the associated property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input PhysicalAssetActualPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PhysicalAssetActualPropertyRef]
  " Contains additional information and descriptions of the physical asset actual property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of the associated physical asset property or class property for a specific segment response. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  parent: PhysicalAssetActualPropertyRef
  physicalAssetActual: PhysicalAssetActualRef
  physicalAssetClassProperty: PhysicalAssetClassPropertyRef
  physicalAssetProperty: PhysicalAssetPropertyRef
  " Specifies the amount of physical asset resources used in parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  " The value or set of values for the associated property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input PhysicalAssetActualRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PhysicalAssetActualRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the physical asset actual. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " Defines a unique identification of a physical asset actual. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  jobResponse: JobResponseRef
  parent: PhysicalAssetActualRef
  physicalAsset: PhysicalAssetRef
  physicalAssetClass: PhysicalAssetClassRef
  " Defines the actual use of the physical asset class or physical asset.. "
  physicalAssetUse: String
  physicalAssetVersion: PhysicalAssetVersionRef
  physicalLocation: OperationalLocationRef
  properties: [PhysicalAssetActualPropertyRef]
  " Specifies the amount of equipment resources used in parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  segmentResponse: SegmentResponseRef
  signatures: [SignatureRef]
  spatialDefinition: SpatialDefinitionRef
  testResults: [TestResultRef]
}
""
input PhysicalAssetClassFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [PhysicalAssetClassFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [PhysicalAssetClassHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: PhysicalAssetClassFilter
  or: [PhysicalAssetClassFilter]
}
""
input PhysicalAssetClassOrder {
  asc: PhysicalAssetClassOrderable
  desc: PhysicalAssetClassOrderable
  then: PhysicalAssetClassOrder
}
""
input PhysicalAssetClassPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: PhysicalAssetClassVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The manufacture's identification of the specific physical asset class. "
  id: String
  isIncludedIn: [PhysicalAssetClassVersionRef]
  isMadeUpOf: [PhysicalAssetClassRef]
  isPartOf: [PhysicalAssetClassRef]
  " The last node in the fully qualified id "
  label: String
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  physicalAssetActual: [PhysicalAssetActualRef]
  physicalAssetRequirements: [PhysicalAssetRequirementRef]
  physicalAssetSpecifications: [PhysicalAssetSpecificationRef]
  physicalAssetVersions: [PhysicalAssetVersionRef]
  recordEntries: [InformationObjectRef]
  specifiesTests: [TestSpecificationRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  " The icon for the menu in the libre admin UI menu. "
  uiSortIndex: Int
  versions: [PhysicalAssetClassVersionRef]
}
""
input PhysicalAssetClassPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [PhysicalAssetClassPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [PhysicalAssetClassPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: PhysicalAssetClassPropertyFilter
  or: [PhysicalAssetClassPropertyFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input PhysicalAssetClassPropertyOrder {
  asc: PhysicalAssetClassPropertyOrderable
  desc: PhysicalAssetClassPropertyOrderable
  then: PhysicalAssetClassPropertyOrder
}
""
input PhysicalAssetClassPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PhysicalAssetClassPropertyRef]
  correspondsTo: EvaluatedPropertyRef
  " Additional information about the property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of the specific property. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  parent: PhysicalAssetClassPropertyRef
  physicalAssetActualProperties: [PhysicalAssetActualPropertyRef]
  physicalAssetClassVersion: PhysicalAssetClassVersionRef
  physicalAssetProperty: PhysicalAssetPropertyRef
  physicalAssetRequirementProperties: [PhysicalAssetRequirementPropertyRef]
  physicalAssetSpecificationProperties: [PhysicalAssetSpecificationPropertyRef]
  " Defines the type of the property. "
  propertyType: Isa95PropertyType
  recordsMeasurementOf: [PropertyMeasurementRef]
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input PhysicalAssetClassPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PhysicalAssetClassPropertyRef]
  correspondsTo: EvaluatedPropertyRef
  " Additional information about the property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of the specific property. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  parent: PhysicalAssetClassPropertyRef
  physicalAssetActualProperties: [PhysicalAssetActualPropertyRef]
  physicalAssetClassVersion: PhysicalAssetClassVersionRef
  physicalAssetProperty: PhysicalAssetPropertyRef
  physicalAssetRequirementProperties: [PhysicalAssetRequirementPropertyRef]
  physicalAssetSpecificationProperties: [PhysicalAssetSpecificationPropertyRef]
  " Defines the type of the property. "
  propertyType: Isa95PropertyType
  recordsMeasurementOf: [PropertyMeasurementRef]
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input PhysicalAssetClassRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: PhysicalAssetClassVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The manufacture's identification of the specific physical asset class. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  isIncludedIn: [PhysicalAssetClassVersionRef]
  isMadeUpOf: [PhysicalAssetClassRef]
  isPartOf: [PhysicalAssetClassRef]
  " The last node in the fully qualified id "
  label: String
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  physicalAssetActual: [PhysicalAssetActualRef]
  physicalAssetRequirements: [PhysicalAssetRequirementRef]
  physicalAssetSpecifications: [PhysicalAssetSpecificationRef]
  physicalAssetVersions: [PhysicalAssetVersionRef]
  recordEntries: [InformationObjectRef]
  specifiesTests: [TestSpecificationRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  " The icon for the menu in the libre admin UI menu. "
  uiSortIndex: Int
  versions: [PhysicalAssetClassVersionRef]
}
""
input PhysicalAssetClassVersionFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [PhysicalAssetClassVersionFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [PhysicalAssetClassVersionHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  manufacturer: StringExactFilter_StringFullTextFilter
  not: PhysicalAssetClassVersionFilter
  or: [PhysicalAssetClassVersionFilter]
  version: StringExactFilter_StringFullTextFilter
  versionStatus: VersionState_hash
}
""
input PhysicalAssetClassVersionOrder {
  asc: PhysicalAssetClassVersionOrderable
  desc: PhysicalAssetClassVersionOrderable
  then: PhysicalAssetClassVersionOrder
}
""
input PhysicalAssetClassVersionPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Additional information about the physical asset class. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " The manufacture's identification of the specific physical asset class. "
  id: String
  includesPropertiesOf: [PhysicalAssetClassRef]
  isActiveVersionOf: PhysicalAssetClassRef
  " An identification of the manufacturer. "
  manufacturer: String
  physicalAssetClass: PhysicalAssetClassRef
  properties: [PhysicalAssetClassPropertyRef]
  recordEntries: [InformationObjectRef]
  stateModels: [StateModelDefinitionRef]
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input PhysicalAssetClassVersionRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Additional information about the physical asset class. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " The manufacture's identification of the specific physical asset class. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  includesPropertiesOf: [PhysicalAssetClassRef]
  isActiveVersionOf: PhysicalAssetClassRef
  " An identification of the manufacturer. "
  manufacturer: String
  physicalAssetClass: PhysicalAssetClassRef
  properties: [PhysicalAssetClassPropertyRef]
  recordEntries: [InformationObjectRef]
  stateModels: [StateModelDefinitionRef]
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input PhysicalAssetDataSourceFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [PhysicalAssetDataSourceFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [PhysicalAssetDataSourceHasFilter]
  iid: [ID!]
  not: PhysicalAssetDataSourceFilter
  or: [PhysicalAssetDataSourceFilter]
}
""
input PhysicalAssetDataSourceOrder {
  asc: PhysicalAssetDataSourceOrderable
  desc: PhysicalAssetDataSourceOrderable
  then: PhysicalAssetDataSourceOrder
}
""
input PhysicalAssetDataSourcePatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  dataSourceVersion: DataSourceVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  physicalAssetVersion: PhysicalAssetVersionRef
  " This JSONata transform resolves the data source topic id for the properties of the equipment"
  topicTemplate: String
}
""
input PhysicalAssetDataSourceRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  dataSourceVersion: DataSourceVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " Unique internal database identifier. "
  iid: ID
  physicalAssetVersion: PhysicalAssetVersionRef
  " This JSONata transform resolves the data source topic id for the properties of the equipment"
  topicTemplate: String
}
""
input PhysicalAssetFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [PhysicalAssetFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [PhysicalAssetHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: PhysicalAssetFilter
  or: [PhysicalAssetFilter]
}
""
input PhysicalAssetOrder {
  asc: PhysicalAssetOrderable
  desc: PhysicalAssetOrderable
  then: PhysicalAssetOrder
}
""
input PhysicalAssetPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: PhysicalAssetVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipment: EquipmentRef
  equipmentAssetMapping: [EquipmentAssetMappingRef]
  events: [EventRef]
  " Defines a unique identification of a physical asset. "
  id: String
  isMadeUpOf: [PhysicalAssetRef]
  isPartOf: [PhysicalAssetRef]
  " Defines a unique identification of a physical asset. "
  label: String
  materialLots: [MaterialLotRef]
  materialSubLots: [MaterialSubLotRef]
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  physicalAssetActual: [PhysicalAssetActualRef]
  physicalAssetRequirements: [PhysicalAssetRequirementRef]
  physicalAssetSpecifications: [PhysicalAssetSpecificationRef]
  recordEntries: [InformationObjectRef]
  specifiesTests: [TestSpecificationRef]
  stateModelInstances: [StateModelInstanceRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  " The icon for the menu in the libre admin UI menu. "
  uiSortIndex: Int
  versions: [PhysicalAssetVersionRef]
}
""
input PhysicalAssetPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [PhysicalAssetPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [PhysicalAssetPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: PhysicalAssetPropertyFilter
  or: [PhysicalAssetPropertyFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input PhysicalAssetPropertyOrder {
  asc: PhysicalAssetPropertyOrderable
  desc: PhysicalAssetPropertyOrderable
  then: PhysicalAssetPropertyOrder
}
""
input PhysicalAssetPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PhysicalAssetPropertyRef]
  correspondsTo: EvaluatedPropertyRef
  " Additional information about the asset property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of the specific property. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  parent: PhysicalAssetPropertyRef
  physicalAssetActualProperties: [PhysicalAssetActualPropertyRef]
  physicalAssetClassProperty: PhysicalAssetClassPropertyRef
  physicalAssetRequirementProperties: [PhysicalAssetRequirementPropertyRef]
  physicalAssetSpecificationProperties: [PhysicalAssetSpecificationPropertyRef]
  physicalAssetVersion: PhysicalAssetVersionRef
  recordsMeasurementOf: [PropertyMeasurementRef]
  " The value, set of values, or range of the property. "
  value: String
  " The lower limit that would trigger an alert. "
  valueLowerControlLimit: Float
  " The lower limit that impacts the quality of the product. "
  valueLowerSpecLimit: Float
  " Target value. "
  valueSetPoint: String
  valueUnitOfMeasure: UnitOfMeasureRef
  " The upper limit that would trigger an alert. "
  valueUpperControlLimit: Float
  " The upper limit that impacts the quality of the product. "
  valueUpperSpecLimit: Float
}
""
input PhysicalAssetPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PhysicalAssetPropertyRef]
  correspondsTo: EvaluatedPropertyRef
  " Additional information about the asset property. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of the specific property. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  parent: PhysicalAssetPropertyRef
  physicalAssetActualProperties: [PhysicalAssetActualPropertyRef]
  physicalAssetClassProperty: PhysicalAssetClassPropertyRef
  physicalAssetRequirementProperties: [PhysicalAssetRequirementPropertyRef]
  physicalAssetSpecificationProperties: [PhysicalAssetSpecificationPropertyRef]
  physicalAssetVersion: PhysicalAssetVersionRef
  recordsMeasurementOf: [PropertyMeasurementRef]
  " The value, set of values, or range of the property. "
  value: String
  " The lower limit that would trigger an alert. "
  valueLowerControlLimit: Float
  " The lower limit that impacts the quality of the product. "
  valueLowerSpecLimit: Float
  " Target value. "
  valueSetPoint: String
  valueUnitOfMeasure: UnitOfMeasureRef
  " The upper limit that would trigger an alert. "
  valueUpperControlLimit: Float
  " The upper limit that impacts the quality of the product. "
  valueUpperSpecLimit: Float
}
""
input PhysicalAssetRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: PhysicalAssetVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipment: EquipmentRef
  equipmentAssetMapping: [EquipmentAssetMappingRef]
  events: [EventRef]
  " Defines a unique identification of a physical asset. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  isMadeUpOf: [PhysicalAssetRef]
  isPartOf: [PhysicalAssetRef]
  " Defines a unique identification of a physical asset. "
  label: String
  materialLots: [MaterialLotRef]
  materialSubLots: [MaterialSubLotRef]
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  physicalAssetActual: [PhysicalAssetActualRef]
  physicalAssetRequirements: [PhysicalAssetRequirementRef]
  physicalAssetSpecifications: [PhysicalAssetSpecificationRef]
  recordEntries: [InformationObjectRef]
  specifiesTests: [TestSpecificationRef]
  stateModelInstances: [StateModelInstanceRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  " The icon for the menu in the libre admin UI menu. "
  uiSortIndex: Int
  versions: [PhysicalAssetVersionRef]
}
""
input PhysicalAssetRequirementFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [PhysicalAssetRequirementFilter]
  description: StringExactFilter_StringFullTextFilter
  has: [PhysicalAssetRequirementHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: PhysicalAssetRequirementFilter
  or: [PhysicalAssetRequirementFilter]
  use: StringExactFilter_StringFullTextFilter
}
""
input PhysicalAssetRequirementOrder {
  asc: PhysicalAssetRequirementOrderable
  desc: PhysicalAssetRequirementOrderable
  then: PhysicalAssetRequirementOrder
}
""
input PhysicalAssetRequirementPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PhysicalAssetRequirementRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the physical asset requirement. "
  description: String
  " A level definition for the associated element in the hierarchy of the physical asset model "
  equipmentLevel: EquipmentElementLevel
  hierarchyScope: HierarchyScopeRef
  " Defines a unique identification of a physical asset requirement. "
  id: String
  jobOrder: JobOrderRef
  parent: PhysicalAssetRequirementRef
  physicalAsset: PhysicalAssetRef
  physicalAssetClass: PhysicalAssetClassRef
  physicalLocation: OperationalLocationRef
  properties: [PhysicalAssetRequirementPropertyRef]
  " Specifies the amount of equipment resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  segmentRequirement: SegmentRequirementRef
  signatures: [SignatureRef]
  specifiesTests: [TestSpecificationRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  " Defines the expected use of the physical asset class or physical asset. "
  use: String
}
""
input PhysicalAssetRequirementPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [PhysicalAssetRequirementPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  has: [PhysicalAssetRequirementPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: PhysicalAssetRequirementPropertyFilter
  or: [PhysicalAssetRequirementPropertyFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input PhysicalAssetRequirementPropertyOrder {
  asc: PhysicalAssetRequirementPropertyOrderable
  desc: PhysicalAssetRequirementPropertyOrderable
  then: PhysicalAssetRequirementPropertyOrder
}
""
input PhysicalAssetRequirementPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PhysicalAssetRequirementPropertyRef]
  " Contains additional information and descriptions of the equipment requirement property definition. "
  description: String
  " An identification of the associated equipment property or equipment class property for a specific segment requirement. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  parent: PhysicalAssetRequirementPropertyRef
  physicalAssetClassProperty: PhysicalAssetClassPropertyRef
  physicalAssetProperty: PhysicalAssetPropertyRef
  physicalAssetRequirement: PhysicalAssetRequirementRef
  " Specifies the amount of physical asset requirement property required for the parent physical asset. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  " The value, set of values, or range of the associated property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input PhysicalAssetRequirementPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PhysicalAssetRequirementPropertyRef]
  " Contains additional information and descriptions of the equipment requirement property definition. "
  description: String
  " An identification of the associated equipment property or equipment class property for a specific segment requirement. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  parent: PhysicalAssetRequirementPropertyRef
  physicalAssetClassProperty: PhysicalAssetClassPropertyRef
  physicalAssetProperty: PhysicalAssetPropertyRef
  physicalAssetRequirement: PhysicalAssetRequirementRef
  " Specifies the amount of physical asset requirement property required for the parent physical asset. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  " The value, set of values, or range of the associated property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input PhysicalAssetRequirementRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PhysicalAssetRequirementRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the physical asset requirement. "
  description: String
  " A level definition for the associated element in the hierarchy of the physical asset model "
  equipmentLevel: EquipmentElementLevel
  hierarchyScope: HierarchyScopeRef
  " Defines a unique identification of a physical asset requirement. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  jobOrder: JobOrderRef
  parent: PhysicalAssetRequirementRef
  physicalAsset: PhysicalAssetRef
  physicalAssetClass: PhysicalAssetClassRef
  physicalLocation: OperationalLocationRef
  properties: [PhysicalAssetRequirementPropertyRef]
  " Specifies the amount of equipment resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  segmentRequirement: SegmentRequirementRef
  signatures: [SignatureRef]
  specifiesTests: [TestSpecificationRef]
  testResults: [TestResultRef]
  testedBy: [TestSpecificationRef]
  " Defines the expected use of the physical asset class or physical asset. "
  use: String
}
""
input PhysicalAssetSpecificationFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [PhysicalAssetSpecificationFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [PhysicalAssetSpecificationHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: PhysicalAssetSpecificationFilter
  or: [PhysicalAssetSpecificationFilter]
  physicalAssetUse: StringExactFilter_StringFullTextFilter
}
""
input PhysicalAssetSpecificationOrder {
  asc: PhysicalAssetSpecificationOrderable
  desc: PhysicalAssetSpecificationOrderable
  then: PhysicalAssetSpecificationOrder
}
""
input PhysicalAssetSpecificationPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PhysicalAssetSpecificationRef]
  " Contains additional information of the physical asset specification. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific physical asset segment specification. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  operationsSegment: OperationsSegmentRef
  parent: PhysicalAssetSpecificationRef
  physicalAsset: PhysicalAssetRef
  physicalAssetClass: PhysicalAssetClassRef
  " Defines the expected use of the physical asset class or physical asset in the context of the operations segment. "
  physicalAssetUse: String
  physicalLocation: OperationalLocationRef
  processSegmentVersion: ProcessSegmentVersionRef
  properties: [PhysicalAssetSpecificationPropertyRef]
  " Specifies the amount of physical asset resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
}
""
input PhysicalAssetSpecificationPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [PhysicalAssetSpecificationPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [PhysicalAssetSpecificationPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: PhysicalAssetSpecificationPropertyFilter
  or: [PhysicalAssetSpecificationPropertyFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input PhysicalAssetSpecificationPropertyOrder {
  asc: PhysicalAssetSpecificationPropertyOrderable
  desc: PhysicalAssetSpecificationPropertyOrderable
  then: PhysicalAssetSpecificationPropertyOrder
}
""
input PhysicalAssetSpecificationPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PhysicalAssetSpecificationPropertyRef]
  " Contains additional information and descriptions of the physical asset specification property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of a property of the associated physical asset property or physical asset class property for a specific segment. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  parent: PhysicalAssetSpecificationPropertyRef
  physicalAssetClassProperty: PhysicalAssetClassPropertyRef
  physicalAssetProperty: PhysicalAssetPropertyRef
  physicalAssetSpecification: PhysicalAssetSpecificationRef
  " Specifies the amount of physical asset resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input PhysicalAssetSpecificationPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PhysicalAssetSpecificationPropertyRef]
  " Contains additional information and descriptions of the physical asset specification property definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " An identification of a property of the associated physical asset property or physical asset class property for a specific segment. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  parent: PhysicalAssetSpecificationPropertyRef
  physicalAssetClassProperty: PhysicalAssetClassPropertyRef
  physicalAssetProperty: PhysicalAssetPropertyRef
  physicalAssetSpecification: PhysicalAssetSpecificationRef
  " Specifies the amount of physical asset resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input PhysicalAssetSpecificationRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [PhysicalAssetSpecificationRef]
  " Contains additional information of the physical asset specification. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific physical asset segment specification. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  operationsSegment: OperationsSegmentRef
  parent: PhysicalAssetSpecificationRef
  physicalAsset: PhysicalAssetRef
  physicalAssetClass: PhysicalAssetClassRef
  " Defines the expected use of the physical asset class or physical asset in the context of the operations segment. "
  physicalAssetUse: String
  physicalLocation: OperationalLocationRef
  processSegmentVersion: ProcessSegmentVersionRef
  properties: [PhysicalAssetSpecificationPropertyRef]
  " Specifies the amount of physical asset resources required for the parent segment. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
}
""
input PhysicalAssetVersionFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [PhysicalAssetVersionFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  fixedAssetID: StringExactFilter_StringFullTextFilter
  has: [PhysicalAssetVersionHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: PhysicalAssetVersionFilter
  or: [PhysicalAssetVersionFilter]
  physicalLocationDescription: StringExactFilter_StringFullTextFilter
  vendorID: StringExactFilter_StringFullTextFilter
  version: StringExactFilter_StringFullTextFilter
  versionStatus: VersionState_hash
}
""
input PhysicalAssetVersionOrder {
  asc: PhysicalAssetVersionOrderable
  desc: PhysicalAssetVersionOrderable
  then: PhysicalAssetVersionOrder
}
""
input PhysicalAssetVersionPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  dataSources: [PhysicalAssetDataSourceRef]
  " Contains additional information and descriptions of the physical asset. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " Contains a unique identification for financial tracking as required by laws or regulations. "
  fixedAssetID: String
  hierarchyScope: HierarchyScopeRef
  " Defines a unique identification of a physical asset. "
  id: String
  isActiveVersionOf: PhysicalAssetRef
  physicalAsset: PhysicalAssetRef
  physicalAssetActual: [PhysicalAssetActualRef]
  physicalAssetClasses: [PhysicalAssetClassRef]
  physicalLocation: OperationalLocationRef
  " Identifies the physical location of the physical asset. "
  physicalLocationDescription: String
  properties: [PhysicalAssetPropertyRef]
  recordEntries: [InformationObjectRef]
  spatialDefinition: SpatialDefinitionRef
  stateModels: [StateModelDefinitionRef]
  " Contains a vendor's serial number. "
  vendorID: String
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input PhysicalAssetVersionRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  dataSources: [PhysicalAssetDataSourceRef]
  " Contains additional information and descriptions of the physical asset. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " Contains a unique identification for financial tracking as required by laws or regulations. "
  fixedAssetID: String
  hierarchyScope: HierarchyScopeRef
  " Defines a unique identification of a physical asset. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  isActiveVersionOf: PhysicalAssetRef
  physicalAsset: PhysicalAssetRef
  physicalAssetActual: [PhysicalAssetActualRef]
  physicalAssetClasses: [PhysicalAssetClassRef]
  physicalLocation: OperationalLocationRef
  " Identifies the physical location of the physical asset. "
  physicalLocationDescription: String
  properties: [PhysicalAssetPropertyRef]
  recordEntries: [InformationObjectRef]
  spatialDefinition: SpatialDefinitionRef
  stateModels: [StateModelDefinitionRef]
  " Contains a vendor's serial number. "
  vendorID: String
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input PointGeoFilter {
  near: NearFilter
  within: WithinFilter
}
""
input PointListRef {
  points: [PointRef!]!
}
""
input PointRef {
  latitude: Float!
  longitude: Float!
}
""
input PolygonGeoFilter {
  contains: ContainsFilter
  intersects: IntersectsFilter
  near: NearFilter
  within: WithinFilter
}
""
input PolygonRef {
  coordinates: [PointListRef!]!
}
""
input ProcessLocation_hash {
  eq: ProcessLocation
  in: [ProcessLocation]
}
""
input ProcessSegmentDependencyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [ProcessSegmentDependencyFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [ProcessSegmentDependencyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: ProcessSegmentDependencyFilter
  or: [ProcessSegmentDependencyFilter]
}
""
input ProcessSegmentDependencyOrder {
  asc: ProcessSegmentDependencyOrderable
  desc: ProcessSegmentDependencyOrderable
  then: ProcessSegmentDependencyOrder
}
""
input ProcessSegmentDependencyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " A condition required to transition between process segments. Expressed as JSONata expression. "
  condition: String
  " Factor used by dependency. "
  dependencyFactor: Float
  " Defines the execution dependency constraints of one segment to another segment. "
  dependencyType: DependencyType
  " Contains additional information and descriptions of the segment dependency definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  factorUoM: UnitOfMeasureRef
  from: ProcessSegmentRef
  " The identification of the unique instance of the process segment dependency. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  rules: [RuleRef]
  to: ProcessSegmentRef
}
""
input ProcessSegmentDependencyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " A condition required to transition between process segments. Expressed as JSONata expression. "
  condition: String
  " Factor used by dependency. "
  dependencyFactor: Float
  " Defines the execution dependency constraints of one segment to another segment. "
  dependencyType: DependencyType
  " Contains additional information and descriptions of the segment dependency definition. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  factorUoM: UnitOfMeasureRef
  from: ProcessSegmentRef
  " The identification of the unique instance of the process segment dependency. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  rules: [RuleRef]
  to: ProcessSegmentRef
}
""
input ProcessSegmentFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [ProcessSegmentFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [ProcessSegmentHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: ProcessSegmentFilter
  or: [ProcessSegmentFilter]
}
""
input ProcessSegmentOrder {
  asc: ProcessSegmentOrderable
  desc: ProcessSegmentOrderable
  then: ProcessSegmentOrder
}
""
input ProcessSegmentParameterFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [ProcessSegmentParameterFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [ProcessSegmentParameterHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: ProcessSegmentParameterFilter
  or: [ProcessSegmentParameterFilter]
}
""
input ProcessSegmentParameterOrder {
  asc: ProcessSegmentParameterOrderable
  desc: ProcessSegmentParameterOrderable
  then: ProcessSegmentParameterOrder
}
""
input ProcessSegmentParameterPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [ProcessSegmentParameterRef]
  " Contains additional information. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " Identification of the process segment parameter. "
  id: String
  jobOrderParameter: JobOrderParameterRef
  " The label is last node in the fully qualified name. "
  label: String
  parent: ProcessSegmentParameterRef
  processSegmentVersion: ProcessSegmentVersionRef
  segmentParameters: [SegmentParameterRef]
  " The value, set of values, or range of acceptable values. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input ProcessSegmentParameterRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [ProcessSegmentParameterRef]
  " Contains additional information. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " Identification of the process segment parameter. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  jobOrderParameter: JobOrderParameterRef
  " The label is last node in the fully qualified name. "
  label: String
  parent: ProcessSegmentParameterRef
  processSegmentVersion: ProcessSegmentVersionRef
  segmentParameters: [SegmentParameterRef]
  " The value, set of values, or range of acceptable values. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input ProcessSegmentPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: ProcessSegmentVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " A unique identification of a process segment, within the scope of the information exchanged. "
  id: String
  inflows: [ProcessSegmentDependencyRef]
  isMadeUpOf: [ProcessSegmentRef]
  isPartOf: ProcessSegmentRef
  " A user-friendly identifier for this entity "
  label: String
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  operationsSegments: [OperationsSegmentRef]
  outflows: [ProcessSegmentDependencyRef]
  recordEntries: [InformationObjectRef]
  segmentRequirements: [SegmentRequirementRef]
  segmentResponses: [SegmentResponseRef]
  versions: [ProcessSegmentVersionRef]
  workMasters: [WorkMasterRef]
}
""
input ProcessSegmentRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: ProcessSegmentVersionRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " A unique identification of a process segment, within the scope of the information exchanged. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  inflows: [ProcessSegmentDependencyRef]
  isMadeUpOf: [ProcessSegmentRef]
  isPartOf: ProcessSegmentRef
  " A user-friendly identifier for this entity "
  label: String
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  operationsSegments: [OperationsSegmentRef]
  outflows: [ProcessSegmentDependencyRef]
  recordEntries: [InformationObjectRef]
  segmentRequirements: [SegmentRequirementRef]
  segmentResponses: [SegmentResponseRef]
  versions: [ProcessSegmentVersionRef]
  workMasters: [WorkMasterRef]
}
""
input ProcessSegmentVersionFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [ProcessSegmentVersionFilter]
  description: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [ProcessSegmentVersionHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: ProcessSegmentVersionFilter
  operationsType: WorkType_hash
  or: [ProcessSegmentVersionFilter]
  version: StringExactFilter_StringFullTextFilter
  versionStatus: VersionState_hash
}
""
input ProcessSegmentVersionOrder {
  asc: ProcessSegmentVersionOrderable
  desc: ProcessSegmentVersionOrderable
  then: ProcessSegmentVersionOrder
}
""
input ProcessSegmentVersionPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Defines the type of the process segment. "
  definitionType: DefinitionType
  " Description of the process segment"
  description: String
  " Duration of process segment. "
  duration: Float
  durationUoM: UnitOfMeasureRef
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  equipmentSpecifications: [EquipmentSpecificationRef]
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a process segment version, within the scope of the information exchanged. "
  id: String
  isActiveVersionOf: ProcessSegmentRef
  materialSpecifications: [MaterialSpecificationRef]
  " Describes the category of the activity. "
  operationsType: WorkType
  personnelSpecifications: [PersonnelSpecificationRef]
  physicalAssetSpecifications: [PhysicalAssetSpecificationRef]
  processSegment: ProcessSegmentRef
  processSegmentParameters: [ProcessSegmentParameterRef]
  recordEntries: [InformationObjectRef]
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input ProcessSegmentVersionRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Defines the type of the process segment. "
  definitionType: DefinitionType
  " Description of the process segment"
  description: String
  " Duration of process segment. "
  duration: Float
  durationUoM: UnitOfMeasureRef
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  equipmentSpecifications: [EquipmentSpecificationRef]
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a process segment version, within the scope of the information exchanged. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  isActiveVersionOf: ProcessSegmentRef
  materialSpecifications: [MaterialSpecificationRef]
  " Describes the category of the activity. "
  operationsType: WorkType
  personnelSpecifications: [PersonnelSpecificationRef]
  physicalAssetSpecifications: [PhysicalAssetSpecificationRef]
  processSegment: ProcessSegmentRef
  processSegmentParameters: [ProcessSegmentParameterRef]
  recordEntries: [InformationObjectRef]
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input PropertyBindingType_hash {
  eq: PropertyBindingType
  in: [PropertyBindingType]
}
""
input PropertyMeasurementFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [PropertyMeasurementFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [PropertyMeasurementHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: PropertyMeasurementFilter
  or: [PropertyMeasurementFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input PropertyMeasurementOrder {
  asc: PropertyMeasurementOrderable
  desc: PropertyMeasurementOrderable
  then: PropertyMeasurementOrder
}
""
input PropertyMeasurementPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Additional information about the property measurement. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentClassProperty: EquipmentClassPropertyRef
  equipmentProperty: EquipmentPropertyRef
  " The date of the expiration of the property measurement. "
  expiration: DateTime
  " An identification of the specific property measurement. "
  id: String
  materialClassProperty: MaterialClassPropertyRef
  materialDefinitionProperty: MaterialDefinitionPropertyRef
  materialLotProperty: MaterialLotPropertyRef
  " The date and time when the measurement was obtained. "
  measurementDate: DateTime
  personProperty: PersonPropertyRef
  personnelClassProperty: PersonnelClassPropertyRef
  physicalAssetClassProperty: PhysicalAssetClassPropertyRef
  physicalAssetProperty: PhysicalAssetPropertyRef
  recordEntries: [InformationObjectRef]
  testResult: TestResultRef
  " The measured value for the testable object property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
}
""
input PropertyMeasurementRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Additional information about the property measurement. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentClassProperty: EquipmentClassPropertyRef
  equipmentProperty: EquipmentPropertyRef
  " The date of the expiration of the property measurement. "
  expiration: DateTime
  " An identification of the specific property measurement. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  materialClassProperty: MaterialClassPropertyRef
  materialDefinitionProperty: MaterialDefinitionPropertyRef
  materialLotProperty: MaterialLotPropertyRef
  " The date and time when the measurement was obtained. "
  measurementDate: DateTime
  personProperty: PersonPropertyRef
  personnelClassProperty: PersonnelClassPropertyRef
  physicalAssetClassProperty: PhysicalAssetClassPropertyRef
  physicalAssetProperty: PhysicalAssetPropertyRef
  recordEntries: [InformationObjectRef]
  testResult: TestResultRef
  " The measured value for the testable object property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
}
""
input PropertyNameAliasFilter {
  and: [PropertyNameAliasFilter]
  dataSourceTopicLabel: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  has: [PropertyNameAliasHasFilter]
  iid: [ID!]
  not: PropertyNameAliasFilter
  or: [PropertyNameAliasFilter]
  propertyLabel: StringExactFilter_StringFullTextFilter_StringRegExpFilter
}
""
input PropertyNameAliasOrder {
  asc: PropertyNameAliasOrderable
  desc: PropertyNameAliasOrderable
  then: PropertyNameAliasOrder
}
""
input PropertyNameAliasPatch {
  dataSource: DataSourceRef
  dataSourceTopic: DataSourceTopicRef
  dataSourceTopicLabel: String
  equipmentVersion: EquipmentVersionRef
  expression: String
  propertyLabel: String
}
""
input PropertyNameAliasRef {
  dataSource: DataSourceRef
  dataSourceTopic: DataSourceTopicRef
  dataSourceTopicLabel: String
  equipmentVersion: EquipmentVersionRef
  expression: String
  iid: ID
  propertyLabel: String
}
""
input PropertyValueAliasFilter {
  alias: StringFullTextFilter
  and: [PropertyValueAliasFilter]
  has: [PropertyValueAliasHasFilter]
  iid: [ID!]
  not: PropertyValueAliasFilter
  or: [PropertyValueAliasFilter]
  system: StringFullTextFilter
  value: StringFullTextFilter
}
""
input PropertyValueAliasOrder {
  asc: PropertyValueAliasOrderable
  desc: PropertyValueAliasOrderable
  then: PropertyValueAliasOrder
}
""
input PropertyValueAliasPatch {
  alias: String
  property: EquipmentClassPropertyRef
  system: String
  value: String
}
""
input PropertyValueAliasRef {
  alias: String
  iid: ID
  property: EquipmentClassPropertyRef
  system: String
  value: String
}
""
input RuleFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [RuleFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [RuleHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: RuleFilter
  or: [RuleFilter]
  processLocation: ProcessLocation_hash
}
""
input RuleOrder {
  asc: RuleOrderable
  desc: RuleOrderable
  then: RuleOrder
}
""
input RulePatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " If True, delays the rule triggering. "
  delayOption: Boolean
  " The amount of time the rule is delayed by if DelayOption true. "
  delayTime: Int
  " Additional information about the rule. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentClassVersion: EquipmentClassVersionRef
  " A unique identification of a rule. "
  id: String
  " Label is the name of the rule the client sees on the front end. "
  label: String
  operationsSegment: OperationsSegmentRef
  operationsSegmentDependency: OperationsSegmentDependencyRef
  payloadFields: [PayloadFieldDefinitionRef]
  " The process location related to this rule. "
  processLocation: ProcessLocation
  processSegmentDependency: ProcessSegmentDependencyRef
  " The expression if true triggers the rule. "
  triggerExpression: String
  triggerProperties: [EquipmentClassPropertyRef]
  workflowSpecification: WorkflowSpecificationRef
}
""
input RuleRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " If True, delays the rule triggering. "
  delayOption: Boolean
  " The amount of time the rule is delayed by if DelayOption true. "
  delayTime: Int
  " Additional information about the rule. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentClassVersion: EquipmentClassVersionRef
  " A unique identification of a rule. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " Label is the name of the rule the client sees on the front end. "
  label: String
  operationsSegment: OperationsSegmentRef
  operationsSegmentDependency: OperationsSegmentDependencyRef
  payloadFields: [PayloadFieldDefinitionRef]
  " The process location related to this rule. "
  processLocation: ProcessLocation
  processSegmentDependency: ProcessSegmentDependencyRef
  " The expression if true triggers the rule. "
  triggerExpression: String
  triggerProperties: [EquipmentClassPropertyRef]
  workflowSpecification: WorkflowSpecificationRef
}
""
input ScheduleState_hash {
  eq: ScheduleState
  in: [ScheduleState]
}
""
input SecretFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [SecretFilter]
  has: [SecretHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: SecretFilter
  or: [SecretFilter]
}
""
input SecretOrder {
  asc: SecretOrderable
  desc: SecretOrderable
  then: SecretOrder
}
""
input SecretPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: SecretVersionRef
  " Uniquely identifies the environmental variable. "
  id: String
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  versions: [SecretVersionRef]
}
""
input SecretRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  activeVersion: SecretVersionRef
  " Uniquely identifies the environmental variable. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  versions: [SecretVersionRef]
}
""
input SecretVersionFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [SecretVersionFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [SecretVersionHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: SecretVersionFilter
  or: [SecretVersionFilter]
  version: StringExactFilter_StringFullTextFilter
  versionStatus: VersionState_hash
}
""
input SecretVersionOrder {
  asc: SecretVersionOrderable
  desc: SecretVersionOrderable
  then: SecretVersionOrder
}
""
input SecretVersionPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " Uniquely identifies the environmental variable with the version. "
  id: String
  isActiveVersionOf: SecretRef
  secret: SecretRef
  " The value is decrypted then substuted into any templates in place of the variable's id. "
  value: String
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input SecretVersionRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " Uniquely identifies the environmental variable with the version. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  isActiveVersionOf: SecretRef
  secret: SecretRef
  " The value is decrypted then substuted into any templates in place of the variable's id. "
  value: String
  " The specific version of the entity. Purposely free to allow use with a specific revision scheme. "
  version: String
  " The current state of the version for this entity. "
  versionStatus: VersionState
}
""
input SegmentDataFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [SegmentDataFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [SegmentDataHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: SegmentDataFilter
  or: [SegmentDataFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input SegmentDataOrder {
  asc: SegmentDataOrderable
  desc: SegmentDataOrderable
  then: SegmentDataOrder
}
""
input SegmentDataPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [SegmentDataRef]
  " Contains additional information and descriptions of the segment data. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " The identification of the segment data. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  parent: SegmentDataRef
  segmentResponse: SegmentResponseRef
  " The value or set of values of the segment data. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input SegmentDataRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [SegmentDataRef]
  " Contains additional information and descriptions of the segment data. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " The identification of the segment data. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  parent: SegmentDataRef
  segmentResponse: SegmentResponseRef
  " The value or set of values of the segment data. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input SegmentParameterFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [SegmentParameterFilter]
  description: StringExactFilter_StringFullTextFilter
  has: [SegmentParameterHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: SegmentParameterFilter
  or: [SegmentParameterFilter]
}
""
input SegmentParameterOrder {
  asc: SegmentParameterOrderable
  desc: SegmentParameterOrderable
  then: SegmentParameterOrder
}
""
input SegmentParameterPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [SegmentParameterRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the segment parameter. "
  description: String
  hierarchyScope: HierarchyScopeRef
  " The identification of the segment parameter. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  parameterSpecification: ParameterSpecificationRef
  parent: SegmentParameterRef
  processSegmentParameter: ProcessSegmentParameterRef
  segmentRequirement: SegmentRequirementRef
  " The value, set of values, or range of the value to be used for this parameter. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input SegmentParameterRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [SegmentParameterRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the segment parameter. "
  description: String
  hierarchyScope: HierarchyScopeRef
  " The identification of the segment parameter. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  parameterSpecification: ParameterSpecificationRef
  parent: SegmentParameterRef
  processSegmentParameter: ProcessSegmentParameterRef
  segmentRequirement: SegmentRequirementRef
  " The value, set of values, or range of the value to be used for this parameter. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input SegmentRequirementFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [SegmentRequirementFilter]
  description: StringExactFilter_StringFullTextFilter
  earliestStartDate: DateTimeFilter
  has: [SegmentRequirementHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  latestEndDate: DateTimeFilter
  not: SegmentRequirementFilter
  operationsType: WorkType_hash
  or: [SegmentRequirementFilter]
}
""
input SegmentRequirementOrder {
  asc: SegmentRequirementOrderable
  desc: SegmentRequirementOrderable
  then: SegmentRequirementOrder
}
""
input SegmentRequirementPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [SegmentRequirementRef]
  " Contains additional information and descriptions of the segment requirement. "
  description: String
  " The expected duration of this segment requirement. "
  duration: Float
  durationUoM: UnitOfMeasureRef
  " The expected earliest start time of this segment requirement. "
  earliestStartDate: DateTime
  equipmentRequirements: [EquipmentRequirementRef]
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the segment requirement within the scope of an operations request. "
  id: String
  jobOrders: [JobOrderRef]
  " The expected latest ending time of this segment requirement. "
  latestEndDate: DateTime
  materialRequirements: [MaterialRequirementRef]
  " Notes about this segment requirement. "
  notes: String
  operationsDefinition: OperationsDefinitionRef
  operationsRequest: OperationsRequestRef
  operationsResponses: [OperationsResponseRef]
  operationsSegment: OperationsSegmentRef
  " Describes the category of operation. "
  operationsType: WorkType
  parameters: [SegmentParameterRef]
  parent: SegmentRequirementRef
  personnelRequirements: [PersonnelRequirementRef]
  physicalAssetRequirements: [PhysicalAssetRequirementRef]
  processSegment: ProcessSegmentRef
  segmentResponses: [SegmentResponseRef]
  " Indicates the state of the segment requirement. "
  segmentState: ScheduleState
  workRequests: [WorkRequestRef]
}
""
input SegmentRequirementRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [SegmentRequirementRef]
  " Contains additional information and descriptions of the segment requirement. "
  description: String
  " The expected duration of this segment requirement. "
  duration: Float
  durationUoM: UnitOfMeasureRef
  " The expected earliest start time of this segment requirement. "
  earliestStartDate: DateTime
  equipmentRequirements: [EquipmentRequirementRef]
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the segment requirement within the scope of an operations request. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  jobOrders: [JobOrderRef]
  " The expected latest ending time of this segment requirement. "
  latestEndDate: DateTime
  materialRequirements: [MaterialRequirementRef]
  " Notes about this segment requirement. "
  notes: String
  operationsDefinition: OperationsDefinitionRef
  operationsRequest: OperationsRequestRef
  operationsResponses: [OperationsResponseRef]
  operationsSegment: OperationsSegmentRef
  " Describes the category of operation. "
  operationsType: WorkType
  parameters: [SegmentParameterRef]
  parent: SegmentRequirementRef
  personnelRequirements: [PersonnelRequirementRef]
  physicalAssetRequirements: [PhysicalAssetRequirementRef]
  processSegment: ProcessSegmentRef
  segmentResponses: [SegmentResponseRef]
  " Indicates the state of the segment requirement. "
  segmentState: ScheduleState
  workRequests: [WorkRequestRef]
}
""
input SegmentResponseFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  actualEndDateTime: DateTimeFilter
  actualStartDateTime: DateTimeFilter
  and: [SegmentResponseFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [SegmentResponseHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: SegmentResponseFilter
  operationsType: WorkType_hash
  or: [SegmentResponseFilter]
  postingDateTime: DateTimeFilter
  segmentState: JobState_hash
}
""
input SegmentResponseOrder {
  asc: SegmentResponseOrderable
  desc: SegmentResponseOrderable
  then: SegmentResponseOrder
}
""
input SegmentResponsePatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " The actual end time of this segment response. "
  actualEndDateTime: DateTime
  " The actual start time of this segment response. "
  actualStartDateTime: DateTime
  children: [SegmentResponseRef]
  " Contains additional information and descriptions of the segment response. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentActual: [EquipmentActualRef]
  hierarchyScope: HierarchyScopeRef
  " Uniquely identifies an instance of a segment response executed. "
  id: String
  jobResponses: JobResponseRef
  materialActual: [MaterialActualRef]
  operationsDefinitions: [OperationsDefinitionRef]
  operationsRequests: [OperationsRequestRef]
  operationsResponse: OperationsResponseRef
  operationsSegments: [OperationsSegmentRef]
  " Describes the category of operations. "
  operationsType: WorkType
  parent: SegmentResponseRef
  personnelActual: [PersonnelActualRef]
  physicalAssetActual: [PhysicalAssetActualRef]
  " The date and time used for posting resource actuals to supporting applications. "
  postingDateTime: DateTime
  processSegment: ProcessSegmentRef
  segmentData: [SegmentDataRef]
  segmentRequirements: [SegmentRequirementRef]
  " Indicates the state of the segment response. "
  segmentState: JobState
  workResponses: WorkResponseRef
}
""
input SegmentResponseRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " The actual end time of this segment response. "
  actualEndDateTime: DateTime
  " The actual start time of this segment response. "
  actualStartDateTime: DateTime
  children: [SegmentResponseRef]
  " Contains additional information and descriptions of the segment response. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentActual: [EquipmentActualRef]
  hierarchyScope: HierarchyScopeRef
  " Uniquely identifies an instance of a segment response executed. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  jobResponses: JobResponseRef
  materialActual: [MaterialActualRef]
  operationsDefinitions: [OperationsDefinitionRef]
  operationsRequests: [OperationsRequestRef]
  operationsResponse: OperationsResponseRef
  operationsSegments: [OperationsSegmentRef]
  " Describes the category of operations. "
  operationsType: WorkType
  parent: SegmentResponseRef
  personnelActual: [PersonnelActualRef]
  physicalAssetActual: [PhysicalAssetActualRef]
  " The date and time used for posting resource actuals to supporting applications. "
  postingDateTime: DateTime
  processSegment: ProcessSegmentRef
  segmentData: [SegmentDataRef]
  segmentRequirements: [SegmentRequirementRef]
  " Indicates the state of the segment response. "
  segmentState: JobState
  workResponses: WorkResponseRef
}
""
input SignatureFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [SignatureFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [SignatureHasFilter]
  iid: [ID!]
  not: SignatureFilter
  or: [SignatureFilter]
}
""
input SignatureOrder {
  asc: SignatureOrderable
  desc: SignatureOrderable
  then: SignatureOrder
}
""
input SignaturePatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  alarmEvent: AlarmEventRef
  " An indication enabling detection that the signature has not been altered. The change indication enables detection that the record has been altered, although it may not identify the specific alterations. "
  changeIndication: String
  comment: CommentRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentActual: EquipmentActualRef
  equipmentRequirement: EquipmentRequirementRef
  event: EventRef
  jobOrder: JobOrderRef
  jobResponse: JobResponseRef
  jobResponseData: JobResponseDataRef
  materialActual: MaterialActualRef
  materialRequirement: MaterialRequirementRef
  personVersion: PersonVersionRef
  personnelActual: PersonnelActualRef
  personnelRequirement: PersonnelRequirementRef
  physicalAssetActual: PhysicalAssetActualRef
  physicalAssetRequirement: PhysicalAssetRequirementRef
  signatureForAComment: CommentRef
  signatureReason: SignatureReasonRef
  " Timestamps the signature signing. "
  timestamp: DateTime
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
  workRequest: WorkRequestRef
  workResponse: WorkResponseRef
}
""
input SignatureReasonFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [SignatureReasonFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [SignatureReasonHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: SignatureReasonFilter
  or: [SignatureReasonFilter]
}
""
input SignatureReasonOrder {
  asc: SignatureReasonOrderable
  desc: SignatureReasonOrderable
  then: SignatureReasonOrder
}
""
input SignatureReasonPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " Uniquely identifies the signature reason. "
  id: String
  signatures: [SignatureRef]
}
""
input SignatureReasonRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " Uniquely identifies the signature reason. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  signatures: [SignatureRef]
}
""
input SignatureRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  alarmEvent: AlarmEventRef
  " An indication enabling detection that the signature has not been altered. The change indication enables detection that the record has been altered, although it may not identify the specific alterations. "
  changeIndication: String
  comment: CommentRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentActual: EquipmentActualRef
  equipmentRequirement: EquipmentRequirementRef
  event: EventRef
  " Unique internal database identifier. "
  iid: ID
  jobOrder: JobOrderRef
  jobResponse: JobResponseRef
  jobResponseData: JobResponseDataRef
  materialActual: MaterialActualRef
  materialRequirement: MaterialRequirementRef
  personVersion: PersonVersionRef
  personnelActual: PersonnelActualRef
  personnelRequirement: PersonnelRequirementRef
  physicalAssetActual: PhysicalAssetActualRef
  physicalAssetRequirement: PhysicalAssetRequirementRef
  signatureForAComment: CommentRef
  signatureReason: SignatureReasonRef
  " Timestamps the signature signing. "
  timestamp: DateTime
  workDirective: WorkDirectiveRef
  workMaster: WorkMasterRef
  workRequest: WorkRequestRef
  workResponse: WorkResponseRef
}
""
input SpatialDefinitionFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [SpatialDefinitionFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [SpatialDefinitionHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: SpatialDefinitionFilter
  or: [SpatialDefinitionFilter]
  srid: StringExactFilter_StringFullTextFilter
  sridAuthority: StringExactFilter_StringFullTextFilter
}
""
input SpatialDefinitionOrder {
  asc: SpatialDefinitionOrderable
  desc: SpatialDefinitionOrderable
  then: SpatialDefinitionOrder
}
""
input SpatialDefinitionPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " A string to uniquely identify a spatial definition. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  multiPolygonValue: MultiPolygonRef
  pointValue: PointRef
  polygonValue: PolygonRef
  recordEntries: [InformationObjectRef]
  """
  SRID is the Spatial Reference Identifier which identifies the coordinate reference system to identify 
  a predefined coordinate reference system (pre-configured into communication systems).
  """
  srid: String
  """
  The SRID authority identifies the authority that defines the coordinate reference system identified 
  by the SRID.
  """
  sridAuthority: String
}
""
input SpatialDefinitionRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " A string to uniquely identify a spatial definition. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  multiPolygonValue: MultiPolygonRef
  pointValue: PointRef
  polygonValue: PolygonRef
  recordEntries: [InformationObjectRef]
  """
  SRID is the Spatial Reference Identifier which identifies the coordinate reference system to identify 
  a predefined coordinate reference system (pre-configured into communication systems).
  """
  srid: String
  """
  The SRID authority identifies the authority that defines the coordinate reference system identified 
  by the SRID.
  """
  sridAuthority: String
}
""
input StateModelActionFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  actionType: StateModelActionType_hash
  and: [StateModelActionFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [StateModelActionHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: StateModelActionFilter
  or: [StateModelActionFilter]
}
""
input StateModelActionOrder {
  asc: StateModelActionOrderable
  desc: StateModelActionOrderable
  then: StateModelActionOrder
}
""
input StateModelActionPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  actionType: StateModelActionType
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " A unique identification of a specific operational location class version. "
  id: String
  isEntryActionForState: StateModelStateRef
  isExitActionForState: StateModelStateRef
  " The label is last node in the fully qualified name. "
  label: String
  transition: StateModelTransitionRef
  " Variable Context to pass into the Workflow. stringified json or jsonata expression "
  variables: String
  workflowSpecification: WorkflowSpecificationRef
}
""
input StateModelActionRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  actionType: StateModelActionType
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " A unique identification of a specific operational location class version. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  isEntryActionForState: StateModelStateRef
  isExitActionForState: StateModelStateRef
  " The label is last node in the fully qualified name. "
  label: String
  transition: StateModelTransitionRef
  " Variable Context to pass into the Workflow. stringified json or jsonata expression "
  variables: String
  workflowSpecification: WorkflowSpecificationRef
}
""
input StateModelActionType_hash {
  eq: StateModelActionType
  in: [StateModelActionType]
}
""
input StateModelDefinitionFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [StateModelDefinitionFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [StateModelDefinitionHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: StateModelDefinitionFilter
  or: [StateModelDefinitionFilter]
}
""
input StateModelDefinitionOrder {
  asc: StateModelDefinitionOrderable
  desc: StateModelDefinitionOrderable
  then: StateModelDefinitionOrder
}
""
input StateModelDefinitionPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains the base64 encoded XML that this StateModelDefinition was generated from. "
  bpmnXMLEncoded: String
  " Contains additional information and descriptions of the operational location. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  equipmentClassVersion: EquipmentClassVersionRef
  equipmentVersion: EquipmentVersionRef
  events: [StateModelEventRef]
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific operational location class version. "
  id: String
  instances: [StateModelInstanceRef]
  " The label is last node in the fully qualified name. "
  label: String
  materialClassVersion: MaterialClassVersionRef
  materialDefinitionVersion: MaterialDefinitionVersionRef
  personVersion: PersonVersionRef
  personnelClassVersion: PersonnelClassVersionRef
  physicalAssetClassVersion: PhysicalAssetClassVersionRef
  physicalAssetVersion: PhysicalAssetVersionRef
  properties: [StateModelPropertyRef]
  states: [StateModelStateRef]
  transitions: [StateModelTransitionRef]
}
""
input StateModelDefinitionRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains the base64 encoded XML that this StateModelDefinition was generated from. "
  bpmnXMLEncoded: String
  " Contains additional information and descriptions of the operational location. "
  description: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  equipmentClassVersion: EquipmentClassVersionRef
  equipmentVersion: EquipmentVersionRef
  events: [StateModelEventRef]
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific operational location class version. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  instances: [StateModelInstanceRef]
  " The label is last node in the fully qualified name. "
  label: String
  materialClassVersion: MaterialClassVersionRef
  materialDefinitionVersion: MaterialDefinitionVersionRef
  personVersion: PersonVersionRef
  personnelClassVersion: PersonnelClassVersionRef
  physicalAssetClassVersion: PhysicalAssetClassVersionRef
  physicalAssetVersion: PhysicalAssetVersionRef
  properties: [StateModelPropertyRef]
  states: [StateModelStateRef]
  transitions: [StateModelTransitionRef]
}
""
input StateModelEventFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [StateModelEventFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [StateModelEventHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: StateModelEventFilter
  or: [StateModelEventFilter]
}
""
input StateModelEventOrder {
  asc: StateModelEventOrderable
  desc: StateModelEventOrderable
  then: StateModelEventOrder
}
""
input StateModelEventPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " A unique identification of a specific operational location class version. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  stateModelDefinition: StateModelDefinitionRef
  transitions: [StateModelTransitionRef]
}
""
input StateModelEventRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " A unique identification of a specific operational location class version. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  stateModelDefinition: StateModelDefinitionRef
  transitions: [StateModelTransitionRef]
}
""
input StateModelInstanceFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [StateModelInstanceFilter]
  description: StringExactFilter_StringFullTextFilter
  has: [StateModelInstanceHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: StateModelInstanceFilter
  or: [StateModelInstanceFilter]
  state: StringExactFilter_StringFullTextFilter_StringRegExpFilter
}
""
input StateModelInstanceOrder {
  asc: StateModelInstanceOrderable
  desc: StateModelInstanceOrderable
  then: StateModelInstanceOrder
}
""
input StateModelInstancePatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the operational location. "
  description: String
  equipment: EquipmentRef
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific operational location class version. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  materialDefinition: MaterialDefinitionRef
  materialLot: MaterialLotRef
  materialSubLot: MaterialSubLotRef
  person: PersonRef
  physicalAsset: PhysicalAssetRef
  " The current state of the StateModelInstance "
  state: String
  stateModelDefinition: StateModelDefinitionRef
  transitions: [StateTransitionInstanceRef]
}
""
input StateModelInstanceRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the operational location. "
  description: String
  equipment: EquipmentRef
  hierarchyScope: HierarchyScopeRef
  " A unique identification of a specific operational location class version. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  materialDefinition: MaterialDefinitionRef
  materialLot: MaterialLotRef
  materialSubLot: MaterialSubLotRef
  person: PersonRef
  physicalAsset: PhysicalAssetRef
  " The current state of the StateModelInstance "
  state: String
  stateModelDefinition: StateModelDefinitionRef
  transitions: [StateTransitionInstanceRef]
}
""
input StateModelPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [StateModelPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  has: [StateModelPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  name: StringExactFilter_StringFullTextFilter
  not: StateModelPropertyFilter
  or: [StateModelPropertyFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input StateModelPropertyOrder {
  asc: StateModelPropertyOrderable
  desc: StateModelPropertyOrderable
  then: StateModelPropertyOrder
}
""
input StateModelPropertyPatch {
  StateModel: StateModelDefinitionRef
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [StateModelPropertyRef]
  dataType: DataType
  definitionType: DefinitionType
  " Additional information about the StateModelProperty. "
  description: String
  " Uniquely identifies the state model property. Fully Qualified identifier that is unique in the database. Required attribute."
  id: String
  " Uniquely identifies the state model property. Required attribute."
  name: String
  parent: StateModelPropertyRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input StateModelPropertyRef {
  StateModel: StateModelDefinitionRef
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [StateModelPropertyRef]
  dataType: DataType
  definitionType: DefinitionType
  " Additional information about the StateModelProperty. "
  description: String
  " Uniquely identifies the state model property. Fully Qualified identifier that is unique in the database. Required attribute."
  id: String
  " Unique internal database identifier. "
  iid: ID
  " Uniquely identifies the state model property. Required attribute."
  name: String
  parent: StateModelPropertyRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input StateModelStateFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [StateModelStateFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [StateModelStateHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  isFinalState: Boolean
  isInitialState: Boolean
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: StateModelStateFilter
  or: [StateModelStateFilter]
}
""
input StateModelStateOrder {
  asc: StateModelStateOrderable
  desc: StateModelStateOrderable
  then: StateModelStateOrder
}
""
input StateModelStatePatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [StateModelStateRef]
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " A unique identification of a specific operational location class version. "
  id: String
  inflows: [StateModelTransitionRef]
  " This state machine terminates when it reaches this state "
  isFinalState: Boolean
  " This state is active when the state machine is initiated "
  isInitialState: Boolean
  " The label is last node in the fully qualified name. "
  label: String
  onEntry: [StateModelActionRef]
  onExit: [StateModelActionRef]
  outflows: [StateModelTransitionRef]
  parent: StateModelStateRef
  stateModelDefinition: StateModelDefinitionRef
}
""
input StateModelStateRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [StateModelStateRef]
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  " A unique identification of a specific operational location class version. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  inflows: [StateModelTransitionRef]
  " This state machine terminates when it reaches this state "
  isFinalState: Boolean
  " This state is active when the state machine is initiated "
  isInitialState: Boolean
  " The label is last node in the fully qualified name. "
  label: String
  onEntry: [StateModelActionRef]
  onExit: [StateModelActionRef]
  outflows: [StateModelTransitionRef]
  parent: StateModelStateRef
  stateModelDefinition: StateModelDefinitionRef
}
""
input StateModelTransitionFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [StateModelTransitionFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [StateModelTransitionHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: StateModelTransitionFilter
  or: [StateModelTransitionFilter]
}
""
input StateModelTransitionOrder {
  asc: StateModelTransitionOrderable
  desc: StateModelTransitionOrderable
  then: StateModelTransitionOrder
}
""
input StateModelTransitionPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " jsonata expression to determine if the transition should proceed or not "
  condition: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  from: StateModelStateRef
  " A unique identification of a specific operational location class version. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  stateModelActions: [StateModelActionRef]
  stateModelDefinition: StateModelDefinitionRef
  stateModelEvents: [StateModelEventRef]
  to: StateModelStateRef
}
""
input StateModelTransitionRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " jsonata expression to determine if the transition should proceed or not "
  condition: String
  " the time at which the version stopped being active. "
  effectiveEnd: DateTime
  " The time at which the version became active. "
  effectiveStart: DateTime
  from: StateModelStateRef
  " A unique identification of a specific operational location class version. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  stateModelActions: [StateModelActionRef]
  stateModelDefinition: StateModelDefinitionRef
  stateModelEvents: [StateModelEventRef]
  to: StateModelStateRef
}
""
input StateTransitionInstanceFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [StateTransitionInstanceFilter]
  fromState: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  has: [StateTransitionInstanceHasFilter]
  iid: [ID!]
  not: StateTransitionInstanceFilter
  or: [StateTransitionInstanceFilter]
  timestamp: DateTimeFilter
  toState: StringExactFilter_StringFullTextFilter_StringRegExpFilter
}
""
input StateTransitionInstanceOrder {
  asc: StateTransitionInstanceOrderable
  desc: StateTransitionInstanceOrderable
  then: StateTransitionInstanceOrder
}
""
input StateTransitionInstancePatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  fromState: String
  stateModelInstance: StateModelInstanceRef
  timestamp: DateTime
  toState: String
}
""
input StateTransitionInstanceRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  fromState: String
  " Unique internal database identifier. "
  iid: ID
  stateModelInstance: StateModelInstanceRef
  timestamp: DateTime
  toState: String
}
""
input StringExactFilter {
  between: StringRange
  eq: String
  ge: String
  gt: String
  in: [String]
  le: String
  lt: String
}
""
input StringExactFilter_StringFullTextFilter {
  alloftext: String
  anyoftext: String
  between: StringRange
  eq: String
  ge: String
  gt: String
  in: [String]
  le: String
  lt: String
}
""
input StringExactFilter_StringFullTextFilter_StringRegExpFilter {
  alloftext: String
  anyoftext: String
  between: StringRange
  eq: String
  ge: String
  gt: String
  in: [String]
  le: String
  lt: String
  regexp: String
}
""
input StringFullTextFilter {
  alloftext: String
  anyoftext: String
}
""
input StringHashFilter {
  eq: String
  in: [String]
}
""
input StringRange {
  max: String!
  min: String!
}
""
input StringRegExpFilter {
  regexp: String
}
""
input StringTermFilter {
  allofterms: String
  anyofterms: String
}
""
input TestResultFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [TestResultFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [TestResultHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: TestResultFilter
  or: [TestResultFilter]
}
""
input TestResultOrder {
  asc: TestResultOrderable
  desc: TestResultOrderable
  then: TestResultOrder
}
""
input TestResultPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  children: [TestResultRef]
  " Additional information about the test result. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipment: EquipmentRef
  equipmentActual: EquipmentActualRef
  equipmentClass: EquipmentClassRef
  equipmentRequirement: EquipmentRequirementRef
  equipmentSpecification: EquipmentSpecificationRef
  " Result obtained from evaluation of the associated test specification criteria. "
  evaluationCriterionResult: String
  " Date and time of evaluation of the test result. "
  evaluationDate: DateTime
  " Date of the expiration of the test result criteria. "
  expiration: DateTime
  hierarchyScope: HierarchyScopeRef
  " An identification of the specific test result. "
  id: String
  materialActual: MaterialActualRef
  materialClass: MaterialClassRef
  materialDefinition: MaterialDefinitionRef
  materialLot: MaterialLotRef
  materialRequirement: MaterialRequirementRef
  materialSpecification: MaterialSpecificationRef
  materialSubLot: MaterialSubLotRef
  parent: TestResultRef
  person: PersonRef
  personnelActual: PersonnelActualRef
  personnelClass: PersonnelClassRef
  personnelRequirement: PersonnelRequirementRef
  personnelSpecification: PersonnelSpecificationRef
  physicalAsset: PhysicalAssetRef
  physicalAssetActual: PhysicalAssetActualRef
  physicalAssetClass: PhysicalAssetClassRef
  physicalAssetRequirement: PhysicalAssetRequirementRef
  propertyMeasurements: [PropertyMeasurementRef]
  recordEntries: [InformationObjectRef]
}
""
input TestResultRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  children: [TestResultRef]
  " Additional information about the test result. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipment: EquipmentRef
  equipmentActual: EquipmentActualRef
  equipmentClass: EquipmentClassRef
  equipmentRequirement: EquipmentRequirementRef
  equipmentSpecification: EquipmentSpecificationRef
  " Result obtained from evaluation of the associated test specification criteria. "
  evaluationCriterionResult: String
  " Date and time of evaluation of the test result. "
  evaluationDate: DateTime
  " Date of the expiration of the test result criteria. "
  expiration: DateTime
  hierarchyScope: HierarchyScopeRef
  " An identification of the specific test result. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  materialActual: MaterialActualRef
  materialClass: MaterialClassRef
  materialDefinition: MaterialDefinitionRef
  materialLot: MaterialLotRef
  materialRequirement: MaterialRequirementRef
  materialSpecification: MaterialSpecificationRef
  materialSubLot: MaterialSubLotRef
  parent: TestResultRef
  person: PersonRef
  personnelActual: PersonnelActualRef
  personnelClass: PersonnelClassRef
  personnelRequirement: PersonnelRequirementRef
  personnelSpecification: PersonnelSpecificationRef
  physicalAsset: PhysicalAssetRef
  physicalAssetActual: PhysicalAssetActualRef
  physicalAssetClass: PhysicalAssetClassRef
  physicalAssetRequirement: PhysicalAssetRequirementRef
  propertyMeasurements: [PropertyMeasurementRef]
  recordEntries: [InformationObjectRef]
}
""
input TestSpecificationCriteriaFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [TestSpecificationCriteriaFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  expression: StringExactFilter_StringFullTextFilter
  has: [TestSpecificationCriteriaHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: TestSpecificationCriteriaFilter
  or: [TestSpecificationCriteriaFilter]
  result: StringExactFilter_StringFullTextFilter
}
""
input TestSpecificationCriteriaOrder {
  asc: TestSpecificationCriteriaOrderable
  desc: TestSpecificationCriteriaOrderable
  then: TestSpecificationCriteriaOrder
}
""
input TestSpecificationCriteriaPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Description of the test specification criteria. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  evaluatedProperties: [EvaluatedPropertyRef]
  """
  An expression of the test specification criteria to be evaluated. If the expression is empty, 
  then the test specification criteria represents the else criterion. 
  """
  expression: String
  " Identification of the test specification criteria. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  """
  The value to be given to the result of the test if the test specification criteria expression is 
  evaluated as true.
  """
  result: String
  """
  Specifies the sequence of evaluation of test specification criteria. The sequence shall be executed 
  lowest first. Duplicate sequence values shall be executed in parallel with worst case result 
  reported if both criteria are evaluated as true. 
  """
  sequence: Int
  testSpecification: TestSpecificationRef
}
""
input TestSpecificationCriteriaRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  " Description of the test specification criteria. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  evaluatedProperties: [EvaluatedPropertyRef]
  """
  An expression of the test specification criteria to be evaluated. If the expression is empty, 
  then the test specification criteria represents the else criterion. 
  """
  expression: String
  " Identification of the test specification criteria. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  """
  The value to be given to the result of the test if the test specification criteria expression is 
  evaluated as true.
  """
  result: String
  """
  Specifies the sequence of evaluation of test specification criteria. The sequence shall be executed 
  lowest first. Duplicate sequence values shall be executed in parallel with worst case result 
  reported if both criteria are evaluated as true. 
  """
  sequence: Int
  testSpecification: TestSpecificationRef
}
""
input TestSpecificationFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [TestSpecificationFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [TestSpecificationHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  key: StringExactFilter_StringFullTextFilter
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: TestSpecificationFilter
  or: [TestSpecificationFilter]
  version: StringExactFilter_StringFullTextFilter
}
""
input TestSpecificationOrder {
  asc: TestSpecificationOrderable
  desc: TestSpecificationOrderable
  then: TestSpecificationOrder
}
""
input TestSpecificationPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  children: [TestSpecificationRef]
  criteria: [TestSpecificationCriteriaRef]
  " A description of the test specification. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  evaluatedProperties: [EvaluatedPropertyRef]
  hierarchyScope: HierarchyScopeRef
  " An identification of a test for certifying one or more values. "
  id: String
  """
  A named unique instance of the entity. Note that this attribute is subject to change, based on 
  the implementation timeline of composite keys within dgraph.
  """
  key: String
  " The label is last node in the fully qualified name. "
  label: String
  parent: TestSpecificationRef
  " Defines whether physical sampling is required to perform the test. "
  physicalSample: Boolean
  properties: [TestSpecificationPropertyRef]
  " The date and time on which the test specification was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  " The amount of operations activity required between samples. "
  recurrenceQuantity: String
  " The duration of operational activity required between samples. "
  recurrenceTimeInterval: String
  requiredByEquipment: EquipmentRef
  requiredByEquipmentClass: EquipmentClassRef
  requiredByEquipmentRequirement: EquipmentRequirementRef
  requiredByEquipmentSpecification: EquipmentSpecificationRef
  requiredByMaterialClass: MaterialClassRef
  requiredByMaterialDefinition: MaterialDefinitionRef
  requiredByMaterialLot: MaterialLotRef
  requiredByMaterialRequirement: MaterialRequirementRef
  requiredByMaterialSpecification: MaterialSpecificationRef
  requiredByMaterialSubLot: MaterialSubLotRef
  requiredByPerson: PersonRef
  requiredByPersonnelClass: PersonnelClassRef
  requiredByPersonnelRequirement: PersonnelRequirementRef
  requiredByPersonnelSpecification: PersonnelSpecificationRef
  requiredByPhysicalAsset: PhysicalAssetRef
  requiredByPhysicalAssetClass: PhysicalAssetClassRef
  requiredByPhysicalAssetRequirement: PhysicalAssetRequirementRef
  " Sample size required to perform the test. "
  testSampleSize: String
  testsEquipment: [EquipmentRef]
  testsEquipmentClass: [EquipmentClassRef]
  testsEquipmentRequirements: [EquipmentRequirementRef]
  testsEquipmentSpecifications: [EquipmentSpecificationRef]
  testsMaterialClass: [MaterialClassRef]
  testsMaterialDefinition: [MaterialDefinitionRef]
  testsMaterialLot: [MaterialLotRef]
  testsMaterialRequirements: [MaterialRequirementRef]
  testsMaterialSpecifications: [MaterialSpecificationRef]
  testsMaterialSubLot: [MaterialSubLotRef]
  testsPerson: [PersonRef]
  testsPersonnelClass: [PersonnelClassRef]
  testsPersonnelRequirements: [PersonnelRequirementRef]
  testsPersonnelSpecifications: [PersonnelSpecificationRef]
  testsPhysicalAsset: [PhysicalAssetRef]
  testsPhysicalAssetClass: [PhysicalAssetClassRef]
  testsPhysicalAssetRequirements: [PhysicalAssetRequirementRef]
  " An identification of the version of the test specification. "
  version: String
}
""
input TestSpecificationPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [TestSpecificationPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [TestSpecificationPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  label: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  not: TestSpecificationPropertyFilter
  or: [TestSpecificationPropertyFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input TestSpecificationPropertyOrder {
  asc: TestSpecificationPropertyOrderable
  desc: TestSpecificationPropertyOrderable
  then: TestSpecificationPropertyOrder
}
""
input TestSpecificationPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  children: [TestSpecificationPropertyRef]
  " Description of the test specification property "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " Identification of the test specification property. "
  id: String
  " The label is last node in the fully qualified name. "
  label: String
  parent: TestSpecificationPropertyRef
  testSpecification: TestSpecificationRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input TestSpecificationPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  children: [TestSpecificationPropertyRef]
  " Description of the test specification property "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " Identification of the test specification property. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  " The label is last node in the fully qualified name. "
  label: String
  parent: TestSpecificationPropertyRef
  testSpecification: TestSpecificationRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input TestSpecificationRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  children: [TestSpecificationRef]
  criteria: [TestSpecificationCriteriaRef]
  " A description of the test specification. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  evaluatedProperties: [EvaluatedPropertyRef]
  hierarchyScope: HierarchyScopeRef
  " An identification of a test for certifying one or more values. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  """
  A named unique instance of the entity. Note that this attribute is subject to change, based on 
  the implementation timeline of composite keys within dgraph.
  """
  key: String
  " The label is last node in the fully qualified name. "
  label: String
  parent: TestSpecificationRef
  " Defines whether physical sampling is required to perform the test. "
  physicalSample: Boolean
  properties: [TestSpecificationPropertyRef]
  " The date and time on which the test specification was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  " The amount of operations activity required between samples. "
  recurrenceQuantity: String
  " The duration of operational activity required between samples. "
  recurrenceTimeInterval: String
  requiredByEquipment: EquipmentRef
  requiredByEquipmentClass: EquipmentClassRef
  requiredByEquipmentRequirement: EquipmentRequirementRef
  requiredByEquipmentSpecification: EquipmentSpecificationRef
  requiredByMaterialClass: MaterialClassRef
  requiredByMaterialDefinition: MaterialDefinitionRef
  requiredByMaterialLot: MaterialLotRef
  requiredByMaterialRequirement: MaterialRequirementRef
  requiredByMaterialSpecification: MaterialSpecificationRef
  requiredByMaterialSubLot: MaterialSubLotRef
  requiredByPerson: PersonRef
  requiredByPersonnelClass: PersonnelClassRef
  requiredByPersonnelRequirement: PersonnelRequirementRef
  requiredByPersonnelSpecification: PersonnelSpecificationRef
  requiredByPhysicalAsset: PhysicalAssetRef
  requiredByPhysicalAssetClass: PhysicalAssetClassRef
  requiredByPhysicalAssetRequirement: PhysicalAssetRequirementRef
  " Sample size required to perform the test. "
  testSampleSize: String
  testsEquipment: [EquipmentRef]
  testsEquipmentClass: [EquipmentClassRef]
  testsEquipmentRequirements: [EquipmentRequirementRef]
  testsEquipmentSpecifications: [EquipmentSpecificationRef]
  testsMaterialClass: [MaterialClassRef]
  testsMaterialDefinition: [MaterialDefinitionRef]
  testsMaterialLot: [MaterialLotRef]
  testsMaterialRequirements: [MaterialRequirementRef]
  testsMaterialSpecifications: [MaterialSpecificationRef]
  testsMaterialSubLot: [MaterialSubLotRef]
  testsPerson: [PersonRef]
  testsPersonnelClass: [PersonnelClassRef]
  testsPersonnelRequirements: [PersonnelRequirementRef]
  testsPersonnelSpecifications: [PersonnelSpecificationRef]
  testsPhysicalAsset: [PhysicalAssetRef]
  testsPhysicalAssetClass: [PhysicalAssetClassRef]
  testsPhysicalAssetRequirements: [PhysicalAssetRequirementRef]
  " An identification of the version of the test specification. "
  version: String
}
""
input UnitOfMeasureConversionFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [UnitOfMeasureConversionFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [UnitOfMeasureConversionHasFilter]
  iid: [ID!]
  not: UnitOfMeasureConversionFilter
  or: [UnitOfMeasureConversionFilter]
}
""
input UnitOfMeasureConversionOrder {
  asc: UnitOfMeasureConversionOrderable
  desc: UnitOfMeasureConversionOrderable
  then: UnitOfMeasureConversionOrder
}
""
input UnitOfMeasureConversionPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Numberator and Denominator are used to convert the UoM value:  toUnitOfMeasure Value = fromUnitOfMeasure Value * (numerator/denominator)"
  denominator: Float
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  fromUnitOfMeasure: UnitOfMeasureRef
  materialDefinitionVersion: MaterialDefinitionVersionRef
  " Numberator and Denominator are used to convert the UoM value:  toUnitOfMeasure Value = fromUnitOfMeasure Value * (numerator/denominator)"
  numerator: Float
  toUnitOfMeasure: UnitOfMeasureRef
}
""
input UnitOfMeasureConversionRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Numberator and Denominator are used to convert the UoM value:  toUnitOfMeasure Value = fromUnitOfMeasure Value * (numerator/denominator)"
  denominator: Float
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  fromUnitOfMeasure: UnitOfMeasureRef
  " Unique internal database identifier. "
  iid: ID
  materialDefinitionVersion: MaterialDefinitionVersionRef
  " Numberator and Denominator are used to convert the UoM value:  toUnitOfMeasure Value = fromUnitOfMeasure Value * (numerator/denominator)"
  numerator: Float
  toUnitOfMeasure: UnitOfMeasureRef
}
""
input UnitOfMeasureFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [UnitOfMeasureFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [UnitOfMeasureHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: UnitOfMeasureFilter
  or: [UnitOfMeasureFilter]
}
""
input UnitOfMeasureOrder {
  asc: UnitOfMeasureOrderable
  desc: UnitOfMeasureOrderable
  then: UnitOfMeasureOrder
}
""
input UnitOfMeasurePatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Enumeration: The data type of the stored values associated with this Unit of Measure: BOOL; INT; INT32; FLOAT64; FLOAT; STRING "
  dataType: DataType
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The actual unit associated with the values measured. "
  id: String
  recordEntries: [InformationObjectRef]
}
""
input UnitOfMeasureRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  " Enumeration: The data type of the stored values associated with this Unit of Measure: BOOL; INT; INT32; FLOAT64; FLOAT; STRING "
  dataType: DataType
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The actual unit associated with the values measured. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  recordEntries: [InformationObjectRef]
}
""
input UpdateAccessPermissionInput {
  filter: AccessPermissionFilter!
  remove: AccessPermissionPatch
  set: AccessPermissionPatch
}
""
input UpdateAlarmEventInput {
  filter: AlarmEventFilter!
  remove: AlarmEventPatch
  set: AlarmEventPatch
}
""
input UpdateCommentInput {
  filter: CommentFilter!
  remove: CommentPatch
  set: CommentPatch
}
""
input UpdateDataSourceInput {
  filter: DataSourceFilter!
  remove: DataSourcePatch
  set: DataSourcePatch
}
""
input UpdateDataSourceMethodArgumentInput {
  filter: DataSourceMethodArgumentFilter!
  remove: DataSourceMethodArgumentPatch
  set: DataSourceMethodArgumentPatch
}
""
input UpdateDataSourceMethodInput {
  filter: DataSourceMethodFilter!
  remove: DataSourceMethodPatch
  set: DataSourceMethodPatch
}
""
input UpdateDataSourceTopicInput {
  filter: DataSourceTopicFilter!
  remove: DataSourceTopicPatch
  set: DataSourceTopicPatch
}
""
input UpdateDataSourceVersionInput {
  filter: DataSourceVersionFilter!
  remove: DataSourceVersionPatch
  set: DataSourceVersionPatch
}
""
input UpdateDataSubscriptionInput {
  filter: DataSubscriptionFilter!
  remove: DataSubscriptionPatch
  set: DataSubscriptionPatch
}
""
input UpdateEnvironmentalVariableInput {
  filter: EnvironmentalVariableFilter!
  remove: EnvironmentalVariablePatch
  set: EnvironmentalVariablePatch
}
""
input UpdateEnvironmentalVariableVersionInput {
  filter: EnvironmentalVariableVersionFilter!
  remove: EnvironmentalVariableVersionPatch
  set: EnvironmentalVariableVersionPatch
}
""
input UpdateEquipmentActualInput {
  filter: EquipmentActualFilter!
  remove: EquipmentActualPatch
  set: EquipmentActualPatch
}
""
input UpdateEquipmentActualPropertyInput {
  filter: EquipmentActualPropertyFilter!
  remove: EquipmentActualPropertyPatch
  set: EquipmentActualPropertyPatch
}
""
input UpdateEquipmentAssetMappingInput {
  filter: EquipmentAssetMappingFilter!
  remove: EquipmentAssetMappingPatch
  set: EquipmentAssetMappingPatch
}
""
input UpdateEquipmentClassInput {
  filter: EquipmentClassFilter!
  remove: EquipmentClassPatch
  set: EquipmentClassPatch
}
""
input UpdateEquipmentClassPropertyInput {
  filter: EquipmentClassPropertyFilter!
  remove: EquipmentClassPropertyPatch
  set: EquipmentClassPropertyPatch
}
""
input UpdateEquipmentClassVersionInput {
  filter: EquipmentClassVersionFilter!
  remove: EquipmentClassVersionPatch
  set: EquipmentClassVersionPatch
}
""
input UpdateEquipmentDataSourceInput {
  filter: EquipmentDataSourceFilter!
  remove: EquipmentDataSourcePatch
  set: EquipmentDataSourcePatch
}
""
input UpdateEquipmentInput {
  filter: EquipmentFilter!
  remove: EquipmentPatch
  set: EquipmentPatch
}
""
input UpdateEquipmentNameAliasInput {
  filter: EquipmentNameAliasFilter!
  remove: EquipmentNameAliasPatch
  set: EquipmentNameAliasPatch
}
""
input UpdateEquipmentPropertyInput {
  filter: EquipmentPropertyFilter!
  remove: EquipmentPropertyPatch
  set: EquipmentPropertyPatch
}
""
input UpdateEquipmentPropertyOverrideInput {
  filter: EquipmentPropertyOverrideFilter!
  remove: EquipmentPropertyOverridePatch
  set: EquipmentPropertyOverridePatch
}
""
input UpdateEquipmentRequirementInput {
  filter: EquipmentRequirementFilter!
  remove: EquipmentRequirementPatch
  set: EquipmentRequirementPatch
}
""
input UpdateEquipmentRequirementPropertyInput {
  filter: EquipmentRequirementPropertyFilter!
  remove: EquipmentRequirementPropertyPatch
  set: EquipmentRequirementPropertyPatch
}
""
input UpdateEquipmentSpecificationInput {
  filter: EquipmentSpecificationFilter!
  remove: EquipmentSpecificationPatch
  set: EquipmentSpecificationPatch
}
""
input UpdateEquipmentSpecificationPropertyInput {
  filter: EquipmentSpecificationPropertyFilter!
  remove: EquipmentSpecificationPropertyPatch
  set: EquipmentSpecificationPropertyPatch
}
""
input UpdateEquipmentVersionInput {
  filter: EquipmentVersionFilter!
  remove: EquipmentVersionPatch
  set: EquipmentVersionPatch
}
""
input UpdateEvaluatedPropertyInput {
  filter: EvaluatedPropertyFilter!
  remove: EvaluatedPropertyPatch
  set: EvaluatedPropertyPatch
}
""
input UpdateEventAssociationInput {
  filter: EventAssociationFilter!
  remove: EventAssociationPatch
  set: EventAssociationPatch
}
""
input UpdateEventInput {
  filter: EventFilter!
  remove: EventPatch
  set: EventPatch
}
""
input UpdateEventPropertyInput {
  filter: EventPropertyFilter!
  remove: EventPropertyPatch
  set: EventPropertyPatch
}
""
input UpdateEventSubtypeInput {
  filter: EventSubtypeFilter!
  remove: EventSubtypePatch
  set: EventSubtypePatch
}
""
input UpdateEventTypeInput {
  filter: EventTypeFilter!
  remove: EventTypePatch
  set: EventTypePatch
}
""
input UpdateFormInput {
  filter: FormFilter!
  remove: FormPatch
  set: FormPatch
}
""
input UpdateHierarchyScopeInput {
  filter: HierarchyScopeFilter!
  remove: HierarchyScopePatch
  set: HierarchyScopePatch
}
""
input UpdateInformationObjectInput {
  filter: InformationObjectFilter!
  remove: InformationObjectPatch
  set: InformationObjectPatch
}
""
input UpdateJobListInput {
  filter: JobListFilter!
  remove: JobListPatch
  set: JobListPatch
}
""
input UpdateJobOrderInput {
  filter: JobOrderFilter!
  remove: JobOrderPatch
  set: JobOrderPatch
}
""
input UpdateJobOrderParameterInput {
  filter: JobOrderParameterFilter!
  remove: JobOrderParameterPatch
  set: JobOrderParameterPatch
}
""
input UpdateJobResponseDataInput {
  filter: JobResponseDataFilter!
  remove: JobResponseDataPatch
  set: JobResponseDataPatch
}
""
input UpdateJobResponseInput {
  filter: JobResponseFilter!
  remove: JobResponsePatch
  set: JobResponsePatch
}
""
input UpdateJobResponseListInput {
  filter: JobResponseListFilter!
  remove: JobResponseListPatch
  set: JobResponseListPatch
}
""
input UpdateLibreServiceInput {
  filter: LibreServiceFilter!
  remove: LibreServicePatch
  set: LibreServicePatch
}
""
input UpdateMaterialActualInput {
  filter: MaterialActualFilter!
  remove: MaterialActualPatch
  set: MaterialActualPatch
}
""
input UpdateMaterialActualPropertyInput {
  filter: MaterialActualPropertyFilter!
  remove: MaterialActualPropertyPatch
  set: MaterialActualPropertyPatch
}
""
input UpdateMaterialAlternateInput {
  filter: MaterialAlternateFilter!
  remove: MaterialAlternatePatch
  set: MaterialAlternatePatch
}
""
input UpdateMaterialClassInput {
  filter: MaterialClassFilter!
  remove: MaterialClassPatch
  set: MaterialClassPatch
}
""
input UpdateMaterialClassPropertyInput {
  filter: MaterialClassPropertyFilter!
  remove: MaterialClassPropertyPatch
  set: MaterialClassPropertyPatch
}
""
input UpdateMaterialClassVersionInput {
  filter: MaterialClassVersionFilter!
  remove: MaterialClassVersionPatch
  set: MaterialClassVersionPatch
}
""
input UpdateMaterialDefinitionInput {
  filter: MaterialDefinitionFilter!
  remove: MaterialDefinitionPatch
  set: MaterialDefinitionPatch
}
""
input UpdateMaterialDefinitionPropertyInput {
  filter: MaterialDefinitionPropertyFilter!
  remove: MaterialDefinitionPropertyPatch
  set: MaterialDefinitionPropertyPatch
}
""
input UpdateMaterialDefinitionVersionInput {
  filter: MaterialDefinitionVersionFilter!
  remove: MaterialDefinitionVersionPatch
  set: MaterialDefinitionVersionPatch
}
""
input UpdateMaterialLotInput {
  filter: MaterialLotFilter!
  remove: MaterialLotPatch
  set: MaterialLotPatch
}
""
input UpdateMaterialLotPropertyInput {
  filter: MaterialLotPropertyFilter!
  remove: MaterialLotPropertyPatch
  set: MaterialLotPropertyPatch
}
""
input UpdateMaterialRequirementInput {
  filter: MaterialRequirementFilter!
  remove: MaterialRequirementPatch
  set: MaterialRequirementPatch
}
""
input UpdateMaterialRequirementPropertyInput {
  filter: MaterialRequirementPropertyFilter!
  remove: MaterialRequirementPropertyPatch
  set: MaterialRequirementPropertyPatch
}
""
input UpdateMaterialSpecificationInput {
  filter: MaterialSpecificationFilter!
  remove: MaterialSpecificationPatch
  set: MaterialSpecificationPatch
}
""
input UpdateMaterialSpecificationPropertyInput {
  filter: MaterialSpecificationPropertyFilter!
  remove: MaterialSpecificationPropertyPatch
  set: MaterialSpecificationPropertyPatch
}
""
input UpdateMaterialSubLotInput {
  filter: MaterialSubLotFilter!
  remove: MaterialSubLotPatch
  set: MaterialSubLotPatch
}
""
input UpdateMenuInput {
  filter: MenuFilter!
  remove: MenuPatch
  set: MenuPatch
}
""
input UpdateMultiplicityInput {
  filter: MultiplicityFilter!
  remove: MultiplicityPatch
  set: MultiplicityPatch
}
""
input UpdateOperationalLocationClassInput {
  filter: OperationalLocationClassFilter!
  remove: OperationalLocationClassPatch
  set: OperationalLocationClassPatch
}
""
input UpdateOperationalLocationClassPropertyInput {
  filter: OperationalLocationClassPropertyFilter!
  remove: OperationalLocationClassPropertyPatch
  set: OperationalLocationClassPropertyPatch
}
""
input UpdateOperationalLocationClassVersionInput {
  filter: OperationalLocationClassVersionFilter!
  remove: OperationalLocationClassVersionPatch
  set: OperationalLocationClassVersionPatch
}
""
input UpdateOperationalLocationInput {
  filter: OperationalLocationFilter!
  remove: OperationalLocationPatch
  set: OperationalLocationPatch
}
""
input UpdateOperationalLocationPropertyInput {
  filter: OperationalLocationPropertyFilter!
  remove: OperationalLocationPropertyPatch
  set: OperationalLocationPropertyPatch
}
""
input UpdateOperationalLocationVersionInput {
  filter: OperationalLocationVersionFilter!
  remove: OperationalLocationVersionPatch
  set: OperationalLocationVersionPatch
}
""
input UpdateOperationsDefinitionInput {
  filter: OperationsDefinitionFilter!
  remove: OperationsDefinitionPatch
  set: OperationsDefinitionPatch
}
""
input UpdateOperationsDefinitionVersionInput {
  filter: OperationsDefinitionVersionFilter!
  remove: OperationsDefinitionVersionPatch
  set: OperationsDefinitionVersionPatch
}
""
input UpdateOperationsEventClassInput {
  filter: OperationsEventClassFilter!
  remove: OperationsEventClassPatch
  set: OperationsEventClassPatch
}
""
input UpdateOperationsEventClassPropertyInput {
  filter: OperationsEventClassPropertyFilter!
  remove: OperationsEventClassPropertyPatch
  set: OperationsEventClassPropertyPatch
}
""
input UpdateOperationsEventClassRecordSpecificationInput {
  filter: OperationsEventClassRecordSpecificationFilter!
  remove: OperationsEventClassRecordSpecificationPatch
  set: OperationsEventClassRecordSpecificationPatch
}
""
input UpdateOperationsEventClassVersionInput {
  filter: OperationsEventClassVersionFilter!
  remove: OperationsEventClassVersionPatch
  set: OperationsEventClassVersionPatch
}
""
input UpdateOperationsEventDefinitionInput {
  filter: OperationsEventDefinitionFilter!
  remove: OperationsEventDefinitionPatch
  set: OperationsEventDefinitionPatch
}
""
input UpdateOperationsEventDefinitionPropertyInput {
  filter: OperationsEventDefinitionPropertyFilter!
  remove: OperationsEventDefinitionPropertyPatch
  set: OperationsEventDefinitionPropertyPatch
}
""
input UpdateOperationsEventDefinitionRecordSpecificationInput {
  filter: OperationsEventDefinitionRecordSpecificationFilter!
  remove: OperationsEventDefinitionRecordSpecificationPatch
  set: OperationsEventDefinitionRecordSpecificationPatch
}
""
input UpdateOperationsEventDefinitionVersionInput {
  filter: OperationsEventDefinitionVersionFilter!
  remove: OperationsEventDefinitionVersionPatch
  set: OperationsEventDefinitionVersionPatch
}
""
input UpdateOperationsEventInput {
  filter: OperationsEventFilter!
  remove: OperationsEventPatch
  set: OperationsEventPatch
}
""
input UpdateOperationsEventPropertyInput {
  filter: OperationsEventPropertyFilter!
  remove: OperationsEventPropertyPatch
  set: OperationsEventPropertyPatch
}
""
input UpdateOperationsEventRecordEntryInput {
  filter: OperationsEventRecordEntryFilter!
  remove: OperationsEventRecordEntryPatch
  set: OperationsEventRecordEntryPatch
}
""
input UpdateOperationsEventRecordInput {
  filter: OperationsEventRecordFilter!
  remove: OperationsEventRecordPatch
  set: OperationsEventRecordPatch
}
""
input UpdateOperationsMaterialBillInput {
  filter: OperationsMaterialBillFilter!
  remove: OperationsMaterialBillPatch
  set: OperationsMaterialBillPatch
}
""
input UpdateOperationsPerformanceInput {
  filter: OperationsPerformanceFilter!
  remove: OperationsPerformancePatch
  set: OperationsPerformancePatch
}
""
input UpdateOperationsRequestInput {
  filter: OperationsRequestFilter!
  remove: OperationsRequestPatch
  set: OperationsRequestPatch
}
""
input UpdateOperationsResponseInput {
  filter: OperationsResponseFilter!
  remove: OperationsResponsePatch
  set: OperationsResponsePatch
}
""
input UpdateOperationsResponsePropertyInput {
  filter: OperationsResponsePropertyFilter!
  remove: OperationsResponsePropertyPatch
  set: OperationsResponsePropertyPatch
}
""
input UpdateOperationsScheduleInput {
  filter: OperationsScheduleFilter!
  remove: OperationsSchedulePatch
  set: OperationsSchedulePatch
}
""
input UpdateOperationsSegmentDependencyInput {
  filter: OperationsSegmentDependencyFilter!
  remove: OperationsSegmentDependencyPatch
  set: OperationsSegmentDependencyPatch
}
""
input UpdateOperationsSegmentInput {
  filter: OperationsSegmentFilter!
  remove: OperationsSegmentPatch
  set: OperationsSegmentPatch
}
""
input UpdateParameterSpecificationInput {
  filter: ParameterSpecificationFilter!
  remove: ParameterSpecificationPatch
  set: ParameterSpecificationPatch
}
""
input UpdatePayloadFieldDefinitionInput {
  filter: PayloadFieldDefinitionFilter!
  remove: PayloadFieldDefinitionPatch
  set: PayloadFieldDefinitionPatch
}
""
input UpdatePersonInput {
  filter: PersonFilter!
  remove: PersonPatch
  set: PersonPatch
}
""
input UpdatePersonPropertyInput {
  filter: PersonPropertyFilter!
  remove: PersonPropertyPatch
  set: PersonPropertyPatch
}
""
input UpdatePersonVersionInput {
  filter: PersonVersionFilter!
  remove: PersonVersionPatch
  set: PersonVersionPatch
}
""
input UpdatePersonnelActualInput {
  filter: PersonnelActualFilter!
  remove: PersonnelActualPatch
  set: PersonnelActualPatch
}
""
input UpdatePersonnelActualPropertyInput {
  filter: PersonnelActualPropertyFilter!
  remove: PersonnelActualPropertyPatch
  set: PersonnelActualPropertyPatch
}
""
input UpdatePersonnelClassInput {
  filter: PersonnelClassFilter!
  remove: PersonnelClassPatch
  set: PersonnelClassPatch
}
""
input UpdatePersonnelClassPropertyInput {
  filter: PersonnelClassPropertyFilter!
  remove: PersonnelClassPropertyPatch
  set: PersonnelClassPropertyPatch
}
""
input UpdatePersonnelClassVersionInput {
  filter: PersonnelClassVersionFilter!
  remove: PersonnelClassVersionPatch
  set: PersonnelClassVersionPatch
}
""
input UpdatePersonnelRequirementInput {
  filter: PersonnelRequirementFilter!
  remove: PersonnelRequirementPatch
  set: PersonnelRequirementPatch
}
""
input UpdatePersonnelRequirementPropertyInput {
  filter: PersonnelRequirementPropertyFilter!
  remove: PersonnelRequirementPropertyPatch
  set: PersonnelRequirementPropertyPatch
}
""
input UpdatePersonnelSpecificationInput {
  filter: PersonnelSpecificationFilter!
  remove: PersonnelSpecificationPatch
  set: PersonnelSpecificationPatch
}
""
input UpdatePersonnelSpecificationPropertyInput {
  filter: PersonnelSpecificationPropertyFilter!
  remove: PersonnelSpecificationPropertyPatch
  set: PersonnelSpecificationPropertyPatch
}
""
input UpdatePhysicalAssetActualInput {
  filter: PhysicalAssetActualFilter!
  remove: PhysicalAssetActualPatch
  set: PhysicalAssetActualPatch
}
""
input UpdatePhysicalAssetActualPropertyInput {
  filter: PhysicalAssetActualPropertyFilter!
  remove: PhysicalAssetActualPropertyPatch
  set: PhysicalAssetActualPropertyPatch
}
""
input UpdatePhysicalAssetClassInput {
  filter: PhysicalAssetClassFilter!
  remove: PhysicalAssetClassPatch
  set: PhysicalAssetClassPatch
}
""
input UpdatePhysicalAssetClassPropertyInput {
  filter: PhysicalAssetClassPropertyFilter!
  remove: PhysicalAssetClassPropertyPatch
  set: PhysicalAssetClassPropertyPatch
}
""
input UpdatePhysicalAssetClassVersionInput {
  filter: PhysicalAssetClassVersionFilter!
  remove: PhysicalAssetClassVersionPatch
  set: PhysicalAssetClassVersionPatch
}
""
input UpdatePhysicalAssetDataSourceInput {
  filter: PhysicalAssetDataSourceFilter!
  remove: PhysicalAssetDataSourcePatch
  set: PhysicalAssetDataSourcePatch
}
""
input UpdatePhysicalAssetInput {
  filter: PhysicalAssetFilter!
  remove: PhysicalAssetPatch
  set: PhysicalAssetPatch
}
""
input UpdatePhysicalAssetPropertyInput {
  filter: PhysicalAssetPropertyFilter!
  remove: PhysicalAssetPropertyPatch
  set: PhysicalAssetPropertyPatch
}
""
input UpdatePhysicalAssetRequirementInput {
  filter: PhysicalAssetRequirementFilter!
  remove: PhysicalAssetRequirementPatch
  set: PhysicalAssetRequirementPatch
}
""
input UpdatePhysicalAssetRequirementPropertyInput {
  filter: PhysicalAssetRequirementPropertyFilter!
  remove: PhysicalAssetRequirementPropertyPatch
  set: PhysicalAssetRequirementPropertyPatch
}
""
input UpdatePhysicalAssetSpecificationInput {
  filter: PhysicalAssetSpecificationFilter!
  remove: PhysicalAssetSpecificationPatch
  set: PhysicalAssetSpecificationPatch
}
""
input UpdatePhysicalAssetSpecificationPropertyInput {
  filter: PhysicalAssetSpecificationPropertyFilter!
  remove: PhysicalAssetSpecificationPropertyPatch
  set: PhysicalAssetSpecificationPropertyPatch
}
""
input UpdatePhysicalAssetVersionInput {
  filter: PhysicalAssetVersionFilter!
  remove: PhysicalAssetVersionPatch
  set: PhysicalAssetVersionPatch
}
""
input UpdateProcessSegmentDependencyInput {
  filter: ProcessSegmentDependencyFilter!
  remove: ProcessSegmentDependencyPatch
  set: ProcessSegmentDependencyPatch
}
""
input UpdateProcessSegmentInput {
  filter: ProcessSegmentFilter!
  remove: ProcessSegmentPatch
  set: ProcessSegmentPatch
}
""
input UpdateProcessSegmentParameterInput {
  filter: ProcessSegmentParameterFilter!
  remove: ProcessSegmentParameterPatch
  set: ProcessSegmentParameterPatch
}
""
input UpdateProcessSegmentVersionInput {
  filter: ProcessSegmentVersionFilter!
  remove: ProcessSegmentVersionPatch
  set: ProcessSegmentVersionPatch
}
""
input UpdatePropertyMeasurementInput {
  filter: PropertyMeasurementFilter!
  remove: PropertyMeasurementPatch
  set: PropertyMeasurementPatch
}
""
input UpdatePropertyNameAliasInput {
  filter: PropertyNameAliasFilter!
  remove: PropertyNameAliasPatch
  set: PropertyNameAliasPatch
}
""
input UpdatePropertyValueAliasInput {
  filter: PropertyValueAliasFilter!
  remove: PropertyValueAliasPatch
  set: PropertyValueAliasPatch
}
""
input UpdateRuleInput {
  filter: RuleFilter!
  remove: RulePatch
  set: RulePatch
}
""
input UpdateSecretInput {
  filter: SecretFilter!
  remove: SecretPatch
  set: SecretPatch
}
""
input UpdateSecretVersionInput {
  filter: SecretVersionFilter!
  remove: SecretVersionPatch
  set: SecretVersionPatch
}
""
input UpdateSegmentDataInput {
  filter: SegmentDataFilter!
  remove: SegmentDataPatch
  set: SegmentDataPatch
}
""
input UpdateSegmentParameterInput {
  filter: SegmentParameterFilter!
  remove: SegmentParameterPatch
  set: SegmentParameterPatch
}
""
input UpdateSegmentRequirementInput {
  filter: SegmentRequirementFilter!
  remove: SegmentRequirementPatch
  set: SegmentRequirementPatch
}
""
input UpdateSegmentResponseInput {
  filter: SegmentResponseFilter!
  remove: SegmentResponsePatch
  set: SegmentResponsePatch
}
""
input UpdateSignatureInput {
  filter: SignatureFilter!
  remove: SignaturePatch
  set: SignaturePatch
}
""
input UpdateSignatureReasonInput {
  filter: SignatureReasonFilter!
  remove: SignatureReasonPatch
  set: SignatureReasonPatch
}
""
input UpdateSpatialDefinitionInput {
  filter: SpatialDefinitionFilter!
  remove: SpatialDefinitionPatch
  set: SpatialDefinitionPatch
}
""
input UpdateStateModelActionInput {
  filter: StateModelActionFilter!
  remove: StateModelActionPatch
  set: StateModelActionPatch
}
""
input UpdateStateModelDefinitionInput {
  filter: StateModelDefinitionFilter!
  remove: StateModelDefinitionPatch
  set: StateModelDefinitionPatch
}
""
input UpdateStateModelEventInput {
  filter: StateModelEventFilter!
  remove: StateModelEventPatch
  set: StateModelEventPatch
}
""
input UpdateStateModelInstanceInput {
  filter: StateModelInstanceFilter!
  remove: StateModelInstancePatch
  set: StateModelInstancePatch
}
""
input UpdateStateModelPropertyInput {
  filter: StateModelPropertyFilter!
  remove: StateModelPropertyPatch
  set: StateModelPropertyPatch
}
""
input UpdateStateModelStateInput {
  filter: StateModelStateFilter!
  remove: StateModelStatePatch
  set: StateModelStatePatch
}
""
input UpdateStateModelTransitionInput {
  filter: StateModelTransitionFilter!
  remove: StateModelTransitionPatch
  set: StateModelTransitionPatch
}
""
input UpdateStateTransitionInstanceInput {
  filter: StateTransitionInstanceFilter!
  remove: StateTransitionInstancePatch
  set: StateTransitionInstancePatch
}
""
input UpdateTestResultInput {
  filter: TestResultFilter!
  remove: TestResultPatch
  set: TestResultPatch
}
""
input UpdateTestSpecificationCriteriaInput {
  filter: TestSpecificationCriteriaFilter!
  remove: TestSpecificationCriteriaPatch
  set: TestSpecificationCriteriaPatch
}
""
input UpdateTestSpecificationInput {
  filter: TestSpecificationFilter!
  remove: TestSpecificationPatch
  set: TestSpecificationPatch
}
""
input UpdateTestSpecificationPropertyInput {
  filter: TestSpecificationPropertyFilter!
  remove: TestSpecificationPropertyPatch
  set: TestSpecificationPropertyPatch
}
""
input UpdateUnitOfMeasureConversionInput {
  filter: UnitOfMeasureConversionFilter!
  remove: UnitOfMeasureConversionPatch
  set: UnitOfMeasureConversionPatch
}
""
input UpdateUnitOfMeasureInput {
  filter: UnitOfMeasureFilter!
  remove: UnitOfMeasurePatch
  set: UnitOfMeasurePatch
}
""
input UpdateWorkCalendarDefinitionEntryInput {
  filter: WorkCalendarDefinitionEntryFilter!
  remove: WorkCalendarDefinitionEntryPatch
  set: WorkCalendarDefinitionEntryPatch
}
""
input UpdateWorkCalendarDefinitionEntryPropertyInput {
  filter: WorkCalendarDefinitionEntryPropertyFilter!
  remove: WorkCalendarDefinitionEntryPropertyPatch
  set: WorkCalendarDefinitionEntryPropertyPatch
}
""
input UpdateWorkCalendarEntryInput {
  filter: WorkCalendarEntryFilter!
  remove: WorkCalendarEntryPatch
  set: WorkCalendarEntryPatch
}
""
input UpdateWorkCalendarEntryPropertyInput {
  filter: WorkCalendarEntryPropertyFilter!
  remove: WorkCalendarEntryPropertyPatch
  set: WorkCalendarEntryPropertyPatch
}
""
input UpdateWorkCalendarInput {
  filter: WorkCalendarFilter!
  remove: WorkCalendarPatch
  set: WorkCalendarPatch
}
""
input UpdateWorkDirectiveInput {
  filter: WorkDirectiveFilter!
  remove: WorkDirectivePatch
  set: WorkDirectivePatch
}
""
input UpdateWorkMasterInput {
  filter: WorkMasterFilter!
  remove: WorkMasterPatch
  set: WorkMasterPatch
}
""
input UpdateWorkPerformanceInput {
  filter: WorkPerformanceFilter!
  remove: WorkPerformancePatch
  set: WorkPerformancePatch
}
""
input UpdateWorkRequestInput {
  filter: WorkRequestFilter!
  remove: WorkRequestPatch
  set: WorkRequestPatch
}
""
input UpdateWorkResponseInput {
  filter: WorkResponseFilter!
  remove: WorkResponsePatch
  set: WorkResponsePatch
}
""
input UpdateWorkScheduleInput {
  filter: WorkScheduleFilter!
  remove: WorkSchedulePatch
  set: WorkSchedulePatch
}
""
input UpdateWorkflowErrorInput {
  filter: WorkflowErrorFilter!
  remove: WorkflowErrorPatch
  set: WorkflowErrorPatch
}
""
input UpdateWorkflowMessageInput {
  filter: WorkflowMessageFilter!
  remove: WorkflowMessagePatch
  set: WorkflowMessagePatch
}
""
input UpdateWorkflowShapeInput {
  filter: WorkflowShapeFilter!
  remove: WorkflowShapePatch
  set: WorkflowShapePatch
}
""
input UpdateWorkflowSpecificationConnectionInput {
  filter: WorkflowSpecificationConnectionFilter!
  remove: WorkflowSpecificationConnectionPatch
  set: WorkflowSpecificationConnectionPatch
}
""
input UpdateWorkflowSpecificationConnectionPropertyInput {
  filter: WorkflowSpecificationConnectionPropertyFilter!
  remove: WorkflowSpecificationConnectionPropertyPatch
  set: WorkflowSpecificationConnectionPropertyPatch
}
""
input UpdateWorkflowSpecificationConnectionTypeInput {
  filter: WorkflowSpecificationConnectionTypeFilter!
  remove: WorkflowSpecificationConnectionTypePatch
  set: WorkflowSpecificationConnectionTypePatch
}
""
input UpdateWorkflowSpecificationConnectionTypePropertyInput {
  filter: WorkflowSpecificationConnectionTypePropertyFilter!
  remove: WorkflowSpecificationConnectionTypePropertyPatch
  set: WorkflowSpecificationConnectionTypePropertyPatch
}
""
input UpdateWorkflowSpecificationInput {
  filter: WorkflowSpecificationFilter!
  remove: WorkflowSpecificationPatch
  set: WorkflowSpecificationPatch
}
""
input UpdateWorkflowSpecificationNodeInput {
  filter: WorkflowSpecificationNodeFilter!
  remove: WorkflowSpecificationNodePatch
  set: WorkflowSpecificationNodePatch
}
""
input UpdateWorkflowSpecificationNodePropertyInput {
  filter: WorkflowSpecificationNodePropertyFilter!
  remove: WorkflowSpecificationNodePropertyPatch
  set: WorkflowSpecificationNodePropertyPatch
}
""
input UpdateWorkflowSpecificationNodeTestCaseInput {
  filter: WorkflowSpecificationNodeTestCaseFilter!
  remove: WorkflowSpecificationNodeTestCasePatch
  set: WorkflowSpecificationNodeTestCasePatch
}
""
input UpdateWorkflowSpecificationNodeTypeInput {
  filter: WorkflowSpecificationNodeTypeFilter!
  remove: WorkflowSpecificationNodeTypePatch
  set: WorkflowSpecificationNodeTypePatch
}
""
input UpdateWorkflowSpecificationNodeTypePropertyInput {
  filter: WorkflowSpecificationNodeTypePropertyFilter!
  remove: WorkflowSpecificationNodeTypePropertyPatch
  set: WorkflowSpecificationNodeTypePropertyPatch
}
""
input UpdateWorkflowSpecificationNodeVariableInput {
  filter: WorkflowSpecificationNodeVariableFilter!
  remove: WorkflowSpecificationNodeVariablePatch
  set: WorkflowSpecificationNodeVariablePatch
}
""
input UpdateWorkflowSpecificationPropertyInput {
  filter: WorkflowSpecificationPropertyFilter!
  remove: WorkflowSpecificationPropertyPatch
  set: WorkflowSpecificationPropertyPatch
}
""
input UpdateWorkflowSpecificationVersionInput {
  filter: WorkflowSpecificationVersionFilter!
  remove: WorkflowSpecificationVersionPatch
  set: WorkflowSpecificationVersionPatch
}
""
input UpdateWorkflowTimerInput {
  filter: WorkflowTimerFilter!
  remove: WorkflowTimerPatch
  set: WorkflowTimerPatch
}
""
input UpdateWorkflowWaypointInput {
  filter: WorkflowWaypointFilter!
  remove: WorkflowWaypointPatch
  set: WorkflowWaypointPatch
}
""
input VersionState_hash {
  eq: VersionState
  in: [VersionState]
}
""
input WithinFilter {
  polygon: PolygonRef!
}
""
input WorkCalendarDefinitionEntryFilter {
  and: [WorkCalendarDefinitionEntryFilter]
  has: [WorkCalendarDefinitionEntryHasFilter]
  iid: [ID!]
  isActive: Boolean
  not: WorkCalendarDefinitionEntryFilter
  or: [WorkCalendarDefinitionEntryFilter]
}
""
input WorkCalendarDefinitionEntryOrder {
  asc: WorkCalendarDefinitionEntryOrderable
  desc: WorkCalendarDefinitionEntryOrderable
  then: WorkCalendarDefinitionEntryOrder
}
""
input WorkCalendarDefinitionEntryPatch {
  " The hour in which the work calendar definition entry recurs. "
  byHour: [Int]
  " The minute in which the work calendar definition entry recurs. "
  byMinute: [Int]
  " The month in which the work calendar definition entry recurs. "
  byMonth: [Int]
  " The month day in which the work calendar definition entry recurs. "
  byMonthDay: [Int]
  " The second in which the work calendar definition entry recurs. "
  bySecond: [Int]
  " The set position in which the work calendar definition entry recurs. "
  bySetPos: [Int]
  " The day on which the work calendar definition entry recurs. "
  byWeekDay: [Weekday]
  " The week number in which the work calendar definition entry recurs. "
  byWeekNo: [Int]
  " The day of the year in which the work calendar definition entry recurs. "
  byYearDay: [Int]
  calendarEntries: [WorkCalendarEntryRef]
  " Describes the number of repititions of the event. "
  count: Int
  " Description of the workCalendarDefinitionEntry. "
  description: String
  " The duration of the work calendar definition entry. "
  duration: String
  " Describes the end date/time of the work calendar entry. "
  endDateTime: DateTime
  " Defines the type of work calendar definition entry. "
  entryType: WorkCalendarEntryType
  "  Describes how often the work calendar Entry repeats. "
  freq: Frequency
  hierarchyScope: EquipmentRef
  " Describes the interval between calendar events. "
  interval: Int
  " Boolean denoting whether the WorkCalendarDefinitionEntry is active. "
  isActive: Boolean
  properties: [WorkCalendarDefinitionEntryPropertyRef]
  " Describes the start date/time of the work calendar entry. "
  startDateTime: DateTime
  " Describes the week start. "
  wkst: Weekday
  workCalendar: WorkCalendarRef
}
""
input WorkCalendarDefinitionEntryPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [WorkCalendarDefinitionEntryPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  has: [WorkCalendarDefinitionEntryPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: WorkCalendarDefinitionEntryPropertyFilter
  or: [WorkCalendarDefinitionEntryPropertyFilter]
  use: StringExactFilter_StringFullTextFilter
}
""
input WorkCalendarDefinitionEntryPropertyOrder {
  asc: WorkCalendarDefinitionEntryPropertyOrderable
  desc: WorkCalendarDefinitionEntryPropertyOrderable
  then: WorkCalendarDefinitionEntryPropertyOrder
}
""
input WorkCalendarDefinitionEntryPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkCalendarDefinitionEntryPropertyRef]
  " Description of the workCalendarDefinitionEntryProperty. "
  description: String
  hierarchyScope: HierarchyScopeRef
  "A unique identification of a specific work calendar."
  id: String
  operationalLocation: OperationalLocationRef
  parent: WorkCalendarDefinitionEntryPropertyRef
  " The default value, set of values, or range of the property. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  " The use of the property. "
  use: String
  workCalendarDefinitionEntry: WorkCalendarDefinitionEntryRef
}
""
input WorkCalendarDefinitionEntryPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkCalendarDefinitionEntryPropertyRef]
  " Description of the workCalendarDefinitionEntryProperty. "
  description: String
  hierarchyScope: HierarchyScopeRef
  "A unique identification of a specific work calendar."
  id: String
  " Unique internal database identifier. "
  iid: ID
  operationalLocation: OperationalLocationRef
  parent: WorkCalendarDefinitionEntryPropertyRef
  " The default value, set of values, or range of the property. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  " The use of the property. "
  use: String
  workCalendarDefinitionEntry: WorkCalendarDefinitionEntryRef
}
""
input WorkCalendarDefinitionEntryRef {
  " The hour in which the work calendar definition entry recurs. "
  byHour: [Int]
  " The minute in which the work calendar definition entry recurs. "
  byMinute: [Int]
  " The month in which the work calendar definition entry recurs. "
  byMonth: [Int]
  " The month day in which the work calendar definition entry recurs. "
  byMonthDay: [Int]
  " The second in which the work calendar definition entry recurs. "
  bySecond: [Int]
  " The set position in which the work calendar definition entry recurs. "
  bySetPos: [Int]
  " The day on which the work calendar definition entry recurs. "
  byWeekDay: [Weekday]
  " The week number in which the work calendar definition entry recurs. "
  byWeekNo: [Int]
  " The day of the year in which the work calendar definition entry recurs. "
  byYearDay: [Int]
  calendarEntries: [WorkCalendarEntryRef]
  " Describes the number of repititions of the event. "
  count: Int
  " Description of the workCalendarDefinitionEntry. "
  description: String
  " The duration of the work calendar definition entry. "
  duration: String
  " Describes the end date/time of the work calendar entry. "
  endDateTime: DateTime
  " Defines the type of work calendar definition entry. "
  entryType: WorkCalendarEntryType
  "  Describes how often the work calendar Entry repeats. "
  freq: Frequency
  hierarchyScope: EquipmentRef
  "A unique identification of a specific work calendar."
  iid: ID
  " Describes the interval between calendar events. "
  interval: Int
  " Boolean denoting whether the WorkCalendarDefinitionEntry is active. "
  isActive: Boolean
  properties: [WorkCalendarDefinitionEntryPropertyRef]
  " Describes the start date/time of the work calendar entry. "
  startDateTime: DateTime
  " Describes the week start. "
  wkst: Weekday
  workCalendar: WorkCalendarRef
}
""
input WorkCalendarEntryFilter {
  and: [WorkCalendarEntryFilter]
  entryType: WorkCalendarEntryType_hash
  finishDateTime: DateTimeFilter
  has: [WorkCalendarEntryHasFilter]
  iid: [ID!]
  isActive: Boolean
  not: WorkCalendarEntryFilter
  or: [WorkCalendarEntryFilter]
  startDateTime: DateTimeFilter
}
""
input WorkCalendarEntryOrder {
  asc: WorkCalendarEntryOrderable
  desc: WorkCalendarEntryOrderable
  then: WorkCalendarEntryOrder
}
""
input WorkCalendarEntryPatch {
  definition: WorkCalendarDefinitionEntryRef
  " The description of the work calendar entry. "
  description: String
  " The entry type of the calendar entry. "
  entryType: WorkCalendarEntryType
  " The end time of the work calendar entry. "
  finishDateTime: DateTime
  hierarchyScope: EquipmentRef
  " The boolean to define whether the entry is active. "
  isActive: Boolean
  properties: [WorkCalendarEntryPropertyRef]
  " The start time of the work calendar entry. "
  startDateTime: DateTime
  workCalendar: WorkCalendarRef
}
""
input WorkCalendarEntryPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [WorkCalendarEntryPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  has: [WorkCalendarEntryPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: WorkCalendarEntryPropertyFilter
  or: [WorkCalendarEntryPropertyFilter]
  use: StringExactFilter_StringFullTextFilter
}
""
input WorkCalendarEntryPropertyOrder {
  asc: WorkCalendarEntryPropertyOrderable
  desc: WorkCalendarEntryPropertyOrderable
  then: WorkCalendarEntryPropertyOrder
}
""
input WorkCalendarEntryPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkCalendarEntryPropertyRef]
  " The description of the work calendar entry property. "
  description: String
  hierarchyScope: HierarchyScopeRef
  "A unique identification of a specific work calendar."
  id: String
  operationalLocation: OperationalLocationRef
  parent: WorkCalendarEntryPropertyRef
  " The quantity associated with the work calendar entry property. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  " The use associated with the work calendar entry property. "
  use: String
  workCalendarEntry: WorkCalendarEntryRef
}
""
input WorkCalendarEntryPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkCalendarEntryPropertyRef]
  " The description of the work calendar entry property. "
  description: String
  hierarchyScope: HierarchyScopeRef
  "A unique identification of a specific work calendar."
  id: String
  " Unique internal database identifier. "
  iid: ID
  operationalLocation: OperationalLocationRef
  parent: WorkCalendarEntryPropertyRef
  " The quantity associated with the work calendar entry property. "
  quantity: Float
  quantityUoM: UnitOfMeasureRef
  spatialDefinition: SpatialDefinitionRef
  " The use associated with the work calendar entry property. "
  use: String
  workCalendarEntry: WorkCalendarEntryRef
}
""
input WorkCalendarEntryRef {
  definition: WorkCalendarDefinitionEntryRef
  " The description of the work calendar entry. "
  description: String
  " The entry type of the calendar entry. "
  entryType: WorkCalendarEntryType
  " The end time of the work calendar entry. "
  finishDateTime: DateTime
  hierarchyScope: EquipmentRef
  "A unique identification of a specific work calendar."
  iid: ID
  " The boolean to define whether the entry is active. "
  isActive: Boolean
  properties: [WorkCalendarEntryPropertyRef]
  " The start time of the work calendar entry. "
  startDateTime: DateTime
  workCalendar: WorkCalendarRef
}
""
input WorkCalendarEntryType_hash {
  eq: WorkCalendarEntryType
  in: [WorkCalendarEntryType]
}
""
input WorkCalendarFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [WorkCalendarFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [WorkCalendarHasFilter]
  iid: [ID!]
  name: StringHashFilter
  not: WorkCalendarFilter
  or: [WorkCalendarFilter]
}
""
input WorkCalendarOrder {
  asc: WorkCalendarOrderable
  desc: WorkCalendarOrderable
  then: WorkCalendarOrder
}
""
input WorkCalendarPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  definition: [WorkCalendarDefinitionEntryRef]
  " The description of the work calendar. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  entries: [WorkCalendarEntryRef]
  equipmentVersions: [EquipmentVersionRef]
  " The name of the work calendar. "
  name: String
  recordEntries: [InformationObjectRef]
}
""
input WorkCalendarRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  definition: [WorkCalendarDefinitionEntryRef]
  " The description of the work calendar. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  entries: [WorkCalendarEntryRef]
  equipmentVersions: [EquipmentVersionRef]
  " Unique internal database identifier. "
  iid: ID
  " The name of the work calendar. "
  name: String
  recordEntries: [InformationObjectRef]
}
""
input WorkDirectiveFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [WorkDirectiveFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [WorkDirectiveHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: WorkDirectiveFilter
  or: [WorkDirectiveFilter]
  publishedDate: DateTimeFilter
  version: StringExactFilter_StringFullTextFilter
}
""
input WorkDirectiveOrder {
  asc: WorkDirectiveOrderable
  desc: WorkDirectiveOrderable
  then: WorkDirectiveOrder
}
""
input WorkDirectivePatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkDirectiveRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the work directive. "
  description: String
  " Duration, if known. "
  duration: Float
  durationUnitOfMeasure: UnitOfMeasureRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentSpecifications: [EquipmentSpecificationRef]
  evaluatedProperties: [EvaluatedPropertyRef]
  hierarchyScope: HierarchyScopeRef
  " A unique identification as the work directive ID. "
  id: String
  jobOrders: [JobOrderRef]
  jobResponses: [JobResponseRef]
  materialSpecifications: [MaterialSpecificationRef]
  parameterSpecifications: [ParameterSpecificationRef]
  parent: WorkDirectiveRef
  personnelSpecifications: [PersonnelSpecificationRef]
  physicalAssetSpecifications: [PhysicalAssetSpecificationRef]
  propertyMeasurements: [PropertyMeasurementRef]
  " The date and time on which the work directive was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  signatures: [SignatureRef]
  " Indicates the state of the job response. "
  state: WorkDirectiveState
  " An identification of the version of the work directive version. "
  version: String
  workMaster: WorkMasterRef
  " Describes the category of work. "
  workType: WorkType
  workflowSpecification: WorkflowSpecificationRef
}
""
input WorkDirectiveRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkDirectiveRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the work directive. "
  description: String
  " Duration, if known. "
  duration: Float
  durationUnitOfMeasure: UnitOfMeasureRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentSpecifications: [EquipmentSpecificationRef]
  evaluatedProperties: [EvaluatedPropertyRef]
  hierarchyScope: HierarchyScopeRef
  " A unique identification as the work directive ID. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  jobOrders: [JobOrderRef]
  jobResponses: [JobResponseRef]
  materialSpecifications: [MaterialSpecificationRef]
  parameterSpecifications: [ParameterSpecificationRef]
  parent: WorkDirectiveRef
  personnelSpecifications: [PersonnelSpecificationRef]
  physicalAssetSpecifications: [PhysicalAssetSpecificationRef]
  propertyMeasurements: [PropertyMeasurementRef]
  " The date and time on which the work directive was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  signatures: [SignatureRef]
  " Indicates the state of the job response. "
  state: WorkDirectiveState
  " An identification of the version of the work directive version. "
  version: String
  workMaster: WorkMasterRef
  " Describes the category of work. "
  workType: WorkType
  workflowSpecification: WorkflowSpecificationRef
}
""
input WorkMasterFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [WorkMasterFilter]
  definitionType: DefinitionType_hash
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [WorkMasterHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: WorkMasterFilter
  or: [WorkMasterFilter]
  publishedDate: DateTimeFilter
  version: StringExactFilter_StringFullTextFilter
}
""
input WorkMasterOrder {
  asc: WorkMasterOrderable
  desc: WorkMasterOrderable
  then: WorkMasterOrder
}
""
input WorkMasterPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkMasterRef]
  comments: [CommentRef]
  definedBy: [WorkMasterRef]
  defines: WorkMasterRef
  " Defines the type of the work master. "
  definitionType: DefinitionType
  " Contains additional information and descriptions of the work master. "
  description: String
  " Duration, if known. "
  duration: Float
  durationUnitOfMeasure: UnitOfMeasureRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentSpecifications: [EquipmentSpecificationRef]
  evaluatedProperties: [EvaluatedPropertyRef]
  hierarchyScope: HierarchyScopeRef
  " A unique identification as the work master ID. "
  id: String
  jobOrders: [JobOrderRef]
  jobResponses: [JobResponseRef]
  materialSpecifications: [MaterialSpecificationRef]
  operationsDefinition: OperationsDefinitionRef
  operationsSegment: OperationsSegmentRef
  parameterSpecifications: [ParameterSpecificationRef]
  parent: WorkMasterRef
  personnelSpecifications: [PersonnelSpecificationRef]
  physicalAssetSpecifications: [PhysicalAssetSpecificationRef]
  processSegment: ProcessSegmentRef
  propertyMeasurements: [PropertyMeasurementRef]
  " The date and time on which the work master was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  signatures: [SignatureRef]
  " An identification of the version of the work master version. "
  version: String
  workDirectives: [WorkDirectiveRef]
  " Describes the category of work. "
  workType: WorkType
  workflowSpecification: WorkflowSpecificationRef
}
""
input WorkMasterRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkMasterRef]
  comments: [CommentRef]
  definedBy: [WorkMasterRef]
  defines: WorkMasterRef
  " Defines the type of the work master. "
  definitionType: DefinitionType
  " Contains additional information and descriptions of the work master. "
  description: String
  " Duration, if known. "
  duration: Float
  durationUnitOfMeasure: UnitOfMeasureRef
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  equipmentSpecifications: [EquipmentSpecificationRef]
  evaluatedProperties: [EvaluatedPropertyRef]
  hierarchyScope: HierarchyScopeRef
  " A unique identification as the work master ID. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  jobOrders: [JobOrderRef]
  jobResponses: [JobResponseRef]
  materialSpecifications: [MaterialSpecificationRef]
  operationsDefinition: OperationsDefinitionRef
  operationsSegment: OperationsSegmentRef
  parameterSpecifications: [ParameterSpecificationRef]
  parent: WorkMasterRef
  personnelSpecifications: [PersonnelSpecificationRef]
  physicalAssetSpecifications: [PhysicalAssetSpecificationRef]
  processSegment: ProcessSegmentRef
  propertyMeasurements: [PropertyMeasurementRef]
  " The date and time on which the work master was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  signatures: [SignatureRef]
  " An identification of the version of the work master version. "
  version: String
  workDirectives: [WorkDirectiveRef]
  " Describes the category of work. "
  workType: WorkType
  workflowSpecification: WorkflowSpecificationRef
}
""
input WorkPerformanceFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [WorkPerformanceFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  endDateTime: DateTimeFilter
  has: [WorkPerformanceHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: WorkPerformanceFilter
  or: [WorkPerformanceFilter]
  publishedDate: DateTimeFilter
  startDateTime: DateTimeFilter
  workType: WorkType_hash
}
""
input WorkPerformanceOrder {
  asc: WorkPerformanceOrderable
  desc: WorkPerformanceOrderable
  then: WorkPerformanceOrder
}
""
input WorkPerformancePatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkPerformanceRef]
  " Contains additional information and descriptions of the work performance. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The ending time of the associated work performance. "
  endDateTime: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the work performance and could include version and revision identification. "
  id: String
  parent: WorkPerformanceRef
  " The date and time in which the work performance was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  " The starting time of the associated work performance. "
  startDateTime: DateTime
  workResponses: [WorkResponseRef!]
  workSchedule: WorkScheduleRef
  " Indicates the state of the work performance. "
  workState: JobState
  " Describes the category of work. "
  workType: WorkType
}
""
input WorkPerformanceRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkPerformanceRef]
  " Contains additional information and descriptions of the work performance. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The ending time of the associated work performance. "
  endDateTime: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the work performance and could include version and revision identification. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  parent: WorkPerformanceRef
  " The date and time in which the work performance was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  " The starting time of the associated work performance. "
  startDateTime: DateTime
  workResponses: [WorkResponseRef!]
  workSchedule: WorkScheduleRef
  " Indicates the state of the work performance. "
  workState: JobState
  " Describes the category of work. "
  workType: WorkType
}
""
input WorkRequestFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [WorkRequestFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [WorkRequestHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: WorkRequestFilter
  or: [WorkRequestFilter]
  plannedEndDateTime: DateTimeFilter
  plannedStartDateTime: DateTimeFilter
  workType: WorkType_hash
}
""
input WorkRequestOrder {
  asc: WorkRequestOrderable
  desc: WorkRequestOrderable
  then: WorkRequestOrder
}
""
input WorkRequestPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkRequestRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the work request. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the work request. "
  id: String
  jobOrders: [JobOrderRef!]
  operationsRequest: OperationsRequestRef
  parent: WorkRequestRef
  " When work is to be completed. "
  plannedEndDateTime: DateTime
  " When work is to be started. "
  plannedStartDateTime: DateTime
  " The priority of the work request. "
  priority: String
  recordEntries: [InformationObjectRef]
  " Indicates the state of the work request. "
  requestState: ScheduleState
  segmentRequirement: SegmentRequirementRef
  signatures: [SignatureRef]
  workResponses: [WorkResponseRef]
  workSchedule: WorkScheduleRef
  " Describes the category of work. "
  workType: WorkType
}
""
input WorkRequestRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkRequestRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the work request. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the work request. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  jobOrders: [JobOrderRef!]
  operationsRequest: OperationsRequestRef
  parent: WorkRequestRef
  " When work is to be completed. "
  plannedEndDateTime: DateTime
  " When work is to be started. "
  plannedStartDateTime: DateTime
  " The priority of the work request. "
  priority: String
  recordEntries: [InformationObjectRef]
  " Indicates the state of the work request. "
  requestState: ScheduleState
  segmentRequirement: SegmentRequirementRef
  signatures: [SignatureRef]
  workResponses: [WorkResponseRef]
  workSchedule: WorkScheduleRef
  " Describes the category of work. "
  workType: WorkType
}
""
input WorkResponseFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [WorkResponseFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  endDateTime: DateTimeFilter
  has: [WorkResponseHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: WorkResponseFilter
  or: [WorkResponseFilter]
  responseState: JobState_hash
  startDateTime: DateTimeFilter
  workType: WorkType_hash
}
""
input WorkResponseOrder {
  asc: WorkResponseOrderable
  desc: WorkResponseOrderable
  then: WorkResponseOrder
}
""
input WorkResponsePatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkResponseRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the work response. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The ending time of this work response. "
  endDateTime: DateTime
  events: [EventRef]
  hierarchyScope: HierarchyScopeRef
  " An identification within the associated work performance. "
  id: String
  jobResponses: [JobResponseRef!]
  parent: WorkResponseRef
  recordEntries: [InformationObjectRef]
  " Indicates the state of the work response. "
  responseState: JobState
  segmentResponse: SegmentResponseRef
  signatures: [SignatureRef]
  " The starting time of this work response. "
  startDateTime: DateTime
  workPerformance: WorkPerformanceRef
  workRequest: WorkRequestRef
  " Describes the category of work. "
  workType: WorkType
}
""
input WorkResponseRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkResponseRef]
  comments: [CommentRef]
  " Contains additional information and descriptions of the work response. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  " The ending time of this work response. "
  endDateTime: DateTime
  events: [EventRef]
  hierarchyScope: HierarchyScopeRef
  " An identification within the associated work performance. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  jobResponses: [JobResponseRef!]
  parent: WorkResponseRef
  recordEntries: [InformationObjectRef]
  " Indicates the state of the work response. "
  responseState: JobState
  segmentResponse: SegmentResponseRef
  signatures: [SignatureRef]
  " The starting time of this work response. "
  startDateTime: DateTime
  workPerformance: WorkPerformanceRef
  workRequest: WorkRequestRef
  " Describes the category of work. "
  workType: WorkType
}
""
input WorkScheduleFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [WorkScheduleFilter]
  description: StringExactFilter_StringFullTextFilter
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [WorkScheduleHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: WorkScheduleFilter
  or: [WorkScheduleFilter]
  publishedDate: DateTimeFilter
  scheduleState: ScheduleState_hash
  scheduledEndDate: DateTimeFilter
  scheduledStartDate: DateTimeFilter
  workType: WorkType_hash
}
""
input WorkScheduleOrder {
  asc: WorkScheduleOrderable
  desc: WorkScheduleOrderable
  then: WorkScheduleOrder
}
""
input WorkSchedulePatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkScheduleRef]
  " Contains additional information and descriptions of the work schedule. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the work schedule and could include version and revision identification. "
  id: String
  parent: WorkScheduleRef
  " The date and time on which the work schedule was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  " Indicates the state of the work schedule. "
  scheduleState: ScheduleState
  " The ending time for the associated work schedule. "
  scheduledEndDate: DateTime
  " The starting time for the associated work schedule. "
  scheduledStartDate: DateTime
  workPerformances: [WorkPerformanceRef]
  workRequests: [WorkRequestRef]
  " Describes the category of work. "
  workType: WorkType
}
""
input WorkScheduleRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkScheduleRef]
  " Contains additional information and descriptions of the work schedule. "
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  hierarchyScope: HierarchyScopeRef
  " A unique identification of the work schedule and could include version and revision identification. "
  id: String
  " Unique internal database identifier. "
  iid: ID
  parent: WorkScheduleRef
  " The date and time on which the work schedule was published or generated. "
  publishedDate: DateTime
  recordEntries: [InformationObjectRef]
  " Indicates the state of the work schedule. "
  scheduleState: ScheduleState
  " The ending time for the associated work schedule. "
  scheduledEndDate: DateTime
  " The starting time for the associated work schedule. "
  scheduledStartDate: DateTime
  workPerformances: [WorkPerformanceRef]
  workRequests: [WorkRequestRef]
  " Describes the category of work. "
  workType: WorkType
}
""
input WorkType_hash {
  eq: WorkType
  in: [WorkType]
}
""
input WorkflowErrorFilter {
  and: [WorkflowErrorFilter]
  has: [WorkflowErrorHasFilter]
  id: StringHashFilter
  iid: [ID!]
  not: WorkflowErrorFilter
  or: [WorkflowErrorFilter]
  reference: StringExactFilter_StringFullTextFilter
}
""
input WorkflowErrorOrder {
  asc: WorkflowErrorOrderable
  desc: WorkflowErrorOrderable
  then: WorkflowErrorOrder
}
""
input WorkflowErrorPatch {
  code: String
  id: String
  node: WorkflowSpecificationNodeRef
  reference: String
  workflowSpecificationVersion: WorkflowSpecificationVersionRef
}
""
input WorkflowErrorRef {
  code: String
  id: String
  " Unique internal database identifier. "
  iid: ID
  node: WorkflowSpecificationNodeRef
  reference: String
  workflowSpecificationVersion: WorkflowSpecificationVersionRef
}
""
input WorkflowMessageFilter {
  and: [WorkflowMessageFilter]
  has: [WorkflowMessageHasFilter]
  id: StringHashFilter
  iid: [ID!]
  not: WorkflowMessageFilter
  or: [WorkflowMessageFilter]
  reference: StringExactFilter_StringFullTextFilter
}
""
input WorkflowMessageOrder {
  asc: WorkflowMessageOrderable
  desc: WorkflowMessageOrderable
  then: WorkflowMessageOrder
}
""
input WorkflowMessagePatch {
  enabled: Boolean
  id: String
  node: WorkflowSpecificationNodeRef
  reference: String
  workflowSpecificationVersion: WorkflowSpecificationVersionRef
}
""
input WorkflowMessageRef {
  enabled: Boolean
  id: String
  " Unique internal database identifier. "
  iid: ID
  node: WorkflowSpecificationNodeRef
  reference: String
  workflowSpecificationVersion: WorkflowSpecificationVersionRef
}
""
input WorkflowShapeFilter {
  and: [WorkflowShapeFilter]
  has: [WorkflowShapeHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: WorkflowShapeFilter
  or: [WorkflowShapeFilter]
}
""
input WorkflowShapeOrder {
  asc: WorkflowShapeOrderable
  desc: WorkflowShapeOrderable
  then: WorkflowShapeOrder
}
""
input WorkflowShapePatch {
  acl: [AccessPermissionRef]
  height: String
  icon: String
  """
  In combination with the Version field, the id is a unique identification of a specific workflow specification that is consistent outside the scope of this database.
  The ID and Version are used in other parts of the model when the workflow specification needs to be identified.
  """
  id: String
  node: WorkflowSpecificationNodeRef
  width: String
  x: String
  y: String
}
""
input WorkflowShapeRef {
  acl: [AccessPermissionRef]
  height: String
  icon: String
  """
  In combination with the Version field, the id is a unique identification of a specific workflow specification that is consistent outside the scope of this database.
  The ID and Version are used in other parts of the model when the workflow specification needs to be identified.
  """
  id: String
  " Unique internal database identifier. "
  iid: ID
  node: WorkflowSpecificationNodeRef
  width: String
  x: String
  y: String
}
""
input WorkflowSpecificationConnectionFilter {
  _createdDateTime: DateTimeFilter
  _modifiedDateTime: DateTimeFilter
  and: [WorkflowSpecificationConnectionFilter]
  description: StringHashFilter
  has: [WorkflowSpecificationConnectionHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  name: StringExactFilter_StringFullTextFilter
  not: WorkflowSpecificationConnectionFilter
  or: [WorkflowSpecificationConnectionFilter]
}
""
input WorkflowSpecificationConnectionOrder {
  asc: WorkflowSpecificationConnectionOrderable
  desc: WorkflowSpecificationConnectionOrderable
  then: WorkflowSpecificationConnectionOrder
}
""
input WorkflowSpecificationConnectionPatch {
  _createdBy: String
  _createdDateTime: DateTime
  _modifiedBy: String
  _modifiedDateTime: DateTime
  acl: [AccessPermissionRef]
  condition: String
  connectionType: WorkflowSpecificationConnectionTypeRef
  "Contains additional information and descriptions of the workflow specification connection."
  description: String
  from: WorkflowSpecificationNodeRef
  id: String
  name: String
  properties: [WorkflowSpecificationConnectionPropertyRef]
  to: WorkflowSpecificationNodeRef
  waypoints: [WorkflowWaypointRef]
  workflowSpecificationVersion: WorkflowSpecificationVersionRef
}
""
input WorkflowSpecificationConnectionPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [WorkflowSpecificationConnectionPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  has: [WorkflowSpecificationConnectionPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  name: StringExactFilter_StringFullTextFilter
  not: WorkflowSpecificationConnectionPropertyFilter
  or: [WorkflowSpecificationConnectionPropertyFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input WorkflowSpecificationConnectionPropertyOrder {
  asc: WorkflowSpecificationConnectionPropertyOrderable
  desc: WorkflowSpecificationConnectionPropertyOrderable
  then: WorkflowSpecificationConnectionPropertyOrder
}
""
input WorkflowSpecificationConnectionPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkflowSpecificationConnectionPropertyRef]
  connection: WorkflowSpecificationConnectionRef
  dataType: DataType
  definitionType: DefinitionType
  " Additional information about the WorkflowSpecificationProperty. "
  description: String
  " Uniquely identifies the workflow specification property. Fully Qualified identifier that is unique in the database. Required attribute."
  id: String
  " Uniquely identifies the workflow specification property. Required attribute."
  name: String
  parent: WorkflowSpecificationConnectionPropertyRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input WorkflowSpecificationConnectionPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkflowSpecificationConnectionPropertyRef]
  connection: WorkflowSpecificationConnectionRef
  dataType: DataType
  definitionType: DefinitionType
  " Additional information about the WorkflowSpecificationProperty. "
  description: String
  " Uniquely identifies the workflow specification property. Fully Qualified identifier that is unique in the database. Required attribute."
  id: String
  " Unique internal database identifier. "
  iid: ID
  " Uniquely identifies the workflow specification property. Required attribute."
  name: String
  parent: WorkflowSpecificationConnectionPropertyRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input WorkflowSpecificationConnectionRef {
  _createdBy: String
  _createdDateTime: DateTime
  _modifiedBy: String
  _modifiedDateTime: DateTime
  acl: [AccessPermissionRef]
  condition: String
  connectionType: WorkflowSpecificationConnectionTypeRef
  "Contains additional information and descriptions of the workflow specification connection."
  description: String
  from: WorkflowSpecificationNodeRef
  id: String
  " Unique internal database identifier. "
  iid: ID
  name: String
  properties: [WorkflowSpecificationConnectionPropertyRef]
  to: WorkflowSpecificationNodeRef
  waypoints: [WorkflowWaypointRef]
  workflowSpecificationVersion: WorkflowSpecificationVersionRef
}
""
input WorkflowSpecificationConnectionTypeFilter {
  _createdDateTime: DateTimeFilter
  _modifiedDateTime: DateTimeFilter
  and: [WorkflowSpecificationConnectionTypeFilter]
  has: [WorkflowSpecificationConnectionTypeHasFilter]
  id: StringHashFilter
  iid: [ID!]
  not: WorkflowSpecificationConnectionTypeFilter
  or: [WorkflowSpecificationConnectionTypeFilter]
}
""
input WorkflowSpecificationConnectionTypeOrder {
  asc: WorkflowSpecificationConnectionTypeOrderable
  desc: WorkflowSpecificationConnectionTypeOrderable
  then: WorkflowSpecificationConnectionTypeOrder
}
""
input WorkflowSpecificationConnectionTypePatch {
  _createdBy: String
  _createdDateTime: DateTime
  _modifiedBy: String
  _modifiedDateTime: DateTime
  acl: [AccessPermissionRef]
  connections: [WorkflowSpecificationConnectionRef]
  "Contains additional information and descriptions of the workflow specification connection."
  description: String
  hierarchyScope: HierarchyScopeRef
  id: String
  properties: [WorkflowSpecificationConnectionTypePropertyRef]
  recordEntries: [InformationObjectRef]
}
""
input WorkflowSpecificationConnectionTypePropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [WorkflowSpecificationConnectionTypePropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  has: [WorkflowSpecificationConnectionTypePropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  name: StringExactFilter_StringFullTextFilter
  not: WorkflowSpecificationConnectionTypePropertyFilter
  or: [WorkflowSpecificationConnectionTypePropertyFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input WorkflowSpecificationConnectionTypePropertyOrder {
  asc: WorkflowSpecificationConnectionTypePropertyOrderable
  desc: WorkflowSpecificationConnectionTypePropertyOrderable
  then: WorkflowSpecificationConnectionTypePropertyOrder
}
""
input WorkflowSpecificationConnectionTypePropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkflowSpecificationConnectionTypePropertyRef]
  connectionType: WorkflowSpecificationConnectionTypeRef
  dataType: DataType
  definitionType: DefinitionType
  " Additional information about the WorkflowSpecificationProperty. "
  description: String
  " Uniquely identifies the workflow specification property. Fully Qualified identifier that is unique in the database. Required attribute."
  id: String
  " Uniquely identifies the workflow specification property. Required attribute."
  name: String
  parent: WorkflowSpecificationConnectionTypePropertyRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input WorkflowSpecificationConnectionTypePropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkflowSpecificationConnectionTypePropertyRef]
  connectionType: WorkflowSpecificationConnectionTypeRef
  dataType: DataType
  definitionType: DefinitionType
  " Additional information about the WorkflowSpecificationProperty. "
  description: String
  " Uniquely identifies the workflow specification property. Fully Qualified identifier that is unique in the database. Required attribute."
  id: String
  " Unique internal database identifier. "
  iid: ID
  " Uniquely identifies the workflow specification property. Required attribute."
  name: String
  parent: WorkflowSpecificationConnectionTypePropertyRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input WorkflowSpecificationConnectionTypeRef {
  _createdBy: String
  _createdDateTime: DateTime
  _modifiedBy: String
  _modifiedDateTime: DateTime
  acl: [AccessPermissionRef]
  connections: [WorkflowSpecificationConnectionRef]
  "Contains additional information and descriptions of the workflow specification connection."
  description: String
  hierarchyScope: HierarchyScopeRef
  id: String
  " Unique internal database identifier. "
  iid: ID
  properties: [WorkflowSpecificationConnectionTypePropertyRef]
  recordEntries: [InformationObjectRef]
}
""
input WorkflowSpecificationFilter {
  _createdDateTime: DateTimeFilter
  _modifiedDateTime: DateTimeFilter
  and: [WorkflowSpecificationFilter]
  has: [WorkflowSpecificationHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: WorkflowSpecificationFilter
  or: [WorkflowSpecificationFilter]
}
""
input WorkflowSpecificationNodeFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _createdDateTime: DateTimeFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  _modifiedDateTime: DateTimeFilter
  and: [WorkflowSpecificationNodeFilter]
  has: [WorkflowSpecificationNodeHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: WorkflowSpecificationNodeFilter
  or: [WorkflowSpecificationNodeFilter]
  role: StringExactFilter_StringFullTextFilter
  uiComponent: StringExactFilter_StringFullTextFilter
}
""
input WorkflowSpecificationNodeOrder {
  asc: WorkflowSpecificationNodeOrderable
  desc: WorkflowSpecificationNodeOrderable
  then: WorkflowSpecificationNodeOrder
}
""
input WorkflowSpecificationNodePatch {
  _createdBy: String
  _createdDateTime: DateTime
  _modifiedBy: String
  _modifiedDateTime: DateTime
  acl: [AccessPermissionRef]
  attachedTo: WorkflowSpecificationNodeRef
  boundaryEvents: [WorkflowSpecificationNodeRef]
  containsWorkflowSpecification: WorkflowSpecificationRef
  " Contains additional information and descriptions of the workflow specification node. "
  description: String
  error: WorkflowErrorRef
  form: FormRef
  hierarchyScope: HierarchyScopeRef
  """
   Id is a unique identification of a specific workflow specification node that is consistent outside the scope of this database.
  The ID and Version are used in other parts of the model when the workflow specification needs to be identified. 
  """
  id: String
  inflows: [WorkflowSpecificationConnectionRef]
  inputs: [WorkflowSpecificationNodeVariableRef]
  jobOrders: [JobOrderRef]
  jobResponses: [JobResponseRef]
  message: WorkflowMessageRef
  nodeType: WorkflowSpecificationNodeTypeRef
  outflows: [WorkflowSpecificationConnectionRef]
  outputs: [WorkflowSpecificationNodeVariableRef]
  properties: [WorkflowSpecificationNodePropertyRef]
  " User Tasks can have a Role assignment that defines the type of users that can complete the task"
  role: String
  shape: WorkflowShapeRef
  testCases: [WorkflowSpecificationNodeTestCaseRef]
  timer: WorkflowTimerRef
  " If the user task requires a specific UI Component to be used, it is defined here"
  uiComponent: String
  workflowSpecificationVersion: WorkflowSpecificationVersionRef
}
""
input WorkflowSpecificationNodePropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [WorkflowSpecificationNodePropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  has: [WorkflowSpecificationNodePropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  name: StringExactFilter_StringFullTextFilter
  not: WorkflowSpecificationNodePropertyFilter
  or: [WorkflowSpecificationNodePropertyFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input WorkflowSpecificationNodePropertyOrder {
  asc: WorkflowSpecificationNodePropertyOrderable
  desc: WorkflowSpecificationNodePropertyOrderable
  then: WorkflowSpecificationNodePropertyOrder
}
""
input WorkflowSpecificationNodePropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkflowSpecificationNodePropertyRef]
  dataType: DataType
  definitionType: DefinitionType
  " Additional information about the WorkflowSpecificationProperty. "
  description: String
  " Uniquely identifies the workflow specification property. Fully Qualified identifier that is unique in the database. Required attribute."
  id: String
  " Uniquely identifies the workflow specification property. Required attribute."
  name: String
  node: WorkflowSpecificationNodeRef
  parent: WorkflowSpecificationNodePropertyRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input WorkflowSpecificationNodePropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkflowSpecificationNodePropertyRef]
  dataType: DataType
  definitionType: DefinitionType
  " Additional information about the WorkflowSpecificationProperty. "
  description: String
  " Uniquely identifies the workflow specification property. Fully Qualified identifier that is unique in the database. Required attribute."
  id: String
  " Unique internal database identifier. "
  iid: ID
  " Uniquely identifies the workflow specification property. Required attribute."
  name: String
  node: WorkflowSpecificationNodeRef
  parent: WorkflowSpecificationNodePropertyRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input WorkflowSpecificationNodeRef {
  _createdBy: String
  _createdDateTime: DateTime
  _modifiedBy: String
  _modifiedDateTime: DateTime
  acl: [AccessPermissionRef]
  attachedTo: WorkflowSpecificationNodeRef
  boundaryEvents: [WorkflowSpecificationNodeRef]
  containsWorkflowSpecification: WorkflowSpecificationRef
  " Contains additional information and descriptions of the workflow specification node. "
  description: String
  error: WorkflowErrorRef
  form: FormRef
  hierarchyScope: HierarchyScopeRef
  """
   Id is a unique identification of a specific workflow specification node that is consistent outside the scope of this database.
  The ID and Version are used in other parts of the model when the workflow specification needs to be identified. 
  """
  id: String
  " Unique internal database identifier. "
  iid: ID
  inflows: [WorkflowSpecificationConnectionRef]
  inputs: [WorkflowSpecificationNodeVariableRef]
  jobOrders: [JobOrderRef]
  jobResponses: [JobResponseRef]
  message: WorkflowMessageRef
  nodeType: WorkflowSpecificationNodeTypeRef
  outflows: [WorkflowSpecificationConnectionRef]
  outputs: [WorkflowSpecificationNodeVariableRef]
  properties: [WorkflowSpecificationNodePropertyRef]
  " User Tasks can have a Role assignment that defines the type of users that can complete the task"
  role: String
  shape: WorkflowShapeRef
  testCases: [WorkflowSpecificationNodeTestCaseRef]
  timer: WorkflowTimerRef
  " If the user task requires a specific UI Component to be used, it is defined here"
  uiComponent: String
  workflowSpecificationVersion: WorkflowSpecificationVersionRef
}
""
input WorkflowSpecificationNodeTestCaseFilter {
  and: [WorkflowSpecificationNodeTestCaseFilter]
  has: [WorkflowSpecificationNodeTestCaseHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: WorkflowSpecificationNodeTestCaseFilter
  or: [WorkflowSpecificationNodeTestCaseFilter]
}
""
input WorkflowSpecificationNodeTestCaseOrder {
  asc: WorkflowSpecificationNodeTestCaseOrderable
  desc: WorkflowSpecificationNodeTestCaseOrderable
  then: WorkflowSpecificationNodeTestCaseOrder
}
""
input WorkflowSpecificationNodeTestCasePatch {
  expectedResult: String
  id: String
  inputJson: String
  node: WorkflowSpecificationNodeRef
}
""
input WorkflowSpecificationNodeTestCaseRef {
  expectedResult: String
  id: String
  iid: ID
  inputJson: String
  node: WorkflowSpecificationNodeRef
}
""
input WorkflowSpecificationNodeTypeFilter {
  _createdDateTime: DateTimeFilter
  _modifiedDateTime: DateTimeFilter
  and: [WorkflowSpecificationNodeTypeFilter]
  has: [WorkflowSpecificationNodeTypeHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  name: StringExactFilter_StringFullTextFilter
  not: WorkflowSpecificationNodeTypeFilter
  or: [WorkflowSpecificationNodeTypeFilter]
}
""
input WorkflowSpecificationNodeTypeOrder {
  asc: WorkflowSpecificationNodeTypeOrderable
  desc: WorkflowSpecificationNodeTypeOrderable
  then: WorkflowSpecificationNodeTypeOrder
}
""
input WorkflowSpecificationNodeTypePatch {
  _createdBy: String
  _createdDateTime: DateTime
  _modifiedBy: String
  _modifiedDateTime: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the workflow specification node. "
  description: String
  hierarchyScope: HierarchyScopeRef
  id: String
  name: String
  nodes: [WorkflowSpecificationNodeRef]
  properties: [WorkflowSpecificationNodeTypePropertyRef]
  recordEntries: [InformationObjectRef]
}
""
input WorkflowSpecificationNodeTypePropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [WorkflowSpecificationNodeTypePropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  has: [WorkflowSpecificationNodeTypePropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  name: StringExactFilter_StringFullTextFilter
  not: WorkflowSpecificationNodeTypePropertyFilter
  or: [WorkflowSpecificationNodeTypePropertyFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input WorkflowSpecificationNodeTypePropertyOrder {
  asc: WorkflowSpecificationNodeTypePropertyOrderable
  desc: WorkflowSpecificationNodeTypePropertyOrderable
  then: WorkflowSpecificationNodeTypePropertyOrder
}
""
input WorkflowSpecificationNodeTypePropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkflowSpecificationNodeTypePropertyRef]
  dataType: DataType
  definitionType: DefinitionType
  " Additional information about the WorkflowSpecificationProperty. "
  description: String
  " Uniquely identifies the workflow specification property. Fully Qualified identifier that is unique in the database. Required attribute."
  id: String
  " Uniquely identifies the workflow specification property. Required attribute."
  name: String
  nodeType: WorkflowSpecificationNodeTypeRef
  parent: WorkflowSpecificationNodeTypePropertyRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input WorkflowSpecificationNodeTypePropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkflowSpecificationNodeTypePropertyRef]
  dataType: DataType
  definitionType: DefinitionType
  " Additional information about the WorkflowSpecificationProperty. "
  description: String
  " Uniquely identifies the workflow specification property. Fully Qualified identifier that is unique in the database. Required attribute."
  id: String
  " Unique internal database identifier. "
  iid: ID
  " Uniquely identifies the workflow specification property. Required attribute."
  name: String
  nodeType: WorkflowSpecificationNodeTypeRef
  parent: WorkflowSpecificationNodeTypePropertyRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
}
""
input WorkflowSpecificationNodeTypeRef {
  _createdBy: String
  _createdDateTime: DateTime
  _modifiedBy: String
  _modifiedDateTime: DateTime
  acl: [AccessPermissionRef]
  " Contains additional information and descriptions of the workflow specification node. "
  description: String
  hierarchyScope: HierarchyScopeRef
  id: String
  " Unique internal database identifier. "
  iid: ID
  name: String
  nodes: [WorkflowSpecificationNodeRef]
  properties: [WorkflowSpecificationNodeTypePropertyRef]
  recordEntries: [InformationObjectRef]
}
""
input WorkflowSpecificationNodeVariableFilter {
  and: [WorkflowSpecificationNodeVariableFilter]
  has: [WorkflowSpecificationNodeVariableHasFilter]
  iid: [ID!]
  not: WorkflowSpecificationNodeVariableFilter
  or: [WorkflowSpecificationNodeVariableFilter]
}
""
input WorkflowSpecificationNodeVariableOrder {
  asc: WorkflowSpecificationNodeVariableOrderable
  desc: WorkflowSpecificationNodeVariableOrderable
  then: WorkflowSpecificationNodeVariableOrder
}
""
input WorkflowSpecificationNodeVariablePatch {
  source: String
  target: String
}
""
input WorkflowSpecificationNodeVariableRef {
  " Unique internal database identifier. "
  iid: ID
  source: String
  target: String
}
""
input WorkflowSpecificationOrder {
  asc: WorkflowSpecificationOrderable
  desc: WorkflowSpecificationOrderable
  then: WorkflowSpecificationOrder
}
""
input WorkflowSpecificationPatch {
  _createdBy: String
  _createdDateTime: DateTime
  _modifiedBy: String
  _modifiedDateTime: DateTime
  acl: [AccessPermissionRef]
  activeVersion: WorkflowSpecificationVersionRef
  calledByNodes: [WorkflowSpecificationNodeRef]
  id: String
  includedIn: [WorkflowSpecificationVersionRef]
  jobOrders: [JobOrderRef]
  jobResponses: [JobResponseRef]
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  recordEntries: [InformationObjectRef]
  rules: [RuleRef]
  stateModelActions: [StateModelActionRef]
  versions: [WorkflowSpecificationVersionRef]
  workDirectives: [WorkDirectiveRef]
  workMasters: [WorkMasterRef]
}
""
input WorkflowSpecificationPropertyFilter {
  _createdBy: StringExactFilter_StringFullTextFilter
  _modifiedBy: StringExactFilter_StringFullTextFilter
  and: [WorkflowSpecificationPropertyFilter]
  description: StringExactFilter_StringFullTextFilter
  has: [WorkflowSpecificationPropertyHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  name: StringExactFilter_StringFullTextFilter
  not: WorkflowSpecificationPropertyFilter
  or: [WorkflowSpecificationPropertyFilter]
  value: StringExactFilter_StringFullTextFilter
}
""
input WorkflowSpecificationPropertyOrder {
  asc: WorkflowSpecificationPropertyOrderable
  desc: WorkflowSpecificationPropertyOrderable
  then: WorkflowSpecificationPropertyOrder
}
""
input WorkflowSpecificationPropertyPatch {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkflowSpecificationPropertyRef]
  dataType: DataType
  definitionType: DefinitionType
  " Additional information about the WorkflowSpecificationProperty. "
  description: String
  " Uniquely identifies the workflow specification property. Fully Qualified identifier that is unique in the database. Required attribute."
  id: String
  " Uniquely identifies the workflow specification property. Required attribute."
  name: String
  parent: WorkflowSpecificationPropertyRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
  workflowSpecificationVersion: WorkflowSpecificationVersionRef
}
""
input WorkflowSpecificationPropertyRef {
  " The username from the token which created the entity. "
  _createdBy: String
  " The date and time in UTC that the entity was created. "
  _createdOn: DateTime
  " The username from the token from the last mutation of this entity. "
  _modifiedBy: String
  " The date and time in UTC that the entity was last mutated. "
  _modifiedOn: DateTime
  acl: [AccessPermissionRef]
  children: [WorkflowSpecificationPropertyRef]
  dataType: DataType
  definitionType: DefinitionType
  " Additional information about the WorkflowSpecificationProperty. "
  description: String
  " Uniquely identifies the workflow specification property. Fully Qualified identifier that is unique in the database. Required attribute."
  id: String
  " Unique internal database identifier. "
  iid: ID
  " Uniquely identifies the workflow specification property. Required attribute."
  name: String
  parent: WorkflowSpecificationPropertyRef
  " The value, set of values, or range of the property. "
  value: String
  valueUnitOfMeasure: UnitOfMeasureRef
  workflowSpecificationVersion: WorkflowSpecificationVersionRef
}
""
input WorkflowSpecificationRef {
  _createdBy: String
  _createdDateTime: DateTime
  _modifiedBy: String
  _modifiedDateTime: DateTime
  acl: [AccessPermissionRef]
  activeVersion: WorkflowSpecificationVersionRef
  calledByNodes: [WorkflowSpecificationNodeRef]
  id: String
  " Unique internal database identifier. "
  iid: ID
  includedIn: [WorkflowSpecificationVersionRef]
  jobOrders: [JobOrderRef]
  jobResponses: [JobResponseRef]
  " The next version number, or the largest version number + 1. "
  nextVersion: String
  recordEntries: [InformationObjectRef]
  rules: [RuleRef]
  stateModelActions: [StateModelActionRef]
  versions: [WorkflowSpecificationVersionRef]
  workDirectives: [WorkDirectiveRef]
  workMasters: [WorkMasterRef]
}
""
input WorkflowSpecificationVersionFilter {
  _createdDateTime: DateTimeFilter
  _modifiedDateTime: DateTimeFilter
  and: [WorkflowSpecificationVersionFilter]
  effectiveEnd: DateTimeFilter
  effectiveStart: DateTimeFilter
  has: [WorkflowSpecificationVersionHasFilter]
  id: StringExactFilter_StringFullTextFilter_StringRegExpFilter
  iid: [ID!]
  not: WorkflowSpecificationVersionFilter
  or: [WorkflowSpecificationVersionFilter]
  version: StringExactFilter_StringFullTextFilter
  versionStatus: VersionState_hash
}
""
input WorkflowSpecificationVersionOrder {
  asc: WorkflowSpecificationVersionOrderable
  desc: WorkflowSpecificationVersionOrderable
  then: WorkflowSpecificationVersionOrder
}
""
input WorkflowSpecificationVersionPatch {
  _createdBy: String
  _createdDateTime: DateTime
  _modifiedBy: String
  _modifiedDateTime: DateTime
  acl: [AccessPermissionRef]
  " Contains the base64 encoded XML that this WorkflowSpecificationVersion was generated from. "
  bpmnXMLEncoded: String
  connections: [WorkflowSpecificationConnectionRef]
  definitionType: DefinitionType
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  errors: [WorkflowErrorRef]
  hierarchyScope: HierarchyScopeRef
  """
   In combination with the Version field, the id is a unique identification of a specific workflow specification that is consistent outside the scope of this database.
  The ID and Version are used in other parts of the model when the workflow specification needs to be identified. 
  """
  id: String
  includePropertiesOf: [WorkflowSpecificationRef]
  isActiveVersionOf: WorkflowSpecificationRef
  " Identifies whether this is an executable BPMN or a non-BPMN WorkflowSpecification "
  isExecutable: Boolean
  jobOrders: [JobOrderRef]
  jobResponses: [JobResponseRef]
  messages: [WorkflowMessageRef]
  nodes: [WorkflowSpecificationNodeRef]
  properties: [WorkflowSpecificationPropertyRef]
  recordEntries: [InformationObjectRef]
  " The Json Schema definition of inputs required to execute the workflow. "
  schemaDefinition: String
  timers: [WorkflowTimerRef]
  """
   Entity to define the specific version of the entity. Purposely free for to allow use with a specific
  revision scheme. For example `1`, `2` or `Rev A03`, `Rev B01`. Versions are lexicographically compared. 
  """
  version: String
  versionStatus: VersionState
  workflowSpecification: WorkflowSpecificationRef
}
""
input WorkflowSpecificationVersionRef {
  _createdBy: String
  _createdDateTime: DateTime
  _modifiedBy: String
  _modifiedDateTime: DateTime
  acl: [AccessPermissionRef]
  " Contains the base64 encoded XML that this WorkflowSpecificationVersion was generated from. "
  bpmnXMLEncoded: String
  connections: [WorkflowSpecificationConnectionRef]
  definitionType: DefinitionType
  description: String
  " Entity is considered active until this time, or until the end of time if empty. "
  effectiveEnd: DateTime
  " Entity is considered active from this point in time forward. "
  effectiveStart: DateTime
  errors: [WorkflowErrorRef]
  hierarchyScope: HierarchyScopeRef
  """
   In combination with the Version field, the id is a unique identification of a specific workflow specification that is consistent outside the scope of this database.
  The ID and Version are used in other parts of the model when the workflow specification needs to be identified. 
  """
  id: String
  " Unique internal database identifier. "
  iid: ID
  includePropertiesOf: [WorkflowSpecificationRef]
  isActiveVersionOf: WorkflowSpecificationRef
  " Identifies whether this is an executable BPMN or a non-BPMN WorkflowSpecification "
  isExecutable: Boolean
  jobOrders: [JobOrderRef]
  jobResponses: [JobResponseRef]
  messages: [WorkflowMessageRef]
  nodes: [WorkflowSpecificationNodeRef]
  properties: [WorkflowSpecificationPropertyRef]
  recordEntries: [InformationObjectRef]
  " The Json Schema definition of inputs required to execute the workflow. "
  schemaDefinition: String
  timers: [WorkflowTimerRef]
  """
   Entity to define the specific version of the entity. Purposely free for to allow use with a specific
  revision scheme. For example `1`, `2` or `Rev A03`, `Rev B01`. Versions are lexicographically compared. 
  """
  version: String
  versionStatus: VersionState
  workflowSpecification: WorkflowSpecificationRef
}
""
input WorkflowTimerFilter {
  and: [WorkflowTimerFilter]
  has: [WorkflowTimerHasFilter]
  id: StringHashFilter
  iid: [ID!]
  not: WorkflowTimerFilter
  or: [WorkflowTimerFilter]
  reference: StringExactFilter_StringFullTextFilter
}
""
input WorkflowTimerOrder {
  asc: WorkflowTimerOrderable
  desc: WorkflowTimerOrderable
  then: WorkflowTimerOrder
}
""
input WorkflowTimerPatch {
  enabled: Boolean
  id: String
  node: WorkflowSpecificationNodeRef
  reference: String
  workflowSpecificationVersion: WorkflowSpecificationVersionRef
}
""
input WorkflowTimerRef {
  enabled: Boolean
  id: String
  " Unique internal database identifier. "
  iid: ID
  node: WorkflowSpecificationNodeRef
  reference: String
  workflowSpecificationVersion: WorkflowSpecificationVersionRef
}
""
input WorkflowWaypointFilter {
  and: [WorkflowWaypointFilter]
  has: [WorkflowWaypointHasFilter]
  iid: [ID!]
  not: WorkflowWaypointFilter
  or: [WorkflowWaypointFilter]
}
""
input WorkflowWaypointOrder {
  asc: WorkflowWaypointOrderable
  desc: WorkflowWaypointOrderable
  then: WorkflowWaypointOrder
}
""
input WorkflowWaypointPatch {
  connection: WorkflowSpecificationConnectionRef
  x: String
  y: String
}
""
input WorkflowWaypointRef {
  connection: WorkflowSpecificationConnectionRef
  " Unique internal database identifier. "
  iid: ID
  x: String
  y: String
}
directive @auth(add: AuthRule, delete: AuthRule, password: AuthRule, query: AuthRule, update: AuthRule) on INTERFACE | OBJECT
directive @cacheControl(maxAge: Int!) on QUERY
directive @cascade(fields: [String]) on FIELD
directive @custom(dql: String, http: CustomHTTP) on FIELD_DEFINITION
directive @default(add: DgraphDefault, update: DgraphDefault) on FIELD_DEFINITION
directive @dgraph(pred: String, type: String) on FIELD_DEFINITION | INTERFACE | OBJECT
directive @extends on INTERFACE | OBJECT
directive @external on FIELD_DEFINITION
directive @generate(mutation: GenerateMutationParams, query: GenerateQueryParams, subscription: Boolean) on INTERFACE | OBJECT
directive @hasInverse(field: String!) on FIELD_DEFINITION
directive @id(interface: Boolean) on FIELD_DEFINITION
directive @key(fields: _FieldSet!) on INTERFACE | OBJECT
directive @lambda on FIELD_DEFINITION
directive @lambdaOnMutate(add: Boolean, delete: Boolean, update: Boolean) on INTERFACE | OBJECT
directive @primaryKey(fields: [String]) on OBJECT
directive @provides(fields: _FieldSet!) on FIELD_DEFINITION
directive @remote on ENUM | INPUT_OBJECT | INTERFACE | OBJECT | UNION
directive @remoteResponse(name: String) on FIELD_DEFINITION
directive @requires(fields: _FieldSet!) on FIELD_DEFINITION
directive @search(by: [DgraphIndex!]) on FIELD_DEFINITION
directive @secret(field: String!, pred: String) on INTERFACE | OBJECT
directive @withSubscription on FIELD_DEFINITION | INTERFACE | OBJECT

